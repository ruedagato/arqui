                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:20 2015
                              5 ;--------------------------------------------------------
                              6 	.module assert
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl __assert
                             31 	.globl __assert_PARM_3
                             32 	.globl __assert_PARM_2
                             33 ;--------------------------------------------------------
                             34 ; special function registers
                             35 ;--------------------------------------------------------
                    0080     36 _P4	=	0x0080
                    0081     37 _SP	=	0x0081
                    0082     38 _DPL	=	0x0082
                    0083     39 _DPH	=	0x0083
                    0084     40 _DPL1	=	0x0084
                    0085     41 _DPH1	=	0x0085
                    0086     42 _DPS	=	0x0086
                    0087     43 _PCON	=	0x0087
                    0088     44 _TCON	=	0x0088
                    0089     45 _TMOD	=	0x0089
                    008A     46 _TL0	=	0x008a
                    008B     47 _TL1	=	0x008b
                    008C     48 _TH0	=	0x008c
                    008D     49 _TH1	=	0x008d
                    008E     50 _CKCON	=	0x008e
                    0090     51 _P1	=	0x0090
                    0091     52 _EXIF	=	0x0091
                    0092     53 _P4CNT	=	0x0092
                    0093     54 _DPX	=	0x0093
                    0095     55 _DPX1	=	0x0095
                    0098     56 _SCON0	=	0x0098
                    0099     57 _SBUF0	=	0x0099
                    009B     58 _ESP	=	0x009b
                    009C     59 _AP	=	0x009c
                    009D     60 _ACON	=	0x009d
                    00A0     61 _P2	=	0x00a0
                    00A1     62 _P5	=	0x00a1
                    00A2     63 _P5CNT	=	0x00a2
                    00A8     64 _IE	=	0x00a8
                    00B0     65 _P3	=	0x00b0
                    00B8     66 _IP	=	0x00b8
                    00C0     67 _SCON1	=	0x00c0
                    00C1     68 _SBUF1	=	0x00c1
                    00C4     69 _PMR	=	0x00c4
                    00C6     70 _MCON	=	0x00c6
                    00C7     71 _TA	=	0x00c7
                    00C8     72 _T2CON	=	0x00c8
                    00C9     73 _T2MOD	=	0x00c9
                    00CA     74 _RCAP2L	=	0x00ca
                    00CA     75 _RTL2	=	0x00ca
                    00CB     76 _RCAP2H	=	0x00cb
                    00CB     77 _RTH2	=	0x00cb
                    00CC     78 _TL2	=	0x00cc
                    00CD     79 _TH2	=	0x00cd
                    00D0     80 _PSW	=	0x00d0
                    00D1     81 _MCNT0	=	0x00d1
                    00D2     82 _MCNT1	=	0x00d2
                    00D3     83 _MA	=	0x00d3
                    00D4     84 _MB	=	0x00d4
                    00D5     85 _MC	=	0x00d5
                    00D8     86 _WDCON	=	0x00d8
                    00E0     87 _ACC	=	0x00e0
                    00E8     88 _EIE	=	0x00e8
                    00EA     89 _MXAX	=	0x00ea
                    00F0     90 _B	=	0x00f0
                    00F8     91 _EIP	=	0x00f8
                    8C8A     92 _TMR0	=	0x8c8a
                    8D8B     93 _TMR1	=	0x8d8b
                    CDCC     94 _TMR2	=	0xcdcc
                    CBCA     95 _RCAP2	=	0xcbca
                             96 ;--------------------------------------------------------
                             97 ; special function bits
                             98 ;--------------------------------------------------------
                    0088     99 _IT0	=	0x0088
                    0089    100 _IE0	=	0x0089
                    008A    101 _IT1	=	0x008a
                    008B    102 _IE1	=	0x008b
                    008C    103 _TR0	=	0x008c
                    008D    104 _TF0	=	0x008d
                    008E    105 _TR1	=	0x008e
                    008F    106 _TF1	=	0x008f
                    0090    107 _T2	=	0x0090
                    0091    108 _T2EX	=	0x0091
                    0092    109 _RXD1	=	0x0092
                    0093    110 _TXD1	=	0x0093
                    0094    111 _INT2	=	0x0094
                    0095    112 _INT3	=	0x0095
                    0096    113 _INT4	=	0x0096
                    0097    114 _INT5	=	0x0097
                    0098    115 _RI_0	=	0x0098
                    0099    116 _TI_0	=	0x0099
                    009A    117 _RB8_0	=	0x009a
                    009B    118 _TB8_0	=	0x009b
                    009C    119 _REN_0	=	0x009c
                    009D    120 _SM2_0	=	0x009d
                    009E    121 _SM1_0	=	0x009e
                    009F    122 _SM0_0	=	0x009f
                    009F    123 _FE_0	=	0x009f
                    00A8    124 _EX0	=	0x00a8
                    00A9    125 _ET0	=	0x00a9
                    00AA    126 _EX1	=	0x00aa
                    00AB    127 _ET1	=	0x00ab
                    00AC    128 _ES0	=	0x00ac
                    00AD    129 _ET2	=	0x00ad
                    00AE    130 _ES1	=	0x00ae
                    00AF    131 _EA	=	0x00af
                    00B0    132 _RXD0	=	0x00b0
                    00B1    133 _TXD0	=	0x00b1
                    00B2    134 _INT0	=	0x00b2
                    00B3    135 _INT1	=	0x00b3
                    00B4    136 _T0	=	0x00b4
                    00B5    137 _T1	=	0x00b5
                    00B6    138 _WR	=	0x00b6
                    00B7    139 _RD	=	0x00b7
                    00B8    140 _PX0	=	0x00b8
                    00B9    141 _PT0	=	0x00b9
                    00BA    142 _PX1	=	0x00ba
                    00BB    143 _PT1	=	0x00bb
                    00BC    144 _PS0	=	0x00bc
                    00BD    145 _PT2	=	0x00bd
                    00BE    146 _PS1	=	0x00be
                    00C0    147 _RI_1	=	0x00c0
                    00C1    148 _TI_1	=	0x00c1
                    00C2    149 _RB8_1	=	0x00c2
                    00C3    150 _TB8_1	=	0x00c3
                    00C4    151 _REN_1	=	0x00c4
                    00C5    152 _SM2_1	=	0x00c5
                    00C6    153 _SM1_1	=	0x00c6
                    00C7    154 _SM0_1	=	0x00c7
                    00C7    155 _FE_1	=	0x00c7
                    00C8    156 _CP_RL	=	0x00c8
                    00C9    157 _C_T	=	0x00c9
                    00CA    158 _TR2	=	0x00ca
                    00CB    159 _EXEN2	=	0x00cb
                    00CC    160 _TCLK	=	0x00cc
                    00CD    161 _RCLK	=	0x00cd
                    00CE    162 _EXF2	=	0x00ce
                    00CF    163 _TF2	=	0x00cf
                    00D0    164 _P	=	0x00d0
                    00D1    165 _F1	=	0x00d1
                    00D2    166 _OV	=	0x00d2
                    00D3    167 _RS0	=	0x00d3
                    00D4    168 _RS1	=	0x00d4
                    00D5    169 _F0	=	0x00d5
                    00D6    170 _AC	=	0x00d6
                    00D7    171 _CY	=	0x00d7
                    00D8    172 _RWT	=	0x00d8
                    00D9    173 _EWT	=	0x00d9
                    00DA    174 _WDRF	=	0x00da
                    00DB    175 _WDIF	=	0x00db
                    00DC    176 _PFI	=	0x00dc
                    00DD    177 _EPFI	=	0x00dd
                    00DE    178 _POR	=	0x00de
                    00DF    179 _SMOD_1	=	0x00df
                    00E8    180 _EX2	=	0x00e8
                    00E9    181 _EX3	=	0x00e9
                    00EA    182 _EX4	=	0x00ea
                    00EB    183 _EX5	=	0x00eb
                    00EC    184 _EWDI	=	0x00ec
                    00ED    185 _C1IE	=	0x00ed
                    00EE    186 _C0IE	=	0x00ee
                    00EF    187 _CANBIE	=	0x00ef
                    00F8    188 _PX2	=	0x00f8
                    00F9    189 _PX3	=	0x00f9
                    00FA    190 _PX4	=	0x00fa
                    00FB    191 _PX5	=	0x00fb
                    00FC    192 _PWDI	=	0x00fc
                    00FD    193 _C1IP	=	0x00fd
                    00FE    194 _C0IP	=	0x00fe
                    00FF    195 _CANBIP	=	0x00ff
                            196 ;--------------------------------------------------------
                            197 ; overlayable register banks
                            198 ;--------------------------------------------------------
                            199 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     200 	.ds 8
                            201 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                     202 	.ds 8
                            203 ;--------------------------------------------------------
                            204 ; internal ram data
                            205 ;--------------------------------------------------------
                            206 	.area DSEG    (DATA)
                            207 ;--------------------------------------------------------
                            208 ; overlayable items in internal ram 
                            209 ;--------------------------------------------------------
                            210 	.area OSEG    (OVR,DATA)
                            211 ;--------------------------------------------------------
                            212 ; indirectly addressable internal ram data
                            213 ;--------------------------------------------------------
                            214 	.area ISEG    (DATA)
                            215 ;--------------------------------------------------------
                            216 ; absolute internal ram data
                            217 ;--------------------------------------------------------
                            218 	.area IABS    (ABS,DATA)
                            219 	.area IABS    (ABS,DATA)
                            220 ;--------------------------------------------------------
                            221 ; bit data
                            222 ;--------------------------------------------------------
                            223 	.area BSEG    (BIT)
                            224 ;--------------------------------------------------------
                            225 ; paged external ram data
                            226 ;--------------------------------------------------------
                            227 	.area PSEG    (PAG,XDATA)
                            228 ;--------------------------------------------------------
                            229 ; external ram data
                            230 ;--------------------------------------------------------
                            231 	.area XSEG    (XDATA)
   0000                     232 __assert_PARM_2:
   0000                     233 	.ds 4
   0004                     234 __assert_PARM_3:
   0004                     235 	.ds 2
                            236 ;--------------------------------------------------------
                            237 ; absolute external ram data
                            238 ;--------------------------------------------------------
                            239 	.area XABS    (ABS,XDATA)
                            240 ;--------------------------------------------------------
                            241 ; external initialized ram data
                            242 ;--------------------------------------------------------
                            243 	.area XISEG   (XDATA)
                            244 ;--------------------------------------------------------
                            245 ; global & static initialisations
                            246 ;--------------------------------------------------------
                            247 	.area HOME    (CODE)
                            248 	.area GSINIT  (CODE)
                            249 	.area GSFINAL (CODE)
                            250 	.area GSINIT  (CODE)
                            251 ;--------------------------------------------------------
                            252 ; Home
                            253 ;--------------------------------------------------------
                            254 	.area HOME    (CODE)
                            255 	.area HOME    (CODE)
                            256 ;--------------------------------------------------------
                            257 ; code
                            258 ;--------------------------------------------------------
                            259 	.area CSEG    (CODE)
                            260 ;------------------------------------------------------------
                            261 ;Allocation info for local variables in function '_assert'
                            262 ;------------------------------------------------------------
                            263 ;filename                  Allocated with name '__assert_PARM_2'
                            264 ;linenumber                Allocated with name '__assert_PARM_3'
                            265 ;expr                      Allocated to registers r2 r3 r4 r5 
                            266 ;------------------------------------------------------------
                            267 ;	assert.c:32: void _assert(char *expr, const char *filename, unsigned int linenumber)
                            268 ;	-----------------------------------------
                            269 ;	 function _assert
                            270 ;	-----------------------------------------
   0000                     271 __assert:
                    0002    272 	ar2 = 0x02
                    0003    273 	ar3 = 0x03
                    0004    274 	ar4 = 0x04
                    0005    275 	ar5 = 0x05
                    0006    276 	ar6 = 0x06
                    0007    277 	ar7 = 0x07
                    0000    278 	ar0 = 0x00
                    0001    279 	ar1 = 0x01
   0000 AA 82               280 	mov	r2,dpl
   0002 AB 83               281 	mov	r3,dph
   0004 AC 93               282 	mov	r4,dpx
   0006 AD F0               283 	mov	r5,b
                            284 ;	assert.c:34: printf("Assert(%s) failed at line %u in file %s.\n",
   0008 90s00r00r00         285 	mov	dptr,#__assert_PARM_2
   000C E0                  286 	movx	a,@dptr
   000D C0 E0               287 	push	acc
   000F A3                  288 	inc	dptr
   0010 E0                  289 	movx	a,@dptr
   0011 C0 E0               290 	push	acc
   0013 A3                  291 	inc	dptr
   0014 E0                  292 	movx	a,@dptr
   0015 C0 E0               293 	push	acc
   0017 A3                  294 	inc	dptr
   0018 E0                  295 	movx	a,@dptr
   0019 C0 E0               296 	push	acc
   001B 90s00r00r04         297 	mov	dptr,#__assert_PARM_3
   001F E0                  298 	movx	a,@dptr
   0020 C0 E0               299 	push	acc
   0022 A3                  300 	inc	dptr
   0023 E0                  301 	movx	a,@dptr
   0024 C0 E0               302 	push	acc
   0026 C0 02               303 	push	ar2
   0028 C0 03               304 	push	ar3
   002A C0 04               305 	push	ar4
   002C C0 05               306 	push	ar5
   002E 74r00               307 	mov	a,#__str_0
   0030 C0 E0               308 	push	acc
   0032 74s00               309 	mov	a,#(__str_0 >> 8)
   0034 C0 E0               310 	push	acc
   0036 74s00               311 	mov	a,#(__str_0 >> 16)
   0038 C0 E0               312 	push	acc
   003A 74 80               313 	mov	a,#0x80
   003C C0 E0               314 	push	acc
   003E 12s00r00r00         315 	lcall	_printf
   0042 C3                  316 	clr	c
   0043 E5 81               317 	mov	a,sp
   0045 94 0E               318 	subb	a,#0x0E
   0047 F5 81               319 	mov	sp,a
   0049 E5 9B               320 	mov	a,esp
   004B 54 03               321 	anl	a,#3
   004D 44 DC               322 	orl	a,#0xDC
   004F 94 00               323 	subb	a,#0x00
   0051 F5 9B               324 	mov	esp,a
                            325 ;	assert.c:36: while(1);
   0053                     326 00102$:
   0053 80 FE               327 	sjmp 00102$
   0055                     328 00104$:
   0055 22                  329 	ret
                            330 	.area CSEG    (CODE)
                            331 	.area CONST   (CODE)
   0000                     332 __str_0:
   0000 41 73 73 65 72 74   333 	.ascii "Assert(%s) failed at line %u in file %s."
        28 25 73 29 20 66
        61 69 6C 65 64 20
        61 74 20 6C 69 6E
        65 20 25 75 20 69
        6E 20 66 69 6C 65
        20 25 73 2E
   0028 0A                  334 	.db 0x0A
   0029 00                  335 	.db 0x00
                            336 	.area XINIT   (CODE)
                            337 	.area CABS    (ABS,CODE)
