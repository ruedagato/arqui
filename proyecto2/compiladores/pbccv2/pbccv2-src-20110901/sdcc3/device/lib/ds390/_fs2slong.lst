                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:15 2015
                              5 ;--------------------------------------------------------
                              6 	.module _fs2slong
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl ___fs2slong
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 ;--------------------------------------------------------
                             43 ; internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area DSEG    (DATA)
                             46 ;--------------------------------------------------------
                             47 ; overlayable items in internal ram 
                             48 ;--------------------------------------------------------
                             49 	.area OSEG    (OVR,DATA)
                             50 ;--------------------------------------------------------
                             51 ; indirectly addressable internal ram data
                             52 ;--------------------------------------------------------
                             53 	.area ISEG    (DATA)
                             54 ;--------------------------------------------------------
                             55 ; absolute internal ram data
                             56 ;--------------------------------------------------------
                             57 	.area IABS    (ABS,DATA)
                             58 	.area IABS    (ABS,DATA)
                             59 ;--------------------------------------------------------
                             60 ; bit data
                             61 ;--------------------------------------------------------
                             62 	.area BSEG    (BIT)
                             63 ;--------------------------------------------------------
                             64 ; paged external ram data
                             65 ;--------------------------------------------------------
                             66 	.area PSEG    (PAG,XDATA)
                             67 ;--------------------------------------------------------
                             68 ; external ram data
                             69 ;--------------------------------------------------------
                             70 	.area XSEG    (XDATA)
                             71 ;--------------------------------------------------------
                             72 ; absolute external ram data
                             73 ;--------------------------------------------------------
                             74 	.area XABS    (ABS,XDATA)
                             75 ;--------------------------------------------------------
                             76 ; external initialized ram data
                             77 ;--------------------------------------------------------
                             78 	.area XISEG   (XDATA)
                             79 ;--------------------------------------------------------
                             80 ; global & static initialisations
                             81 ;--------------------------------------------------------
                             82 	.area HOME    (CODE)
                             83 	.area GSINIT  (CODE)
                             84 	.area GSFINAL (CODE)
                             85 	.area GSINIT  (CODE)
                             86 ;--------------------------------------------------------
                             87 ; Home
                             88 ;--------------------------------------------------------
                             89 	.area HOME    (CODE)
                             90 	.area HOME    (CODE)
                             91 ;--------------------------------------------------------
                             92 ; code
                             93 ;--------------------------------------------------------
                             94 	.area CSEG    (CODE)
                             95 ;------------------------------------------------------------
                             96 ;Allocation info for local variables in function '__fs2slong'
                             97 ;------------------------------------------------------------
                             98 ;f                         Allocated to registers r2 r3 r4 r5 
                             99 ;------------------------------------------------------------
                            100 ;	_fs2slong.c:108: signed long __fs2slong (float f)
                            101 ;	-----------------------------------------
                            102 ;	 function __fs2slong
                            103 ;	-----------------------------------------
   0000                     104 ___fs2slong:
                    0002    105 	ar2 = 0x02
                    0003    106 	ar3 = 0x03
                    0004    107 	ar4 = 0x04
                    0005    108 	ar5 = 0x05
                    0006    109 	ar6 = 0x06
                    0007    110 	ar7 = 0x07
                    0000    111 	ar0 = 0x00
                    0001    112 	ar1 = 0x01
   0000 AA 82               113 	mov	r2,dpl
   0002 AB 83               114 	mov	r3,dph
   0004 AC 93               115 	mov	r4,dpx
   0006 AD F0               116 	mov	r5,b
                            117 ;	_fs2slong.c:111: if (!f)
   0008 EA                  118 	mov	a,r2
   0009 4B                  119 	orl	a,r3
   000A 4C                  120 	orl	a,r4
   000B 4D                  121 	orl	a,r5
   000C 70 09               122 	jnz  00102$
   000E                     123 00110$:
                            124 ;	_fs2slong.c:112: return 0;
   000E 90 00 00 00         125 	mov  dptr,#0x0000
   0012 75 F0 00            126 	mov	b,#0x00
   0015 80 69               127 	sjmp 00106$
   0017                     128 00102$:
                            129 ;	_fs2slong.c:114: if (f<0) {
                            130 ;	genAssign: resultIsFar = TRUE
   0017 90s00r00r00         131 	mov	dptr,#___fslt_PARM_2
   001B E4                  132 	clr	a
   001C F0                  133 	movx	@dptr,a
   001D A3                  134 	inc	dptr
   001E F0                  135 	movx	@dptr,a
   001F A3                  136 	inc	dptr
   0020 F0                  137 	movx	@dptr,a
   0021 A3                  138 	inc	dptr
   0022 F0                  139 	movx	@dptr,a
   0023 C0 02               140 	push	ar2
   0025 C0 03               141 	push	ar3
   0027 C0 04               142 	push	ar4
   0029 C0 05               143 	push	ar5
   002B 8A 82               144 	mov	dpl,r2
   002D 8B 83               145 	mov	dph,r3
   002F 8C 93               146 	mov	dpx,r4
   0031 8D F0               147 	mov	b,r5
   0033 12s00r00r00         148 	lcall	___fslt
   0037 D0 05               149 	pop	ar5
   0039 D0 04               150 	pop	ar4
   003B D0 03               151 	pop	ar3
   003D D0 02               152 	pop	ar2
   003F E5 82               153 	mov	a,dpl
   0041 60 31               154 	jz  00104$
   0043                     155 00111$:
                            156 ;	_fs2slong.c:115: return -__fs2ulong(-f);
   0043 8A 06               157 	mov	ar6,r2
   0045 8B 07               158 	mov	ar7,r3
   0047 8C 00               159 	mov	ar0,r4
   0049 ED                  160 	mov	a,r5
   004A B2 E7               161 	cpl	acc.7
   004C F9                  162 	mov	r1,a
   004D 8E 82               163 	mov	dpl,r6
   004F 8F 83               164 	mov	dph,r7
   0051 88 93               165 	mov	dpx,r0
   0053 89 F0               166 	mov	b,r1
   0055 12s00r00r00         167 	lcall	___fs2ulong
   0059 C3                  168 	clr	c
   005A E4                  169 	clr	a
   005B 95 82               170 	subb	a,dpl
   005D FE                  171 	mov	r6,a
   005E E4                  172 	clr	a
   005F 95 83               173 	subb	a,dph
   0061 FF                  174 	mov	r7,a
   0062 E4                  175 	clr	a
   0063 95 93               176 	subb	a,dpx
   0065 F8                  177 	mov	r0,a
   0066 E4                  178 	clr	a
   0067 95 F0               179 	subb	a,b
   0069 F9                  180 	mov	r1,a
   006A 8E 82               181 	mov	dpl,r6
   006C 8F 83               182 	mov	dph,r7
   006E 88 93               183 	mov	dpx,r0
   0070 89 F0               184 	mov	b,r1
   0072 80 0C               185 	sjmp 00106$
   0074                     186 00104$:
                            187 ;	_fs2slong.c:117: return __fs2ulong(f);
   0074 8A 82               188 	mov	dpl,r2
   0076 8B 83               189 	mov	dph,r3
   0078 8C 93               190 	mov	dpx,r4
   007A 8D F0               191 	mov	b,r5
   007C 12s00r00r00         192 	lcall	___fs2ulong
   0080                     193 00106$:
   0080 22                  194 	ret
                            195 	.area CSEG    (CODE)
                            196 	.area CONST   (CODE)
                            197 	.area XINIT   (CODE)
                            198 	.area CABS    (ABS,CODE)
