                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:19 2015
                              5 ;--------------------------------------------------------
                              6 	.module modff
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _modff_PARM_2
                             31 	.globl _modff
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      44 	.ds 8
                             45 ;--------------------------------------------------------
                             46 ; internal ram data
                             47 ;--------------------------------------------------------
                             48 	.area DSEG    (DATA)
                             49 ;--------------------------------------------------------
                             50 ; overlayable items in internal ram 
                             51 ;--------------------------------------------------------
                             52 	.area OSEG    (OVR,DATA)
                             53 ;--------------------------------------------------------
                             54 ; indirectly addressable internal ram data
                             55 ;--------------------------------------------------------
                             56 	.area ISEG    (DATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute internal ram data
                             59 ;--------------------------------------------------------
                             60 	.area IABS    (ABS,DATA)
                             61 	.area IABS    (ABS,DATA)
                             62 ;--------------------------------------------------------
                             63 ; bit data
                             64 ;--------------------------------------------------------
                             65 	.area BSEG    (BIT)
                             66 ;--------------------------------------------------------
                             67 ; paged external ram data
                             68 ;--------------------------------------------------------
                             69 	.area PSEG    (PAG,XDATA)
                             70 ;--------------------------------------------------------
                             71 ; external ram data
                             72 ;--------------------------------------------------------
                             73 	.area XSEG    (XDATA)
   0000                      74 _modff_PARM_2:
   0000                      75 	.ds 4
   0004                      76 _modff_x_1_1:
   0004                      77 	.ds 4
                             78 ;--------------------------------------------------------
                             79 ; absolute external ram data
                             80 ;--------------------------------------------------------
                             81 	.area XABS    (ABS,XDATA)
                             82 ;--------------------------------------------------------
                             83 ; external initialized ram data
                             84 ;--------------------------------------------------------
                             85 	.area XISEG   (XDATA)
                             86 ;--------------------------------------------------------
                             87 ; global & static initialisations
                             88 ;--------------------------------------------------------
                             89 	.area HOME    (CODE)
                             90 	.area GSINIT  (CODE)
                             91 	.area GSFINAL (CODE)
                             92 	.area GSINIT  (CODE)
                             93 ;--------------------------------------------------------
                             94 ; Home
                             95 ;--------------------------------------------------------
                             96 	.area HOME    (CODE)
                             97 	.area HOME    (CODE)
                             98 ;--------------------------------------------------------
                             99 ; code
                            100 ;--------------------------------------------------------
                            101 	.area CSEG    (CODE)
                            102 ;------------------------------------------------------------
                            103 ;Allocation info for local variables in function 'modff'
                            104 ;------------------------------------------------------------
                            105 ;y                         Allocated with name '_modff_PARM_2'
                            106 ;x                         Allocated with name '_modff_x_1_1'
                            107 ;------------------------------------------------------------
                            108 ;	modff.c:33: float modff(float x, float * y)
                            109 ;	-----------------------------------------
                            110 ;	 function modff
                            111 ;	-----------------------------------------
   0000                     112 _modff:
                    0002    113 	ar2 = 0x02
                    0003    114 	ar3 = 0x03
                    0004    115 	ar4 = 0x04
                    0005    116 	ar5 = 0x05
                    0006    117 	ar6 = 0x06
                    0007    118 	ar7 = 0x07
                    0000    119 	ar0 = 0x00
                    0001    120 	ar1 = 0x01
   0000 75 86 01            121 	mov     dps, #1
   0003 90s00r00r04         122 	mov     dptr, #_modff_x_1_1
   0007 E5 82               123 	mov	a,dpl
   0009 F0                  124 	movx	@dptr,a
   000A A3                  125 	inc	dptr
   000B E5 83               126 	mov	a,dph
   000D F0                  127 	movx	@dptr,a
   000E A3                  128 	inc	dptr
   000F E5 93               129 	mov	a,dpx
   0011 F0                  130 	movx	@dptr,a
   0012 A3                  131 	inc	dptr
   0013 E5 F0               132 	mov	a,b
   0015 F0                  133 	movx	@dptr,a
   0016 75 86 00            134 	mov	dps,#0
                            135 ;	modff.c:35: *y=(long)x;
   0019 90s00r00r00         136 	mov	dptr,#_modff_PARM_2
                            137 ;	genAssign: resultIsFar = FALSE
   001D E0                  138 	movx	a,@dptr
   001E FE                  139 	mov	r6,a
   001F A3                  140 	inc	dptr
   0020 E0                  141 	movx	a,@dptr
   0021 FF                  142 	mov	r7,a
   0022 A3                  143 	inc	dptr
   0023 E0                  144 	movx	a,@dptr
   0024 F8                  145 	mov	r0,a
   0025 A3                  146 	inc	dptr
   0026 E0                  147 	movx	a,@dptr
   0027 F9                  148 	mov	r1,a
   0028 C0 06               149 	push	ar6
   002A C0 07               150 	push	ar7
   002C C0 00               151 	push	ar0
   002E C0 01               152 	push	ar1
   0030 05 86               153 	inc	dps
   0032 90s00r00r04         154 	mov	dptr,#_modff_x_1_1
   0036 E0                  155 	movx	a,@dptr
   0037 F5 82               156 	mov	dpl,a
   0039 A3                  157 	inc	dptr
   003A E0                  158 	movx	a,@dptr
   003B F5 83               159 	mov	dph,a
   003D A3                  160 	inc	dptr
   003E E0                  161 	movx	a,@dptr
   003F F5 93               162 	mov	dpx,a
   0041 A3                  163 	inc	dptr
   0042 E0                  164 	movx	a,@dptr
   0043 F5 F0               165 	mov	b,a
   0045 75 86 00            166 	mov	dps,#0
   0048 12s00r00r00         167 	lcall	___fs2slong
   004C D0 01               168 	pop	ar1
   004E D0 00               169 	pop	ar0
   0050 D0 07               170 	pop	ar7
   0052 D0 06               171 	pop	ar6
   0054 C0 06               172 	push	ar6
   0056 C0 07               173 	push	ar7
   0058 C0 00               174 	push	ar0
   005A C0 01               175 	push	ar1
   005C 12s00r00r00         176 	lcall	___slong2fs
   0060 AA 82               177 	mov	r2,dpl
   0062 AB 83               178 	mov	r3,dph
   0064 AC 93               179 	mov	r4,dpx
   0066 AD F0               180 	mov	r5,b
   0068 D0 01               181 	pop	ar1
   006A D0 00               182 	pop	ar0
   006C D0 07               183 	pop	ar7
   006E D0 06               184 	pop	ar6
   0070 8E 82               185 	mov	dpl,r6
   0072 8F 83               186 	mov	dph,r7
   0074 88 93               187 	mov	dpx,r0
   0076 89 F0               188 	mov	b,r1
   0078 8A 9C               189 	mov	_ap, r2
   007A EB                  190 	mov	a,r3
   007B 12s00r00r00         191 	lcall	__gptrputWord
   007F A3                  192 	inc	dptr
   0080 8C 9C               193 	mov	_ap, r4
   0082 ED                  194 	mov	a,r5
   0083 12s00r00r00         195 	lcall	__gptrputWord
                            196 ;	modff.c:36: return (x-*y);
                            197 ;	genAssign: resultIsFar = TRUE
   0087 90s00r00r00         198 	mov	dptr,#___fssub_PARM_2
   008B EA                  199 	mov	a,r2
   008C F0                  200 	movx	@dptr,a
   008D A3                  201 	inc	dptr
   008E EB                  202 	mov	a,r3
   008F F0                  203 	movx	@dptr,a
   0090 A3                  204 	inc	dptr
   0091 EC                  205 	mov	a,r4
   0092 F0                  206 	movx	@dptr,a
   0093 A3                  207 	inc	dptr
   0094 ED                  208 	mov	a,r5
   0095 F0                  209 	movx	@dptr,a
   0096 05 86               210 	inc	dps
   0098 90s00r00r04         211 	mov	dptr,#_modff_x_1_1
   009C E0                  212 	movx	a,@dptr
   009D F5 82               213 	mov	dpl,a
   009F A3                  214 	inc	dptr
   00A0 E0                  215 	movx	a,@dptr
   00A1 F5 83               216 	mov	dph,a
   00A3 A3                  217 	inc	dptr
   00A4 E0                  218 	movx	a,@dptr
   00A5 F5 93               219 	mov	dpx,a
   00A7 A3                  220 	inc	dptr
   00A8 E0                  221 	movx	a,@dptr
   00A9 F5 F0               222 	mov	b,a
   00AB 75 86 00            223 	mov	dps,#0
   00AE 12s00r00r00         224 	lcall	___fssub
   00B2                     225 00101$:
   00B2 22                  226 	ret
                            227 	.area CSEG    (CODE)
                            228 	.area CONST   (CODE)
                            229 	.area XINIT   (CODE)
                            230 	.area CABS    (ABS,CODE)
