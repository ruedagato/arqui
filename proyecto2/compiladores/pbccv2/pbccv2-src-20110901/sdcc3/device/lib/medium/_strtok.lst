                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:26 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strtok
                              7 	.optsdcc -mmcs51 --model-medium
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strtok_PARM_2
                             13 	.globl _strtok
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 	.area RSEG    (ABS,DATA)
   0000                      18 	.org 0x0000
                             19 ;--------------------------------------------------------
                             20 ; special function bits
                             21 ;--------------------------------------------------------
                             22 	.area RSEG    (ABS,DATA)
   0000                      23 	.org 0x0000
                             24 ;--------------------------------------------------------
                             25 ; overlayable register banks
                             26 ;--------------------------------------------------------
                             27 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      28 	.ds 8
                             29 ;--------------------------------------------------------
                             30 ; internal ram data
                             31 ;--------------------------------------------------------
                             32 	.area DSEG    (DATA)
                             33 ;--------------------------------------------------------
                             34 ; overlayable items in internal ram 
                             35 ;--------------------------------------------------------
                             36 	.area OSEG    (OVR,DATA)
                             37 ;--------------------------------------------------------
                             38 ; indirectly addressable internal ram data
                             39 ;--------------------------------------------------------
                             40 	.area ISEG    (DATA)
                             41 ;--------------------------------------------------------
                             42 ; absolute internal ram data
                             43 ;--------------------------------------------------------
                             44 	.area IABS    (ABS,DATA)
                             45 	.area IABS    (ABS,DATA)
                             46 ;--------------------------------------------------------
                             47 ; bit data
                             48 ;--------------------------------------------------------
                             49 	.area BSEG    (BIT)
                             50 ;--------------------------------------------------------
                             51 ; paged external ram data
                             52 ;--------------------------------------------------------
                             53 	.area PSEG    (PAG,XDATA)
   0000                      54 _strtok_PARM_2:
   0000                      55 	.ds 3
   0003                      56 _strtok_s_1_1:
   0003                      57 	.ds 3
                             58 ;--------------------------------------------------------
                             59 ; external ram data
                             60 ;--------------------------------------------------------
                             61 	.area XSEG    (XDATA)
                             62 ;--------------------------------------------------------
                             63 ; absolute external ram data
                             64 ;--------------------------------------------------------
                             65 	.area XABS    (ABS,XDATA)
                             66 ;--------------------------------------------------------
                             67 ; external initialized ram data
                             68 ;--------------------------------------------------------
                             69 	.area XISEG   (XDATA)
                             70 	.area HOME    (CODE)
                             71 	.area GSINIT0 (CODE)
                             72 	.area GSINIT1 (CODE)
                             73 	.area GSINIT2 (CODE)
                             74 	.area GSINIT3 (CODE)
                             75 	.area GSINIT4 (CODE)
                             76 	.area GSINIT5 (CODE)
                             77 	.area GSINIT  (CODE)
                             78 	.area GSFINAL (CODE)
                             79 	.area CSEG    (CODE)
                             80 ;--------------------------------------------------------
                             81 ; global & static initialisations
                             82 ;--------------------------------------------------------
                             83 	.area HOME    (CODE)
                             84 	.area GSINIT  (CODE)
                             85 	.area GSFINAL (CODE)
                             86 	.area GSINIT  (CODE)
                             87 ;--------------------------------------------------------
                             88 ; Home
                             89 ;--------------------------------------------------------
                             90 	.area HOME    (CODE)
                             91 	.area HOME    (CODE)
                             92 ;--------------------------------------------------------
                             93 ; code
                             94 ;--------------------------------------------------------
                             95 	.area CSEG    (CODE)
                             96 ;------------------------------------------------------------
                             97 ;Allocation info for local variables in function 'strtok'
                             98 ;------------------------------------------------------------
                             99 ;------------------------------------------------------------
                            100 ;	_strtok.c:36: char * strtok (
                            101 ;	-----------------------------------------
                            102 ;	 function strtok
                            103 ;	-----------------------------------------
   0000                     104 _strtok:
                    0002    105 	ar2 = 0x02
                    0003    106 	ar3 = 0x03
                    0004    107 	ar4 = 0x04
                    0005    108 	ar5 = 0x05
                    0006    109 	ar6 = 0x06
                    0007    110 	ar7 = 0x07
                    0000    111 	ar0 = 0x00
                    0001    112 	ar1 = 0x01
   0000 AA 82               113 	mov	r2,dpl
   0002 AB 83               114 	mov	r3,dph
   0004 AC F0               115 	mov	r4,b
                            116 ;	_strtok.c:43: if ( str )
   0006 EA                  117 	mov	a,r2
   0007 4B                  118 	orl	a,r3
   0008 4C                  119 	orl	a,r4
   0009 60 0A               120 	jz	00102$
                            121 ;	_strtok.c:44: s = str ;
   000B 78r03               122 	mov	r0,#_strtok_s_1_1
   000D EA                  123 	mov	a,r2
   000E F2                  124 	movx	@r0,a
   000F 08                  125 	inc	r0
   0010 EB                  126 	mov	a,r3
   0011 F2                  127 	movx	@r0,a
   0012 08                  128 	inc	r0
   0013 EC                  129 	mov	a,r4
   0014 F2                  130 	movx	@r0,a
   0015                     131 00102$:
                            132 ;	_strtok.c:45: if ( !s )
   0015 78r03               133 	mov	r0,#_strtok_s_1_1
   0017 E2                  134 	movx	a,@r0
   0018 F5 F0               135 	mov	b,a
   001A 08                  136 	inc	r0
   001B E2                  137 	movx	a,@r0
   001C 42 F0               138 	orl	b,a
   001E 08                  139 	inc	r0
   001F E2                  140 	movx	a,@r0
   0020 45 F0               141 	orl	a,b
                            142 ;	_strtok.c:46: return NULL;
   0022 70 06               143 	jnz	00108$
   0024 90 00 00            144 	mov	dptr,#0x0000
   0027 F5 F0               145 	mov	b,a
   0029 22                  146 	ret
                            147 ;	_strtok.c:48: while (*s) {
   002A                     148 00108$:
   002A 78r03               149 	mov	r0,#_strtok_s_1_1
   002C E2                  150 	movx	a,@r0
   002D FA                  151 	mov	r2,a
   002E 08                  152 	inc	r0
   002F E2                  153 	movx	a,@r0
   0030 FB                  154 	mov	r3,a
   0031 08                  155 	inc	r0
   0032 E2                  156 	movx	a,@r0
   0033 FC                  157 	mov	r4,a
   0034 8A 82               158 	mov	dpl,r2
   0036 8B 83               159 	mov	dph,r3
   0038 8C F0               160 	mov	b,r4
   003A 12s00r00            161 	lcall	__gptrget
   003D FA                  162 	mov	r2,a
   003E 60 2C               163 	jz	00110$
                            164 ;	_strtok.c:49: if (strchr(control,*s))
   0040 78r00               165 	mov	r0,#_strchr_PARM_2
   0042 EA                  166 	mov	a,r2
   0043 F2                  167 	movx	@r0,a
   0044 78r00               168 	mov	r0,#_strtok_PARM_2
   0046 E2                  169 	movx	a,@r0
   0047 F5 82               170 	mov	dpl,a
   0049 08                  171 	inc	r0
   004A E2                  172 	movx	a,@r0
   004B F5 83               173 	mov	dph,a
   004D 08                  174 	inc	r0
   004E E2                  175 	movx	a,@r0
   004F F5 F0               176 	mov	b,a
   0051 12s00r00            177 	lcall	_strchr
   0054 AA 82               178 	mov	r2,dpl
   0056 AB 83               179 	mov	r3,dph
   0058 AC F0               180 	mov	r4,b
   005A EA                  181 	mov	a,r2
   005B 4B                  182 	orl	a,r3
   005C 4C                  183 	orl	a,r4
   005D 60 0D               184 	jz	00110$
                            185 ;	_strtok.c:50: s++;
   005F 78r03               186 	mov	r0,#_strtok_s_1_1
   0061 E2                  187 	movx	a,@r0
   0062 24 01               188 	add	a,#0x01
   0064 F2                  189 	movx	@r0,a
   0065 08                  190 	inc	r0
   0066 E2                  191 	movx	a,@r0
   0067 34 00               192 	addc	a,#0x00
   0069 F2                  193 	movx	@r0,a
                            194 ;	_strtok.c:52: break;
   006A 80 BE               195 	sjmp	00108$
   006C                     196 00110$:
                            197 ;	_strtok.c:55: s1 = s ;
   006C 78r03               198 	mov	r0,#_strtok_s_1_1
   006E E2                  199 	movx	a,@r0
   006F FA                  200 	mov	r2,a
   0070 08                  201 	inc	r0
   0071 E2                  202 	movx	a,@r0
   0072 FB                  203 	mov	r3,a
   0073 08                  204 	inc	r0
   0074 E2                  205 	movx	a,@r0
   0075 FC                  206 	mov	r4,a
                            207 ;	_strtok.c:57: while (*s) {
   0076                     208 00113$:
   0076 78r03               209 	mov	r0,#_strtok_s_1_1
   0078 E2                  210 	movx	a,@r0
   0079 FD                  211 	mov	r5,a
   007A 08                  212 	inc	r0
   007B E2                  213 	movx	a,@r0
   007C FE                  214 	mov	r6,a
   007D 08                  215 	inc	r0
   007E E2                  216 	movx	a,@r0
   007F FF                  217 	mov	r7,a
   0080 8D 82               218 	mov	dpl,r5
   0082 8E 83               219 	mov	dph,r6
   0084 8F F0               220 	mov	b,r7
   0086 12s00r00            221 	lcall	__gptrget
   0089 FD                  222 	mov	r5,a
   008A 60 60               223 	jz	00115$
                            224 ;	_strtok.c:58: if (strchr(control,*s)) {
   008C 78r00               225 	mov	r0,#_strchr_PARM_2
   008E ED                  226 	mov	a,r5
   008F F2                  227 	movx	@r0,a
   0090 78r00               228 	mov	r0,#_strtok_PARM_2
   0092 E2                  229 	movx	a,@r0
   0093 F5 82               230 	mov	dpl,a
   0095 08                  231 	inc	r0
   0096 E2                  232 	movx	a,@r0
   0097 F5 83               233 	mov	dph,a
   0099 08                  234 	inc	r0
   009A E2                  235 	movx	a,@r0
   009B F5 F0               236 	mov	b,a
   009D C0 02               237 	push	ar2
   009F C0 03               238 	push	ar3
   00A1 C0 04               239 	push	ar4
   00A3 12s00r00            240 	lcall	_strchr
   00A6 AD 82               241 	mov	r5,dpl
   00A8 AE 83               242 	mov	r6,dph
   00AA AF F0               243 	mov	r7,b
   00AC D0 04               244 	pop	ar4
   00AE D0 03               245 	pop	ar3
   00B0 D0 02               246 	pop	ar2
   00B2 ED                  247 	mov	a,r5
   00B3 4E                  248 	orl	a,r6
   00B4 4F                  249 	orl	a,r7
   00B5 60 28               250 	jz	00112$
                            251 ;	_strtok.c:59: *s++ = '\0';
   00B7 78r03               252 	mov	r0,#_strtok_s_1_1
   00B9 E2                  253 	movx	a,@r0
   00BA FD                  254 	mov	r5,a
   00BB 08                  255 	inc	r0
   00BC E2                  256 	movx	a,@r0
   00BD FE                  257 	mov	r6,a
   00BE 08                  258 	inc	r0
   00BF E2                  259 	movx	a,@r0
   00C0 FF                  260 	mov	r7,a
   00C1 8D 82               261 	mov	dpl,r5
   00C3 8E 83               262 	mov	dph,r6
   00C5 8F F0               263 	mov	b,r7
   00C7 E4                  264 	clr	a
   00C8 12s00r00            265 	lcall	__gptrput
   00CB 78r03               266 	mov	r0,#_strtok_s_1_1
   00CD 74 01               267 	mov	a,#0x01
   00CF 2D                  268 	add	a,r5
   00D0 F2                  269 	movx	@r0,a
   00D1 E4                  270 	clr	a
   00D2 3E                  271 	addc	a,r6
   00D3 08                  272 	inc	r0
   00D4 F2                  273 	movx	@r0,a
   00D5 08                  274 	inc	r0
   00D6 EF                  275 	mov	a,r7
   00D7 F2                  276 	movx	@r0,a
                            277 ;	_strtok.c:60: return s1 ;
   00D8 8A 82               278 	mov	dpl,r2
   00DA 8B 83               279 	mov	dph,r3
   00DC 8C F0               280 	mov	b,r4
   00DE 22                  281 	ret
   00DF                     282 00112$:
                            283 ;	_strtok.c:62: s++ ;
   00DF 78r03               284 	mov	r0,#_strtok_s_1_1
   00E1 E2                  285 	movx	a,@r0
   00E2 24 01               286 	add	a,#0x01
   00E4 F2                  287 	movx	@r0,a
   00E5 08                  288 	inc	r0
   00E6 E2                  289 	movx	a,@r0
   00E7 34 00               290 	addc	a,#0x00
   00E9 F2                  291 	movx	@r0,a
   00EA 80 8A               292 	sjmp	00113$
   00EC                     293 00115$:
                            294 ;	_strtok.c:65: s = NULL;
   00EC 78r03               295 	mov	r0,#_strtok_s_1_1
   00EE E4                  296 	clr	a
   00EF F2                  297 	movx	@r0,a
   00F0 08                  298 	inc	r0
   00F1 F2                  299 	movx	@r0,a
   00F2 08                  300 	inc	r0
   00F3 F2                  301 	movx	@r0,a
                            302 ;	_strtok.c:67: if (*s1)
   00F4 8A 82               303 	mov	dpl,r2
   00F6 8B 83               304 	mov	dph,r3
   00F8 8C F0               305 	mov	b,r4
   00FA 12s00r00            306 	lcall	__gptrget
   00FD 60 07               307 	jz	00117$
                            308 ;	_strtok.c:68: return s1;
   00FF 8A 82               309 	mov	dpl,r2
   0101 8B 83               310 	mov	dph,r3
   0103 8C F0               311 	mov	b,r4
   0105 22                  312 	ret
   0106                     313 00117$:
                            314 ;	_strtok.c:70: return NULL;
   0106 90 00 00            315 	mov	dptr,#0x0000
   0109 75 F0 00            316 	mov	b,#0x00
   010C 22                  317 	ret
                            318 	.area CSEG    (CODE)
                            319 	.area CONST   (CODE)
                            320 	.area XINIT   (CODE)
                            321 	.area CABS    (ABS,CODE)
