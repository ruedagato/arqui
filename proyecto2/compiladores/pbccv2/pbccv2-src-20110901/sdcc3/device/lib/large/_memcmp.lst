                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:29 2015
                              5 ;--------------------------------------------------------
                              6 	.module _memcmp
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _memcmp_PARM_3
                             13 	.globl _memcmp_PARM_2
                             14 	.globl _memcmp
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 	.area RSEG    (ABS,DATA)
   0000                      19 	.org 0x0000
                             20 ;--------------------------------------------------------
                             21 ; special function bits
                             22 ;--------------------------------------------------------
                             23 	.area RSEG    (ABS,DATA)
   0000                      24 	.org 0x0000
                             25 ;--------------------------------------------------------
                             26 ; overlayable register banks
                             27 ;--------------------------------------------------------
                             28 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      29 	.ds 8
                             30 ;--------------------------------------------------------
                             31 ; internal ram data
                             32 ;--------------------------------------------------------
                             33 	.area DSEG    (DATA)
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in internal ram 
                             36 ;--------------------------------------------------------
                             37 	.area OSEG    (OVR,DATA)
                             38 ;--------------------------------------------------------
                             39 ; indirectly addressable internal ram data
                             40 ;--------------------------------------------------------
                             41 	.area ISEG    (DATA)
                             42 ;--------------------------------------------------------
                             43 ; absolute internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area IABS    (ABS,DATA)
                             46 	.area IABS    (ABS,DATA)
                             47 ;--------------------------------------------------------
                             48 ; bit data
                             49 ;--------------------------------------------------------
                             50 	.area BSEG    (BIT)
                             51 ;--------------------------------------------------------
                             52 ; paged external ram data
                             53 ;--------------------------------------------------------
                             54 	.area PSEG    (PAG,XDATA)
                             55 ;--------------------------------------------------------
                             56 ; external ram data
                             57 ;--------------------------------------------------------
                             58 	.area XSEG    (XDATA)
   0000                      59 _memcmp_PARM_2:
   0000                      60 	.ds 3
   0003                      61 _memcmp_PARM_3:
   0003                      62 	.ds 2
   0005                      63 _memcmp_buf1_1_1:
   0005                      64 	.ds 3
                             65 ;--------------------------------------------------------
                             66 ; absolute external ram data
                             67 ;--------------------------------------------------------
                             68 	.area XABS    (ABS,XDATA)
                             69 ;--------------------------------------------------------
                             70 ; external initialized ram data
                             71 ;--------------------------------------------------------
                             72 	.area XISEG   (XDATA)
                             73 	.area HOME    (CODE)
                             74 	.area GSINIT0 (CODE)
                             75 	.area GSINIT1 (CODE)
                             76 	.area GSINIT2 (CODE)
                             77 	.area GSINIT3 (CODE)
                             78 	.area GSINIT4 (CODE)
                             79 	.area GSINIT5 (CODE)
                             80 	.area GSINIT  (CODE)
                             81 	.area GSFINAL (CODE)
                             82 	.area CSEG    (CODE)
                             83 ;--------------------------------------------------------
                             84 ; global & static initialisations
                             85 ;--------------------------------------------------------
                             86 	.area HOME    (CODE)
                             87 	.area GSINIT  (CODE)
                             88 	.area GSFINAL (CODE)
                             89 	.area GSINIT  (CODE)
                             90 ;--------------------------------------------------------
                             91 ; Home
                             92 ;--------------------------------------------------------
                             93 	.area HOME    (CODE)
                             94 	.area HOME    (CODE)
                             95 ;--------------------------------------------------------
                             96 ; code
                             97 ;--------------------------------------------------------
                             98 	.area CSEG    (CODE)
                             99 ;------------------------------------------------------------
                            100 ;Allocation info for local variables in function 'memcmp'
                            101 ;------------------------------------------------------------
                            102 ;buf2                      Allocated with name '_memcmp_PARM_2'
                            103 ;count                     Allocated with name '_memcmp_PARM_3'
                            104 ;buf1                      Allocated with name '_memcmp_buf1_1_1'
                            105 ;------------------------------------------------------------
                            106 ;	_memcmp.c:31: int memcmp (
                            107 ;	-----------------------------------------
                            108 ;	 function memcmp
                            109 ;	-----------------------------------------
   0000                     110 _memcmp:
                    0002    111 	ar2 = 0x02
                    0003    112 	ar3 = 0x03
                    0004    113 	ar4 = 0x04
                    0005    114 	ar5 = 0x05
                    0006    115 	ar6 = 0x06
                    0007    116 	ar7 = 0x07
                    0000    117 	ar0 = 0x00
                    0001    118 	ar1 = 0x01
   0000 AA F0               119 	mov	r2,b
   0002 AB 83               120 	mov	r3,dph
   0004 E5 82               121 	mov	a,dpl
   0006 90s00r05            122 	mov	dptr,#_memcmp_buf1_1_1
   0009 F0                  123 	movx	@dptr,a
   000A A3                  124 	inc	dptr
   000B EB                  125 	mov	a,r3
   000C F0                  126 	movx	@dptr,a
   000D A3                  127 	inc	dptr
   000E EA                  128 	mov	a,r2
   000F F0                  129 	movx	@dptr,a
                            130 ;	_memcmp.c:37: if (!count)
   0010 90s00r03            131 	mov	dptr,#_memcmp_PARM_3
   0013 E0                  132 	movx	a,@dptr
   0014 FA                  133 	mov	r2,a
   0015 A3                  134 	inc	dptr
   0016 E0                  135 	movx	a,@dptr
   0017 FB                  136 	mov	r3,a
   0018 4A                  137 	orl	a,r2
   0019 70 04               138 	jnz	00112$
                            139 ;	_memcmp.c:38: return(0);
   001B 90 00 00            140 	mov	dptr,#0x0000
   001E 22                  141 	ret
                            142 ;	_memcmp.c:40: while ( --count && *((char *)buf1) == *((char *)buf2) ) {
   001F                     143 00112$:
   001F 90s00r05            144 	mov	dptr,#_memcmp_buf1_1_1
   0022 E0                  145 	movx	a,@dptr
   0023 FC                  146 	mov	r4,a
   0024 A3                  147 	inc	dptr
   0025 E0                  148 	movx	a,@dptr
   0026 FD                  149 	mov	r5,a
   0027 A3                  150 	inc	dptr
   0028 E0                  151 	movx	a,@dptr
   0029 FE                  152 	mov	r6,a
   002A 90s00r00            153 	mov	dptr,#_memcmp_PARM_2
   002D E0                  154 	movx	a,@dptr
   002E FF                  155 	mov	r7,a
   002F A3                  156 	inc	dptr
   0030 E0                  157 	movx	a,@dptr
   0031 F8                  158 	mov	r0,a
   0032 A3                  159 	inc	dptr
   0033 E0                  160 	movx	a,@dptr
   0034 F9                  161 	mov	r1,a
   0035                     162 00104$:
   0035 1A                  163 	dec	r2
   0036 BA FF 01            164 	cjne	r2,#0xff,00115$
   0039 1B                  165 	dec	r3
   003A                     166 00115$:
   003A EA                  167 	mov	a,r2
   003B 4B                  168 	orl	a,r3
   003C 60 3F               169 	jz	00113$
   003E C0 02               170 	push	ar2
   0040 C0 03               171 	push	ar3
   0042 8C 82               172 	mov	dpl,r4
   0044 8D 83               173 	mov	dph,r5
   0046 8E F0               174 	mov	b,r6
   0048 12s00r00            175 	lcall	__gptrget
   004B FA                  176 	mov	r2,a
   004C 8F 82               177 	mov	dpl,r7
   004E 88 83               178 	mov	dph,r0
   0050 89 F0               179 	mov	b,r1
   0052 12s00r00            180 	lcall	__gptrget
   0055 FB                  181 	mov	r3,a
   0056 EA                  182 	mov	a,r2
   0057 B5 03 02            183 	cjne	a,ar3,00117$
   005A 80 06               184 	sjmp	00118$
   005C                     185 00117$:
   005C D0 03               186 	pop	ar3
   005E D0 02               187 	pop	ar2
   0060 80 1B               188 	sjmp	00113$
   0062                     189 00118$:
   0062 D0 03               190 	pop	ar3
   0064 D0 02               191 	pop	ar2
                            192 ;	_memcmp.c:41: buf1 = (char *)buf1 + 1;
   0066 0C                  193 	inc	r4
   0067 BC 00 01            194 	cjne	r4,#0x00,00119$
   006A 0D                  195 	inc	r5
   006B                     196 00119$:
   006B 90s00r05            197 	mov	dptr,#_memcmp_buf1_1_1
   006E EC                  198 	mov	a,r4
   006F F0                  199 	movx	@dptr,a
   0070 A3                  200 	inc	dptr
   0071 ED                  201 	mov	a,r5
   0072 F0                  202 	movx	@dptr,a
   0073 A3                  203 	inc	dptr
   0074 EE                  204 	mov	a,r6
   0075 F0                  205 	movx	@dptr,a
                            206 ;	_memcmp.c:42: buf2 = (char *)buf2 + 1;
   0076 0F                  207 	inc	r7
   0077 BF 00 BB            208 	cjne	r7,#0x00,00104$
   007A 08                  209 	inc	r0
   007B 80 B8               210 	sjmp	00104$
   007D                     211 00113$:
   007D 90s00r05            212 	mov	dptr,#_memcmp_buf1_1_1
   0080 EC                  213 	mov	a,r4
   0081 F0                  214 	movx	@dptr,a
   0082 A3                  215 	inc	dptr
   0083 ED                  216 	mov	a,r5
   0084 F0                  217 	movx	@dptr,a
   0085 A3                  218 	inc	dptr
   0086 EE                  219 	mov	a,r6
   0087 F0                  220 	movx	@dptr,a
                            221 ;	_memcmp.c:45: return( *((unsigned char *)buf1) - *((unsigned char *)buf2) );
   0088 8C 82               222 	mov	dpl,r4
   008A 8D 83               223 	mov	dph,r5
   008C 8E F0               224 	mov	b,r6
   008E 12s00r00            225 	lcall	__gptrget
   0091 FC                  226 	mov	r4,a
   0092 7A 00               227 	mov	r2,#0x00
   0094 8F 82               228 	mov	dpl,r7
   0096 88 83               229 	mov	dph,r0
   0098 89 F0               230 	mov	b,r1
   009A 12s00r00            231 	lcall	__gptrget
   009D FF                  232 	mov	r7,a
   009E 7B 00               233 	mov	r3,#0x00
   00A0 EC                  234 	mov	a,r4
   00A1 C3                  235 	clr	c
   00A2 9F                  236 	subb	a,r7
   00A3 FC                  237 	mov	r4,a
   00A4 EA                  238 	mov	a,r2
   00A5 9B                  239 	subb	a,r3
   00A6 8C 82               240 	mov	dpl,r4
   00A8 F5 83               241 	mov	dph,a
   00AA 22                  242 	ret
                            243 	.area CSEG    (CODE)
                            244 	.area CONST   (CODE)
                            245 	.area XINIT   (CODE)
                            246 	.area CABS    (ABS,CODE)
