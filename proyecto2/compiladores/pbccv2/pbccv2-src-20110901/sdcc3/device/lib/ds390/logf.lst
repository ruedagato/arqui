                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:16 2015
                              5 ;--------------------------------------------------------
                              6 	.module logf
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _logf
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 ;--------------------------------------------------------
                             43 ; internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area DSEG    (DATA)
                             46 ;--------------------------------------------------------
                             47 ; overlayable items in internal ram 
                             48 ;--------------------------------------------------------
                             49 	.area OSEG    (OVR,DATA)
                             50 ;--------------------------------------------------------
                             51 ; indirectly addressable internal ram data
                             52 ;--------------------------------------------------------
                             53 	.area ISEG    (DATA)
                             54 ;--------------------------------------------------------
                             55 ; absolute internal ram data
                             56 ;--------------------------------------------------------
                             57 	.area IABS    (ABS,DATA)
                             58 	.area IABS    (ABS,DATA)
                             59 ;--------------------------------------------------------
                             60 ; bit data
                             61 ;--------------------------------------------------------
                             62 	.area BSEG    (BIT)
                             63 ;--------------------------------------------------------
                             64 ; paged external ram data
                             65 ;--------------------------------------------------------
                             66 	.area PSEG    (PAG,XDATA)
                             67 ;--------------------------------------------------------
                             68 ; external ram data
                             69 ;--------------------------------------------------------
                             70 	.area XSEG    (XDATA)
                             71 ;--------------------------------------------------------
                             72 ; absolute external ram data
                             73 ;--------------------------------------------------------
                             74 	.area XABS    (ABS,XDATA)
                             75 ;--------------------------------------------------------
                             76 ; external initialized ram data
                             77 ;--------------------------------------------------------
                             78 	.area XISEG   (XDATA)
                             79 ;--------------------------------------------------------
                             80 ; global & static initialisations
                             81 ;--------------------------------------------------------
                             82 	.area HOME    (CODE)
                             83 	.area GSINIT  (CODE)
                             84 	.area GSFINAL (CODE)
                             85 	.area GSINIT  (CODE)
                             86 ;--------------------------------------------------------
                             87 ; Home
                             88 ;--------------------------------------------------------
                             89 	.area HOME    (CODE)
                             90 	.area HOME    (CODE)
                             91 ;--------------------------------------------------------
                             92 ; code
                             93 ;--------------------------------------------------------
                             94 	.area CSEG    (CODE)
                             95 ;------------------------------------------------------------
                             96 ;Allocation info for local variables in function 'logf'
                             97 ;------------------------------------------------------------
                             98 ;x                         Allocated to registers r2 r3 r4 r5 
                             99 ;Rz                        Allocated to stack - offset 1
                            100 ;f                         Allocated to stack - offset 5
                            101 ;z                         Allocated to stack - offset 9
                            102 ;w                         Allocated to registers r2 r3 r4 r5 
                            103 ;znum                      Allocated to stack - offset 13
                            104 ;zden                      Allocated to registers r2 r3 r4 r5 
                            105 ;xn                        Allocated to registers r6 r7 r0 r1 
                            106 ;n                         Allocated to stack - offset 17
                            107 ;------------------------------------------------------------
                            108 ;	logf.c:216: float logf(const float x) _FLOAT_FUNC_REENTRANT
                            109 ;	-----------------------------------------
                            110 ;	 function logf
                            111 ;	-----------------------------------------
   0000                     112 _logf:
                    0002    113 	ar2 = 0x02
                    0003    114 	ar3 = 0x03
                    0004    115 	ar4 = 0x04
                    0005    116 	ar5 = 0x05
                    0006    117 	ar6 = 0x06
                    0007    118 	ar7 = 0x07
                    0000    119 	ar0 = 0x00
                    0001    120 	ar1 = 0x01
   0000 C0*00               121 	push	_bpx
   0002 C0*01               122 	push	_bpx+1
   0004 85 81*00            123 	mov	_bpx,sp
   0007 85 9B*01            124 	mov	_bpx+1,esp
   000A 53*01 03            125 	anl	_bpx+1,#3
   000D E5 81               126 	mov	a,sp
   000F 24 12               127 	add	a,#0x12
   0011 F5 81               128 	mov	sp,a
   0013 E5 9B               129 	mov	a,esp
   0015 54 03               130 	anl	a,#3
   0017 34 00               131 	addc	a,#0x00
   0019 F5 9B               132 	mov	esp,a
   001B AA 82               133 	mov	r2,dpl
   001D AB 83               134 	mov	r3,dph
   001F AC 93               135 	mov	r4,dpx
   0021 AD F0               136 	mov	r5,b
                            137 ;	logf.c:226: if (x<=0.0)
                            138 ;	genAssign: resultIsFar = TRUE
   0023 90s00r00r00         139 	mov	dptr,#___fsgt_PARM_2
   0027 E4                  140 	clr	a
   0028 F0                  141 	movx	@dptr,a
   0029 A3                  142 	inc	dptr
   002A F0                  143 	movx	@dptr,a
   002B A3                  144 	inc	dptr
   002C F0                  145 	movx	@dptr,a
   002D A3                  146 	inc	dptr
   002E F0                  147 	movx	@dptr,a
   002F C0 02               148 	push	ar2
   0031 C0 03               149 	push	ar3
   0033 C0 04               150 	push	ar4
   0035 C0 05               151 	push	ar5
   0037 8A 82               152 	mov	dpl,r2
   0039 8B 83               153 	mov	dph,r3
   003B 8C 93               154 	mov	dpx,r4
   003D 8D F0               155 	mov	b,r5
   003F 12s00r00r00         156 	lcall	___fsgt
   0043 D0 05               157 	pop	ar5
   0045 D0 04               158 	pop	ar4
   0047 D0 03               159 	pop	ar3
   0049 D0 02               160 	pop	ar2
   004B E5 82               161 	mov	a,dpl
   004D 70 15               162 	jnz  00102$
   004F                     163 00110$:
                            164 ;	logf.c:228: errno=EDOM;
                            165 ;	genAssign: resultIsFar = TRUE
   004F 90s00r00r00         166 	mov	dptr,#_errno
   0053 74 21               167 	mov	a,#0x21
   0055 F0                  168 	movx	@dptr,a
   0056 E4                  169 	clr	a
   0057 A3                  170 	inc	dptr
   0058 F0                  171 	movx	@dptr,a
                            172 ;	logf.c:229: return 0.0;
   0059 90 00 00 00         173 	mov  dptr,#0x0000
   005D 75 F0 00            174 	mov	b,#0x00
   0060 02s00r05r63         175 	ljmp	00106$
   0064                     176 00102$:
                            177 ;	logf.c:231: f=frexpf(x, &n);
   0064 E5*00               178 	mov	a,_bpx
   0066 24 11               179 	add	a,#0x11
   0068 F5 F0               180 	mov	b,a
   006A E4                  181 	clr	a
   006B 35*01               182 	addc	a,_bpx+1
   006D AE F0               183 	mov	r6,b
   006F FF                  184 	mov	r7,a
   0070 78 40               185 	mov	r0,#0x40
   0072 90s00r00r00         186 	mov	dptr,#_frexpf_PARM_2
   0076 EE                  187 	mov	a,r6
   0077 F0                  188 	movx	@dptr,a
   0078 A3                  189 	inc	dptr
   0079 EF                  190 	mov	a,r7
   007A F0                  191 	movx	@dptr,a
   007B A3                  192 	inc	dptr
   007C E8                  193 	mov	a,r0
   007D F0                  194 	movx	@dptr,a
   007E A3                  195 	inc	dptr
   007F E4                  196 	clr  a
   0080 F0                  197 	movx	@dptr,a
   0081 8A 82               198 	mov	dpl,r2
   0083 8B 83               199 	mov	dph,r3
   0085 8C 93               200 	mov	dpx,r4
   0087 8D F0               201 	mov	b,r5
   0089 12s00r00r00         202 	lcall	_frexpf
   008D AA 82               203 	mov	r2,dpl
   008F AB 83               204 	mov	r3,dph
   0091 AC 93               205 	mov	r4,dpx
   0093 AD F0               206 	mov	r5,b
                            207 ;	genAssign: resultIsFar = TRUE
   0095 E5*00               208 	mov	a,_bpx
   0097 C3                  209 	clr	c
   0098 94 FB               210 	subb	a,#0xFB
   009A F5 82               211 	mov	dpl,a
   009C E5*01               212 	mov	a,_bpx+1
   009E 94 FF               213 	subb	a,#0xFF
   00A0 F5 83               214 	mov	dph,a
   00A2 75 93 40            215 	mov	dpx,#0x40
   00A5 EA                  216 	mov	a,r2
   00A6 F0                  217 	movx	@dptr,a
   00A7 A3                  218 	inc	dptr
   00A8 EB                  219 	mov	a,r3
   00A9 F0                  220 	movx	@dptr,a
   00AA A3                  221 	inc	dptr
   00AB EC                  222 	mov	a,r4
   00AC F0                  223 	movx	@dptr,a
   00AD A3                  224 	inc	dptr
   00AE ED                  225 	mov	a,r5
   00AF F0                  226 	movx	@dptr,a
                            227 ;	logf.c:232: znum=f-0.5;
                            228 ;	genAssign: resultIsFar = TRUE
   00B0 90s00r00r00         229 	mov	dptr,#___fssub_PARM_2
   00B4 E4                  230 	clr  a
   00B5 F0                  231 	movx @dptr,a
   00B6 A3                  232 	inc  dptr
   00B7 F0                  233 	movx @dptr,a
   00B8 A3                  234 	inc	dptr
   00B9 E4                  235 	clr  a
   00BA F0                  236 	movx	@dptr,a
   00BB A3                  237 	inc	dptr
   00BC 74 3F               238 	mov	a,#0x3F
   00BE F0                  239 	movx	@dptr,a
   00BF E5*00               240 	mov	a,_bpx
   00C1 C3                  241 	clr	c
   00C2 94 FB               242 	subb	a,#0xFB
   00C4 F5 84               243 	mov	dpl1,a
   00C6 E5*01               244 	mov	a,_bpx+1
   00C8 94 FF               245 	subb	a,#0xFF
   00CA F5 85               246 	mov	dph1,a
   00CC 75 95 40            247 	mov	dpx1,#0x40
   00CF 05 86               248 	inc	dps
   00D1 E0                  249 	movx	a,@dptr
   00D2 F5 82               250 	mov	dpl,a
   00D4 A3                  251 	inc	dptr
   00D5 E0                  252 	movx	a,@dptr
   00D6 F5 83               253 	mov	dph,a
   00D8 A3                  254 	inc	dptr
   00D9 E0                  255 	movx	a,@dptr
   00DA F5 93               256 	mov	dpx,a
   00DC A3                  257 	inc	dptr
   00DD E0                  258 	movx	a,@dptr
   00DE F5 F0               259 	mov	b,a
   00E0 75 86 00            260 	mov	dps,#0
   00E3 12s00r00r00         261 	lcall	___fssub
   00E7 AE 82               262 	mov	r6,dpl
   00E9 AF 83               263 	mov	r7,dph
   00EB A8 93               264 	mov	r0,dpx
   00ED A9 F0               265 	mov	r1,b
                            266 ;	genAssign: resultIsFar = TRUE
   00EF E5*00               267 	mov	a,_bpx
   00F1 C3                  268 	clr	c
   00F2 94 F3               269 	subb	a,#0xF3
   00F4 F5 82               270 	mov	dpl,a
   00F6 E5*01               271 	mov	a,_bpx+1
   00F8 94 FF               272 	subb	a,#0xFF
   00FA F5 83               273 	mov	dph,a
   00FC 75 93 40            274 	mov	dpx,#0x40
   00FF EE                  275 	mov	a,r6
   0100 F0                  276 	movx	@dptr,a
   0101 A3                  277 	inc	dptr
   0102 EF                  278 	mov	a,r7
   0103 F0                  279 	movx	@dptr,a
   0104 A3                  280 	inc	dptr
   0105 E8                  281 	mov	a,r0
   0106 F0                  282 	movx	@dptr,a
   0107 A3                  283 	inc	dptr
   0108 E9                  284 	mov	a,r1
   0109 F0                  285 	movx	@dptr,a
                            286 ;	logf.c:233: if (f>C0)
                            287 ;	genAssign: resultIsFar = TRUE
   010A 90s00r00r00         288 	mov	dptr,#___fsgt_PARM_2
   010E 74 F3               289 	mov	a,#0xF3
   0110 F0                  290 	movx	@dptr,a
   0111 A3                  291 	inc	dptr
   0112 74 04               292 	mov	a,#0x04
   0114 F0                  293 	movx	@dptr,a
   0115 A3                  294 	inc	dptr
   0116 74 35               295 	mov	a,#0x35
   0118 F0                  296 	movx	@dptr,a
   0119 A3                  297 	inc	dptr
   011A 74 3F               298 	mov	a,#0x3F
   011C F0                  299 	movx	@dptr,a
   011D E5*00               300 	mov	a,_bpx
   011F C3                  301 	clr	c
   0120 94 FB               302 	subb	a,#0xFB
   0122 F5 84               303 	mov	dpl1,a
   0124 E5*01               304 	mov	a,_bpx+1
   0126 94 FF               305 	subb	a,#0xFF
   0128 F5 85               306 	mov	dph1,a
   012A 75 95 40            307 	mov	dpx1,#0x40
   012D 05 86               308 	inc	dps
   012F E0                  309 	movx	a,@dptr
   0130 F5 82               310 	mov	dpl,a
   0132 A3                  311 	inc	dptr
   0133 E0                  312 	movx	a,@dptr
   0134 F5 83               313 	mov	dph,a
   0136 A3                  314 	inc	dptr
   0137 E0                  315 	movx	a,@dptr
   0138 F5 93               316 	mov	dpx,a
   013A A3                  317 	inc	dptr
   013B E0                  318 	movx	a,@dptr
   013C F5 F0               319 	mov	b,a
   013E 75 86 00            320 	mov	dps,#0
   0141 12s00r00r00         321 	lcall	___fsgt
   0145 E5 82               322 	mov	a,dpl
   0147 70 04               323 	jnz	00111$
   0149 02s00r02r09         324 	ljmp	00104$
   014D                     325 00111$:
                            326 ;	logf.c:235: znum-=0.5;
                            327 ;	genAssign: resultIsFar = TRUE
   014D 90s00r00r00         328 	mov	dptr,#___fssub_PARM_2
   0151 E4                  329 	clr  a
   0152 F0                  330 	movx @dptr,a
   0153 A3                  331 	inc  dptr
   0154 F0                  332 	movx @dptr,a
   0155 A3                  333 	inc	dptr
   0156 E4                  334 	clr  a
   0157 F0                  335 	movx	@dptr,a
   0158 A3                  336 	inc	dptr
   0159 74 3F               337 	mov	a,#0x3F
   015B F0                  338 	movx	@dptr,a
   015C E5*00               339 	mov	a,_bpx
   015E C3                  340 	clr	c
   015F 94 F3               341 	subb	a,#0xF3
   0161 F5 84               342 	mov	dpl1,a
   0163 E5*01               343 	mov	a,_bpx+1
   0165 94 FF               344 	subb	a,#0xFF
   0167 F5 85               345 	mov	dph1,a
   0169 75 95 40            346 	mov	dpx1,#0x40
   016C 05 86               347 	inc	dps
   016E E0                  348 	movx	a,@dptr
   016F F5 82               349 	mov	dpl,a
   0171 A3                  350 	inc	dptr
   0172 E0                  351 	movx	a,@dptr
   0173 F5 83               352 	mov	dph,a
   0175 A3                  353 	inc	dptr
   0176 E0                  354 	movx	a,@dptr
   0177 F5 93               355 	mov	dpx,a
   0179 A3                  356 	inc	dptr
   017A E0                  357 	movx	a,@dptr
   017B F5 F0               358 	mov	b,a
   017D 75 86 00            359 	mov	dps,#0
   0180 12s00r00r00         360 	lcall	___fssub
   0184 AA 82               361 	mov	r2,dpl
   0186 AB 83               362 	mov	r3,dph
   0188 AC 93               363 	mov	r4,dpx
   018A AD F0               364 	mov	r5,b
                            365 ;	genAssign: resultIsFar = TRUE
   018C E5*00               366 	mov	a,_bpx
   018E C3                  367 	clr	c
   018F 94 F3               368 	subb	a,#0xF3
   0191 F5 82               369 	mov	dpl,a
   0193 E5*01               370 	mov	a,_bpx+1
   0195 94 FF               371 	subb	a,#0xFF
   0197 F5 83               372 	mov	dph,a
   0199 75 93 40            373 	mov	dpx,#0x40
   019C EA                  374 	mov	a,r2
   019D F0                  375 	movx	@dptr,a
   019E A3                  376 	inc	dptr
   019F EB                  377 	mov	a,r3
   01A0 F0                  378 	movx	@dptr,a
   01A1 A3                  379 	inc	dptr
   01A2 EC                  380 	mov	a,r4
   01A3 F0                  381 	movx	@dptr,a
   01A4 A3                  382 	inc	dptr
   01A5 ED                  383 	mov	a,r5
   01A6 F0                  384 	movx	@dptr,a
                            385 ;	logf.c:236: zden=(f*0.5)+0.5;
   01A7 E5*00               386 	mov	a,_bpx
   01A9 C3                  387 	clr	c
   01AA 94 FB               388 	subb	a,#0xFB
   01AC F5 82               389 	mov	dpl,a
   01AE E5*01               390 	mov	a,_bpx+1
   01B0 94 FF               391 	subb	a,#0xFF
   01B2 F5 83               392 	mov	dph,a
   01B4 75 93 40            393 	mov	dpx,#0x40
                            394 ;	genAssign: resultIsFar = TRUE
   01B7 75 86 21            395 	mov	dps,#0x21
   01BA 90s00r00r00         396 	mov	dptr,#___fsmul_PARM_2
   01BE E0                  397 	movx	a,@dptr
   01BF F0                  398 	movx	@dptr,a
   01C0 A3                  399 	inc	dptr
   01C1 A3                  400 	inc	dptr
   01C2 E0                  401 	movx	a,@dptr
   01C3 F0                  402 	movx	@dptr,a
   01C4 A3                  403 	inc	dptr
   01C5 A3                  404 	inc	dptr
   01C6 E0                  405 	movx	a,@dptr
   01C7 F0                  406 	movx	@dptr,a
   01C8 A3                  407 	inc	dptr
   01C9 A3                  408 	inc	dptr
   01CA E0                  409 	movx	a,@dptr
   01CB F0                  410 	movx	@dptr,a
   01CC 75 86 00            411 	mov	dps,#0
   01CF 90 00 00 00         412 	mov  dptr,#0x0000
   01D3 75 F0 3F            413 	mov	b,#0x3F
   01D6 12s00r00r00         414 	lcall	___fsmul
   01DA AA 82               415 	mov	r2,dpl
   01DC AB 83               416 	mov	r3,dph
   01DE AC 93               417 	mov	r4,dpx
   01E0 AD F0               418 	mov	r5,b
                            419 ;	genAssign: resultIsFar = TRUE
   01E2 90s00r00r00         420 	mov	dptr,#___fsadd_PARM_2
   01E6 E4                  421 	clr  a
   01E7 F0                  422 	movx @dptr,a
   01E8 A3                  423 	inc  dptr
   01E9 F0                  424 	movx @dptr,a
   01EA A3                  425 	inc	dptr
   01EB E4                  426 	clr  a
   01EC F0                  427 	movx	@dptr,a
   01ED A3                  428 	inc	dptr
   01EE 74 3F               429 	mov	a,#0x3F
   01F0 F0                  430 	movx	@dptr,a
   01F1 8A 82               431 	mov	dpl,r2
   01F3 8B 83               432 	mov	dph,r3
   01F5 8C 93               433 	mov	dpx,r4
   01F7 8D F0               434 	mov	b,r5
   01F9 12s00r00r00         435 	lcall	___fsadd
   01FD AA 82               436 	mov	r2,dpl
   01FF AB 83               437 	mov	r3,dph
   0201 AC 93               438 	mov	r4,dpx
   0203 AD F0               439 	mov	r5,b
                            440 ;	genAssign: resultIsFar = TRUE
   0205 02s00r02r9D         441 	ljmp	00105$
   0209                     442 00104$:
                            443 ;	logf.c:240: n--;
   0209 E5*00               444 	mov	a,_bpx
   020B C3                  445 	clr	c
   020C 94 EF               446 	subb	a,#0xEF
   020E F5 82               447 	mov	dpl,a
   0210 E5*01               448 	mov	a,_bpx+1
   0212 94 FF               449 	subb	a,#0xFF
   0214 F5 83               450 	mov	dph,a
   0216 75 93 40            451 	mov	dpx,#0x40
   0219 E0                  452 	movx	a,@dptr
   021A 24 FF               453 	add	a,#0xFF
   021C FE                  454 	mov	r6,a
   021D A3                  455 	inc	dptr
   021E E0                  456 	movx	a,@dptr
   021F 34 FF               457 	addc	a,#0xFF
   0221 FF                  458 	mov	r7,a
                            459 ;	genAssign: resultIsFar = TRUE
   0222 E5*00               460 	mov	a,_bpx
   0224 C3                  461 	clr	c
   0225 94 EF               462 	subb	a,#0xEF
   0227 F5 82               463 	mov	dpl,a
   0229 E5*01               464 	mov	a,_bpx+1
   022B 94 FF               465 	subb	a,#0xFF
   022D F5 83               466 	mov	dph,a
   022F 75 93 40            467 	mov	dpx,#0x40
   0232 EE                  468 	mov	a,r6
   0233 F0                  469 	movx	@dptr,a
   0234 A3                  470 	inc	dptr
   0235 EF                  471 	mov	a,r7
   0236 F0                  472 	movx	@dptr,a
                            473 ;	logf.c:241: zden=znum*0.5+0.5;
   0237 E5*00               474 	mov	a,_bpx
   0239 C3                  475 	clr	c
   023A 94 F3               476 	subb	a,#0xF3
   023C F5 82               477 	mov	dpl,a
   023E E5*01               478 	mov	a,_bpx+1
   0240 94 FF               479 	subb	a,#0xFF
   0242 F5 83               480 	mov	dph,a
   0244 75 93 40            481 	mov	dpx,#0x40
                            482 ;	genAssign: resultIsFar = TRUE
   0247 75 86 21            483 	mov	dps,#0x21
   024A 90s00r00r00         484 	mov	dptr,#___fsmul_PARM_2
   024E E0                  485 	movx	a,@dptr
   024F F0                  486 	movx	@dptr,a
   0250 A3                  487 	inc	dptr
   0251 A3                  488 	inc	dptr
   0252 E0                  489 	movx	a,@dptr
   0253 F0                  490 	movx	@dptr,a
   0254 A3                  491 	inc	dptr
   0255 A3                  492 	inc	dptr
   0256 E0                  493 	movx	a,@dptr
   0257 F0                  494 	movx	@dptr,a
   0258 A3                  495 	inc	dptr
   0259 A3                  496 	inc	dptr
   025A E0                  497 	movx	a,@dptr
   025B F0                  498 	movx	@dptr,a
   025C 75 86 00            499 	mov	dps,#0
   025F 90 00 00 00         500 	mov  dptr,#0x0000
   0263 75 F0 3F            501 	mov	b,#0x3F
   0266 12s00r00r00         502 	lcall	___fsmul
   026A AE 82               503 	mov	r6,dpl
   026C AF 83               504 	mov	r7,dph
   026E A8 93               505 	mov	r0,dpx
   0270 A9 F0               506 	mov	r1,b
                            507 ;	genAssign: resultIsFar = TRUE
   0272 90s00r00r00         508 	mov	dptr,#___fsadd_PARM_2
   0276 E4                  509 	clr  a
   0277 F0                  510 	movx @dptr,a
   0278 A3                  511 	inc  dptr
   0279 F0                  512 	movx @dptr,a
   027A A3                  513 	inc	dptr
   027B E4                  514 	clr  a
   027C F0                  515 	movx	@dptr,a
   027D A3                  516 	inc	dptr
   027E 74 3F               517 	mov	a,#0x3F
   0280 F0                  518 	movx	@dptr,a
   0281 8E 82               519 	mov	dpl,r6
   0283 8F 83               520 	mov	dph,r7
   0285 88 93               521 	mov	dpx,r0
   0287 89 F0               522 	mov	b,r1
   0289 12s00r00r00         523 	lcall	___fsadd
   028D AE 82               524 	mov	r6,dpl
   028F AF 83               525 	mov	r7,dph
   0291 A8 93               526 	mov	r0,dpx
   0293 A9 F0               527 	mov	r1,b
                            528 ;	genAssign: resultIsFar = TRUE
   0295 8E 02               529 	mov	ar2,r6
   0297 8F 03               530 	mov	ar3,r7
   0299 88 04               531 	mov	ar4,r0
   029B 89 05               532 	mov	ar5,r1
   029D                     533 00105$:
                            534 ;	logf.c:243: z=znum/zden;
                            535 ;	genAssign: resultIsFar = TRUE
   029D 90s00r00r00         536 	mov	dptr,#___fsdiv_PARM_2
   02A1 EA                  537 	mov	a,r2
   02A2 F0                  538 	movx	@dptr,a
   02A3 A3                  539 	inc	dptr
   02A4 EB                  540 	mov	a,r3
   02A5 F0                  541 	movx	@dptr,a
   02A6 A3                  542 	inc	dptr
   02A7 EC                  543 	mov	a,r4
   02A8 F0                  544 	movx	@dptr,a
   02A9 A3                  545 	inc	dptr
   02AA ED                  546 	mov	a,r5
   02AB F0                  547 	movx	@dptr,a
   02AC E5*00               548 	mov	a,_bpx
   02AE C3                  549 	clr	c
   02AF 94 F3               550 	subb	a,#0xF3
   02B1 F5 84               551 	mov	dpl1,a
   02B3 E5*01               552 	mov	a,_bpx+1
   02B5 94 FF               553 	subb	a,#0xFF
   02B7 F5 85               554 	mov	dph1,a
   02B9 75 95 40            555 	mov	dpx1,#0x40
   02BC 05 86               556 	inc	dps
   02BE E0                  557 	movx	a,@dptr
   02BF F5 82               558 	mov	dpl,a
   02C1 A3                  559 	inc	dptr
   02C2 E0                  560 	movx	a,@dptr
   02C3 F5 83               561 	mov	dph,a
   02C5 A3                  562 	inc	dptr
   02C6 E0                  563 	movx	a,@dptr
   02C7 F5 93               564 	mov	dpx,a
   02C9 A3                  565 	inc	dptr
   02CA E0                  566 	movx	a,@dptr
   02CB F5 F0               567 	mov	b,a
   02CD 75 86 00            568 	mov	dps,#0
   02D0 12s00r00r00         569 	lcall	___fsdiv
   02D4 AA 82               570 	mov	r2,dpl
   02D6 AB 83               571 	mov	r3,dph
   02D8 AC 93               572 	mov	r4,dpx
   02DA AD F0               573 	mov	r5,b
                            574 ;	genAssign: resultIsFar = TRUE
   02DC E5*00               575 	mov	a,_bpx
   02DE C3                  576 	clr	c
   02DF 94 F7               577 	subb	a,#0xF7
   02E1 F5 82               578 	mov	dpl,a
   02E3 E5*01               579 	mov	a,_bpx+1
   02E5 94 FF               580 	subb	a,#0xFF
   02E7 F5 83               581 	mov	dph,a
   02E9 75 93 40            582 	mov	dpx,#0x40
   02EC EA                  583 	mov	a,r2
   02ED F0                  584 	movx	@dptr,a
   02EE A3                  585 	inc	dptr
   02EF EB                  586 	mov	a,r3
   02F0 F0                  587 	movx	@dptr,a
   02F1 A3                  588 	inc	dptr
   02F2 EC                  589 	mov	a,r4
   02F3 F0                  590 	movx	@dptr,a
   02F4 A3                  591 	inc	dptr
   02F5 ED                  592 	mov	a,r5
   02F6 F0                  593 	movx	@dptr,a
                            594 ;	logf.c:244: w=z*z;
   02F7 E5*00               595 	mov	a,_bpx
   02F9 C3                  596 	clr	c
   02FA 94 F7               597 	subb	a,#0xF7
   02FC F5 82               598 	mov	dpl,a
   02FE E5*01               599 	mov	a,_bpx+1
   0300 94 FF               600 	subb	a,#0xFF
   0302 F5 83               601 	mov	dph,a
   0304 75 93 40            602 	mov	dpx,#0x40
                            603 ;	genAssign: resultIsFar = TRUE
   0307 75 86 21            604 	mov	dps,#0x21
   030A 90s00r00r00         605 	mov	dptr,#___fsmul_PARM_2
   030E E0                  606 	movx	a,@dptr
   030F F0                  607 	movx	@dptr,a
   0310 A3                  608 	inc	dptr
   0311 A3                  609 	inc	dptr
   0312 E0                  610 	movx	a,@dptr
   0313 F0                  611 	movx	@dptr,a
   0314 A3                  612 	inc	dptr
   0315 A3                  613 	inc	dptr
   0316 E0                  614 	movx	a,@dptr
   0317 F0                  615 	movx	@dptr,a
   0318 A3                  616 	inc	dptr
   0319 A3                  617 	inc	dptr
   031A E0                  618 	movx	a,@dptr
   031B F0                  619 	movx	@dptr,a
   031C 75 86 00            620 	mov	dps,#0
   031F E5*00               621 	mov	a,_bpx
   0321 C3                  622 	clr	c
   0322 94 F7               623 	subb	a,#0xF7
   0324 F5 84               624 	mov	dpl1,a
   0326 E5*01               625 	mov	a,_bpx+1
   0328 94 FF               626 	subb	a,#0xFF
   032A F5 85               627 	mov	dph1,a
   032C 75 95 40            628 	mov	dpx1,#0x40
   032F 05 86               629 	inc	dps
   0331 E0                  630 	movx	a,@dptr
   0332 F5 82               631 	mov	dpl,a
   0334 A3                  632 	inc	dptr
   0335 E0                  633 	movx	a,@dptr
   0336 F5 83               634 	mov	dph,a
   0338 A3                  635 	inc	dptr
   0339 E0                  636 	movx	a,@dptr
   033A F5 93               637 	mov	dpx,a
   033C A3                  638 	inc	dptr
   033D E0                  639 	movx	a,@dptr
   033E F5 F0               640 	mov	b,a
   0340 75 86 00            641 	mov	dps,#0
   0343 12s00r00r00         642 	lcall	___fsmul
   0347 AE 82               643 	mov	r6,dpl
   0349 AF 83               644 	mov	r7,dph
   034B A8 93               645 	mov	r0,dpx
   034D A9 F0               646 	mov	r1,b
                            647 ;	genAssign: resultIsFar = FALSE
   034F 8E 02               648 	mov	ar2,r6
   0351 8F 03               649 	mov	ar3,r7
   0353 88 04               650 	mov	ar4,r0
   0355 89 05               651 	mov	ar5,r1
                            652 ;	logf.c:246: Rz=z+z*(w*A(w)/B(w));
                            653 ;	genAssign: resultIsFar = TRUE
   0357 90s00r00r00         654 	mov	dptr,#___fsmul_PARM_2
   035B EA                  655 	mov	a,r2
   035C F0                  656 	movx	@dptr,a
   035D A3                  657 	inc	dptr
   035E EB                  658 	mov	a,r3
   035F F0                  659 	movx	@dptr,a
   0360 A3                  660 	inc	dptr
   0361 EC                  661 	mov	a,r4
   0362 F0                  662 	movx	@dptr,a
   0363 A3                  663 	inc	dptr
   0364 ED                  664 	mov	a,r5
   0365 F0                  665 	movx	@dptr,a
   0366 C0 02               666 	push	ar2
   0368 C0 03               667 	push	ar3
   036A C0 04               668 	push	ar4
   036C C0 05               669 	push	ar5
   036E 90 0D 7E 3D         670 	mov	dptr,#0x0D7E3D
   0372 75 F0 BF            671 	mov	b,#0xBF
   0375 12s00r00r00         672 	lcall	___fsmul
   0379 AE 82               673 	mov	r6,dpl
   037B AF 83               674 	mov	r7,dph
   037D A8 93               675 	mov	r0,dpx
   037F A9 F0               676 	mov	r1,b
   0381 D0 05               677 	pop	ar5
   0383 D0 04               678 	pop	ar4
   0385 D0 03               679 	pop	ar3
   0387 D0 02               680 	pop	ar2
                            681 ;	genAssign: resultIsFar = TRUE
   0389 90s00r00r00         682 	mov	dptr,#___fsadd_PARM_2
   038D 74 3A               683 	mov	a,#0x3A
   038F F0                  684 	movx	@dptr,a
   0390 A3                  685 	inc	dptr
   0391 74 3F               686 	mov	a,#0x3F
   0393 F0                  687 	movx	@dptr,a
   0394 A3                  688 	inc	dptr
   0395 74 D4               689 	mov	a,#0xD4
   0397 F0                  690 	movx	@dptr,a
   0398 A3                  691 	inc	dptr
   0399 74 C0               692 	mov	a,#0xC0
   039B F0                  693 	movx	@dptr,a
   039C C0 06               694 	push	ar6
   039E C0 07               695 	push	ar7
   03A0 C0 00               696 	push	ar0
   03A2 C0 01               697 	push	ar1
   03A4 8A 82               698 	mov	dpl,r2
   03A6 8B 83               699 	mov	dph,r3
   03A8 8C 93               700 	mov	dpx,r4
   03AA 8D F0               701 	mov	b,r5
   03AC 12s00r00r00         702 	lcall	___fsadd
   03B0 AA 82               703 	mov	r2,dpl
   03B2 AB 83               704 	mov	r3,dph
   03B4 AC 93               705 	mov	r4,dpx
   03B6 AD F0               706 	mov	r5,b
   03B8 D0 01               707 	pop	ar1
   03BA D0 00               708 	pop	ar0
   03BC D0 07               709 	pop	ar7
   03BE D0 06               710 	pop	ar6
                            711 ;	genAssign: resultIsFar = TRUE
   03C0 90s00r00r00         712 	mov	dptr,#___fsdiv_PARM_2
   03C4 EA                  713 	mov	a,r2
   03C5 F0                  714 	movx	@dptr,a
   03C6 A3                  715 	inc	dptr
   03C7 EB                  716 	mov	a,r3
   03C8 F0                  717 	movx	@dptr,a
   03C9 A3                  718 	inc	dptr
   03CA EC                  719 	mov	a,r4
   03CB F0                  720 	movx	@dptr,a
   03CC A3                  721 	inc	dptr
   03CD ED                  722 	mov	a,r5
   03CE F0                  723 	movx	@dptr,a
   03CF 8E 82               724 	mov	dpl,r6
   03D1 8F 83               725 	mov	dph,r7
   03D3 88 93               726 	mov	dpx,r0
   03D5 89 F0               727 	mov	b,r1
   03D7 12s00r00r00         728 	lcall	___fsdiv
   03DB AA 82               729 	mov	r2,dpl
   03DD AB 83               730 	mov	r3,dph
   03DF AC 93               731 	mov	r4,dpx
   03E1 AD F0               732 	mov	r5,b
                            733 ;	genAssign: resultIsFar = TRUE
   03E3 90s00r00r00         734 	mov	dptr,#___fsmul_PARM_2
   03E7 EA                  735 	mov	a,r2
   03E8 F0                  736 	movx	@dptr,a
   03E9 A3                  737 	inc	dptr
   03EA EB                  738 	mov	a,r3
   03EB F0                  739 	movx	@dptr,a
   03EC A3                  740 	inc	dptr
   03ED EC                  741 	mov	a,r4
   03EE F0                  742 	movx	@dptr,a
   03EF A3                  743 	inc	dptr
   03F0 ED                  744 	mov	a,r5
   03F1 F0                  745 	movx	@dptr,a
   03F2 E5*00               746 	mov	a,_bpx
   03F4 C3                  747 	clr	c
   03F5 94 F7               748 	subb	a,#0xF7
   03F7 F5 84               749 	mov	dpl1,a
   03F9 E5*01               750 	mov	a,_bpx+1
   03FB 94 FF               751 	subb	a,#0xFF
   03FD F5 85               752 	mov	dph1,a
   03FF 75 95 40            753 	mov	dpx1,#0x40
   0402 05 86               754 	inc	dps
   0404 E0                  755 	movx	a,@dptr
   0405 F5 82               756 	mov	dpl,a
   0407 A3                  757 	inc	dptr
   0408 E0                  758 	movx	a,@dptr
   0409 F5 83               759 	mov	dph,a
   040B A3                  760 	inc	dptr
   040C E0                  761 	movx	a,@dptr
   040D F5 93               762 	mov	dpx,a
   040F A3                  763 	inc	dptr
   0410 E0                  764 	movx	a,@dptr
   0411 F5 F0               765 	mov	b,a
   0413 75 86 00            766 	mov	dps,#0
   0416 12s00r00r00         767 	lcall	___fsmul
   041A AA 82               768 	mov	r2,dpl
   041C AB 83               769 	mov	r3,dph
   041E AC 93               770 	mov	r4,dpx
   0420 AD F0               771 	mov	r5,b
                            772 ;	genAssign: resultIsFar = TRUE
   0422 90s00r00r00         773 	mov	dptr,#___fsadd_PARM_2
   0426 EA                  774 	mov	a,r2
   0427 F0                  775 	movx	@dptr,a
   0428 A3                  776 	inc	dptr
   0429 EB                  777 	mov	a,r3
   042A F0                  778 	movx	@dptr,a
   042B A3                  779 	inc	dptr
   042C EC                  780 	mov	a,r4
   042D F0                  781 	movx	@dptr,a
   042E A3                  782 	inc	dptr
   042F ED                  783 	mov	a,r5
   0430 F0                  784 	movx	@dptr,a
   0431 E5*00               785 	mov	a,_bpx
   0433 C3                  786 	clr	c
   0434 94 F7               787 	subb	a,#0xF7
   0436 F5 84               788 	mov	dpl1,a
   0438 E5*01               789 	mov	a,_bpx+1
   043A 94 FF               790 	subb	a,#0xFF
   043C F5 85               791 	mov	dph1,a
   043E 75 95 40            792 	mov	dpx1,#0x40
   0441 05 86               793 	inc	dps
   0443 E0                  794 	movx	a,@dptr
   0444 F5 82               795 	mov	dpl,a
   0446 A3                  796 	inc	dptr
   0447 E0                  797 	movx	a,@dptr
   0448 F5 83               798 	mov	dph,a
   044A A3                  799 	inc	dptr
   044B E0                  800 	movx	a,@dptr
   044C F5 93               801 	mov	dpx,a
   044E A3                  802 	inc	dptr
   044F E0                  803 	movx	a,@dptr
   0450 F5 F0               804 	mov	b,a
   0452 75 86 00            805 	mov	dps,#0
   0455 12s00r00r00         806 	lcall	___fsadd
   0459 AA 82               807 	mov	r2,dpl
   045B AB 83               808 	mov	r3,dph
   045D AC 93               809 	mov	r4,dpx
   045F AD F0               810 	mov	r5,b
                            811 ;	genAssign: resultIsFar = TRUE
   0461 75 93 40            812 	mov	dpx,#0x40
   0464 85*01 83            813 	mov	dph,_bpx+1
   0467 85*00 82            814 	mov	dpl,_bpx
   046A A3                  815 	inc	dptr
   046B EA                  816 	mov	a,r2
   046C F0                  817 	movx	@dptr,a
   046D A3                  818 	inc	dptr
   046E EB                  819 	mov	a,r3
   046F F0                  820 	movx	@dptr,a
   0470 A3                  821 	inc	dptr
   0471 EC                  822 	mov	a,r4
   0472 F0                  823 	movx	@dptr,a
   0473 A3                  824 	inc	dptr
   0474 ED                  825 	mov	a,r5
   0475 F0                  826 	movx	@dptr,a
                            827 ;	logf.c:247: xn=n;
   0476 E5*00               828 	mov	a,_bpx
   0478 C3                  829 	clr	c
   0479 94 EF               830 	subb	a,#0xEF
   047B F5 84               831 	mov	dpl1,a
   047D E5*01               832 	mov	a,_bpx+1
   047F 94 FF               833 	subb	a,#0xFF
   0481 F5 85               834 	mov	dph1,a
   0483 75 95 40            835 	mov	dpx1,#0x40
   0486 05 86               836 	inc	dps
   0488 E0                  837 	movx	a,@dptr
   0489 F5 82               838 	mov	dpl,a
   048B A3                  839 	inc	dptr
   048C E0                  840 	movx	a,@dptr
   048D F5 83               841 	mov	dph,a
   048F 75 86 00            842 	mov	dps,#0
   0492 12s00r00r00         843 	lcall	___sint2fs
   0496 AE 82               844 	mov	r6,dpl
   0498 AF 83               845 	mov	r7,dph
   049A A8 93               846 	mov	r0,dpx
   049C A9 F0               847 	mov	r1,b
                            848 ;	genAssign: resultIsFar = TRUE
                            849 ;	logf.c:248: return ((xn*C2+Rz)+xn*C1);
                            850 ;	genAssign: resultIsFar = TRUE
   049E 90s00r00r00         851 	mov	dptr,#___fsmul_PARM_2
   04A2 EE                  852 	mov	a,r6
   04A3 F0                  853 	movx	@dptr,a
   04A4 A3                  854 	inc	dptr
   04A5 EF                  855 	mov	a,r7
   04A6 F0                  856 	movx	@dptr,a
   04A7 A3                  857 	inc	dptr
   04A8 E8                  858 	mov	a,r0
   04A9 F0                  859 	movx	@dptr,a
   04AA A3                  860 	inc	dptr
   04AB E9                  861 	mov	a,r1
   04AC F0                  862 	movx	@dptr,a
   04AD C0 06               863 	push	ar6
   04AF C0 07               864 	push	ar7
   04B1 C0 00               865 	push	ar0
   04B3 C0 01               866 	push	ar1
   04B5 90 5E 80 83         867 	mov	dptr,#0x5E8083
   04B9 75 F0 B9            868 	mov	b,#0xB9
   04BC 12s00r00r00         869 	lcall	___fsmul
   04C0 AA 82               870 	mov	r2,dpl
   04C2 AB 83               871 	mov	r3,dph
   04C4 AC 93               872 	mov	r4,dpx
   04C6 AD F0               873 	mov	r5,b
   04C8 D0 01               874 	pop	ar1
   04CA D0 00               875 	pop	ar0
   04CC D0 07               876 	pop	ar7
   04CE D0 06               877 	pop	ar6
   04D0 75 93 40            878 	mov	dpx,#0x40
   04D3 85*01 83            879 	mov	dph,_bpx+1
   04D6 85*00 82            880 	mov	dpl,_bpx
   04D9 A3                  881 	inc	dptr
                            882 ;	genAssign: resultIsFar = TRUE
   04DA 75 86 21            883 	mov	dps,#0x21
   04DD 90s00r00r00         884 	mov	dptr,#___fsadd_PARM_2
   04E1 E0                  885 	movx	a,@dptr
   04E2 F0                  886 	movx	@dptr,a
   04E3 A3                  887 	inc	dptr
   04E4 A3                  888 	inc	dptr
   04E5 E0                  889 	movx	a,@dptr
   04E6 F0                  890 	movx	@dptr,a
   04E7 A3                  891 	inc	dptr
   04E8 A3                  892 	inc	dptr
   04E9 E0                  893 	movx	a,@dptr
   04EA F0                  894 	movx	@dptr,a
   04EB A3                  895 	inc	dptr
   04EC A3                  896 	inc	dptr
   04ED E0                  897 	movx	a,@dptr
   04EE F0                  898 	movx	@dptr,a
   04EF 75 86 00            899 	mov	dps,#0
   04F2 C0 06               900 	push	ar6
   04F4 C0 07               901 	push	ar7
   04F6 C0 00               902 	push	ar0
   04F8 C0 01               903 	push	ar1
   04FA 8A 82               904 	mov	dpl,r2
   04FC 8B 83               905 	mov	dph,r3
   04FE 8C 93               906 	mov	dpx,r4
   0500 8D F0               907 	mov	b,r5
   0502 12s00r00r00         908 	lcall	___fsadd
   0506 AA 82               909 	mov	r2,dpl
   0508 AB 83               910 	mov	r3,dph
   050A AC 93               911 	mov	r4,dpx
   050C AD F0               912 	mov	r5,b
   050E D0 01               913 	pop	ar1
   0510 D0 00               914 	pop	ar0
   0512 D0 07               915 	pop	ar7
   0514 D0 06               916 	pop	ar6
                            917 ;	genAssign: resultIsFar = TRUE
   0516 90s00r00r00         918 	mov	dptr,#___fsmul_PARM_2
   051A EE                  919 	mov	a,r6
   051B F0                  920 	movx	@dptr,a
   051C A3                  921 	inc	dptr
   051D EF                  922 	mov	a,r7
   051E F0                  923 	movx	@dptr,a
   051F A3                  924 	inc	dptr
   0520 E8                  925 	mov	a,r0
   0521 F0                  926 	movx	@dptr,a
   0522 A3                  927 	inc	dptr
   0523 E9                  928 	mov	a,r1
   0524 F0                  929 	movx	@dptr,a
   0525 C0 02               930 	push	ar2
   0527 C0 03               931 	push	ar3
   0529 C0 04               932 	push	ar4
   052B C0 05               933 	push	ar5
   052D 90 31 80 00         934 	mov	dptr,#0x318000
   0531 75 F0 3F            935 	mov	b,#0x3F
   0534 12s00r00r00         936 	lcall	___fsmul
   0538 AE 82               937 	mov	r6,dpl
   053A AF 83               938 	mov	r7,dph
   053C A8 93               939 	mov	r0,dpx
   053E A9 F0               940 	mov	r1,b
   0540 D0 05               941 	pop	ar5
   0542 D0 04               942 	pop	ar4
   0544 D0 03               943 	pop	ar3
   0546 D0 02               944 	pop	ar2
                            945 ;	genAssign: resultIsFar = TRUE
   0548 90s00r00r00         946 	mov	dptr,#___fsadd_PARM_2
   054C EE                  947 	mov	a,r6
   054D F0                  948 	movx	@dptr,a
   054E A3                  949 	inc	dptr
   054F EF                  950 	mov	a,r7
   0550 F0                  951 	movx	@dptr,a
   0551 A3                  952 	inc	dptr
   0552 E8                  953 	mov	a,r0
   0553 F0                  954 	movx	@dptr,a
   0554 A3                  955 	inc	dptr
   0555 E9                  956 	mov	a,r1
   0556 F0                  957 	movx	@dptr,a
   0557 8A 82               958 	mov	dpl,r2
   0559 8B 83               959 	mov	dph,r3
   055B 8C 93               960 	mov	dpx,r4
   055D 8D F0               961 	mov	b,r5
   055F 12s00r00r00         962 	lcall	___fsadd
   0563                     963 00106$:
   0563 85*00 81            964 	mov	sp,_bpx
   0566 85*01 9B            965 	mov	esp,_bpx+1
   0569 D0*01               966 	pop	_bpx+1
   056B D0*00               967 	pop	_bpx
   056D 22                  968 	ret
                            969 	.area CSEG    (CODE)
                            970 	.area CONST   (CODE)
                            971 	.area XINIT   (CODE)
                            972 	.area CABS    (ABS,CODE)
