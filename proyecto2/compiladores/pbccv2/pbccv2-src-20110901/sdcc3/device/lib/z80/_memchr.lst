                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:18:18 2015
                              5 ;--------------------------------------------------------
                              6 	.module _memchr
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _memchr
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ;  ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; overlayable items in  ram 
                             22 ;--------------------------------------------------------
                             23 	.area _OVERLAY
                             24 ;--------------------------------------------------------
                             25 ; external initialized ram data
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _HOME
                             39 ;--------------------------------------------------------
                             40 ; code
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 ;../_memchr.c:31: void *memchr(const void *s, int c, size_t n)
                             44 ;	---------------------------------
                             45 ; Function memchr
                             46 ; ---------------------------------
   0000                      47 _memchr_start::
   0000                      48 _memchr:
   0000 DD E5                49 	push	ix
   0002 DD 21 00 00          50 	ld	ix,#0
   0006 DD 39                51 	add	ix,sp
   0008 F5                   52 	push	af
                             53 ;../_memchr.c:33: unsigned char *p = (unsigned char *)s;
   0009 DD 6E 04             54 	ld	l,4 (ix)
   000C DD 66 05             55 	ld	h,5 (ix)
   000F 4D                   56 	ld	c,l
   0010 44                   57 	ld	b,h
                             58 ;../_memchr.c:34: unsigned char *end = p + n;
   0011 7D                   59 	ld	a,l
   0012 DD 86 08             60 	add	a,8 (ix)
   0015 5F                   61 	ld	e,a
   0016 7C                   62 	ld	a,h
   0017 DD 8E 09             63 	adc	a,9 (ix)
   001A DD 73 FE             64 	ld	-2 (ix), e
   001D DD 77 FF             65 	ld	-1 (ix), a
                             66 ;../_memchr.c:38: return(0);
   0020 EB                   67 	ex	de,hl
   0021                      68 00103$:
                             69 ;../_memchr.c:35: for(; p != end; p++)
   0021 7B                   70 	ld	a,e
   0022 DD 96 FE             71 	sub	a,-2 (ix)
   0025 20 06                72 	jr	NZ,00112$
   0027 7A                   73 	ld	a,d
   0028 DD 96 FF             74 	sub	a,-1 (ix)
   002B 28 17                75 	jr	Z,00106$
   002D                      76 00112$:
                             77 ;../_memchr.c:36: if(*p == c)
   002D 1A                   78 	ld	a,(de)
   002E 26 00                79 	ld	h, #0x00
   0030 DD 96 06             80 	sub	a,6 (ix)
   0033 20 0A                81 	jr	NZ,00105$
   0035 7C                   82 	ld	a,h
   0036 DD 96 07             83 	sub	a,7 (ix)
   0039 20 04                84 	jr	NZ,00105$
                             85 ;../_memchr.c:37: return((void *)p);
   003B 69                   86 	ld	l,c
   003C 60                   87 	ld	h,b
   003D 18 08                88 	jr	00107$
   003F                      89 00105$:
                             90 ;../_memchr.c:35: for(; p != end; p++)
   003F 13                   91 	inc	de
   0040 4B                   92 	ld	c,e
   0041 42                   93 	ld	b,d
   0042 18 DD                94 	jr	00103$
   0044                      95 00106$:
                             96 ;../_memchr.c:38: return(0);
   0044 21 00 00             97 	ld	hl,#0x0000
   0047                      98 00107$:
   0047 DD F9                99 	ld	sp,ix
   0049 DD E1               100 	pop	ix
   004B C9                  101 	ret
   004C                     102 _memchr_end::
                            103 	.area _CODE
                            104 	.area _CABS
