                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:18:19 2015
                              5 ;--------------------------------------------------------
                              6 	.module asinf
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _asinf
                             13 ;--------------------------------------------------------
                             14 ;  ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in  ram 
                             19 ;--------------------------------------------------------
                             20 	.area _OVERLAY
                             21 ;--------------------------------------------------------
                             22 ; external initialized ram data
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; global & static initialisations
                             26 ;--------------------------------------------------------
                             27 	.area _HOME
                             28 	.area _GSINIT
                             29 	.area _GSFINAL
                             30 	.area _GSINIT
                             31 ;--------------------------------------------------------
                             32 ; Home
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _HOME
                             36 ;--------------------------------------------------------
                             37 ; code
                             38 ;--------------------------------------------------------
                             39 	.area _CODE
                             40 ;../asinf.c:36: float asinf(const float x) _FLOAT_FUNC_REENTRANT
                             41 ;	---------------------------------
                             42 ; Function asinf
                             43 ; ---------------------------------
   0000                      44 _asinf_start::
   0000                      45 _asinf:
                             46 	
   0000 F5                   47 	push	af
   0001 F5                   48 	push	af
                             49 ;../asinf.c:38: if (x == 1.0) return  HALF_PI;
   0002 21 80 3F             50 	ld	hl,#0x3F80
   0005 E5                   51 	push	hl
   0006 21 00 00             52 	ld	hl,#0x0000
   0009 E5                   53 	push	hl
   000A F8 0C                54 	ldhl	sp,#12
   000C 7E                   55 	ld	a,(hl)
   000D 23                   56 	inc	hl
   000E 66                   57 	ld	h,(hl)
   000F 6F                   58 	ld	l,a
   0010 E5                   59 	push	hl
   0011 F8 0C                60 	ldhl	sp,#12
   0013 7E                   61 	ld	a,(hl)
   0014 23                   62 	inc	hl
   0015 66                   63 	ld	h,(hl)
   0016 6F                   64 	ld	l,a
   0017 E5                   65 	push	hl
   0018 CDr00s00             66 	call	___fseq
   001B E8 08                67 	lda	sp,8(sp)
   001D 4B                   68 	ld	c,e
   001E AF                   69 	xor	a,a
   001F B1                   70 	or	a,c
   0020 CAr2Cs00             71 	jp	Z,00108$
   0023 11 DB 0F             72 	ld	de,#0x0FDB
   0026 21 C9 3F             73 	ld	hl,#0x3FC9
   0029 C3r97s00             74 	jp	00110$
   002C                      75 00108$:
                             76 ;../asinf.c:39: else if (x ==-1.0) return -HALF_PI;
   002C 21 80 BF             77 	ld	hl,#0xBF80
   002F E5                   78 	push	hl
   0030 21 00 00             79 	ld	hl,#0x0000
   0033 E5                   80 	push	hl
   0034 F8 0C                81 	ldhl	sp,#12
   0036 7E                   82 	ld	a,(hl)
   0037 23                   83 	inc	hl
   0038 66                   84 	ld	h,(hl)
   0039 6F                   85 	ld	l,a
   003A E5                   86 	push	hl
   003B F8 0C                87 	ldhl	sp,#12
   003D 7E                   88 	ld	a,(hl)
   003E 23                   89 	inc	hl
   003F 66                   90 	ld	h,(hl)
   0040 6F                   91 	ld	l,a
   0041 E5                   92 	push	hl
   0042 CDr00s00             93 	call	___fseq
   0045 E8 08                94 	lda	sp,8(sp)
   0047 4B                   95 	ld	c,e
   0048 AF                   96 	xor	a,a
   0049 B1                   97 	or	a,c
   004A CAr56s00             98 	jp	Z,00105$
   004D 11 DB 0F             99 	ld	de,#0x0FDB
   0050 21 C9 BF            100 	ld	hl,#0xBFC9
   0053 C3r97s00            101 	jp	00110$
   0056                     102 00105$:
                            103 ;../asinf.c:40: else if (x == 0.0) return 0.0;
   0056 F8 06               104 	ldhl	sp,#6
   0058 7E                  105 	ld	a,(hl)
   0059 23                  106 	inc	hl
   005A B6                  107 	or	a,(hl)
   005B 23                  108 	inc	hl
   005C B6                  109 	or	a,(hl)
   005D 23                  110 	inc	hl
   005E B6                  111 	or	a,(hl)
   005F C2r6As00            112 	jp	NZ,00102$
   0062 11 00 00            113 	ld	de,#0x0000
   0065 21 00 00            114 	ld	hl,#0x0000
   0068 18 2D               115 	jr	00110$
   006A                     116 00102$:
                            117 ;../asinf.c:41: else               return asincosf(x, false);
   006A 3E 00               118 	ld	a,#0x00
   006C F5                  119 	push	af
   006D 33                  120 	inc	sp
   006E F8 09               121 	ldhl	sp,#9
   0070 7E                  122 	ld	a,(hl)
   0071 23                  123 	inc	hl
   0072 66                  124 	ld	h,(hl)
   0073 6F                  125 	ld	l,a
   0074 E5                  126 	push	hl
   0075 F8 09               127 	ldhl	sp,#9
   0077 7E                  128 	ld	a,(hl)
   0078 23                  129 	inc	hl
   0079 66                  130 	ld	h,(hl)
   007A 6F                  131 	ld	l,a
   007B E5                  132 	push	hl
   007C CDr00s00            133 	call	_asincosf
   007F E8 05               134 	lda	sp,5(sp)
   0081 E5                  135 	push	hl
   0082 F8 02               136 	ldhl	sp,#2
   0084 73                  137 	ld	(hl),e
   0085 23                  138 	inc	hl
   0086 72                  139 	ld	(hl),d
   0087 D1                  140 	pop	de
   0088 23                  141 	inc	hl
   0089 73                  142 	ld	(hl),e
   008A 23                  143 	inc	hl
   008B 72                  144 	ld	(hl),d
   008C F8 01               145 	ldhl	sp,#1
   008E 2B                  146 	dec	hl
   008F 5E                  147 	ld	e,(hl)
   0090 23                  148 	inc	hl
   0091 56                  149 	ld	d,(hl)
   0092 23                  150 	inc	hl
   0093 7E                  151 	ld	a,(hl)
   0094 23                  152 	inc	hl
   0095 66                  153 	ld	h,(hl)
   0096 6F                  154 	ld	l,a
   0097                     155 00110$:
   0097 E8 04               156 	lda	sp,4(sp)
   0099 C9                  157 	ret
   009A                     158 _asinf_end::
                            159 	.area _CODE
                            160 	.area _CABS
