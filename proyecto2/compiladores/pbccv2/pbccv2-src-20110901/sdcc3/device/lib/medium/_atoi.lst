                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:25 2015
                              5 ;--------------------------------------------------------
                              6 	.module _atoi
                              7 	.optsdcc -mmcs51 --model-medium
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _atoi
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
   0000                      32 _atoi_rv_1_1:
   0000                      33 	.ds 2
   0002                      34 _atoi_sloc0_1_0:
   0002                      35 	.ds 1
   0003                      36 _atoi_sloc1_1_0:
   0003                      37 	.ds 2
                             38 ;--------------------------------------------------------
                             39 ; overlayable items in internal ram 
                             40 ;--------------------------------------------------------
                             41 	.area OSEG    (OVR,DATA)
                             42 ;--------------------------------------------------------
                             43 ; indirectly addressable internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area ISEG    (DATA)
                             46 ;--------------------------------------------------------
                             47 ; absolute internal ram data
                             48 ;--------------------------------------------------------
                             49 	.area IABS    (ABS,DATA)
                             50 	.area IABS    (ABS,DATA)
                             51 ;--------------------------------------------------------
                             52 ; bit data
                             53 ;--------------------------------------------------------
                             54 	.area BSEG    (BIT)
                             55 ;--------------------------------------------------------
                             56 ; paged external ram data
                             57 ;--------------------------------------------------------
                             58 	.area PSEG    (PAG,XDATA)
                             59 ;--------------------------------------------------------
                             60 ; external ram data
                             61 ;--------------------------------------------------------
                             62 	.area XSEG    (XDATA)
                             63 ;--------------------------------------------------------
                             64 ; absolute external ram data
                             65 ;--------------------------------------------------------
                             66 	.area XABS    (ABS,XDATA)
                             67 ;--------------------------------------------------------
                             68 ; external initialized ram data
                             69 ;--------------------------------------------------------
                             70 	.area XISEG   (XDATA)
                             71 	.area HOME    (CODE)
                             72 	.area GSINIT0 (CODE)
                             73 	.area GSINIT1 (CODE)
                             74 	.area GSINIT2 (CODE)
                             75 	.area GSINIT3 (CODE)
                             76 	.area GSINIT4 (CODE)
                             77 	.area GSINIT5 (CODE)
                             78 	.area GSINIT  (CODE)
                             79 	.area GSFINAL (CODE)
                             80 	.area CSEG    (CODE)
                             81 ;--------------------------------------------------------
                             82 ; global & static initialisations
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area GSINIT  (CODE)
                             86 	.area GSFINAL (CODE)
                             87 	.area GSINIT  (CODE)
                             88 ;--------------------------------------------------------
                             89 ; Home
                             90 ;--------------------------------------------------------
                             91 	.area HOME    (CODE)
                             92 	.area HOME    (CODE)
                             93 ;--------------------------------------------------------
                             94 ; code
                             95 ;--------------------------------------------------------
                             96 	.area CSEG    (CODE)
                             97 ;------------------------------------------------------------
                             98 ;Allocation info for local variables in function 'atoi'
                             99 ;------------------------------------------------------------
                            100 ;rv                        Allocated with name '_atoi_rv_1_1'
                            101 ;sign                      Allocated to registers r7 
                            102 ;sloc0                     Allocated with name '_atoi_sloc0_1_0'
                            103 ;sloc1                     Allocated with name '_atoi_sloc1_1_0'
                            104 ;------------------------------------------------------------
                            105 ;	_atoi.c:29: int atoi(const char * s)
                            106 ;	-----------------------------------------
                            107 ;	 function atoi
                            108 ;	-----------------------------------------
   0000                     109 _atoi:
                    0002    110 	ar2 = 0x02
                    0003    111 	ar3 = 0x03
                    0004    112 	ar4 = 0x04
                    0005    113 	ar5 = 0x05
                    0006    114 	ar6 = 0x06
                    0007    115 	ar7 = 0x07
                    0000    116 	ar0 = 0x00
                    0001    117 	ar1 = 0x01
   0000 AA 82               118 	mov	r2,dpl
   0002 AB 83               119 	mov	r3,dph
   0004 AC F0               120 	mov	r4,b
                            121 ;	_atoi.c:31: register int rv=0; 
   0006 E4                  122 	clr	a
   0007 F5*00               123 	mov	_atoi_rv_1_1,a
   0009 F5*01               124 	mov	(_atoi_rv_1_1 + 1),a
                            125 ;	_atoi.c:35: while (*s) {
   000B 8A 07               126 	mov	ar7,r2
   000D 8B 05               127 	mov	ar5,r3
   000F 8C 06               128 	mov	ar6,r4
   0011                     129 00107$:
   0011 8F 82               130 	mov	dpl,r7
   0013 8D 83               131 	mov	dph,r5
   0015 8E F0               132 	mov	b,r6
   0017 12s00r00            133 	lcall	__gptrget
   001A F5*02               134 	mov	_atoi_sloc0_1_0,a
   001C 60 35               135 	jz	00133$
                            136 ;	_atoi.c:36: if (*s <= '9' && *s >= '0')
   001E C3                  137 	clr	c
   001F 74 B9               138 	mov	a,#(0x39 ^ 0x80)
   0021 85*02 F0            139 	mov	b,_atoi_sloc0_1_0
   0024 63 F0 80            140 	xrl	b,#0x80
   0027 95 F0               141 	subb	a,b
   0029 40 08               142 	jc	00102$
   002B E5*02               143 	mov	a,_atoi_sloc0_1_0
   002D 64 80               144 	xrl	a,#0x80
   002F 94 B0               145 	subb	a,#0xb0
   0031 50 20               146 	jnc	00133$
                            147 ;	_atoi.c:37: break;
   0033                     148 00102$:
                            149 ;	_atoi.c:38: if (*s == '-' || *s == '+') 
   0033 8F 82               150 	mov	dpl,r7
   0035 8D 83               151 	mov	dph,r5
   0037 8E F0               152 	mov	b,r6
   0039 12s00r00            153 	lcall	__gptrget
   003C F5*02               154 	mov	_atoi_sloc0_1_0,a
   003E 74 2D               155 	mov	a,#0x2D
   0040 B5*02 02            156 	cjne	a,_atoi_sloc0_1_0,00138$
   0043 80 0E               157 	sjmp	00133$
   0045                     158 00138$:
   0045 74 2B               159 	mov	a,#0x2B
   0047 B5*02 02            160 	cjne	a,_atoi_sloc0_1_0,00139$
   004A 80 07               161 	sjmp	00133$
   004C                     162 00139$:
                            163 ;	_atoi.c:40: s++;
   004C 0F                  164 	inc	r7
   004D BF 00 C1            165 	cjne	r7,#0x00,00107$
   0050 0D                  166 	inc	r5
   0051 80 BE               167 	sjmp	00107$
   0053                     168 00133$:
   0053 8F 02               169 	mov	ar2,r7
   0055 8D 03               170 	mov	ar3,r5
   0057 8E 04               171 	mov	ar4,r6
                            172 ;	_atoi.c:43: sign = (*s == '-');
   0059 8F 82               173 	mov	dpl,r7
   005B 8D 83               174 	mov	dph,r5
   005D 8E F0               175 	mov	b,r6
   005F 12s00r00            176 	lcall	__gptrget
   0062 FD                  177 	mov	r5,a
   0063 E4                  178 	clr	a
   0064 BD 2D 01            179 	cjne	r5,#0x2D,00141$
   0067 04                  180 	inc	a
   0068                     181 00141$:
                            182 ;	_atoi.c:44: if (*s == '-' || *s == '+') s++;
   0068 FE                  183 	mov	r6,a
   0069 FF                  184 	mov	r7,a
   006A 70 03               185 	jnz	00110$
   006C BD 2B 05            186 	cjne	r5,#0x2B,00131$
   006F                     187 00110$:
   006F 0A                  188 	inc	r2
   0070 BA 00 01            189 	cjne	r2,#0x00,00146$
   0073 0B                  190 	inc	r3
   0074                     191 00146$:
                            192 ;	_atoi.c:46: while (*s && *s >= '0' && *s <= '9') {
   0074                     193 00131$:
   0074                     194 00115$:
   0074 8A 82               195 	mov	dpl,r2
   0076 8B 83               196 	mov	dph,r3
   0078 8C F0               197 	mov	b,r4
   007A 12s00r00            198 	lcall	__gptrget
   007D FD                  199 	mov	r5,a
   007E 60 5E               200 	jz	00117$
   0080 C3                  201 	clr	c
   0081 ED                  202 	mov	a,r5
   0082 64 80               203 	xrl	a,#0x80
   0084 94 B0               204 	subb	a,#0xb0
   0086 40 56               205 	jc	00117$
   0088 74 B9               206 	mov	a,#(0x39 ^ 0x80)
   008A 8D F0               207 	mov	b,r5
   008C 63 F0 80            208 	xrl	b,#0x80
   008F 95 F0               209 	subb	a,b
   0091 40 4B               210 	jc	00117$
                            211 ;	_atoi.c:47: rv = (rv * 10) + (*s - '0');
   0093 C0 07               212 	push	ar7
   0095 78r00               213 	mov	r0,#__mulint_PARM_2
   0097 E5*00               214 	mov	a,_atoi_rv_1_1
   0099 F2                  215 	movx	@r0,a
   009A 08                  216 	inc	r0
   009B E5*01               217 	mov	a,(_atoi_rv_1_1 + 1)
   009D F2                  218 	movx	@r0,a
   009E 90 00 0A            219 	mov	dptr,#0x000A
   00A1 C0 02               220 	push	ar2
   00A3 C0 03               221 	push	ar3
   00A5 C0 04               222 	push	ar4
   00A7 C0 05               223 	push	ar5
   00A9 C0 07               224 	push	ar7
   00AB 12s00r00            225 	lcall	__mulint
   00AE 85 82*03            226 	mov	_atoi_sloc1_1_0,dpl
   00B1 85 83*04            227 	mov	(_atoi_sloc1_1_0 + 1),dph
   00B4 D0 07               228 	pop	ar7
   00B6 D0 05               229 	pop	ar5
   00B8 D0 04               230 	pop	ar4
   00BA D0 03               231 	pop	ar3
   00BC D0 02               232 	pop	ar2
   00BE ED                  233 	mov	a,r5
   00BF 33                  234 	rlc	a
   00C0 95 E0               235 	subb	a,acc
   00C2 FE                  236 	mov	r6,a
   00C3 ED                  237 	mov	a,r5
   00C4 24 D0               238 	add	a,#0xd0
   00C6 FD                  239 	mov	r5,a
   00C7 EE                  240 	mov	a,r6
   00C8 34 FF               241 	addc	a,#0xff
   00CA FE                  242 	mov	r6,a
   00CB ED                  243 	mov	a,r5
   00CC 25*03               244 	add	a,_atoi_sloc1_1_0
   00CE F5*00               245 	mov	_atoi_rv_1_1,a
   00D0 EE                  246 	mov	a,r6
   00D1 35*04               247 	addc	a,(_atoi_sloc1_1_0 + 1)
   00D3 F5*01               248 	mov	(_atoi_rv_1_1 + 1),a
                            249 ;	_atoi.c:48: s++;
   00D5 0A                  250 	inc	r2
   00D6 BA 00 01            251 	cjne	r2,#0x00,00150$
   00D9 0B                  252 	inc	r3
   00DA                     253 00150$:
   00DA D0 07               254 	pop	ar7
   00DC 80 96               255 	sjmp	00115$
   00DE                     256 00117$:
                            257 ;	_atoi.c:51: return (sign ? -rv : rv);
   00DE EF                  258 	mov	a,r7
   00DF 60 0B               259 	jz	00120$
   00E1 C3                  260 	clr	c
   00E2 E4                  261 	clr	a
   00E3 95*00               262 	subb	a,_atoi_rv_1_1
   00E5 FA                  263 	mov	r2,a
   00E6 E4                  264 	clr	a
   00E7 95*01               265 	subb	a,(_atoi_rv_1_1 + 1)
   00E9 FB                  266 	mov	r3,a
   00EA 80 04               267 	sjmp	00121$
   00EC                     268 00120$:
   00EC AA*00               269 	mov	r2,_atoi_rv_1_1
   00EE AB*01               270 	mov	r3,(_atoi_rv_1_1 + 1)
   00F0                     271 00121$:
   00F0 8A 82               272 	mov	dpl,r2
   00F2 8B 83               273 	mov	dph,r3
   00F4 22                  274 	ret
                            275 	.area CSEG    (CODE)
                            276 	.area CONST   (CODE)
                            277 	.area XINIT   (CODE)
                            278 	.area CABS    (ABS,CODE)
