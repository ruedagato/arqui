                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:23 2015
                              5 ;--------------------------------------------------------
                              6 	.module _memset
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 ;--------------------------------------------------------
                             13 ; special function registers
                             14 ;--------------------------------------------------------
                             15 	.area RSEG    (ABS,DATA)
   0000                      16 	.org 0x0000
                             17 ;--------------------------------------------------------
                             18 ; special function bits
                             19 ;--------------------------------------------------------
                             20 	.area RSEG    (ABS,DATA)
   0000                      21 	.org 0x0000
                             22 ;--------------------------------------------------------
                             23 ; overlayable register banks
                             24 ;--------------------------------------------------------
                             25 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      26 	.ds 8
                             27 ;--------------------------------------------------------
                             28 ; internal ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (DATA)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in internal ram 
                             33 ;--------------------------------------------------------
                             34 	.area OSEG    (OVR,DATA)
                             35 ;--------------------------------------------------------
                             36 ; indirectly addressable internal ram data
                             37 ;--------------------------------------------------------
                             38 	.area ISEG    (DATA)
                             39 ;--------------------------------------------------------
                             40 ; absolute internal ram data
                             41 ;--------------------------------------------------------
                             42 	.area IABS    (ABS,DATA)
                             43 	.area IABS    (ABS,DATA)
                             44 ;--------------------------------------------------------
                             45 ; bit data
                             46 ;--------------------------------------------------------
                             47 	.area BSEG    (BIT)
                             48 ;--------------------------------------------------------
                             49 ; paged external ram data
                             50 ;--------------------------------------------------------
                             51 	.area PSEG    (PAG,XDATA)
                             52 ;--------------------------------------------------------
                             53 ; external ram data
                             54 ;--------------------------------------------------------
                             55 	.area XSEG    (XDATA)
                             56 ;--------------------------------------------------------
                             57 ; absolute external ram data
                             58 ;--------------------------------------------------------
                             59 	.area XABS    (ABS,XDATA)
                             60 ;--------------------------------------------------------
                             61 ; external initialized ram data
                             62 ;--------------------------------------------------------
                             63 	.area XISEG   (XDATA)
                             64 	.area HOME    (CODE)
                             65 	.area GSINIT0 (CODE)
                             66 	.area GSINIT1 (CODE)
                             67 	.area GSINIT2 (CODE)
                             68 	.area GSINIT3 (CODE)
                             69 	.area GSINIT4 (CODE)
                             70 	.area GSINIT5 (CODE)
                             71 	.area GSINIT  (CODE)
                             72 	.area GSFINAL (CODE)
                             73 	.area CSEG    (CODE)
                             74 ;--------------------------------------------------------
                             75 ; global & static initialisations
                             76 ;--------------------------------------------------------
                             77 	.area HOME    (CODE)
                             78 	.area GSINIT  (CODE)
                             79 	.area GSFINAL (CODE)
                             80 	.area GSINIT  (CODE)
                             81 ;--------------------------------------------------------
                             82 ; Home
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area HOME    (CODE)
                             86 ;--------------------------------------------------------
                             87 ; code
                             88 ;--------------------------------------------------------
                             89 	.area CSEG    (CODE)
                             90 ;------------------------------------------------------------
                             91 ;Allocation info for local variables in function 'dummy'
                             92 ;------------------------------------------------------------
                             93 ;------------------------------------------------------------
                             94 ;	_memset.c:54: static void dummy(void) __naked
                             95 ;	-----------------------------------------
                             96 ;	 function dummy
                             97 ;	-----------------------------------------
   0000                      98 _dummy:
                             99 ;	naked function: no prologue.
                            100 ;	_memset.c:121: mov     r5,dph
                            101 	
                            102 ;	# 65 "_memset.c"
                            103 	        .area OSEG (OVR,DATA)
                            104 	
   0000                     105 	        _memset_PARM_2::
   0000                     106 	              .ds 1
   0001                     107 	        _memset_PARM_3::
   0001                     108 	              .ds 2
                            109 	
                            110 	        .area CSEG (CODE)
                            111 	
   0000                     112 	        _memset::
                            113 	
                            114         ; Assign buf (b holds memspace, no need to touch)
   0000 AC 82               115 	                mov r4,dpl
   0002 AD 83               116 	                mov r5,dph
                            117                 ;
                            118         ; Assign count
   0004 AE*01               119 	                mov r6,_memset_PARM_3
   0006 AF*02               120 	                mov r7,(_memset_PARM_3 + 1)
                            121                 ;
                            122         ; if (!count) return buf;
                            123         ; check for count != 0 intermangled with gymnastic
                            124         ; preparing djnz instructions
   0008 BE 00 04            125 	                cjne r6,#0x00,COUNT_LSB_NOT_ZERO
   000B EF                  126 	                mov a,r7
   000C 60 0C               127 	                jz MEMSET_END
   000E 1F                  128 	                dec r7
   000F                     129 	        COUNT_LSB_NOT_ZERO:
   000F 0F                  130 	                inc r7
                            131                 ;
                            132                 ; This was 8 byte overhead for preparing
                            133                 ; the count argument for an integer loop with two
                            134                 ; djnz instructions - it might make sense to
                            135                 ; let 301 automatically generate this when
                            136                 ; it encounters a loop like:
                            137                 ; for(i=0;i<j;i++){...}
                            138                 ; (at least for option --opt-code-speed)
                            139                 ;
                            140 	
                            141         ; Assign ch
   0010 E5*00               142 	                mov a,_memset_PARM_2
                            143 ;	# 154 "_memset.c"
                            144         ; _memset.c do {
                            145 	
   0012                     146 	        MEMSET_LOOP:
                            147         ; _memset.c *p = ch;
   0012 12s00r00            148 	                lcall __gptrput
                            149 	
                            150         ; _memset.c p++;
   0015 A3                  151 	                inc dptr
                            152 	
                            153         ; _memset.c } while(--count) ;
   0016 DE FA               154 	                djnz r6,MEMSET_LOOP
   0018 DF F8               155 	                djnz r7,MEMSET_LOOP
                            156                 ;
                            157 	
   001A                     158 	        MEMSET_END:
                            159         ; _memset.c return buf ;
                            160                 ; b was unchanged
   001A 8C 82               161 	                mov dpl,r4
   001C 8D 83               162 	                mov dph,r5
                            163                 ;
   001E 22                  164 	                ret
                            165 	
                            166 	    
                            167 ;	naked function: no epilogue.
                            168 	.area CSEG    (CODE)
                            169 	.area CONST   (CODE)
                            170 	.area XINIT   (CODE)
                            171 	.area CABS    (ABS,CODE)
