                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:18:17 2015
                              5 ;--------------------------------------------------------
                              6 	.module _ispunct
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _ispunct
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ;  ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; overlayable items in  ram 
                             22 ;--------------------------------------------------------
                             23 	.area _OVERLAY
                             24 ;--------------------------------------------------------
                             25 ; external initialized ram data
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _HOME
                             39 ;--------------------------------------------------------
                             40 ; code
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 ;../_ispunct.c:31: char ispunct (unsigned char c)
                             44 ;	---------------------------------
                             45 ; Function ispunct
                             46 ; ---------------------------------
   0000                      47 _ispunct_start::
   0000                      48 _ispunct:
   0000 DD E5                49 	push	ix
   0002 DD 21 00 00          50 	ld	ix,#0
   0006 DD 39                51 	add	ix,sp
                             52 ;../_ispunct.c:33: if ( isprint (c) &&
   0008 DD 7E 04             53 	ld	a,4 (ix)
   000B F5                   54 	push	af
   000C 33                   55 	inc	sp
   000D CDr00s00             56 	call	_isprint
   0010 33                   57 	inc	sp
   0011 AF                   58 	xor	a,a
   0012 B5                   59 	or	a,l
   0013 28 38                60 	jr	Z,00102$
                             61 ;../_ispunct.c:34: !islower(c) &&
   0015 DD 7E 04             62 	ld	a,4 (ix)
   0018 F5                   63 	push	af
   0019 33                   64 	inc	sp
   001A CDr00s00             65 	call	_islower
   001D 33                   66 	inc	sp
   001E AF                   67 	xor	a,a
   001F B5                   68 	or	a,l
   0020 20 2B                69 	jr	NZ,00102$
                             70 ;../_ispunct.c:35: !isupper(c) &&
   0022 DD 7E 04             71 	ld	a,4 (ix)
   0025 F5                   72 	push	af
   0026 33                   73 	inc	sp
   0027 CDr00s00             74 	call	_isupper
   002A 33                   75 	inc	sp
   002B AF                   76 	xor	a,a
   002C B5                   77 	or	a,l
   002D 20 1E                78 	jr	NZ,00102$
                             79 ;../_ispunct.c:36: !isspace(c) &&
   002F DD 7E 04             80 	ld	a,4 (ix)
   0032 F5                   81 	push	af
   0033 33                   82 	inc	sp
   0034 CDr00s00             83 	call	_isspace
   0037 33                   84 	inc	sp
   0038 AF                   85 	xor	a,a
   0039 B5                   86 	or	a,l
   003A 20 11                87 	jr	NZ,00102$
                             88 ;../_ispunct.c:37: !isdigit(c) )
   003C DD 7E 04             89 	ld	a,4 (ix)
   003F F5                   90 	push	af
   0040 33                   91 	inc	sp
   0041 CDr00s00             92 	call	_isdigit
   0044 33                   93 	inc	sp
   0045 AF                   94 	xor	a,a
   0046 B5                   95 	or	a,l
   0047 20 04                96 	jr	NZ,00102$
                             97 ;../_ispunct.c:38: return 1;
   0049 2E 01                98 	ld	l,#0x01
   004B 18 02                99 	jr	00107$
   004D                     100 00102$:
                            101 ;../_ispunct.c:39: return 0;
   004D 2E 00               102 	ld	l,#0x00
   004F                     103 00107$:
   004F DD E1               104 	pop	ix
   0051 C9                  105 	ret
   0052                     106 _ispunct_end::
                            107 	.area _CODE
                            108 	.area _CABS
