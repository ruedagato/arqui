                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:17 2015
                              5 ;--------------------------------------------------------
                              6 	.module puts
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _puts
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 ;--------------------------------------------------------
                             43 ; internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area DSEG    (DATA)
                             46 ;--------------------------------------------------------
                             47 ; overlayable items in internal ram 
                             48 ;--------------------------------------------------------
                             49 	.area OSEG    (OVR,DATA)
                             50 ;--------------------------------------------------------
                             51 ; indirectly addressable internal ram data
                             52 ;--------------------------------------------------------
                             53 	.area ISEG    (DATA)
                             54 ;--------------------------------------------------------
                             55 ; absolute internal ram data
                             56 ;--------------------------------------------------------
                             57 	.area IABS    (ABS,DATA)
                             58 	.area IABS    (ABS,DATA)
                             59 ;--------------------------------------------------------
                             60 ; bit data
                             61 ;--------------------------------------------------------
                             62 	.area BSEG    (BIT)
                             63 ;--------------------------------------------------------
                             64 ; paged external ram data
                             65 ;--------------------------------------------------------
                             66 	.area PSEG    (PAG,XDATA)
                             67 ;--------------------------------------------------------
                             68 ; external ram data
                             69 ;--------------------------------------------------------
                             70 	.area XSEG    (XDATA)
                             71 ;--------------------------------------------------------
                             72 ; absolute external ram data
                             73 ;--------------------------------------------------------
                             74 	.area XABS    (ABS,XDATA)
                             75 ;--------------------------------------------------------
                             76 ; external initialized ram data
                             77 ;--------------------------------------------------------
                             78 	.area XISEG   (XDATA)
                             79 ;--------------------------------------------------------
                             80 ; global & static initialisations
                             81 ;--------------------------------------------------------
                             82 	.area HOME    (CODE)
                             83 	.area GSINIT  (CODE)
                             84 	.area GSFINAL (CODE)
                             85 	.area GSINIT  (CODE)
                             86 ;--------------------------------------------------------
                             87 ; Home
                             88 ;--------------------------------------------------------
                             89 	.area HOME    (CODE)
                             90 	.area HOME    (CODE)
                             91 ;--------------------------------------------------------
                             92 ; code
                             93 ;--------------------------------------------------------
                             94 	.area CSEG    (CODE)
                             95 ;------------------------------------------------------------
                             96 ;Allocation info for local variables in function 'puts'
                             97 ;------------------------------------------------------------
                             98 ;s                         Allocated to registers r2 r3 r4 r5 
                             99 ;i                         Allocated to registers 
                            100 ;------------------------------------------------------------
                            101 ;	puts.c:31: int puts (char *s)
                            102 ;	-----------------------------------------
                            103 ;	 function puts
                            104 ;	-----------------------------------------
   0000                     105 _puts:
                    0002    106 	ar2 = 0x02
                    0003    107 	ar3 = 0x03
                    0004    108 	ar4 = 0x04
                    0005    109 	ar5 = 0x05
                    0006    110 	ar6 = 0x06
                    0007    111 	ar7 = 0x07
                    0000    112 	ar0 = 0x00
                    0001    113 	ar1 = 0x01
   0000 AA 82               114 	mov	r2,dpl
   0002 AB 83               115 	mov	r3,dph
   0004 AC 93               116 	mov	r4,dpx
   0006 AD F0               117 	mov	r5,b
                            118 ;	puts.c:34: while (*s){
                            119 ;	genAssign: resultIsFar = FALSE
                            120 ;	genAssign: resultIsFar = FALSE
   0008 7E 00               121 	mov	r6,#0x00
   000A 7F 00               122 	mov	r7,#0x00
   000C                     123 00101$:
   000C 8A 82               124 	mov	dpl,r2
   000E 8B 83               125 	mov	dph,r3
   0010 8C 93               126 	mov	dpx,r4
   0012 8D F0               127 	mov	b,r5
   0014 12s00r00r00         128 	lcall	__gptrget
   0018 F8                  129 	mov  r0,a
   0019 60 2E               130 	jz  00103$
   001B                     131 00109$:
                            132 ;	puts.c:35: putchar(*s++);
   001B 0A                  133 	inc	r2
   001C BA 00 05            134 	cjne	r2,#0,00110$
   001F 0B                  135 	inc	r3
   0020 BB 00 01            136 	cjne	r3,#0,00110$
   0023 0C                  137 	inc	r4
   0024                     138 00110$:
   0024 C0 02               139 	push	ar2
   0026 C0 03               140 	push	ar3
   0028 C0 04               141 	push	ar4
   002A C0 05               142 	push	ar5
   002C C0 06               143 	push	ar6
   002E C0 07               144 	push	ar7
   0030 88 82               145 	mov	dpl,r0
   0032 12s00r00r00         146 	lcall	_putchar
   0036 D0 07               147 	pop	ar7
   0038 D0 06               148 	pop	ar6
   003A D0 05               149 	pop	ar5
   003C D0 04               150 	pop	ar4
   003E D0 03               151 	pop	ar3
   0040 D0 02               152 	pop	ar2
                            153 ;	puts.c:36: i++;
   0042 0E                  154 	inc	r6
   0043 BE 00 01            155 	cjne	r6,#0,00111$
   0046 0F                  156 	inc	r7
   0047                     157 00111$:
   0047 80 C3               158 	sjmp 00101$
   0049                     159 00103$:
                            160 ;	puts.c:38: putchar('\n');
   0049 C0 06               161 	push	ar6
   004B C0 07               162 	push	ar7
   004D 75 82 0A            163 	mov	dpl,#0x0A
   0050 12s00r00r00         164 	lcall	_putchar
   0054 D0 07               165 	pop	ar7
   0056 D0 06               166 	pop	ar6
                            167 ;	puts.c:39: return i+1;
   0058 8F 83               168 	mov	dph,r7
   005A 8E 82               169 	mov	dpl,r6
   005C A3                  170 	inc	dptr
   005D                     171 00104$:
   005D 22                  172 	ret
                            173 	.area CSEG    (CODE)
                            174 	.area CONST   (CODE)
                            175 	.area XINIT   (CODE)
                            176 	.area CABS    (ABS,CODE)
