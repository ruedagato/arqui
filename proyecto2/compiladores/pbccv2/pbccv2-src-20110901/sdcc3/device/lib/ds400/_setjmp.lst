                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:20 2015
                              5 ;--------------------------------------------------------
                              6 	.module _setjmp
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _longjmp_PARM_2
                             31 	.globl _setjmp
                             32 	.globl _longjmp
                             33 ;--------------------------------------------------------
                             34 ; special function registers
                             35 ;--------------------------------------------------------
                    0080     36 _P0	=	0x0080
                    0081     37 _SP	=	0x0081
                    0082     38 _DPL	=	0x0082
                    0083     39 _DPH	=	0x0083
                    0087     40 _PCON	=	0x0087
                    0088     41 _TCON	=	0x0088
                    0089     42 _TMOD	=	0x0089
                    008A     43 _TL0	=	0x008a
                    008B     44 _TL1	=	0x008b
                    008C     45 _TH0	=	0x008c
                    008D     46 _TH1	=	0x008d
                    0090     47 _P1	=	0x0090
                    0098     48 _SCON	=	0x0098
                    0099     49 _SBUF	=	0x0099
                    00A0     50 _P2	=	0x00a0
                    00A8     51 _IE	=	0x00a8
                    00B0     52 _P3	=	0x00b0
                    00B8     53 _IP	=	0x00b8
                    00D0     54 _PSW	=	0x00d0
                    00E0     55 _ACC	=	0x00e0
                    00F0     56 _B	=	0x00f0
                             57 ;--------------------------------------------------------
                             58 ; special function bits
                             59 ;--------------------------------------------------------
                    0080     60 _P0_0	=	0x0080
                    0081     61 _P0_1	=	0x0081
                    0082     62 _P0_2	=	0x0082
                    0083     63 _P0_3	=	0x0083
                    0084     64 _P0_4	=	0x0084
                    0085     65 _P0_5	=	0x0085
                    0086     66 _P0_6	=	0x0086
                    0087     67 _P0_7	=	0x0087
                    0088     68 _IT0	=	0x0088
                    0089     69 _IE0	=	0x0089
                    008A     70 _IT1	=	0x008a
                    008B     71 _IE1	=	0x008b
                    008C     72 _TR0	=	0x008c
                    008D     73 _TF0	=	0x008d
                    008E     74 _TR1	=	0x008e
                    008F     75 _TF1	=	0x008f
                    0090     76 _P1_0	=	0x0090
                    0091     77 _P1_1	=	0x0091
                    0092     78 _P1_2	=	0x0092
                    0093     79 _P1_3	=	0x0093
                    0094     80 _P1_4	=	0x0094
                    0095     81 _P1_5	=	0x0095
                    0096     82 _P1_6	=	0x0096
                    0097     83 _P1_7	=	0x0097
                    0098     84 _RI	=	0x0098
                    0099     85 _TI	=	0x0099
                    009A     86 _RB8	=	0x009a
                    009B     87 _TB8	=	0x009b
                    009C     88 _REN	=	0x009c
                    009D     89 _SM2	=	0x009d
                    009E     90 _SM1	=	0x009e
                    009F     91 _SM0	=	0x009f
                    00A0     92 _P2_0	=	0x00a0
                    00A1     93 _P2_1	=	0x00a1
                    00A2     94 _P2_2	=	0x00a2
                    00A3     95 _P2_3	=	0x00a3
                    00A4     96 _P2_4	=	0x00a4
                    00A5     97 _P2_5	=	0x00a5
                    00A6     98 _P2_6	=	0x00a6
                    00A7     99 _P2_7	=	0x00a7
                    00A8    100 _EX0	=	0x00a8
                    00A9    101 _ET0	=	0x00a9
                    00AA    102 _EX1	=	0x00aa
                    00AB    103 _ET1	=	0x00ab
                    00AC    104 _ES	=	0x00ac
                    00AF    105 _EA	=	0x00af
                    00B0    106 _P3_0	=	0x00b0
                    00B1    107 _P3_1	=	0x00b1
                    00B2    108 _P3_2	=	0x00b2
                    00B3    109 _P3_3	=	0x00b3
                    00B4    110 _P3_4	=	0x00b4
                    00B5    111 _P3_5	=	0x00b5
                    00B6    112 _P3_6	=	0x00b6
                    00B7    113 _P3_7	=	0x00b7
                    00B0    114 _RXD	=	0x00b0
                    00B1    115 _TXD	=	0x00b1
                    00B2    116 _INT0	=	0x00b2
                    00B3    117 _INT1	=	0x00b3
                    00B4    118 _T0	=	0x00b4
                    00B5    119 _T1	=	0x00b5
                    00B6    120 _WR	=	0x00b6
                    00B7    121 _RD	=	0x00b7
                    00B8    122 _PX0	=	0x00b8
                    00B9    123 _PT0	=	0x00b9
                    00BA    124 _PX1	=	0x00ba
                    00BB    125 _PT1	=	0x00bb
                    00BC    126 _PS	=	0x00bc
                    00D0    127 _P	=	0x00d0
                    00D1    128 _F1	=	0x00d1
                    00D2    129 _OV	=	0x00d2
                    00D3    130 _RS0	=	0x00d3
                    00D4    131 _RS1	=	0x00d4
                    00D5    132 _F0	=	0x00d5
                    00D6    133 _AC	=	0x00d6
                    00D7    134 _CY	=	0x00d7
                            135 ;--------------------------------------------------------
                            136 ; overlayable register banks
                            137 ;--------------------------------------------------------
                            138 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     139 	.ds 8
                            140 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                     141 	.ds 8
                            142 ;--------------------------------------------------------
                            143 ; internal ram data
                            144 ;--------------------------------------------------------
                            145 	.area DSEG    (DATA)
                            146 ;--------------------------------------------------------
                            147 ; overlayable items in internal ram 
                            148 ;--------------------------------------------------------
                            149 	.area OSEG    (OVR,DATA)
                            150 ;--------------------------------------------------------
                            151 ; indirectly addressable internal ram data
                            152 ;--------------------------------------------------------
                            153 	.area ISEG    (DATA)
                            154 ;--------------------------------------------------------
                            155 ; absolute internal ram data
                            156 ;--------------------------------------------------------
                            157 	.area IABS    (ABS,DATA)
                            158 	.area IABS    (ABS,DATA)
                            159 ;--------------------------------------------------------
                            160 ; bit data
                            161 ;--------------------------------------------------------
                            162 	.area BSEG    (BIT)
                            163 ;--------------------------------------------------------
                            164 ; paged external ram data
                            165 ;--------------------------------------------------------
                            166 	.area PSEG    (PAG,XDATA)
                            167 ;--------------------------------------------------------
                            168 ; external ram data
                            169 ;--------------------------------------------------------
                            170 	.area XSEG    (XDATA)
   0000                     171 _longjmp_PARM_2:
   0000                     172 	.ds 2
                            173 ;--------------------------------------------------------
                            174 ; absolute external ram data
                            175 ;--------------------------------------------------------
                            176 	.area XABS    (ABS,XDATA)
                            177 ;--------------------------------------------------------
                            178 ; external initialized ram data
                            179 ;--------------------------------------------------------
                            180 	.area XISEG   (XDATA)
                            181 ;--------------------------------------------------------
                            182 ; global & static initialisations
                            183 ;--------------------------------------------------------
                            184 	.area HOME    (CODE)
                            185 	.area GSINIT  (CODE)
                            186 	.area GSFINAL (CODE)
                            187 	.area GSINIT  (CODE)
                            188 ;--------------------------------------------------------
                            189 ; Home
                            190 ;--------------------------------------------------------
                            191 	.area HOME    (CODE)
                            192 	.area HOME    (CODE)
                            193 ;--------------------------------------------------------
                            194 ; code
                            195 ;--------------------------------------------------------
                            196 	.area CSEG    (CODE)
                            197 ;------------------------------------------------------------
                            198 ;Allocation info for local variables in function 'setjmp'
                            199 ;------------------------------------------------------------
                            200 ;buf                       Allocated to registers 
                            201 ;------------------------------------------------------------
                            202 ;	_setjmp.c:392: int setjmp (jmp_buf buf)
                            203 ;	-----------------------------------------
                            204 ;	 function setjmp
                            205 ;	-----------------------------------------
   0000                     206 _setjmp:
                    0002    207 	ar2 = 0x02
                    0003    208 	ar3 = 0x03
                    0004    209 	ar4 = 0x04
                    0005    210 	ar5 = 0x05
                    0006    211 	ar6 = 0x06
                    0007    212 	ar7 = 0x07
                    0000    213 	ar0 = 0x00
                    0001    214 	ar1 = 0x01
                            215 ;	_setjmp.c:401: *buf++ = SP;
   0000 E5 81               216 	mov	a,_SP
   0002 12s00r00r00         217 	lcall	__gptrput
   0006 A3                  218 	inc	dptr
                            219 ;	_setjmp.c:403: *buf++ = *((unsigned char __data *) SP - 0);
   0007 A8 81               220 	mov	r0,_SP
   0009 86 02               221 	mov	ar2,@r0
   000B EA                  222 	mov	a,r2
   000C 12s00r00r00         223 	lcall	__gptrput
   0010 A3                  224 	inc	dptr
                            225 ;	_setjmp.c:404: *buf++ = *((unsigned char __data *) SP - 1);
   0011 AA 81               226 	mov	r2,_SP
   0013 EA                  227 	mov	a,r2
   0014 14                  228 	dec	a
   0015 F8                  229 	mov	r0,a
   0016 86 02               230 	mov	ar2,@r0
   0018 EA                  231 	mov	a,r2
   0019 12s00r00r00         232 	lcall	__gptrput
                            233 ;	_setjmp.c:408: return 0;
   001D 90 00 00 00         234 	mov  dptr,#0x0000
   0021                     235 00101$:
   0021 22                  236 	ret
                            237 ;------------------------------------------------------------
                            238 ;Allocation info for local variables in function 'longjmp'
                            239 ;------------------------------------------------------------
                            240 ;rv                        Allocated with name '_longjmp_PARM_2'
                            241 ;buf                       Allocated to registers r2 r3 r4 r5 
                            242 ;lsp                       Allocated to registers r6 
                            243 ;------------------------------------------------------------
                            244 ;	_setjmp.c:411: int longjmp (jmp_buf buf, int rv)
                            245 ;	-----------------------------------------
                            246 ;	 function longjmp
                            247 ;	-----------------------------------------
   0022                     248 _longjmp:
                            249 ;	_setjmp.c:418: lsp = *buf++;
   0022 AA 82               250 	mov     r2,dpl
   0024 AB 83               251 	mov     r3,dph
   0026 AC 93               252 	mov     r4,dpx
   0028 AD F0               253 	mov     r5,b
   002A 8D F0               254 	mov	b,r5
   002C 12s00r00r00         255 	lcall	__gptrget
   0030 FE                  256 	mov	r6,a
   0031 A3                  257 	inc	dptr
   0032 AA 82               258 	mov	r2,dpl
   0034 AB 83               259 	mov	r3,dph
   0036 AC 93               260 	mov	r4,dpx
   0038 AD F0               261 	mov	r5,b
                            262 ;	genAssign: resultIsFar = TRUE
                            263 ;	_setjmp.c:420: *((unsigned char __data *) lsp - 0) = *buf++;
   003A 8E 00               264 	mov	ar0,r6
   003C 8A 82               265 	mov	dpl,r2
   003E 8B 83               266 	mov	dph,r3
   0040 8C 93               267 	mov	dpx,r4
   0042 8D F0               268 	mov	b,r5
   0044 12s00r00r00         269 	lcall	__gptrget
   0048 FF                  270 	mov	r7,a
   0049 A3                  271 	inc	dptr
   004A AA 82               272 	mov	r2,dpl
   004C AB 83               273 	mov	r3,dph
   004E AC 93               274 	mov	r4,dpx
   0050 AD F0               275 	mov	r5,b
   0052 A6 07               276 	mov	@r0,ar7
                            277 ;	_setjmp.c:421: *((unsigned char __data *) lsp - 1) = *buf++;
   0054 18                  278 	dec	r0
   0055 8A 82               279 	mov	dpl,r2
   0057 8B 83               280 	mov	dph,r3
   0059 8C 93               281 	mov	dpx,r4
   005B 8D F0               282 	mov	b,r5
   005D 12s00r00r00         283 	lcall	__gptrget
   0061 FA                  284 	mov  r2,a
   0062 F6                  285 	mov  @r0,a
                            286 ;	_setjmp.c:425: SP = lsp;
                            287 ;	genAssign: resultIsFar = FALSE
   0063 8E 81               288 	mov	_SP,r6
                            289 ;	_setjmp.c:426: return rv;
   0065 75 86 01            290 	mov     dps, #1
   0068 90s00r00r00         291 	mov     dptr, #_longjmp_PARM_2
   006C E0                  292 	movx	a,@dptr
   006D F5 82               293 	mov	dpl,a
   006F A3                  294 	inc	dptr
   0070 E0                  295 	movx	a,@dptr
   0071 F5 83               296 	mov	dph,a
   0073 75 86 00            297 	mov	dps,#0
   0076                     298 00101$:
   0076 22                  299 	ret
                            300 	.area CSEG    (CODE)
                            301 	.area CONST   (CODE)
                            302 	.area XINIT   (CODE)
                            303 	.area CABS    (ABS,CODE)
