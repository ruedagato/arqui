                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:19 2015
                              5 ;--------------------------------------------------------
                              6 	.module _calloc
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _calloc_PARM_2
                             31 	.globl _calloc
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      44 	.ds 8
                             45 ;--------------------------------------------------------
                             46 ; internal ram data
                             47 ;--------------------------------------------------------
                             48 	.area DSEG    (DATA)
                             49 ;--------------------------------------------------------
                             50 ; overlayable items in internal ram 
                             51 ;--------------------------------------------------------
                             52 	.area OSEG    (OVR,DATA)
                             53 ;--------------------------------------------------------
                             54 ; indirectly addressable internal ram data
                             55 ;--------------------------------------------------------
                             56 	.area ISEG    (DATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute internal ram data
                             59 ;--------------------------------------------------------
                             60 	.area IABS    (ABS,DATA)
                             61 	.area IABS    (ABS,DATA)
                             62 ;--------------------------------------------------------
                             63 ; bit data
                             64 ;--------------------------------------------------------
                             65 	.area BSEG    (BIT)
                             66 ;--------------------------------------------------------
                             67 ; paged external ram data
                             68 ;--------------------------------------------------------
                             69 	.area PSEG    (PAG,XDATA)
                             70 ;--------------------------------------------------------
                             71 ; external ram data
                             72 ;--------------------------------------------------------
                             73 	.area XSEG    (XDATA)
   0000                      74 _calloc_PARM_2:
   0000                      75 	.ds 2
                             76 ;--------------------------------------------------------
                             77 ; absolute external ram data
                             78 ;--------------------------------------------------------
                             79 	.area XABS    (ABS,XDATA)
                             80 ;--------------------------------------------------------
                             81 ; external initialized ram data
                             82 ;--------------------------------------------------------
                             83 	.area XISEG   (XDATA)
                             84 ;--------------------------------------------------------
                             85 ; global & static initialisations
                             86 ;--------------------------------------------------------
                             87 	.area HOME    (CODE)
                             88 	.area GSINIT  (CODE)
                             89 	.area GSFINAL (CODE)
                             90 	.area GSINIT  (CODE)
                             91 ;--------------------------------------------------------
                             92 ; Home
                             93 ;--------------------------------------------------------
                             94 	.area HOME    (CODE)
                             95 	.area HOME    (CODE)
                             96 ;--------------------------------------------------------
                             97 ; code
                             98 ;--------------------------------------------------------
                             99 	.area CSEG    (CODE)
                            100 ;------------------------------------------------------------
                            101 ;Allocation info for local variables in function 'calloc'
                            102 ;------------------------------------------------------------
                            103 ;size                      Allocated with name '_calloc_PARM_2'
                            104 ;nmemb                     Allocated to registers r2 r3 
                            105 ;ptr                       Allocated to registers r4 r5 r6 
                            106 ;------------------------------------------------------------
                            107 ;	_calloc.c:70: void __xdata * calloc (size_t nmemb, size_t size)
                            108 ;	-----------------------------------------
                            109 ;	 function calloc
                            110 ;	-----------------------------------------
   0000                     111 _calloc:
                    0002    112 	ar2 = 0x02
                    0003    113 	ar3 = 0x03
                    0004    114 	ar4 = 0x04
                    0005    115 	ar5 = 0x05
                    0006    116 	ar6 = 0x06
                    0007    117 	ar7 = 0x07
                    0000    118 	ar0 = 0x00
                    0001    119 	ar1 = 0x01
   0000 AA 82               120 	mov	r2,dpl
   0002 AB 83               121 	mov	r3,dph
                            122 ;	_calloc.c:74: ptr = malloc(nmemb * size);
   0004 90s00r00r00         123 	mov	dptr,#_calloc_PARM_2
                            124 ;	genAssign: resultIsFar = TRUE
   0008 75 86 21            125 	mov	dps,#0x21
   000B 90s00r00r00         126 	mov	dptr,#__mulint_PARM_2
   000F E0                  127 	movx	a,@dptr
   0010 F0                  128 	movx	@dptr,a
   0011 A3                  129 	inc	dptr
   0012 A3                  130 	inc	dptr
   0013 E0                  131 	movx	a,@dptr
   0014 F0                  132 	movx	@dptr,a
   0015 75 86 00            133 	mov	dps,#0
   0018 8A 82               134 	mov	dpl,r2
   001A 8B 83               135 	mov	dph,r3
   001C 12s00r00r00         136 	lcall	__mulint
   0020 AA 82               137 	mov	r2,dpl
   0022 AB 83               138 	mov	r3,dph
   0024 C0 02               139 	push	ar2
   0026 C0 03               140 	push	ar3
   0028 8A 82               141 	mov	dpl,r2
   002A 8B 83               142 	mov	dph,r3
   002C 12s00r00r00         143 	lcall	_malloc
   0030 AC 82               144 	mov	r4,dpl
   0032 AD 83               145 	mov	r5,dph
   0034 AE 93               146 	mov	r6,dpx
   0036 D0 03               147 	pop	ar3
   0038 D0 02               148 	pop	ar2
                            149 ;	genAssign: resultIsFar = TRUE
                            150 ;	_calloc.c:75: if (ptr)
   003A EC                  151 	mov	a,r4
   003B 4D                  152 	orl	a,r5
   003C 4E                  153 	orl	a,r6
   003D 60 3B               154 	jz  00102$
   003F                     155 00106$:
                            156 ;	_calloc.c:77: memset(ptr, 0, nmemb * size);
                            157 ;	genAssign: resultIsFar = FALSE
   003F 8C 07               158 	mov	ar7,r4
   0041 8D 00               159 	mov	ar0,r5
   0043 8E 01               160 	mov	ar1,r6
   0045 C0 04               161 	push	ar4
   0047 C0 05               162 	push	ar5
   0049 C0 06               163 	push	ar6
   004B 7C 00               164 	mov	r4,#0x00
                            165 ;	genAssign: resultIsFar = TRUE
   004D 90s00r00r00         166 	mov	dptr,#_memset_PARM_2
   0051 E4                  167 	clr  a
   0052 F0                  168 	movx	@dptr,a
                            169 ;	genAssign: resultIsFar = TRUE
   0053 90s00r00r00         170 	mov	dptr,#_memset_PARM_3
   0057 EA                  171 	mov	a,r2
   0058 F0                  172 	movx	@dptr,a
   0059 A3                  173 	inc	dptr
   005A EB                  174 	mov	a,r3
   005B F0                  175 	movx	@dptr,a
   005C C0 04               176 	push	ar4
   005E C0 05               177 	push	ar5
   0060 C0 06               178 	push	ar6
   0062 8F 82               179 	mov	dpl,r7
   0064 88 83               180 	mov	dph,r0
   0066 89 93               181 	mov	dpx,r1
   0068 8C F0               182 	mov	b,r4
   006A 12s00r00r00         183 	lcall	_memset
   006E D0 06               184 	pop	ar6
   0070 D0 05               185 	pop	ar5
   0072 D0 04               186 	pop	ar4
                            187 ;	_calloc.c:79: return ptr;
   0074 D0 06               188 	pop	ar6
   0076 D0 05               189 	pop	ar5
   0078 D0 04               190 	pop	ar4
                            191 ;	_calloc.c:77: memset(ptr, 0, nmemb * size);
   007A                     192 00102$:
                            193 ;	_calloc.c:79: return ptr;
   007A 8C 82               194 	mov	dpl,r4
   007C 8D 83               195 	mov	dph,r5
   007E 8E 93               196 	mov	dpx,r6
   0080                     197 00103$:
   0080 22                  198 	ret
                            199 	.area CSEG    (CODE)
                            200 	.area CONST   (CODE)
                            201 	.area XINIT   (CODE)
                            202 	.area CABS    (ABS,CODE)
