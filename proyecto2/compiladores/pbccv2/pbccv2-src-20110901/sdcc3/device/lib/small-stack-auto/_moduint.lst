                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:31 2015
                              5 ;--------------------------------------------------------
                              6 	.module _moduint
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 ;--------------------------------------------------------
                             13 ; special function registers
                             14 ;--------------------------------------------------------
                             15 	.area RSEG    (ABS,DATA)
   0000                      16 	.org 0x0000
                             17 ;--------------------------------------------------------
                             18 ; special function bits
                             19 ;--------------------------------------------------------
                             20 	.area RSEG    (ABS,DATA)
   0000                      21 	.org 0x0000
                             22 ;--------------------------------------------------------
                             23 ; overlayable register banks
                             24 ;--------------------------------------------------------
                             25 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      26 	.ds 8
                             27 ;--------------------------------------------------------
                             28 ; internal ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (DATA)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in internal ram 
                             33 ;--------------------------------------------------------
                             34 	.area OSEG    (OVR,DATA)
                             35 ;--------------------------------------------------------
                             36 ; indirectly addressable internal ram data
                             37 ;--------------------------------------------------------
                             38 	.area ISEG    (DATA)
                             39 ;--------------------------------------------------------
                             40 ; absolute internal ram data
                             41 ;--------------------------------------------------------
                             42 	.area IABS    (ABS,DATA)
                             43 	.area IABS    (ABS,DATA)
                             44 ;--------------------------------------------------------
                             45 ; bit data
                             46 ;--------------------------------------------------------
                             47 	.area BSEG    (BIT)
                             48 ;--------------------------------------------------------
                             49 ; paged external ram data
                             50 ;--------------------------------------------------------
                             51 	.area PSEG    (PAG,XDATA)
                             52 ;--------------------------------------------------------
                             53 ; external ram data
                             54 ;--------------------------------------------------------
                             55 	.area XSEG    (XDATA)
                             56 ;--------------------------------------------------------
                             57 ; absolute external ram data
                             58 ;--------------------------------------------------------
                             59 	.area XABS    (ABS,XDATA)
                             60 ;--------------------------------------------------------
                             61 ; external initialized ram data
                             62 ;--------------------------------------------------------
                             63 	.area XISEG   (XDATA)
                             64 	.area HOME    (CODE)
                             65 	.area GSINIT0 (CODE)
                             66 	.area GSINIT1 (CODE)
                             67 	.area GSINIT2 (CODE)
                             68 	.area GSINIT3 (CODE)
                             69 	.area GSINIT4 (CODE)
                             70 	.area GSINIT5 (CODE)
                             71 	.area GSINIT  (CODE)
                             72 	.area GSFINAL (CODE)
                             73 	.area CSEG    (CODE)
                             74 ;--------------------------------------------------------
                             75 ; global & static initialisations
                             76 ;--------------------------------------------------------
                             77 	.area HOME    (CODE)
                             78 	.area GSINIT  (CODE)
                             79 	.area GSFINAL (CODE)
                             80 	.area GSINIT  (CODE)
                             81 ;--------------------------------------------------------
                             82 ; Home
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area HOME    (CODE)
                             86 ;--------------------------------------------------------
                             87 ; code
                             88 ;--------------------------------------------------------
                             89 	.area CSEG    (CODE)
                             90 ;------------------------------------------------------------
                             91 ;Allocation info for local variables in function '_moduint_dummy'
                             92 ;------------------------------------------------------------
                             93 ;------------------------------------------------------------
                             94 ;	_moduint.c:50: _moduint_dummy (void) __naked
                             95 ;	-----------------------------------------
                             96 ;	 function _moduint_dummy
                             97 ;	-----------------------------------------
   0000                      98 __moduint_dummy:
                             99 ;	naked function: no prologue.
                            100 ;	_moduint.c:138: mov	bl,a
                            101 	
                            102 	
                            103 	 .globl __moduint
                            104 	
   0000                     105 	__moduint:
                            106 	
                            107 	
                            108 	
                            109 	
                            110 	
                            111 	
                            112 	
                    0000    113 	 ar0 = 0 ; BUG register set is not considered
                    0001    114 	 ar1 = 1
                            115 	
                            116 	 .globl __modint
                            117 	
   0000 E5 81               118 	 mov a,sp
   0002 24 FE               119 	 add a,#-2 ; 2 bytes return address
   0004 F8                  120 	 mov r0,a ; r0 points to bh
   0005 86 01               121 	 mov ar1,@r0 ; load bh
   0007 18                  122 	 dec r0
   0008 86 00               123 	 mov ar0,@r0 ; load bl
                            124 	
                            125 	
                            126 	
                            127 	
   000A                     128 	__modint:
                            129 ; entry point for __modsint
                            130 ;	# 108 "_moduint.c"
   000A E8                  131 	 mov a,r0 ; avoid endless loop
   000B 49                  132 	 orl a,r1
   000C 60 36               133 	 jz div_by_0
                            134 	
   000E 7A 01               135 	 mov r2,#1
                            136 	
   0010                     137 	loop1:
   0010 E8                  138 	mov a,r0 ; b <<= 1
   0011 25 E0               139 	 add a,acc
   0013 F8                  140 	 mov r0,a
   0014 E9                  141 	 mov a,r1
   0015 33                  142 	 rlc a
   0016 40 0E               143 	 jc msbset
   0018 F9                  144 	 mov r1,a
                            145 	
   0019 E5 82               146 	 mov a,dpl ; a - b
   001B 98                  147 	 subb a,r0 ; here carry is always clear
   001C E5 83               148 	 mov a,dph
   001E 99                  149 	 subb a,r1
                            150 	
   001F 40 03               151 	 jc start
                            152 	
   0021 0A                  153 	 inc r2
   0022 80 EC               154 	 sjmp loop1
                            155 	
   0024                     156 	start:
   0024 C3                  157 	clr c
   0025 E9                  158 	 mov a,r1 ; b >>= 1;
   0026                     159 	msbset:
   0026 13                  160 	rrc a
   0027 F9                  161 	 mov r1,a
   0028 E8                  162 	 mov a,r0
   0029 13                  163 	 rrc a
   002A F8                  164 	 mov r0,a
                            165 	
   002B                     166 	loop2:
   002B C3                  167 	clr c
   002C E5 82               168 	 mov a,dpl ; a - b
   002E 98                  169 	 subb a,r0
                            170 	
   002F F5 F0               171 	 mov b,a
   0031 E5 83               172 	 mov a,dph
   0033 99                  173 	 subb a,r1
                            174 	
   0034 40 05               175 	 jc smaller ; a >= b?
                            176 	
   0036 F5 83               177 	 mov dph,a ; -> yes; a = a - b;
   0038 85 F0 82            178 	 mov dpl,b
   003B                     179 	smaller:
                            180 ; -> no
   003B C3                  181 	 clr c
   003C E9                  182 	 mov a,r1 ; b >>= 1;
   003D 13                  183 	 rrc a
   003E F9                  184 	 mov r1,a
   003F E8                  185 	 mov a,r0
   0040 13                  186 	 rrc a
   0041 F8                  187 	 mov r0,a
                            188 	
   0042 DA E7               189 	 djnz r2,loop2
   0044                     190 	div_by_0:
   0044 22                  191 	 ret
                            192 	
                            193 	 
                            194 ;	naked function: no epilogue.
                            195 	.area CSEG    (CODE)
                            196 	.area CONST   (CODE)
                            197 	.area XINIT   (CODE)
                            198 	.area CABS    (ABS,CODE)
