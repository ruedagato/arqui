                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:29 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strpbrk
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strpbrk_PARM_2
                             13 	.globl _strpbrk
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 	.area RSEG    (ABS,DATA)
   0000                      18 	.org 0x0000
                             19 ;--------------------------------------------------------
                             20 ; special function bits
                             21 ;--------------------------------------------------------
                             22 	.area RSEG    (ABS,DATA)
   0000                      23 	.org 0x0000
                             24 ;--------------------------------------------------------
                             25 ; overlayable register banks
                             26 ;--------------------------------------------------------
                             27 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      28 	.ds 8
                             29 ;--------------------------------------------------------
                             30 ; internal ram data
                             31 ;--------------------------------------------------------
                             32 	.area DSEG    (DATA)
   0000                      33 _strpbrk_sloc0_1_0:
   0000                      34 	.ds 3
   0003                      35 _strpbrk_sloc1_1_0:
   0003                      36 	.ds 3
                             37 ;--------------------------------------------------------
                             38 ; overlayable items in internal ram 
                             39 ;--------------------------------------------------------
                             40 	.area OSEG    (OVR,DATA)
                             41 ;--------------------------------------------------------
                             42 ; indirectly addressable internal ram data
                             43 ;--------------------------------------------------------
                             44 	.area ISEG    (DATA)
                             45 ;--------------------------------------------------------
                             46 ; absolute internal ram data
                             47 ;--------------------------------------------------------
                             48 	.area IABS    (ABS,DATA)
                             49 	.area IABS    (ABS,DATA)
                             50 ;--------------------------------------------------------
                             51 ; bit data
                             52 ;--------------------------------------------------------
                             53 	.area BSEG    (BIT)
                             54 ;--------------------------------------------------------
                             55 ; paged external ram data
                             56 ;--------------------------------------------------------
                             57 	.area PSEG    (PAG,XDATA)
                             58 ;--------------------------------------------------------
                             59 ; external ram data
                             60 ;--------------------------------------------------------
                             61 	.area XSEG    (XDATA)
   0000                      62 _strpbrk_PARM_2:
   0000                      63 	.ds 3
   0003                      64 _strpbrk_string_1_1:
   0003                      65 	.ds 3
   0006                      66 _strpbrk_ret_1_1:
   0006                      67 	.ds 3
                             68 ;--------------------------------------------------------
                             69 ; absolute external ram data
                             70 ;--------------------------------------------------------
                             71 	.area XABS    (ABS,XDATA)
                             72 ;--------------------------------------------------------
                             73 ; external initialized ram data
                             74 ;--------------------------------------------------------
                             75 	.area XISEG   (XDATA)
                             76 	.area HOME    (CODE)
                             77 	.area GSINIT0 (CODE)
                             78 	.area GSINIT1 (CODE)
                             79 	.area GSINIT2 (CODE)
                             80 	.area GSINIT3 (CODE)
                             81 	.area GSINIT4 (CODE)
                             82 	.area GSINIT5 (CODE)
                             83 	.area GSINIT  (CODE)
                             84 	.area GSFINAL (CODE)
                             85 	.area CSEG    (CODE)
                             86 ;--------------------------------------------------------
                             87 ; global & static initialisations
                             88 ;--------------------------------------------------------
                             89 	.area HOME    (CODE)
                             90 	.area GSINIT  (CODE)
                             91 	.area GSFINAL (CODE)
                             92 	.area GSINIT  (CODE)
                             93 ;--------------------------------------------------------
                             94 ; Home
                             95 ;--------------------------------------------------------
                             96 	.area HOME    (CODE)
                             97 	.area HOME    (CODE)
                             98 ;--------------------------------------------------------
                             99 ; code
                            100 ;--------------------------------------------------------
                            101 	.area CSEG    (CODE)
                            102 ;------------------------------------------------------------
                            103 ;Allocation info for local variables in function 'strpbrk'
                            104 ;------------------------------------------------------------
                            105 ;ch                        Allocated to registers r6 
                            106 ;sloc0                     Allocated with name '_strpbrk_sloc0_1_0'
                            107 ;sloc1                     Allocated with name '_strpbrk_sloc1_1_0'
                            108 ;control                   Allocated with name '_strpbrk_PARM_2'
                            109 ;string                    Allocated with name '_strpbrk_string_1_1'
                            110 ;ret                       Allocated with name '_strpbrk_ret_1_1'
                            111 ;p                         Allocated with name '_strpbrk_p_2_2'
                            112 ;------------------------------------------------------------
                            113 ;	_strpbrk.c:31: char * strpbrk (
                            114 ;	-----------------------------------------
                            115 ;	 function strpbrk
                            116 ;	-----------------------------------------
   0000                     117 _strpbrk:
                    0002    118 	ar2 = 0x02
                    0003    119 	ar3 = 0x03
                    0004    120 	ar4 = 0x04
                    0005    121 	ar5 = 0x05
                    0006    122 	ar6 = 0x06
                    0007    123 	ar7 = 0x07
                    0000    124 	ar0 = 0x00
                    0001    125 	ar1 = 0x01
   0000 AA F0               126 	mov	r2,b
   0002 AB 83               127 	mov	r3,dph
   0004 E5 82               128 	mov	a,dpl
   0006 90s00r03            129 	mov	dptr,#_strpbrk_string_1_1
   0009 F0                  130 	movx	@dptr,a
   000A A3                  131 	inc	dptr
   000B EB                  132 	mov	a,r3
   000C F0                  133 	movx	@dptr,a
   000D A3                  134 	inc	dptr
   000E EA                  135 	mov	a,r2
   000F F0                  136 	movx	@dptr,a
                            137 ;	_strpbrk.c:36: char *ret = NULL;
   0010 90s00r06            138 	mov	dptr,#_strpbrk_ret_1_1
   0013 E4                  139 	clr	a
   0014 F0                  140 	movx	@dptr,a
   0015 A3                  141 	inc	dptr
   0016 F0                  142 	movx	@dptr,a
   0017 A3                  143 	inc	dptr
   0018 F0                  144 	movx	@dptr,a
                            145 ;	_strpbrk.c:39: while (ch = *control) {
   0019 90s00r00            146 	mov	dptr,#_strpbrk_PARM_2
   001C E0                  147 	movx	a,@dptr
   001D FA                  148 	mov	r2,a
   001E A3                  149 	inc	dptr
   001F E0                  150 	movx	a,@dptr
   0020 FB                  151 	mov	r3,a
   0021 A3                  152 	inc	dptr
   0022 E0                  153 	movx	a,@dptr
   0023 FC                  154 	mov	r4,a
   0024                     155 00105$:
   0024 8A 82               156 	mov	dpl,r2
   0026 8B 83               157 	mov	dph,r3
   0028 8C F0               158 	mov	b,r4
   002A 12s00r00            159 	lcall	__gptrget
   002D FD                  160 	mov	r5,a
   002E FE                  161 	mov	r6,a
   002F 70 03               162 	jnz	00115$
   0031 02s00rBD            163 	ljmp	00107$
   0034                     164 00115$:
                            165 ;	_strpbrk.c:40: char * p = strchr(string, ch);
   0034 90s00r03            166 	mov	dptr,#_strpbrk_string_1_1
   0037 E0                  167 	movx	a,@dptr
   0038 FD                  168 	mov	r5,a
   0039 A3                  169 	inc	dptr
   003A E0                  170 	movx	a,@dptr
   003B FF                  171 	mov	r7,a
   003C A3                  172 	inc	dptr
   003D E0                  173 	movx	a,@dptr
   003E F8                  174 	mov	r0,a
   003F 90s00r00            175 	mov	dptr,#_strchr_PARM_2
   0042 EE                  176 	mov	a,r6
   0043 F0                  177 	movx	@dptr,a
   0044 8D 82               178 	mov	dpl,r5
   0046 8F 83               179 	mov	dph,r7
   0048 88 F0               180 	mov	b,r0
   004A C0 02               181 	push	ar2
   004C C0 03               182 	push	ar3
   004E C0 04               183 	push	ar4
   0050 12s00r00            184 	lcall	_strchr
   0053 AD 82               185 	mov	r5,dpl
   0055 AE 83               186 	mov	r6,dph
   0057 AF F0               187 	mov	r7,b
   0059 D0 04               188 	pop	ar4
   005B D0 03               189 	pop	ar3
   005D D0 02               190 	pop	ar2
                            191 ;	_strpbrk.c:41: if (p != NULL && (ret == NULL || p < ret)) {
   005F BD 00 08            192 	cjne	r5,#0x00,00116$
   0062 BE 00 05            193 	cjne	r6,#0x00,00116$
   0065 BF 00 02            194 	cjne	r7,#0x00,00116$
   0068 80 4B               195 	sjmp	00102$
   006A                     196 00116$:
   006A 90s00r06            197 	mov	dptr,#_strpbrk_ret_1_1
   006D E0                  198 	movx	a,@dptr
   006E F5*00               199 	mov	_strpbrk_sloc0_1_0,a
   0070 A3                  200 	inc	dptr
   0071 E0                  201 	movx	a,@dptr
   0072 F5*01               202 	mov	(_strpbrk_sloc0_1_0 + 1),a
   0074 A3                  203 	inc	dptr
   0075 E0                  204 	movx	a,@dptr
   0076 F5*02               205 	mov	(_strpbrk_sloc0_1_0 + 2),a
   0078 E4                  206 	clr	a
   0079 B5*00 0A            207 	cjne	a,_strpbrk_sloc0_1_0,00117$
   007C E4                  208 	clr	a
   007D B5*01 06            209 	cjne	a,(_strpbrk_sloc0_1_0 + 1),00117$
   0080 E4                  210 	clr	a
   0081 B5*02 02            211 	cjne	a,(_strpbrk_sloc0_1_0 + 2),00117$
   0084 80 24               212 	sjmp	00101$
   0086                     213 00117$:
   0086 C0 02               214 	push	ar2
   0088 C0 03               215 	push	ar3
   008A C0 04               216 	push	ar4
   008C 8D*03               217 	mov	_strpbrk_sloc1_1_0,r5
   008E 8E*04               218 	mov	(_strpbrk_sloc1_1_0 + 1),r6
   0090 8F*05               219 	mov	(_strpbrk_sloc1_1_0 + 2),r7
   0092 AB*00               220 	mov	r3,_strpbrk_sloc0_1_0
   0094 AC*01               221 	mov	r4,(_strpbrk_sloc0_1_0 + 1)
   0096 AA*02               222 	mov	r2,(_strpbrk_sloc0_1_0 + 2)
   0098 C3                  223 	clr	c
   0099 E5*03               224 	mov	a,_strpbrk_sloc1_1_0
   009B 9B                  225 	subb	a,r3
   009C E5*04               226 	mov	a,(_strpbrk_sloc1_1_0 + 1)
   009E 9C                  227 	subb	a,r4
   009F E5*05               228 	mov	a,(_strpbrk_sloc1_1_0 + 2)
   00A1 9A                  229 	subb	a,r2
   00A2 D0 04               230 	pop	ar4
   00A4 D0 03               231 	pop	ar3
   00A6 D0 02               232 	pop	ar2
   00A8 50 0B               233 	jnc	00102$
   00AA                     234 00101$:
                            235 ;	_strpbrk.c:42: ret = p;
   00AA 90s00r06            236 	mov	dptr,#_strpbrk_ret_1_1
   00AD ED                  237 	mov	a,r5
   00AE F0                  238 	movx	@dptr,a
   00AF A3                  239 	inc	dptr
   00B0 EE                  240 	mov	a,r6
   00B1 F0                  241 	movx	@dptr,a
   00B2 A3                  242 	inc	dptr
   00B3 EF                  243 	mov	a,r7
   00B4 F0                  244 	movx	@dptr,a
   00B5                     245 00102$:
                            246 ;	_strpbrk.c:44: control++;
   00B5 0A                  247 	inc	r2
   00B6 BA 00 01            248 	cjne	r2,#0x00,00119$
   00B9 0B                  249 	inc	r3
   00BA                     250 00119$:
   00BA 02s00r24            251 	ljmp	00105$
   00BD                     252 00107$:
                            253 ;	_strpbrk.c:47: return (ret);
   00BD 90s00r06            254 	mov	dptr,#_strpbrk_ret_1_1
   00C0 E0                  255 	movx	a,@dptr
   00C1 FA                  256 	mov	r2,a
   00C2 A3                  257 	inc	dptr
   00C3 E0                  258 	movx	a,@dptr
   00C4 FB                  259 	mov	r3,a
   00C5 A3                  260 	inc	dptr
   00C6 E0                  261 	movx	a,@dptr
   00C7 FC                  262 	mov	r4,a
   00C8 8A 82               263 	mov	dpl,r2
   00CA 8B 83               264 	mov	dph,r3
   00CC 8C F0               265 	mov	b,r4
   00CE 22                  266 	ret
                            267 	.area CSEG    (CODE)
                            268 	.area CONST   (CODE)
                            269 	.area XINIT   (CODE)
                            270 	.area CABS    (ABS,CODE)
