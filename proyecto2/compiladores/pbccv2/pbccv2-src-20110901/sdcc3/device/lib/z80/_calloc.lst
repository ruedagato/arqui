                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:18:18 2015
                              5 ;--------------------------------------------------------
                              6 	.module _calloc
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _calloc
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ;  ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; overlayable items in  ram 
                             22 ;--------------------------------------------------------
                             23 	.area _OVERLAY
                             24 ;--------------------------------------------------------
                             25 ; external initialized ram data
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _HOME
                             39 ;--------------------------------------------------------
                             40 ; code
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 ;../_calloc.c:70: void __xdata * calloc (size_t nmemb, size_t size)
                             44 ;	---------------------------------
                             45 ; Function calloc
                             46 ; ---------------------------------
   0000                      47 _calloc_start::
   0000                      48 _calloc:
   0000 DD E5                49 	push	ix
   0002 DD 21 00 00          50 	ld	ix,#0
   0006 DD 39                51 	add	ix,sp
                             52 ;../_calloc.c:74: ptr = malloc(nmemb * size);
   0008 DD 6E 06             53 	ld	l,6 (ix)
   000B DD 66 07             54 	ld	h,7 (ix)
   000E E5                   55 	push	hl
   000F DD 6E 04             56 	ld	l,4 (ix)
   0012 DD 66 05             57 	ld	h,5 (ix)
   0015 E5                   58 	push	hl
   0016 CDr00s00             59 	call	__mulint_rrx_s
   0019 F1                   60 	pop	af
   001A F1                   61 	pop	af
   001B 44                   62 	ld	b,h
   001C 4D                   63 	ld	c,l
   001D C5                   64 	push	bc
   001E C5                   65 	push	bc
   001F CDr00s00             66 	call	_malloc
   0022 F1                   67 	pop	af
   0023 C1                   68 	pop	bc
   0024 EB                   69 	ex	de,hl
                             70 ;../_calloc.c:75: if (ptr)
   0025 7B                   71 	ld	a,e
   0026 B2                   72 	or	a,d
   0027 28 0E                73 	jr	Z,00102$
                             74 ;../_calloc.c:77: memset(ptr, 0, nmemb * size);
   0029 D5                   75 	push	de
   002A C5                   76 	push	bc
   002B 3E 00                77 	ld	a,#0x00
   002D F5                   78 	push	af
   002E 33                   79 	inc	sp
   002F D5                   80 	push	de
   0030 CDr00s00             81 	call	_memset
   0033 F1                   82 	pop	af
   0034 F1                   83 	pop	af
   0035 33                   84 	inc	sp
   0036 D1                   85 	pop	de
   0037                      86 00102$:
                             87 ;../_calloc.c:79: return ptr;
   0037 EB                   88 	ex	de,hl
   0038 DD E1                89 	pop	ix
   003A C9                   90 	ret
   003B                      91 _calloc_end::
                             92 	.area _CODE
                             93 	.area _CABS
