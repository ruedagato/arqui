                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:30 2015
                              5 ;--------------------------------------------------------
                              6 	.module powf
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _powf
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'powf'
                             93 ;------------------------------------------------------------
                             94 ;y                         Allocated to stack - offset -6
                             95 ;x                         Allocated to registers r2 r3 r4 r5 
                             96 ;------------------------------------------------------------
                             97 ;	powf.c:35: float powf(const float x, const float y)
                             98 ;	-----------------------------------------
                             99 ;	 function powf
                            100 ;	-----------------------------------------
   0000                     101 _powf:
                    0002    102 	ar2 = 0x02
                    0003    103 	ar3 = 0x03
                    0004    104 	ar4 = 0x04
                    0005    105 	ar5 = 0x05
                    0006    106 	ar6 = 0x06
                    0007    107 	ar7 = 0x07
                    0000    108 	ar0 = 0x00
                    0001    109 	ar1 = 0x01
   0000 C0*00               110 	push	_bp
   0002 85 81*00            111 	mov	_bp,sp
   0005 AA 82               112 	mov	r2,dpl
   0007 AB 83               113 	mov	r3,dph
   0009 AC F0               114 	mov	r4,b
   000B FD                  115 	mov	r5,a
                            116 ;	powf.c:37: if(y == 0.0) return 1.0;
   000C E5*00               117 	mov	a,_bp
   000E 24 FA               118 	add	a,#0xfa
   0010 F8                  119 	mov	r0,a
   0011 E6                  120 	mov	a,@r0
   0012 08                  121 	inc	r0
   0013 46                  122 	orl	a,@r0
   0014 08                  123 	inc	r0
   0015 46                  124 	orl	a,@r0
   0016 08                  125 	inc	r0
   0017 46                  126 	orl	a,@r0
   0018 70 0B               127 	jnz	00102$
   001A 90 00 00            128 	mov	dptr,#0x0000
   001D 75 F0 80            129 	mov	b,#0x80
   0020 74 3F               130 	mov	a,#0x3F
   0022 02s00rEC            131 	ljmp	00107$
   0025                     132 00102$:
                            133 ;	powf.c:38: if(y==1.0) return x;
   0025 C0 02               134 	push	ar2
   0027 C0 03               135 	push	ar3
   0029 C0 04               136 	push	ar4
   002B C0 05               137 	push	ar5
   002D E4                  138 	clr	a
   002E C0 E0               139 	push	acc
   0030 C0 E0               140 	push	acc
   0032 74 80               141 	mov	a,#0x80
   0034 C0 E0               142 	push	acc
   0036 74 3F               143 	mov	a,#0x3F
   0038 C0 E0               144 	push	acc
   003A E5*00               145 	mov	a,_bp
   003C 24 FA               146 	add	a,#0xfa
   003E F8                  147 	mov	r0,a
   003F 86 82               148 	mov	dpl,@r0
   0041 08                  149 	inc	r0
   0042 86 83               150 	mov	dph,@r0
   0044 08                  151 	inc	r0
   0045 86 F0               152 	mov	b,@r0
   0047 08                  153 	inc	r0
   0048 E6                  154 	mov	a,@r0
   0049 12s00r00            155 	lcall	___fseq
   004C AE 82               156 	mov	r6,dpl
   004E E5 81               157 	mov	a,sp
   0050 24 FC               158 	add	a,#0xfc
   0052 F5 81               159 	mov	sp,a
   0054 D0 05               160 	pop	ar5
   0056 D0 04               161 	pop	ar4
   0058 D0 03               162 	pop	ar3
   005A D0 02               163 	pop	ar2
   005C EE                  164 	mov	a,r6
   005D 60 0A               165 	jz	00104$
   005F 8A 82               166 	mov	dpl,r2
   0061 8B 83               167 	mov	dph,r3
   0063 8C F0               168 	mov	b,r4
   0065 ED                  169 	mov	a,r5
   0066 02s00rEC            170 	ljmp	00107$
   0069                     171 00104$:
                            172 ;	powf.c:39: if(x <= 0.0) return 0.0;
   0069 C0 02               173 	push	ar2
   006B C0 03               174 	push	ar3
   006D C0 04               175 	push	ar4
   006F C0 05               176 	push	ar5
   0071 E4                  177 	clr	a
   0072 C0 E0               178 	push	acc
   0074 C0 E0               179 	push	acc
   0076 C0 E0               180 	push	acc
   0078 C0 E0               181 	push	acc
   007A 8A 82               182 	mov	dpl,r2
   007C 8B 83               183 	mov	dph,r3
   007E 8C F0               184 	mov	b,r4
   0080 ED                  185 	mov	a,r5
   0081 12s00r00            186 	lcall	___fsgt
   0084 AE 82               187 	mov	r6,dpl
   0086 E5 81               188 	mov	a,sp
   0088 24 FC               189 	add	a,#0xfc
   008A F5 81               190 	mov	sp,a
   008C D0 05               191 	pop	ar5
   008E D0 04               192 	pop	ar4
   0090 D0 03               193 	pop	ar3
   0092 D0 02               194 	pop	ar2
   0094 EE                  195 	mov	a,r6
   0095 70 08               196 	jnz	00106$
   0097 90 00 00            197 	mov	dptr,#(0x00&0x00ff)
   009A E4                  198 	clr	a
   009B F5 F0               199 	mov	b,a
   009D 80 4D               200 	sjmp	00107$
   009F                     201 00106$:
                            202 ;	powf.c:40: return expf(logf(x) * y);
   009F 8A 82               203 	mov	dpl,r2
   00A1 8B 83               204 	mov	dph,r3
   00A3 8C F0               205 	mov	b,r4
   00A5 ED                  206 	mov	a,r5
   00A6 12s00r00            207 	lcall	_logf
   00A9 AA 82               208 	mov	r2,dpl
   00AB AB 83               209 	mov	r3,dph
   00AD AC F0               210 	mov	r4,b
   00AF FD                  211 	mov	r5,a
   00B0 E5*00               212 	mov	a,_bp
   00B2 24 FA               213 	add	a,#0xfa
   00B4 F8                  214 	mov	r0,a
   00B5 E6                  215 	mov	a,@r0
   00B6 C0 E0               216 	push	acc
   00B8 08                  217 	inc	r0
   00B9 E6                  218 	mov	a,@r0
   00BA C0 E0               219 	push	acc
   00BC 08                  220 	inc	r0
   00BD E6                  221 	mov	a,@r0
   00BE C0 E0               222 	push	acc
   00C0 08                  223 	inc	r0
   00C1 E6                  224 	mov	a,@r0
   00C2 C0 E0               225 	push	acc
   00C4 8A 82               226 	mov	dpl,r2
   00C6 8B 83               227 	mov	dph,r3
   00C8 8C F0               228 	mov	b,r4
   00CA ED                  229 	mov	a,r5
   00CB 12s00r00            230 	lcall	___fsmul
   00CE AA 82               231 	mov	r2,dpl
   00D0 AB 83               232 	mov	r3,dph
   00D2 AC F0               233 	mov	r4,b
   00D4 FD                  234 	mov	r5,a
   00D5 E5 81               235 	mov	a,sp
   00D7 24 FC               236 	add	a,#0xfc
   00D9 F5 81               237 	mov	sp,a
   00DB 8A 82               238 	mov	dpl,r2
   00DD 8B 83               239 	mov	dph,r3
   00DF 8C F0               240 	mov	b,r4
   00E1 ED                  241 	mov	a,r5
   00E2 12s00r00            242 	lcall	_expf
   00E5 AA 82               243 	mov	r2,dpl
   00E7 AB 83               244 	mov	r3,dph
   00E9 AC F0               245 	mov	r4,b
   00EB FD                  246 	mov	r5,a
   00EC                     247 00107$:
   00EC D0*00               248 	pop	_bp
   00EE 22                  249 	ret
                            250 	.area CSEG    (CODE)
                            251 	.area CONST   (CODE)
                            252 	.area XINIT   (CODE)
                            253 	.area CABS    (ABS,CODE)
