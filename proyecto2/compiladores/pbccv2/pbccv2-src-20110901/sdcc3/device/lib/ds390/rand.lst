                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:16 2015
                              5 ;--------------------------------------------------------
                              6 	.module rand
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _rand
                             31 	.globl _srand
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 ;--------------------------------------------------------
                             44 ; internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area DSEG    (DATA)
                             47 ;--------------------------------------------------------
                             48 ; overlayable items in internal ram 
                             49 ;--------------------------------------------------------
                             50 	.area OSEG    (OVR,DATA)
                             51 ;--------------------------------------------------------
                             52 ; indirectly addressable internal ram data
                             53 ;--------------------------------------------------------
                             54 	.area ISEG    (DATA)
                             55 ;--------------------------------------------------------
                             56 ; absolute internal ram data
                             57 ;--------------------------------------------------------
                             58 	.area IABS    (ABS,DATA)
                             59 	.area IABS    (ABS,DATA)
                             60 ;--------------------------------------------------------
                             61 ; bit data
                             62 ;--------------------------------------------------------
                             63 	.area BSEG    (BIT)
                             64 ;--------------------------------------------------------
                             65 ; paged external ram data
                             66 ;--------------------------------------------------------
                             67 	.area PSEG    (PAG,XDATA)
                             68 ;--------------------------------------------------------
                             69 ; external ram data
                             70 ;--------------------------------------------------------
                             71 	.area XSEG    (XDATA)
                             72 ;--------------------------------------------------------
                             73 ; absolute external ram data
                             74 ;--------------------------------------------------------
                             75 	.area XABS    (ABS,XDATA)
                             76 ;--------------------------------------------------------
                             77 ; external initialized ram data
                             78 ;--------------------------------------------------------
                             79 	.area XISEG   (XDATA)
   0000                      80 _next:
   0000                      81 	.ds 4
                             82 ;--------------------------------------------------------
                             83 ; global & static initialisations
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area GSINIT  (CODE)
                             87 	.area GSFINAL (CODE)
                             88 	.area GSINIT  (CODE)
                             89 ;--------------------------------------------------------
                             90 ; Home
                             91 ;--------------------------------------------------------
                             92 	.area HOME    (CODE)
                             93 	.area HOME    (CODE)
                             94 ;--------------------------------------------------------
                             95 ; code
                             96 ;--------------------------------------------------------
                             97 	.area CSEG    (CODE)
                             98 ;------------------------------------------------------------
                             99 ;Allocation info for local variables in function 'rand'
                            100 ;------------------------------------------------------------
                            101 ;------------------------------------------------------------
                            102 ;	rand.c:33: int rand(void)
                            103 ;	-----------------------------------------
                            104 ;	 function rand
                            105 ;	-----------------------------------------
   0000                     106 _rand:
                    0002    107 	ar2 = 0x02
                    0003    108 	ar3 = 0x03
                    0004    109 	ar4 = 0x04
                    0005    110 	ar5 = 0x05
                    0006    111 	ar6 = 0x06
                    0007    112 	ar7 = 0x07
                    0000    113 	ar0 = 0x00
                    0001    114 	ar1 = 0x01
                            115 ;	rand.c:35: next = next * 1103515245UL + 12345;
   0000 90s00r00r00         116 	mov	dptr,#_next
                            117 ;	genAssign: resultIsFar = TRUE
   0004 75 86 21            118 	mov	dps,#0x21
   0007 90s00r00r00         119 	mov	dptr,#__mullong_PARM_2
   000B E0                  120 	movx	a,@dptr
   000C F0                  121 	movx	@dptr,a
   000D A3                  122 	inc	dptr
   000E A3                  123 	inc	dptr
   000F E0                  124 	movx	a,@dptr
   0010 F0                  125 	movx	@dptr,a
   0011 A3                  126 	inc	dptr
   0012 A3                  127 	inc	dptr
   0013 E0                  128 	movx	a,@dptr
   0014 F0                  129 	movx	@dptr,a
   0015 A3                  130 	inc	dptr
   0016 A3                  131 	inc	dptr
   0017 E0                  132 	movx	a,@dptr
   0018 F0                  133 	movx	@dptr,a
   0019 75 86 00            134 	mov	dps,#0
   001C 90 C6 4E 6D         135 	mov	dptr,#0xC64E6D
   0020 75 F0 41            136 	mov	b,#0x41
   0023 12s00r00r00         137 	lcall	__mullong
   0027 AA 82               138 	mov	r2,dpl
   0029 AB 83               139 	mov	r3,dph
   002B AC 93               140 	mov	r4,dpx
   002D AD F0               141 	mov	r5,b
   002F 90s00r00r00         142 	mov	dptr,#_next
   0033 74 39               143 	mov	a,#0x39
   0035 2A                  144 	add	a,r2
   0036 F0                  145 	movx	@dptr,a
   0037 74 30               146 	mov	a,#0x30
   0039 3B                  147 	addc	a,r3
   003A A3                  148 	inc	dptr
   003B F0                  149 	movx	@dptr,a
   003C E4                  150 	clr  a
   003D 3C                  151 	addc	a,r4
   003E A3                  152 	inc	dptr
   003F F0                  153 	movx	@dptr,a
   0040 E4                  154 	clr  a
   0041 3D                  155 	addc	a,r5
   0042 A3                  156 	inc	dptr
   0043 F0                  157 	movx	@dptr,a
                            158 ;	rand.c:36: return (unsigned int)(next/65536) % (RAND_MAX + 1U);
   0044 90s00r00r00         159 	mov	dptr,#_next
   0048 A3                  160 	inc	dptr
   0049 A3                  161 	inc	dptr
   004A E0                  162 	movx	a,@dptr
   004B FA                  163 	mov	r2,a
   004C A3                  164 	inc	dptr
   004D E0                  165 	movx	a,@dptr
   004E FB                  166 	mov	r3,a
   004F 7C 00               167 	mov	r4,#0
   0051 7D 00               168 	mov	r5,#0
   0053 8A 82               169 	mov	dpl,r2
   0055 74 7F               170 	mov	a,#0x7F
   0057 5B                  171 	anl	a,r3
   0058 F5 83               172 	mov	dph,a
   005A                     173 00101$:
   005A 22                  174 	ret
                            175 ;------------------------------------------------------------
                            176 ;Allocation info for local variables in function 'srand'
                            177 ;------------------------------------------------------------
                            178 ;seed                      Allocated to registers r2 r3 
                            179 ;------------------------------------------------------------
                            180 ;	rand.c:39: void srand(unsigned int seed)
                            181 ;	-----------------------------------------
                            182 ;	 function srand
                            183 ;	-----------------------------------------
   005B                     184 _srand:
   005B 85 82 84            185 	mov	dpl1,dpl
   005E 85 83 85            186 	mov	dph1,dph
                            187 ;	rand.c:41: next = seed;
   0061 90s00r00r00         188 	mov	dptr,#_next
   0065 E5 84               189 	mov	a,dpl1
   0067 F0                  190 	movx	@dptr,a
   0068 A3                  191 	inc	dptr
   0069 E5 85               192 	mov	a,dph1
   006B F0                  193 	movx	@dptr,a
   006C A3                  194 	inc	dptr
   006D E4                  195 	clr	a
   006E F0                  196 	movx	@dptr,a
   006F A3                  197 	inc	dptr
   0070 E4                  198 	clr	a
   0071 F0                  199 	movx	@dptr,a
   0072                     200 00101$:
   0072 22                  201 	ret
                            202 	.area CSEG    (CODE)
                            203 	.area CONST   (CODE)
                            204 	.area XINIT   (CODE)
   0000                     205 __xinit__next:
   0000 01 00 00 00         206 	.byte #0x01,#0x00,#0x00,#0x00	; 1
                            207 	.area CABS    (ABS,CODE)
