                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:29 2015
                              5 ;--------------------------------------------------------
                              6 	.module _malloc
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __sdcc_first_memheader
                             13 	.globl _malloc
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 	.area RSEG    (ABS,DATA)
   0000                      18 	.org 0x0000
                             19 ;--------------------------------------------------------
                             20 ; special function bits
                             21 ;--------------------------------------------------------
                             22 	.area RSEG    (ABS,DATA)
   0000                      23 	.org 0x0000
                             24 ;--------------------------------------------------------
                             25 ; overlayable register banks
                             26 ;--------------------------------------------------------
                             27 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      28 	.ds 8
                             29 ;--------------------------------------------------------
                             30 ; internal ram data
                             31 ;--------------------------------------------------------
                             32 	.area DSEG    (DATA)
   0000                      33 _malloc_sloc0_1_0:
   0000                      34 	.ds 2
                             35 ;--------------------------------------------------------
                             36 ; overlayable items in internal ram 
                             37 ;--------------------------------------------------------
                             38 	.area OSEG    (OVR,DATA)
                             39 ;--------------------------------------------------------
                             40 ; indirectly addressable internal ram data
                             41 ;--------------------------------------------------------
                             42 	.area ISEG    (DATA)
                             43 ;--------------------------------------------------------
                             44 ; absolute internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area IABS    (ABS,DATA)
                             47 	.area IABS    (ABS,DATA)
                             48 ;--------------------------------------------------------
                             49 ; bit data
                             50 ;--------------------------------------------------------
                             51 	.area BSEG    (BIT)
                             52 ;--------------------------------------------------------
                             53 ; paged external ram data
                             54 ;--------------------------------------------------------
                             55 	.area PSEG    (PAG,XDATA)
                             56 ;--------------------------------------------------------
                             57 ; external ram data
                             58 ;--------------------------------------------------------
                             59 	.area XSEG    (XDATA)
   0000                      60 _init_dynamic_memory_heap_1_1:
   0000                      61 	.ds 2
   0002                      62 _init_dynamic_memory_size_1_1:
   0002                      63 	.ds 2
   0004                      64 _malloc_size_1_1:
   0004                      65 	.ds 2
   0006                      66 _malloc_current_header_1_1:
   0006                      67 	.ds 2
   0008                      68 _malloc_ret_1_1:
   0008                      69 	.ds 2
                             70 ;--------------------------------------------------------
                             71 ; absolute external ram data
                             72 ;--------------------------------------------------------
                             73 	.area XABS    (ABS,XDATA)
                             74 ;--------------------------------------------------------
                             75 ; external initialized ram data
                             76 ;--------------------------------------------------------
                             77 	.area XISEG   (XDATA)
   0000                      78 __sdcc_first_memheader::
   0000                      79 	.ds 2
                             80 	.area HOME    (CODE)
                             81 	.area GSINIT0 (CODE)
                             82 	.area GSINIT1 (CODE)
                             83 	.area GSINIT2 (CODE)
                             84 	.area GSINIT3 (CODE)
                             85 	.area GSINIT4 (CODE)
                             86 	.area GSINIT5 (CODE)
                             87 	.area GSINIT  (CODE)
                             88 	.area GSFINAL (CODE)
                             89 	.area CSEG    (CODE)
                             90 ;--------------------------------------------------------
                             91 ; global & static initialisations
                             92 ;--------------------------------------------------------
                             93 	.area HOME    (CODE)
                             94 	.area GSINIT  (CODE)
                             95 	.area GSFINAL (CODE)
                             96 	.area GSINIT  (CODE)
                             97 ;--------------------------------------------------------
                             98 ; Home
                             99 ;--------------------------------------------------------
                            100 	.area HOME    (CODE)
                            101 	.area HOME    (CODE)
                            102 ;--------------------------------------------------------
                            103 ; code
                            104 ;--------------------------------------------------------
                            105 	.area CSEG    (CODE)
                            106 ;------------------------------------------------------------
                            107 ;Allocation info for local variables in function 'init_dynamic_memory'
                            108 ;------------------------------------------------------------
                            109 ;heap                      Allocated with name '_init_dynamic_memory_heap_1_1'
                            110 ;size                      Allocated with name '_init_dynamic_memory_size_1_1'
                            111 ;------------------------------------------------------------
                            112 ;	_malloc.c:166: static void init_dynamic_memory(void)
                            113 ;	-----------------------------------------
                            114 ;	 function init_dynamic_memory
                            115 ;	-----------------------------------------
   0000                     116 _init_dynamic_memory:
                    0002    117 	ar2 = 0x02
                    0003    118 	ar3 = 0x03
                    0004    119 	ar4 = 0x04
                    0005    120 	ar5 = 0x05
                    0006    121 	ar6 = 0x06
                    0007    122 	ar7 = 0x07
                    0000    123 	ar0 = 0x00
                    0001    124 	ar1 = 0x01
                            125 ;	_malloc.c:168: char __xdata * heap = (char __xdata *)_sdcc_heap;
   0000 90s00r00            126 	mov	dptr,#_init_dynamic_memory_heap_1_1
   0003 74r00               127 	mov	a,#__sdcc_heap
   0005 F0                  128 	movx	@dptr,a
   0006 A3                  129 	inc	dptr
   0007 74s00               130 	mov	a,#(__sdcc_heap >> 8)
   0009 F0                  131 	movx	@dptr,a
                            132 ;	_malloc.c:169: unsigned int size = _sdcc_heap_size;
   000A 90s00r00            133 	mov	dptr,#__sdcc_heap_size
   000D E4                  134 	clr	a
   000E 93                  135 	movc	a,@a+dptr
   000F FA                  136 	mov	r2,a
   0010 74 01               137 	mov	a,#0x01
   0012 93                  138 	movc	a,@a+dptr
   0013 FB                  139 	mov	r3,a
   0014 90s00r02            140 	mov	dptr,#_init_dynamic_memory_size_1_1
   0017 EA                  141 	mov	a,r2
   0018 F0                  142 	movx	@dptr,a
   0019 A3                  143 	inc	dptr
   001A EB                  144 	mov	a,r3
   001B F0                  145 	movx	@dptr,a
                            146 ;	_malloc.c:171: if ( !heap ) //Reserved memory starts at 0x0000 but that's NULL...
   001C 74r00               147 	mov	a,#__sdcc_heap
   001E 44s00               148 	orl	a,#(__sdcc_heap >> 8)
   0020 70 1A               149 	jnz	00102$
                            150 ;	_malloc.c:173: heap++;
   0022 90s00r00            151 	mov	dptr,#_init_dynamic_memory_heap_1_1
   0025 74 01               152 	mov	a,#0x01
   0027 24r00               153 	add	a,#__sdcc_heap
   0029 F0                  154 	movx	@dptr,a
   002A E4                  155 	clr	a
   002B 34s00               156 	addc	a,#(__sdcc_heap >> 8)
   002D A3                  157 	inc	dptr
   002E F0                  158 	movx	@dptr,a
                            159 ;	_malloc.c:174: size--;
   002F 1A                  160 	dec	r2
   0030 BA FF 01            161 	cjne	r2,#0xff,00107$
   0033 1B                  162 	dec	r3
   0034                     163 00107$:
   0034 90s00r02            164 	mov	dptr,#_init_dynamic_memory_size_1_1
   0037 EA                  165 	mov	a,r2
   0038 F0                  166 	movx	@dptr,a
   0039 A3                  167 	inc	dptr
   003A EB                  168 	mov	a,r3
   003B F0                  169 	movx	@dptr,a
   003C                     170 00102$:
                            171 ;	_malloc.c:176: _sdcc_first_memheader = (MEMHEADER __xdata * ) heap;
   003C 90s00r00            172 	mov	dptr,#_init_dynamic_memory_heap_1_1
   003F E0                  173 	movx	a,@dptr
   0040 FA                  174 	mov	r2,a
   0041 A3                  175 	inc	dptr
   0042 E0                  176 	movx	a,@dptr
   0043 FB                  177 	mov	r3,a
   0044 90s00r00            178 	mov	dptr,#__sdcc_first_memheader
   0047 EA                  179 	mov	a,r2
   0048 F0                  180 	movx	@dptr,a
   0049 A3                  181 	inc	dptr
   004A EB                  182 	mov	a,r3
   004B F0                  183 	movx	@dptr,a
                            184 ;	_malloc.c:178: _sdcc_first_memheader->next = (MEMHEADER __xdata * )(heap + size - sizeof(MEMHEADER __xdata *));
   004C 90s00r02            185 	mov	dptr,#_init_dynamic_memory_size_1_1
   004F E0                  186 	movx	a,@dptr
   0050 FC                  187 	mov	r4,a
   0051 A3                  188 	inc	dptr
   0052 E0                  189 	movx	a,@dptr
   0053 FD                  190 	mov	r5,a
   0054 EC                  191 	mov	a,r4
   0055 2A                  192 	add	a,r2
   0056 FC                  193 	mov	r4,a
   0057 ED                  194 	mov	a,r5
   0058 3B                  195 	addc	a,r3
   0059 FD                  196 	mov	r5,a
   005A EC                  197 	mov	a,r4
   005B 24 FE               198 	add	a,#0xfe
   005D FC                  199 	mov	r4,a
   005E ED                  200 	mov	a,r5
   005F 34 FF               201 	addc	a,#0xff
   0061 FD                  202 	mov	r5,a
   0062 8A 82               203 	mov	dpl,r2
   0064 8B 83               204 	mov	dph,r3
   0066 EC                  205 	mov	a,r4
   0067 F0                  206 	movx	@dptr,a
   0068 A3                  207 	inc	dptr
   0069 ED                  208 	mov	a,r5
   006A F0                  209 	movx	@dptr,a
                            210 ;	_malloc.c:179: _sdcc_first_memheader->next->next = (MEMHEADER __xdata * ) NULL; //And mark it as last
   006B 8C 82               211 	mov	dpl,r4
   006D 8D 83               212 	mov	dph,r5
   006F E4                  213 	clr	a
   0070 F0                  214 	movx	@dptr,a
   0071 A3                  215 	inc	dptr
   0072 F0                  216 	movx	@dptr,a
                            217 ;	_malloc.c:180: _sdcc_first_memheader->len        = 0;    //Empty and ready.
   0073 8A 82               218 	mov	dpl,r2
   0075 8B 83               219 	mov	dph,r3
   0077 A3                  220 	inc	dptr
   0078 A3                  221 	inc	dptr
   0079 E4                  222 	clr	a
   007A F0                  223 	movx	@dptr,a
   007B A3                  224 	inc	dptr
   007C F0                  225 	movx	@dptr,a
   007D 22                  226 	ret
                            227 ;------------------------------------------------------------
                            228 ;Allocation info for local variables in function 'malloc'
                            229 ;------------------------------------------------------------
                            230 ;sloc0                     Allocated with name '_malloc_sloc0_1_0'
                            231 ;size                      Allocated with name '_malloc_size_1_1'
                            232 ;current_header            Allocated with name '_malloc_current_header_1_1'
                            233 ;new_header                Allocated with name '_malloc_new_header_1_1'
                            234 ;ret                       Allocated with name '_malloc_ret_1_1'
                            235 ;------------------------------------------------------------
                            236 ;	_malloc.c:183: void __xdata * malloc (unsigned int size)
                            237 ;	-----------------------------------------
                            238 ;	 function malloc
                            239 ;	-----------------------------------------
   007E                     240 _malloc:
                            241 ;	_malloc.c:189: if (size>(0xFFFF-HEADER_SIZE))
   007E AA 83               242 	mov	r2,dph
   0080 E5 82               243 	mov	a,dpl
   0082 90s00r04            244 	mov	dptr,#_malloc_size_1_1
   0085 F0                  245 	movx	@dptr,a
   0086 A3                  246 	inc	dptr
   0087 CA                  247 	xch	a,r2
   0088 F0                  248 	movx	@dptr,a
   0089 FB                  249 	mov	r3,a
   008A C3                  250 	clr	c
   008B 74 FB               251 	mov	a,#0xFB
   008D 9A                  252 	subb	a,r2
   008E 74 FF               253 	mov	a,#0xFF
   0090 9B                  254 	subb	a,r3
   0091 50 04               255 	jnc	00102$
                            256 ;	_malloc.c:190: return (void __xdata *) NULL; //To prevent overflow in next line
   0093 90 00 00            257 	mov	dptr,#0x0000
   0096 22                  258 	ret
   0097                     259 00102$:
                            260 ;	_malloc.c:191: size += HEADER_SIZE; //We need a memory for header too
   0097 90s00r04            261 	mov	dptr,#_malloc_size_1_1
   009A 74 04               262 	mov	a,#0x04
   009C 2A                  263 	add	a,r2
   009D F0                  264 	movx	@dptr,a
   009E E4                  265 	clr	a
   009F 3B                  266 	addc	a,r3
   00A0 A3                  267 	inc	dptr
   00A1 F0                  268 	movx	@dptr,a
                            269 ;	_malloc.c:193: if (!_sdcc_first_memheader)
   00A2 90s00r00            270 	mov	dptr,#__sdcc_first_memheader
   00A5 E0                  271 	movx	a,@dptr
   00A6 FA                  272 	mov	r2,a
   00A7 A3                  273 	inc	dptr
   00A8 E0                  274 	movx	a,@dptr
   00A9 FB                  275 	mov	r3,a
   00AA 4A                  276 	orl	a,r2
   00AB 70 03               277 	jnz	00104$
                            278 ;	_malloc.c:194: init_dynamic_memory();
   00AD 12s00r00            279 	lcall	_init_dynamic_memory
   00B0                     280 00104$:
                            281 ;	_malloc.c:196: current_header = _sdcc_first_memheader;
   00B0 90s00r00            282 	mov	dptr,#__sdcc_first_memheader
   00B3 E0                  283 	movx	a,@dptr
   00B4 FA                  284 	mov	r2,a
   00B5 A3                  285 	inc	dptr
   00B6 E0                  286 	movx	a,@dptr
   00B7 FB                  287 	mov	r3,a
   00B8 90s00r06            288 	mov	dptr,#_malloc_current_header_1_1
   00BB EA                  289 	mov	a,r2
   00BC F0                  290 	movx	@dptr,a
   00BD A3                  291 	inc	dptr
   00BE EB                  292 	mov	a,r3
   00BF F0                  293 	movx	@dptr,a
                            294 ;	_malloc.c:199: while (1)
   00C0 90s00r04            295 	mov	dptr,#_malloc_size_1_1
   00C3 E0                  296 	movx	a,@dptr
   00C4 FA                  297 	mov	r2,a
   00C5 A3                  298 	inc	dptr
   00C6 E0                  299 	movx	a,@dptr
   00C7 FB                  300 	mov	r3,a
   00C8                     301 00110$:
                            302 ;	_malloc.c:209: if ((((unsigned int)current_header->next) -
   00C8 90s00r06            303 	mov	dptr,#_malloc_current_header_1_1
   00CB E0                  304 	movx	a,@dptr
   00CC FC                  305 	mov	r4,a
   00CD A3                  306 	inc	dptr
   00CE E0                  307 	movx	a,@dptr
   00CF FD                  308 	mov	r5,a
   00D0 8C 82               309 	mov	dpl,r4
   00D2 8D 83               310 	mov	dph,r5
   00D4 E0                  311 	movx	a,@dptr
   00D5 FE                  312 	mov	r6,a
   00D6 A3                  313 	inc	dptr
   00D7 E0                  314 	movx	a,@dptr
   00D8 FF                  315 	mov	r7,a
   00D9 8E*00               316 	mov	_malloc_sloc0_1_0,r6
   00DB 8F*01               317 	mov	(_malloc_sloc0_1_0 + 1),r7
                            318 ;	_malloc.c:210: ((unsigned int)current_header) -
   00DD 8C 00               319 	mov	ar0,r4
   00DF 8D 01               320 	mov	ar1,r5
   00E1 E5*00               321 	mov	a,_malloc_sloc0_1_0
   00E3 C3                  322 	clr	c
   00E4 98                  323 	subb	a,r0
   00E5 F5*00               324 	mov	_malloc_sloc0_1_0,a
   00E7 E5*01               325 	mov	a,(_malloc_sloc0_1_0 + 1)
   00E9 99                  326 	subb	a,r1
   00EA F5*01               327 	mov	(_malloc_sloc0_1_0 + 1),a
                            328 ;	_malloc.c:211: current_header->len) >= size)
   00EC 8C 82               329 	mov	dpl,r4
   00EE 8D 83               330 	mov	dph,r5
   00F0 A3                  331 	inc	dptr
   00F1 A3                  332 	inc	dptr
   00F2 E0                  333 	movx	a,@dptr
   00F3 F8                  334 	mov	r0,a
   00F4 A3                  335 	inc	dptr
   00F5 E0                  336 	movx	a,@dptr
   00F6 F9                  337 	mov	r1,a
   00F7 E5*00               338 	mov	a,_malloc_sloc0_1_0
   00F9 C3                  339 	clr	c
   00FA 98                  340 	subb	a,r0
   00FB F8                  341 	mov	r0,a
   00FC E5*01               342 	mov	a,(_malloc_sloc0_1_0 + 1)
   00FE 99                  343 	subb	a,r1
   00FF F9                  344 	mov	r1,a
   0100 C3                  345 	clr	c
   0101 E8                  346 	mov	a,r0
   0102 9A                  347 	subb	a,r2
   0103 E9                  348 	mov	a,r1
   0104 9B                  349 	subb	a,r3
   0105 40 0D               350 	jc	00106$
                            351 ;	_malloc.c:213: ret = current_header->mem;
   0107 90s00r08            352 	mov	dptr,#_malloc_ret_1_1
   010A 74 04               353 	mov	a,#0x04
   010C 2C                  354 	add	a,r4
   010D F0                  355 	movx	@dptr,a
   010E E4                  356 	clr	a
   010F 3D                  357 	addc	a,r5
   0110 A3                  358 	inc	dptr
   0111 F0                  359 	movx	@dptr,a
                            360 ;	_malloc.c:214: break;
   0112 80 23               361 	sjmp	00111$
   0114                     362 00106$:
                            363 ;	_malloc.c:216: current_header = current_header->next;    //else try next
   0114 90s00r06            364 	mov	dptr,#_malloc_current_header_1_1
   0117 EE                  365 	mov	a,r6
   0118 F0                  366 	movx	@dptr,a
   0119 A3                  367 	inc	dptr
   011A EF                  368 	mov	a,r7
   011B F0                  369 	movx	@dptr,a
                            370 ;	_malloc.c:217: if (!current_header->next)
   011C 90s00r06            371 	mov	dptr,#_malloc_current_header_1_1
   011F E0                  372 	movx	a,@dptr
   0120 FC                  373 	mov	r4,a
   0121 A3                  374 	inc	dptr
   0122 E0                  375 	movx	a,@dptr
   0123 FD                  376 	mov	r5,a
   0124 8C 82               377 	mov	dpl,r4
   0126 8D 83               378 	mov	dph,r5
   0128 E0                  379 	movx	a,@dptr
   0129 FC                  380 	mov	r4,a
   012A A3                  381 	inc	dptr
   012B E0                  382 	movx	a,@dptr
   012C FD                  383 	mov	r5,a
   012D 4C                  384 	orl	a,r4
   012E 70 98               385 	jnz	00110$
                            386 ;	_malloc.c:219: ret = (void __xdata *) NULL;
   0130 90s00r08            387 	mov	dptr,#_malloc_ret_1_1
   0133 E4                  388 	clr	a
   0134 F0                  389 	movx	@dptr,a
   0135 A3                  390 	inc	dptr
   0136 F0                  391 	movx	@dptr,a
                            392 ;	_malloc.c:220: break;
   0137                     393 00111$:
                            394 ;	_malloc.c:223: if (ret)
   0137 90s00r08            395 	mov	dptr,#_malloc_ret_1_1
   013A E0                  396 	movx	a,@dptr
   013B FC                  397 	mov	r4,a
   013C A3                  398 	inc	dptr
   013D E0                  399 	movx	a,@dptr
   013E FD                  400 	mov	r5,a
   013F 4C                  401 	orl	a,r4
   0140 60 5D               402 	jz	00116$
                            403 ;	_malloc.c:225: if (!current_header->len)
   0142 90s00r06            404 	mov	dptr,#_malloc_current_header_1_1
   0145 E0                  405 	movx	a,@dptr
   0146 FC                  406 	mov	r4,a
   0147 A3                  407 	inc	dptr
   0148 E0                  408 	movx	a,@dptr
   0149 FD                  409 	mov	r5,a
   014A 74 02               410 	mov	a,#0x02
   014C 2C                  411 	add	a,r4
   014D FE                  412 	mov	r6,a
   014E E4                  413 	clr	a
   014F 3D                  414 	addc	a,r5
   0150 FF                  415 	mov	r7,a
   0151 8E 82               416 	mov	dpl,r6
   0153 8F 83               417 	mov	dph,r7
   0155 E0                  418 	movx	a,@dptr
   0156 F8                  419 	mov	r0,a
   0157 A3                  420 	inc	dptr
   0158 E0                  421 	movx	a,@dptr
   0159 F9                  422 	mov	r1,a
   015A 48                  423 	orl	a,r0
   015B 70 0B               424 	jnz	00113$
                            425 ;	_malloc.c:227: current_header->len = size; //for first allocation
   015D 8E 82               426 	mov	dpl,r6
   015F 8F 83               427 	mov	dph,r7
   0161 EA                  428 	mov	a,r2
   0162 F0                  429 	movx	@dptr,a
   0163 A3                  430 	inc	dptr
   0164 EB                  431 	mov	a,r3
   0165 F0                  432 	movx	@dptr,a
   0166 80 37               433 	sjmp	00116$
   0168                     434 00113$:
                            435 ;	_malloc.c:231: new_header = (MEMHEADER __xdata * )((char __xdata *)current_header + current_header->len);
   0168 E8                  436 	mov	a,r0
   0169 2C                  437 	add	a,r4
   016A F8                  438 	mov	r0,a
   016B E9                  439 	mov	a,r1
   016C 3D                  440 	addc	a,r5
   016D F9                  441 	mov	r1,a
                            442 ;	_malloc.c:232: new_header->next = current_header->next; //and plug it into the chain
   016E 8C 82               443 	mov	dpl,r4
   0170 8D 83               444 	mov	dph,r5
   0172 E0                  445 	movx	a,@dptr
   0173 FE                  446 	mov	r6,a
   0174 A3                  447 	inc	dptr
   0175 E0                  448 	movx	a,@dptr
   0176 FF                  449 	mov	r7,a
   0177 88 82               450 	mov	dpl,r0
   0179 89 83               451 	mov	dph,r1
   017B EE                  452 	mov	a,r6
   017C F0                  453 	movx	@dptr,a
   017D A3                  454 	inc	dptr
   017E EF                  455 	mov	a,r7
   017F F0                  456 	movx	@dptr,a
                            457 ;	_malloc.c:233: current_header->next  = new_header;
   0180 8C 82               458 	mov	dpl,r4
   0182 8D 83               459 	mov	dph,r5
   0184 E8                  460 	mov	a,r0
   0185 F0                  461 	movx	@dptr,a
   0186 A3                  462 	inc	dptr
   0187 E9                  463 	mov	a,r1
   0188 F0                  464 	movx	@dptr,a
                            465 ;	_malloc.c:234: new_header->len  = size; //mark as used
   0189 88 82               466 	mov	dpl,r0
   018B 89 83               467 	mov	dph,r1
   018D A3                  468 	inc	dptr
   018E A3                  469 	inc	dptr
   018F EA                  470 	mov	a,r2
   0190 F0                  471 	movx	@dptr,a
   0191 A3                  472 	inc	dptr
   0192 EB                  473 	mov	a,r3
   0193 F0                  474 	movx	@dptr,a
                            475 ;	_malloc.c:235: ret = new_header->mem;
   0194 90s00r08            476 	mov	dptr,#_malloc_ret_1_1
   0197 74 04               477 	mov	a,#0x04
   0199 28                  478 	add	a,r0
   019A F0                  479 	movx	@dptr,a
   019B E4                  480 	clr	a
   019C 39                  481 	addc	a,r1
   019D A3                  482 	inc	dptr
   019E F0                  483 	movx	@dptr,a
   019F                     484 00116$:
                            485 ;	_malloc.c:239: return ret;
   019F 90s00r08            486 	mov	dptr,#_malloc_ret_1_1
   01A2 E0                  487 	movx	a,@dptr
   01A3 FA                  488 	mov	r2,a
   01A4 A3                  489 	inc	dptr
   01A5 E0                  490 	movx	a,@dptr
   01A6 8A 82               491 	mov	dpl,r2
   01A8 F5 83               492 	mov	dph,a
   01AA 22                  493 	ret
                            494 	.area CSEG    (CODE)
                            495 	.area CONST   (CODE)
                            496 	.area XINIT   (CODE)
   0000                     497 __xinit___sdcc_first_memheader:
   0000 00 00               498 	.byte #0x00,#0x00
                            499 	.area CABS    (ABS,CODE)
