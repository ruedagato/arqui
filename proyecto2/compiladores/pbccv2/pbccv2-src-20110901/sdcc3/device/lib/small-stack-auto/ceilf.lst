                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:31 2015
                              5 ;--------------------------------------------------------
                              6 	.module ceilf
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _ceilf
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'ceilf'
                             93 ;------------------------------------------------------------
                             94 ;x                         Allocated to stack - offset 1
                             95 ;r                         Allocated to stack - offset 5
                             96 ;sloc0                     Allocated to stack - offset 9
                             97 ;------------------------------------------------------------
                             98 ;	ceilf.c:33: float ceilf(float x) _FLOAT_FUNC_REENTRANT
                             99 ;	-----------------------------------------
                            100 ;	 function ceilf
                            101 ;	-----------------------------------------
   0000                     102 _ceilf:
                    0002    103 	ar2 = 0x02
                    0003    104 	ar3 = 0x03
                    0004    105 	ar4 = 0x04
                    0005    106 	ar5 = 0x05
                    0006    107 	ar6 = 0x06
                    0007    108 	ar7 = 0x07
                    0000    109 	ar0 = 0x00
                    0001    110 	ar1 = 0x01
   0000 C0*00               111 	push	_bp
   0002 85 81*00            112 	mov	_bp,sp
   0005 C0 82               113 	push	dpl
   0007 C0 83               114 	push	dph
   0009 C0 F0               115 	push	b
   000B C0 E0               116 	push	acc
   000D E5 81               117 	mov	a,sp
   000F 24 0C               118 	add	a,#0x0c
   0011 F5 81               119 	mov	sp,a
                            120 ;	ceilf.c:36: r=x;
   0013 A8*00               121 	mov	r0,_bp
   0015 08                  122 	inc	r0
   0016 86 82               123 	mov	dpl,@r0
   0018 08                  124 	inc	r0
   0019 86 83               125 	mov	dph,@r0
   001B 08                  126 	inc	r0
   001C 86 F0               127 	mov	b,@r0
   001E 08                  128 	inc	r0
   001F E6                  129 	mov	a,@r0
   0020 12s00r00            130 	lcall	___fs2slong
   0023 AA 82               131 	mov	r2,dpl
   0025 AB 83               132 	mov	r3,dph
   0027 AC F0               133 	mov	r4,b
   0029 FD                  134 	mov	r5,a
   002A E5*00               135 	mov	a,_bp
   002C 24 05               136 	add	a,#0x05
   002E F8                  137 	mov	r0,a
   002F A6 02               138 	mov	@r0,ar2
   0031 08                  139 	inc	r0
   0032 A6 03               140 	mov	@r0,ar3
   0034 08                  141 	inc	r0
   0035 A6 04               142 	mov	@r0,ar4
   0037 08                  143 	inc	r0
   0038 A6 05               144 	mov	@r0,ar5
                            145 ;	ceilf.c:37: if (r<0)
   003A E5*00               146 	mov	a,_bp
   003C 24 05               147 	add	a,#0x05
   003E F8                  148 	mov	r0,a
   003F 08                  149 	inc	r0
   0040 08                  150 	inc	r0
   0041 08                  151 	inc	r0
   0042 E6                  152 	mov	a,@r0
   0043 30 E7 34            153 	jnb	acc.7,00102$
                            154 ;	ceilf.c:38: return r;
   0046 E5*00               155 	mov	a,_bp
   0048 24 05               156 	add	a,#0x05
   004A F8                  157 	mov	r0,a
   004B 86 82               158 	mov	dpl,@r0
   004D 08                  159 	inc	r0
   004E 86 83               160 	mov	dph,@r0
   0050 08                  161 	inc	r0
   0051 86 F0               162 	mov	b,@r0
   0053 08                  163 	inc	r0
   0054 E6                  164 	mov	a,@r0
   0055 12s00r00            165 	lcall	___slong2fs
   0058 C8                  166 	xch	a,r0
   0059 E5*00               167 	mov	a,_bp
   005B 24 09               168 	add	a,#0x09
   005D C8                  169 	xch	a,r0
   005E A6 82               170 	mov	@r0,dpl
   0060 08                  171 	inc	r0
   0061 A6 83               172 	mov	@r0,dph
   0063 08                  173 	inc	r0
   0064 A6 F0               174 	mov	@r0,b
   0066 08                  175 	inc	r0
   0067 F6                  176 	mov	@r0,a
   0068 E5*00               177 	mov	a,_bp
   006A 24 09               178 	add	a,#0x09
   006C F8                  179 	mov	r0,a
   006D 86 82               180 	mov	dpl,@r0
   006F 08                  181 	inc	r0
   0070 86 83               182 	mov	dph,@r0
   0072 08                  183 	inc	r0
   0073 86 F0               184 	mov	b,@r0
   0075 08                  185 	inc	r0
   0076 E6                  186 	mov	a,@r0
   0077 02s00rEA            187 	ljmp	00104$
   007A                     188 00102$:
                            189 ;	ceilf.c:40: return (r+((r<x)?1:0));
   007A E5*00               190 	mov	a,_bp
   007C 24 05               191 	add	a,#0x05
   007E F8                  192 	mov	r0,a
   007F 86 82               193 	mov	dpl,@r0
   0081 08                  194 	inc	r0
   0082 86 83               195 	mov	dph,@r0
   0084 08                  196 	inc	r0
   0085 86 F0               197 	mov	b,@r0
   0087 08                  198 	inc	r0
   0088 E6                  199 	mov	a,@r0
   0089 12s00r00            200 	lcall	___slong2fs
   008C AC 82               201 	mov	r4,dpl
   008E AD 83               202 	mov	r5,dph
   0090 AA F0               203 	mov	r2,b
   0092 FB                  204 	mov	r3,a
   0093 A8*00               205 	mov	r0,_bp
   0095 08                  206 	inc	r0
   0096 E6                  207 	mov	a,@r0
   0097 C0 E0               208 	push	acc
   0099 08                  209 	inc	r0
   009A E6                  210 	mov	a,@r0
   009B C0 E0               211 	push	acc
   009D 08                  212 	inc	r0
   009E E6                  213 	mov	a,@r0
   009F C0 E0               214 	push	acc
   00A1 08                  215 	inc	r0
   00A2 E6                  216 	mov	a,@r0
   00A3 C0 E0               217 	push	acc
   00A5 8C 82               218 	mov	dpl,r4
   00A7 8D 83               219 	mov	dph,r5
   00A9 8A F0               220 	mov	b,r2
   00AB EB                  221 	mov	a,r3
   00AC 12s00r00            222 	lcall	___fslt
   00AF AA 82               223 	mov	r2,dpl
   00B1 E5 81               224 	mov	a,sp
   00B3 24 FC               225 	add	a,#0xfc
   00B5 F5 81               226 	mov	sp,a
   00B7 EA                  227 	mov	a,r2
   00B8 60 04               228 	jz	00106$
   00BA 7A 01               229 	mov	r2,#0x01
   00BC 80 02               230 	sjmp	00107$
   00BE                     231 00106$:
   00BE 7A 00               232 	mov	r2,#0x00
   00C0                     233 00107$:
   00C0 E4                  234 	clr	a
   00C1 FB                  235 	mov	r3,a
   00C2 33                  236 	rlc	a
   00C3 95 E0               237 	subb	a,acc
   00C5 FC                  238 	mov	r4,a
   00C6 FD                  239 	mov	r5,a
   00C7 E5*00               240 	mov	a,_bp
   00C9 24 05               241 	add	a,#0x05
   00CB F8                  242 	mov	r0,a
   00CC EA                  243 	mov	a,r2
   00CD 26                  244 	add	a,@r0
   00CE FA                  245 	mov	r2,a
   00CF EB                  246 	mov	a,r3
   00D0 08                  247 	inc	r0
   00D1 36                  248 	addc	a,@r0
   00D2 FB                  249 	mov	r3,a
   00D3 EC                  250 	mov	a,r4
   00D4 08                  251 	inc	r0
   00D5 36                  252 	addc	a,@r0
   00D6 FC                  253 	mov	r4,a
   00D7 ED                  254 	mov	a,r5
   00D8 08                  255 	inc	r0
   00D9 36                  256 	addc	a,@r0
   00DA 8A 82               257 	mov	dpl,r2
   00DC 8B 83               258 	mov	dph,r3
   00DE 8C F0               259 	mov	b,r4
   00E0 12s00r00            260 	lcall	___slong2fs
   00E3 AA 82               261 	mov	r2,dpl
   00E5 AB 83               262 	mov	r3,dph
   00E7 AC F0               263 	mov	r4,b
   00E9 FD                  264 	mov	r5,a
   00EA                     265 00104$:
   00EA 85*00 81            266 	mov	sp,_bp
   00ED D0*00               267 	pop	_bp
   00EF 22                  268 	ret
                            269 	.area CSEG    (CODE)
                            270 	.area CONST   (CODE)
                            271 	.area XINIT   (CODE)
                            272 	.area CABS    (ABS,CODE)
