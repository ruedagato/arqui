                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:29 2015
                              5 ;--------------------------------------------------------
                              6 	.module _memchr
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _memchr_PARM_3
                             13 	.globl _memchr_PARM_2
                             14 	.globl _memchr
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 	.area RSEG    (ABS,DATA)
   0000                      19 	.org 0x0000
                             20 ;--------------------------------------------------------
                             21 ; special function bits
                             22 ;--------------------------------------------------------
                             23 	.area RSEG    (ABS,DATA)
   0000                      24 	.org 0x0000
                             25 ;--------------------------------------------------------
                             26 ; overlayable register banks
                             27 ;--------------------------------------------------------
                             28 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      29 	.ds 8
                             30 ;--------------------------------------------------------
                             31 ; internal ram data
                             32 ;--------------------------------------------------------
                             33 	.area DSEG    (DATA)
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in internal ram 
                             36 ;--------------------------------------------------------
                             37 	.area OSEG    (OVR,DATA)
                             38 ;--------------------------------------------------------
                             39 ; indirectly addressable internal ram data
                             40 ;--------------------------------------------------------
                             41 	.area ISEG    (DATA)
                             42 ;--------------------------------------------------------
                             43 ; absolute internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area IABS    (ABS,DATA)
                             46 	.area IABS    (ABS,DATA)
                             47 ;--------------------------------------------------------
                             48 ; bit data
                             49 ;--------------------------------------------------------
                             50 	.area BSEG    (BIT)
                             51 ;--------------------------------------------------------
                             52 ; paged external ram data
                             53 ;--------------------------------------------------------
                             54 	.area PSEG    (PAG,XDATA)
                             55 ;--------------------------------------------------------
                             56 ; external ram data
                             57 ;--------------------------------------------------------
                             58 	.area XSEG    (XDATA)
   0000                      59 _memchr_PARM_2:
   0000                      60 	.ds 2
   0002                      61 _memchr_PARM_3:
   0002                      62 	.ds 2
   0004                      63 _memchr_s_1_1:
   0004                      64 	.ds 3
                             65 ;--------------------------------------------------------
                             66 ; absolute external ram data
                             67 ;--------------------------------------------------------
                             68 	.area XABS    (ABS,XDATA)
                             69 ;--------------------------------------------------------
                             70 ; external initialized ram data
                             71 ;--------------------------------------------------------
                             72 	.area XISEG   (XDATA)
                             73 	.area HOME    (CODE)
                             74 	.area GSINIT0 (CODE)
                             75 	.area GSINIT1 (CODE)
                             76 	.area GSINIT2 (CODE)
                             77 	.area GSINIT3 (CODE)
                             78 	.area GSINIT4 (CODE)
                             79 	.area GSINIT5 (CODE)
                             80 	.area GSINIT  (CODE)
                             81 	.area GSFINAL (CODE)
                             82 	.area CSEG    (CODE)
                             83 ;--------------------------------------------------------
                             84 ; global & static initialisations
                             85 ;--------------------------------------------------------
                             86 	.area HOME    (CODE)
                             87 	.area GSINIT  (CODE)
                             88 	.area GSFINAL (CODE)
                             89 	.area GSINIT  (CODE)
                             90 ;--------------------------------------------------------
                             91 ; Home
                             92 ;--------------------------------------------------------
                             93 	.area HOME    (CODE)
                             94 	.area HOME    (CODE)
                             95 ;--------------------------------------------------------
                             96 ; code
                             97 ;--------------------------------------------------------
                             98 	.area CSEG    (CODE)
                             99 ;------------------------------------------------------------
                            100 ;Allocation info for local variables in function 'memchr'
                            101 ;------------------------------------------------------------
                            102 ;c                         Allocated with name '_memchr_PARM_2'
                            103 ;n                         Allocated with name '_memchr_PARM_3'
                            104 ;s                         Allocated with name '_memchr_s_1_1'
                            105 ;p                         Allocated with name '_memchr_p_1_1'
                            106 ;end                       Allocated with name '_memchr_end_1_1'
                            107 ;------------------------------------------------------------
                            108 ;	_memchr.c:31: void *memchr(const void *s, int c, size_t n)
                            109 ;	-----------------------------------------
                            110 ;	 function memchr
                            111 ;	-----------------------------------------
   0000                     112 _memchr:
                    0002    113 	ar2 = 0x02
                    0003    114 	ar3 = 0x03
                    0004    115 	ar4 = 0x04
                    0005    116 	ar5 = 0x05
                    0006    117 	ar6 = 0x06
                    0007    118 	ar7 = 0x07
                    0000    119 	ar0 = 0x00
                    0001    120 	ar1 = 0x01
   0000 AA F0               121 	mov	r2,b
   0002 AB 83               122 	mov	r3,dph
   0004 E5 82               123 	mov	a,dpl
   0006 90s00r04            124 	mov	dptr,#_memchr_s_1_1
   0009 F0                  125 	movx	@dptr,a
   000A A3                  126 	inc	dptr
   000B EB                  127 	mov	a,r3
   000C F0                  128 	movx	@dptr,a
   000D A3                  129 	inc	dptr
   000E EA                  130 	mov	a,r2
   000F F0                  131 	movx	@dptr,a
                            132 ;	_memchr.c:33: unsigned char *p = (unsigned char *)s;
   0010 90s00r04            133 	mov	dptr,#_memchr_s_1_1
   0013 E0                  134 	movx	a,@dptr
   0014 FA                  135 	mov	r2,a
   0015 A3                  136 	inc	dptr
   0016 E0                  137 	movx	a,@dptr
   0017 FB                  138 	mov	r3,a
   0018 A3                  139 	inc	dptr
   0019 E0                  140 	movx	a,@dptr
   001A FC                  141 	mov	r4,a
                            142 ;	_memchr.c:34: unsigned char *end = p + n;
   001B 90s00r02            143 	mov	dptr,#_memchr_PARM_3
   001E E0                  144 	movx	a,@dptr
   001F FD                  145 	mov	r5,a
   0020 A3                  146 	inc	dptr
   0021 E0                  147 	movx	a,@dptr
   0022 FE                  148 	mov	r6,a
   0023 ED                  149 	mov	a,r5
   0024 2A                  150 	add	a,r2
   0025 FD                  151 	mov	r5,a
   0026 EE                  152 	mov	a,r6
   0027 3B                  153 	addc	a,r3
   0028 FE                  154 	mov	r6,a
   0029 8C 07               155 	mov	ar7,r4
                            156 ;	_memchr.c:38: return(0);
   002B 90s00r00            157 	mov	dptr,#_memchr_PARM_2
   002E E0                  158 	movx	a,@dptr
   002F F8                  159 	mov	r0,a
   0030 A3                  160 	inc	dptr
   0031 E0                  161 	movx	a,@dptr
   0032 F9                  162 	mov	r1,a
   0033                     163 00103$:
                            164 ;	_memchr.c:35: for(; p != end; p++)
   0033 EA                  165 	mov	a,r2
   0034 B5 05 0A            166 	cjne	a,ar5,00112$
   0037 EB                  167 	mov	a,r3
   0038 B5 06 06            168 	cjne	a,ar6,00112$
   003B EC                  169 	mov	a,r4
   003C B5 07 02            170 	cjne	a,ar7,00112$
   003F 80 37               171 	sjmp	00106$
   0041                     172 00112$:
                            173 ;	_memchr.c:36: if(*p == c)
   0041 C0 05               174 	push	ar5
   0043 C0 06               175 	push	ar6
   0045 C0 07               176 	push	ar7
   0047 8A 82               177 	mov	dpl,r2
   0049 8B 83               178 	mov	dph,r3
   004B 8C F0               179 	mov	b,r4
   004D 12s00r00            180 	lcall	__gptrget
   0050 FD                  181 	mov	r5,a
   0051 7E 00               182 	mov	r6,#0x00
   0053 B5 00 06            183 	cjne	a,ar0,00113$
   0056 EE                  184 	mov	a,r6
   0057 B5 01 02            185 	cjne	a,ar1,00113$
   005A 80 08               186 	sjmp	00114$
   005C                     187 00113$:
   005C D0 07               188 	pop	ar7
   005E D0 06               189 	pop	ar6
   0060 D0 05               190 	pop	ar5
   0062 80 0D               191 	sjmp	00105$
   0064                     192 00114$:
   0064 D0 07               193 	pop	ar7
   0066 D0 06               194 	pop	ar6
   0068 D0 05               195 	pop	ar5
                            196 ;	_memchr.c:37: return((void *)p);
   006A 8A 82               197 	mov	dpl,r2
   006C 8B 83               198 	mov	dph,r3
   006E 8C F0               199 	mov	b,r4
   0070 22                  200 	ret
   0071                     201 00105$:
                            202 ;	_memchr.c:35: for(; p != end; p++)
   0071 0A                  203 	inc	r2
   0072 BA 00 BE            204 	cjne	r2,#0x00,00103$
   0075 0B                  205 	inc	r3
   0076 80 BB               206 	sjmp	00103$
   0078                     207 00106$:
                            208 ;	_memchr.c:38: return(0);
   0078 90 00 00            209 	mov	dptr,#0x0000
   007B 75 F0 00            210 	mov	b,#0x00
   007E 22                  211 	ret
                            212 	.area CSEG    (CODE)
                            213 	.area CONST   (CODE)
                            214 	.area XINIT   (CODE)
                            215 	.area CABS    (ABS,CODE)
