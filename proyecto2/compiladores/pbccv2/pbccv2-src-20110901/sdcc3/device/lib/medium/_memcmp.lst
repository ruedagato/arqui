                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:26 2015
                              5 ;--------------------------------------------------------
                              6 	.module _memcmp
                              7 	.optsdcc -mmcs51 --model-medium
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _memcmp_PARM_3
                             13 	.globl _memcmp_PARM_2
                             14 	.globl _memcmp
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 	.area RSEG    (ABS,DATA)
   0000                      19 	.org 0x0000
                             20 ;--------------------------------------------------------
                             21 ; special function bits
                             22 ;--------------------------------------------------------
                             23 	.area RSEG    (ABS,DATA)
   0000                      24 	.org 0x0000
                             25 ;--------------------------------------------------------
                             26 ; overlayable register banks
                             27 ;--------------------------------------------------------
                             28 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      29 	.ds 8
                             30 ;--------------------------------------------------------
                             31 ; internal ram data
                             32 ;--------------------------------------------------------
                             33 	.area DSEG    (DATA)
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in internal ram 
                             36 ;--------------------------------------------------------
                             37 	.area OSEG    (OVR,DATA)
                             38 ;--------------------------------------------------------
                             39 ; indirectly addressable internal ram data
                             40 ;--------------------------------------------------------
                             41 	.area ISEG    (DATA)
                             42 ;--------------------------------------------------------
                             43 ; absolute internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area IABS    (ABS,DATA)
                             46 	.area IABS    (ABS,DATA)
                             47 ;--------------------------------------------------------
                             48 ; bit data
                             49 ;--------------------------------------------------------
                             50 	.area BSEG    (BIT)
                             51 ;--------------------------------------------------------
                             52 ; paged external ram data
                             53 ;--------------------------------------------------------
                             54 	.area PSEG    (PAG,XDATA)
   0000                      55 _memcmp_PARM_2:
   0000                      56 	.ds 3
   0003                      57 _memcmp_PARM_3:
   0003                      58 	.ds 2
   0005                      59 _memcmp_buf1_1_1:
   0005                      60 	.ds 3
                             61 ;--------------------------------------------------------
                             62 ; external ram data
                             63 ;--------------------------------------------------------
                             64 	.area XSEG    (XDATA)
                             65 ;--------------------------------------------------------
                             66 ; absolute external ram data
                             67 ;--------------------------------------------------------
                             68 	.area XABS    (ABS,XDATA)
                             69 ;--------------------------------------------------------
                             70 ; external initialized ram data
                             71 ;--------------------------------------------------------
                             72 	.area XISEG   (XDATA)
                             73 	.area HOME    (CODE)
                             74 	.area GSINIT0 (CODE)
                             75 	.area GSINIT1 (CODE)
                             76 	.area GSINIT2 (CODE)
                             77 	.area GSINIT3 (CODE)
                             78 	.area GSINIT4 (CODE)
                             79 	.area GSINIT5 (CODE)
                             80 	.area GSINIT  (CODE)
                             81 	.area GSFINAL (CODE)
                             82 	.area CSEG    (CODE)
                             83 ;--------------------------------------------------------
                             84 ; global & static initialisations
                             85 ;--------------------------------------------------------
                             86 	.area HOME    (CODE)
                             87 	.area GSINIT  (CODE)
                             88 	.area GSFINAL (CODE)
                             89 	.area GSINIT  (CODE)
                             90 ;--------------------------------------------------------
                             91 ; Home
                             92 ;--------------------------------------------------------
                             93 	.area HOME    (CODE)
                             94 	.area HOME    (CODE)
                             95 ;--------------------------------------------------------
                             96 ; code
                             97 ;--------------------------------------------------------
                             98 	.area CSEG    (CODE)
                             99 ;------------------------------------------------------------
                            100 ;Allocation info for local variables in function 'memcmp'
                            101 ;------------------------------------------------------------
                            102 ;------------------------------------------------------------
                            103 ;	_memcmp.c:31: int memcmp (
                            104 ;	-----------------------------------------
                            105 ;	 function memcmp
                            106 ;	-----------------------------------------
   0000                     107 _memcmp:
                    0002    108 	ar2 = 0x02
                    0003    109 	ar3 = 0x03
                    0004    110 	ar4 = 0x04
                    0005    111 	ar5 = 0x05
                    0006    112 	ar6 = 0x06
                    0007    113 	ar7 = 0x07
                    0000    114 	ar0 = 0x00
                    0001    115 	ar1 = 0x01
   0000 AA F0               116 	mov	r2,b
   0002 AB 83               117 	mov	r3,dph
   0004 E5 82               118 	mov	a,dpl
   0006 78r05               119 	mov	r0,#_memcmp_buf1_1_1
   0008 F2                  120 	movx	@r0,a
   0009 08                  121 	inc	r0
   000A EB                  122 	mov	a,r3
   000B F2                  123 	movx	@r0,a
   000C 08                  124 	inc	r0
   000D EA                  125 	mov	a,r2
   000E F2                  126 	movx	@r0,a
                            127 ;	_memcmp.c:37: if (!count)
   000F 78r03               128 	mov	r0,#_memcmp_PARM_3
   0011 E2                  129 	movx	a,@r0
   0012 F5 F0               130 	mov	b,a
   0014 08                  131 	inc	r0
   0015 E2                  132 	movx	a,@r0
   0016 45 F0               133 	orl	a,b
   0018 70 04               134 	jnz	00112$
                            135 ;	_memcmp.c:38: return(0);
   001A 90 00 00            136 	mov	dptr,#0x0000
   001D 22                  137 	ret
                            138 ;	_memcmp.c:40: while ( --count && *((char *)buf1) == *((char *)buf2) ) {
   001E                     139 00112$:
   001E 78r03               140 	mov	r0,#_memcmp_PARM_3
   0020 E2                  141 	movx	a,@r0
   0021 FD                  142 	mov	r5,a
   0022 08                  143 	inc	r0
   0023 E2                  144 	movx	a,@r0
   0024 FE                  145 	mov	r6,a
   0025                     146 00104$:
   0025 1D                  147 	dec	r5
   0026 BD FF 01            148 	cjne	r5,#0xff,00115$
   0029 1E                  149 	dec	r6
   002A                     150 00115$:
   002A ED                  151 	mov	a,r5
   002B 4E                  152 	orl	a,r6
   002C 60 53               153 	jz	00106$
   002E C0 05               154 	push	ar5
   0030 C0 06               155 	push	ar6
   0032 78r05               156 	mov	r0,#_memcmp_buf1_1_1
   0034 E2                  157 	movx	a,@r0
   0035 F5 82               158 	mov	dpl,a
   0037 08                  159 	inc	r0
   0038 E2                  160 	movx	a,@r0
   0039 F5 83               161 	mov	dph,a
   003B 08                  162 	inc	r0
   003C E2                  163 	movx	a,@r0
   003D F5 F0               164 	mov	b,a
   003F 12s00r00            165 	lcall	__gptrget
   0042 FF                  166 	mov	r7,a
   0043 78r00               167 	mov	r0,#_memcmp_PARM_2
   0045 E2                  168 	movx	a,@r0
   0046 FA                  169 	mov	r2,a
   0047 08                  170 	inc	r0
   0048 E2                  171 	movx	a,@r0
   0049 FB                  172 	mov	r3,a
   004A 08                  173 	inc	r0
   004B E2                  174 	movx	a,@r0
   004C FC                  175 	mov	r4,a
   004D 8A 82               176 	mov	dpl,r2
   004F 8B 83               177 	mov	dph,r3
   0051 8C F0               178 	mov	b,r4
   0053 12s00r00            179 	lcall	__gptrget
   0056 FD                  180 	mov	r5,a
   0057 EF                  181 	mov	a,r7
   0058 B5 05 02            182 	cjne	a,ar5,00117$
   005B 80 06               183 	sjmp	00118$
   005D                     184 00117$:
   005D D0 06               185 	pop	ar6
   005F D0 05               186 	pop	ar5
   0061 80 1E               187 	sjmp	00106$
   0063                     188 00118$:
   0063 D0 06               189 	pop	ar6
   0065 D0 05               190 	pop	ar5
                            191 ;	_memcmp.c:41: buf1 = (char *)buf1 + 1;
   0067 78r05               192 	mov	r0,#_memcmp_buf1_1_1
   0069 E2                  193 	movx	a,@r0
   006A 24 01               194 	add	a,#0x01
   006C F2                  195 	movx	@r0,a
   006D 08                  196 	inc	r0
   006E E2                  197 	movx	a,@r0
   006F 34 00               198 	addc	a,#0x00
   0071 F2                  199 	movx	@r0,a
                            200 ;	_memcmp.c:42: buf2 = (char *)buf2 + 1;
   0072 78r00               201 	mov	r0,#_memcmp_PARM_2
   0074 74 01               202 	mov	a,#0x01
   0076 2A                  203 	add	a,r2
   0077 F2                  204 	movx	@r0,a
   0078 E4                  205 	clr	a
   0079 3B                  206 	addc	a,r3
   007A 08                  207 	inc	r0
   007B F2                  208 	movx	@r0,a
   007C 08                  209 	inc	r0
   007D EC                  210 	mov	a,r4
   007E F2                  211 	movx	@r0,a
   007F 80 A4               212 	sjmp	00104$
   0081                     213 00106$:
                            214 ;	_memcmp.c:45: return( *((unsigned char *)buf1) - *((unsigned char *)buf2) );
   0081 78r05               215 	mov	r0,#_memcmp_buf1_1_1
   0083 E2                  216 	movx	a,@r0
   0084 F5 82               217 	mov	dpl,a
   0086 08                  218 	inc	r0
   0087 E2                  219 	movx	a,@r0
   0088 F5 83               220 	mov	dph,a
   008A 08                  221 	inc	r0
   008B E2                  222 	movx	a,@r0
   008C F5 F0               223 	mov	b,a
   008E 12s00r00            224 	lcall	__gptrget
   0091 FA                  225 	mov	r2,a
   0092 7B 00               226 	mov	r3,#0x00
   0094 78r00               227 	mov	r0,#_memcmp_PARM_2
   0096 E2                  228 	movx	a,@r0
   0097 FC                  229 	mov	r4,a
   0098 08                  230 	inc	r0
   0099 E2                  231 	movx	a,@r0
   009A FD                  232 	mov	r5,a
   009B 08                  233 	inc	r0
   009C E2                  234 	movx	a,@r0
   009D FE                  235 	mov	r6,a
   009E 8C 82               236 	mov	dpl,r4
   00A0 8D 83               237 	mov	dph,r5
   00A2 8E F0               238 	mov	b,r6
   00A4 12s00r00            239 	lcall	__gptrget
   00A7 FC                  240 	mov	r4,a
   00A8 7D 00               241 	mov	r5,#0x00
   00AA EA                  242 	mov	a,r2
   00AB C3                  243 	clr	c
   00AC 9C                  244 	subb	a,r4
   00AD F5 82               245 	mov	dpl,a
   00AF EB                  246 	mov	a,r3
   00B0 9D                  247 	subb	a,r5
   00B1 F5 83               248 	mov	dph,a
   00B3 22                  249 	ret
                            250 	.area CSEG    (CODE)
                            251 	.area CONST   (CODE)
                            252 	.area XINIT   (CODE)
                            253 	.area CABS    (ABS,CODE)
