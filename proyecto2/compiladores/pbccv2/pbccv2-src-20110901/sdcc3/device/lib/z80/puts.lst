                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:18:18 2015
                              5 ;--------------------------------------------------------
                              6 	.module puts
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _puts
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ;  ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; overlayable items in  ram 
                             22 ;--------------------------------------------------------
                             23 	.area _OVERLAY
                             24 ;--------------------------------------------------------
                             25 ; external initialized ram data
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _HOME
                             39 ;--------------------------------------------------------
                             40 ; code
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 ;../puts.c:31: int puts (char *s)
                             44 ;	---------------------------------
                             45 ; Function puts
                             46 ; ---------------------------------
   0000                      47 _puts_start::
   0000                      48 _puts:
   0000 DD E5                49 	push	ix
   0002 DD 21 00 00          50 	ld	ix,#0
   0006 DD 39                51 	add	ix,sp
   0008 F5                   52 	push	af
                             53 ;../puts.c:34: while (*s){
   0009 DD 4E 04             54 	ld	c,4 (ix)
   000C DD 46 05             55 	ld	b,5 (ix)
   000F DD 36 FE 00          56 	ld	-2 (ix),#0x00
   0013 DD 36 FF 00          57 	ld	-1 (ix),#0x00
   0017                      58 00101$:
   0017 0A                   59 	ld	a,(bc)
   0018 6F                   60 	ld	l,a
   0019 B7                   61 	or	a,a
   001A 28 15                62 	jr	Z,00103$
                             63 ;../puts.c:35: putchar(*s++);
   001C 5D                   64 	ld	e,l
   001D 03                   65 	inc	bc
   001E C5                   66 	push	bc
   001F 7B                   67 	ld	a,e
   0020 F5                   68 	push	af
   0021 33                   69 	inc	sp
   0022 CDr00s00             70 	call	_putchar
   0025 33                   71 	inc	sp
   0026 C1                   72 	pop	bc
                             73 ;../puts.c:36: i++;
   0027 DD 34 FE             74 	inc	-2 (ix)
   002A 20 EB                75 	jr	NZ,00101$
   002C DD 34 FF             76 	inc	-1 (ix)
   002F 18 E6                77 	jr	00101$
   0031                      78 00103$:
                             79 ;../puts.c:38: putchar('\n');
   0031 3E 0A                80 	ld	a,#0x0A
   0033 F5                   81 	push	af
   0034 33                   82 	inc	sp
   0035 CDr00s00             83 	call	_putchar
   0038 33                   84 	inc	sp
                             85 ;../puts.c:39: return i+1;
   0039 DD 6E FE             86 	ld	l, -2 (ix)
   003C DD 66 FF             87 	ld	h, -1 (ix)
   003F 23                   88 	inc	hl
   0040 DD F9                89 	ld	sp,ix
   0042 DD E1                90 	pop	ix
   0044 C9                   91 	ret
   0045                      92 _puts_end::
                             93 	.area _CODE
                             94 	.area _CABS
