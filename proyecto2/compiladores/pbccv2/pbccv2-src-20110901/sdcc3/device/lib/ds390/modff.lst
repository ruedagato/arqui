                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:16 2015
                              5 ;--------------------------------------------------------
                              6 	.module modff
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _modff_PARM_2
                             31 	.globl _modff
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 ;--------------------------------------------------------
                             44 ; internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area DSEG    (DATA)
                             47 ;--------------------------------------------------------
                             48 ; overlayable items in internal ram 
                             49 ;--------------------------------------------------------
                             50 	.area OSEG    (OVR,DATA)
                             51 ;--------------------------------------------------------
                             52 ; indirectly addressable internal ram data
                             53 ;--------------------------------------------------------
                             54 	.area ISEG    (DATA)
                             55 ;--------------------------------------------------------
                             56 ; absolute internal ram data
                             57 ;--------------------------------------------------------
                             58 	.area IABS    (ABS,DATA)
                             59 	.area IABS    (ABS,DATA)
                             60 ;--------------------------------------------------------
                             61 ; bit data
                             62 ;--------------------------------------------------------
                             63 	.area BSEG    (BIT)
                             64 ;--------------------------------------------------------
                             65 ; paged external ram data
                             66 ;--------------------------------------------------------
                             67 	.area PSEG    (PAG,XDATA)
                             68 ;--------------------------------------------------------
                             69 ; external ram data
                             70 ;--------------------------------------------------------
                             71 	.area XSEG    (XDATA)
   0000                      72 _modff_PARM_2:
   0000                      73 	.ds 4
   0004                      74 _modff_x_1_1:
   0004                      75 	.ds 4
                             76 ;--------------------------------------------------------
                             77 ; absolute external ram data
                             78 ;--------------------------------------------------------
                             79 	.area XABS    (ABS,XDATA)
                             80 ;--------------------------------------------------------
                             81 ; external initialized ram data
                             82 ;--------------------------------------------------------
                             83 	.area XISEG   (XDATA)
                             84 ;--------------------------------------------------------
                             85 ; global & static initialisations
                             86 ;--------------------------------------------------------
                             87 	.area HOME    (CODE)
                             88 	.area GSINIT  (CODE)
                             89 	.area GSFINAL (CODE)
                             90 	.area GSINIT  (CODE)
                             91 ;--------------------------------------------------------
                             92 ; Home
                             93 ;--------------------------------------------------------
                             94 	.area HOME    (CODE)
                             95 	.area HOME    (CODE)
                             96 ;--------------------------------------------------------
                             97 ; code
                             98 ;--------------------------------------------------------
                             99 	.area CSEG    (CODE)
                            100 ;------------------------------------------------------------
                            101 ;Allocation info for local variables in function 'modff'
                            102 ;------------------------------------------------------------
                            103 ;y                         Allocated with name '_modff_PARM_2'
                            104 ;x                         Allocated with name '_modff_x_1_1'
                            105 ;------------------------------------------------------------
                            106 ;	modff.c:33: float modff(float x, float * y)
                            107 ;	-----------------------------------------
                            108 ;	 function modff
                            109 ;	-----------------------------------------
   0000                     110 _modff:
                    0002    111 	ar2 = 0x02
                    0003    112 	ar3 = 0x03
                    0004    113 	ar4 = 0x04
                    0005    114 	ar5 = 0x05
                    0006    115 	ar6 = 0x06
                    0007    116 	ar7 = 0x07
                    0000    117 	ar0 = 0x00
                    0001    118 	ar1 = 0x01
   0000 75 86 01            119 	mov     dps, #1
   0003 90s00r00r04         120 	mov     dptr, #_modff_x_1_1
   0007 E5 82               121 	mov	a,dpl
   0009 F0                  122 	movx	@dptr,a
   000A A3                  123 	inc	dptr
   000B E5 83               124 	mov	a,dph
   000D F0                  125 	movx	@dptr,a
   000E A3                  126 	inc	dptr
   000F E5 93               127 	mov	a,dpx
   0011 F0                  128 	movx	@dptr,a
   0012 A3                  129 	inc	dptr
   0013 E5 F0               130 	mov	a,b
   0015 F0                  131 	movx	@dptr,a
   0016 75 86 00            132 	mov	dps,#0
                            133 ;	modff.c:35: *y=(long)x;
   0019 90s00r00r00         134 	mov	dptr,#_modff_PARM_2
                            135 ;	genAssign: resultIsFar = FALSE
   001D E0                  136 	movx	a,@dptr
   001E FE                  137 	mov	r6,a
   001F A3                  138 	inc	dptr
   0020 E0                  139 	movx	a,@dptr
   0021 FF                  140 	mov	r7,a
   0022 A3                  141 	inc	dptr
   0023 E0                  142 	movx	a,@dptr
   0024 F8                  143 	mov	r0,a
   0025 A3                  144 	inc	dptr
   0026 E0                  145 	movx	a,@dptr
   0027 F9                  146 	mov	r1,a
   0028 C0 06               147 	push	ar6
   002A C0 07               148 	push	ar7
   002C C0 00               149 	push	ar0
   002E C0 01               150 	push	ar1
   0030 05 86               151 	inc	dps
   0032 90s00r00r04         152 	mov	dptr,#_modff_x_1_1
   0036 E0                  153 	movx	a,@dptr
   0037 F5 82               154 	mov	dpl,a
   0039 A3                  155 	inc	dptr
   003A E0                  156 	movx	a,@dptr
   003B F5 83               157 	mov	dph,a
   003D A3                  158 	inc	dptr
   003E E0                  159 	movx	a,@dptr
   003F F5 93               160 	mov	dpx,a
   0041 A3                  161 	inc	dptr
   0042 E0                  162 	movx	a,@dptr
   0043 F5 F0               163 	mov	b,a
   0045 75 86 00            164 	mov	dps,#0
   0048 12s00r00r00         165 	lcall	___fs2slong
   004C D0 01               166 	pop	ar1
   004E D0 00               167 	pop	ar0
   0050 D0 07               168 	pop	ar7
   0052 D0 06               169 	pop	ar6
   0054 C0 06               170 	push	ar6
   0056 C0 07               171 	push	ar7
   0058 C0 00               172 	push	ar0
   005A C0 01               173 	push	ar1
   005C 12s00r00r00         174 	lcall	___slong2fs
   0060 AA 82               175 	mov	r2,dpl
   0062 AB 83               176 	mov	r3,dph
   0064 AC 93               177 	mov	r4,dpx
   0066 AD F0               178 	mov	r5,b
   0068 D0 01               179 	pop	ar1
   006A D0 00               180 	pop	ar0
   006C D0 07               181 	pop	ar7
   006E D0 06               182 	pop	ar6
   0070 8E 82               183 	mov	dpl,r6
   0072 8F 83               184 	mov	dph,r7
   0074 88 93               185 	mov	dpx,r0
   0076 89 F0               186 	mov	b,r1
   0078 8A 9C               187 	mov	_ap, r2
   007A EB                  188 	mov	a,r3
   007B 12s00r00r00         189 	lcall	__gptrputWord
   007F A3                  190 	inc	dptr
   0080 8C 9C               191 	mov	_ap, r4
   0082 ED                  192 	mov	a,r5
   0083 12s00r00r00         193 	lcall	__gptrputWord
                            194 ;	modff.c:36: return (x-*y);
                            195 ;	genAssign: resultIsFar = TRUE
   0087 90s00r00r00         196 	mov	dptr,#___fssub_PARM_2
   008B EA                  197 	mov	a,r2
   008C F0                  198 	movx	@dptr,a
   008D A3                  199 	inc	dptr
   008E EB                  200 	mov	a,r3
   008F F0                  201 	movx	@dptr,a
   0090 A3                  202 	inc	dptr
   0091 EC                  203 	mov	a,r4
   0092 F0                  204 	movx	@dptr,a
   0093 A3                  205 	inc	dptr
   0094 ED                  206 	mov	a,r5
   0095 F0                  207 	movx	@dptr,a
   0096 05 86               208 	inc	dps
   0098 90s00r00r04         209 	mov	dptr,#_modff_x_1_1
   009C E0                  210 	movx	a,@dptr
   009D F5 82               211 	mov	dpl,a
   009F A3                  212 	inc	dptr
   00A0 E0                  213 	movx	a,@dptr
   00A1 F5 83               214 	mov	dph,a
   00A3 A3                  215 	inc	dptr
   00A4 E0                  216 	movx	a,@dptr
   00A5 F5 93               217 	mov	dpx,a
   00A7 A3                  218 	inc	dptr
   00A8 E0                  219 	movx	a,@dptr
   00A9 F5 F0               220 	mov	b,a
   00AB 75 86 00            221 	mov	dps,#0
   00AE 12s00r00r00         222 	lcall	___fssub
   00B2                     223 00101$:
   00B2 22                  224 	ret
                            225 	.area CSEG    (CODE)
                            226 	.area CONST   (CODE)
                            227 	.area XINIT   (CODE)
                            228 	.area CABS    (ABS,CODE)
