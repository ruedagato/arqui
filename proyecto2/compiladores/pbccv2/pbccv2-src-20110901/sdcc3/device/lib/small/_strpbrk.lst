                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:23 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strpbrk
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strpbrk_PARM_2
                             13 	.globl _strpbrk
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 	.area RSEG    (ABS,DATA)
   0000                      18 	.org 0x0000
                             19 ;--------------------------------------------------------
                             20 ; special function bits
                             21 ;--------------------------------------------------------
                             22 	.area RSEG    (ABS,DATA)
   0000                      23 	.org 0x0000
                             24 ;--------------------------------------------------------
                             25 ; overlayable register banks
                             26 ;--------------------------------------------------------
                             27 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      28 	.ds 8
                             29 ;--------------------------------------------------------
                             30 ; internal ram data
                             31 ;--------------------------------------------------------
                             32 	.area DSEG    (DATA)
   0000                      33 _strpbrk_PARM_2:
   0000                      34 	.ds 3
   0003                      35 _strpbrk_string_1_1:
   0003                      36 	.ds 3
   0006                      37 _strpbrk_ret_1_1:
   0006                      38 	.ds 3
                             39 ;--------------------------------------------------------
                             40 ; overlayable items in internal ram 
                             41 ;--------------------------------------------------------
                             42 	.area OSEG    (OVR,DATA)
                             43 ;--------------------------------------------------------
                             44 ; indirectly addressable internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area ISEG    (DATA)
                             47 ;--------------------------------------------------------
                             48 ; absolute internal ram data
                             49 ;--------------------------------------------------------
                             50 	.area IABS    (ABS,DATA)
                             51 	.area IABS    (ABS,DATA)
                             52 ;--------------------------------------------------------
                             53 ; bit data
                             54 ;--------------------------------------------------------
                             55 	.area BSEG    (BIT)
                             56 ;--------------------------------------------------------
                             57 ; paged external ram data
                             58 ;--------------------------------------------------------
                             59 	.area PSEG    (PAG,XDATA)
                             60 ;--------------------------------------------------------
                             61 ; external ram data
                             62 ;--------------------------------------------------------
                             63 	.area XSEG    (XDATA)
                             64 ;--------------------------------------------------------
                             65 ; absolute external ram data
                             66 ;--------------------------------------------------------
                             67 	.area XABS    (ABS,XDATA)
                             68 ;--------------------------------------------------------
                             69 ; external initialized ram data
                             70 ;--------------------------------------------------------
                             71 	.area XISEG   (XDATA)
                             72 	.area HOME    (CODE)
                             73 	.area GSINIT0 (CODE)
                             74 	.area GSINIT1 (CODE)
                             75 	.area GSINIT2 (CODE)
                             76 	.area GSINIT3 (CODE)
                             77 	.area GSINIT4 (CODE)
                             78 	.area GSINIT5 (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area CSEG    (CODE)
                             82 ;--------------------------------------------------------
                             83 ; global & static initialisations
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area GSINIT  (CODE)
                             87 	.area GSFINAL (CODE)
                             88 	.area GSINIT  (CODE)
                             89 ;--------------------------------------------------------
                             90 ; Home
                             91 ;--------------------------------------------------------
                             92 	.area HOME    (CODE)
                             93 	.area HOME    (CODE)
                             94 ;--------------------------------------------------------
                             95 ; code
                             96 ;--------------------------------------------------------
                             97 	.area CSEG    (CODE)
                             98 ;------------------------------------------------------------
                             99 ;Allocation info for local variables in function 'strpbrk'
                            100 ;------------------------------------------------------------
                            101 ;control                   Allocated with name '_strpbrk_PARM_2'
                            102 ;string                    Allocated with name '_strpbrk_string_1_1'
                            103 ;ret                       Allocated with name '_strpbrk_ret_1_1'
                            104 ;ch                        Allocated to registers r4 
                            105 ;p                         Allocated to registers r3 r4 r5 
                            106 ;------------------------------------------------------------
                            107 ;	_strpbrk.c:31: char * strpbrk (
                            108 ;	-----------------------------------------
                            109 ;	 function strpbrk
                            110 ;	-----------------------------------------
   0000                     111 _strpbrk:
                    0002    112 	ar2 = 0x02
                    0003    113 	ar3 = 0x03
                    0004    114 	ar4 = 0x04
                    0005    115 	ar5 = 0x05
                    0006    116 	ar6 = 0x06
                    0007    117 	ar7 = 0x07
                    0000    118 	ar0 = 0x00
                    0001    119 	ar1 = 0x01
   0000 85 82*03            120 	mov	_strpbrk_string_1_1,dpl
   0003 85 83*04            121 	mov	(_strpbrk_string_1_1 + 1),dph
   0006 85 F0*05            122 	mov	(_strpbrk_string_1_1 + 2),b
                            123 ;	_strpbrk.c:36: char *ret = NULL;
   0009 E4                  124 	clr	a
   000A F5*06               125 	mov	_strpbrk_ret_1_1,a
   000C F5*07               126 	mov	(_strpbrk_ret_1_1 + 1),a
   000E F5*08               127 	mov	(_strpbrk_ret_1_1 + 2),a
                            128 ;	_strpbrk.c:39: while (ch = *control) {
   0010 A8*00               129 	mov	r0,_strpbrk_PARM_2
   0012 A9*01               130 	mov	r1,(_strpbrk_PARM_2 + 1)
   0014 AA*02               131 	mov	r2,(_strpbrk_PARM_2 + 2)
   0016                     132 00105$:
   0016 88 82               133 	mov	dpl,r0
   0018 89 83               134 	mov	dph,r1
   001A 8A F0               135 	mov	b,r2
   001C 12s00r00            136 	lcall	__gptrget
   001F FB                  137 	mov	r3,a
   0020 FC                  138 	mov	r4,a
   0021 60 52               139 	jz	00107$
                            140 ;	_strpbrk.c:40: char * p = strchr(string, ch);
   0023 8C*00               141 	mov	_strchr_PARM_2,r4
   0025 85*03 82            142 	mov	dpl,_strpbrk_string_1_1
   0028 85*04 83            143 	mov	dph,(_strpbrk_string_1_1 + 1)
   002B 85*05 F0            144 	mov	b,(_strpbrk_string_1_1 + 2)
   002E C0 02               145 	push	ar2
   0030 C0 00               146 	push	ar0
   0032 C0 01               147 	push	ar1
   0034 12s00r00            148 	lcall	_strchr
   0037 AB 82               149 	mov	r3,dpl
   0039 AC 83               150 	mov	r4,dph
   003B AD F0               151 	mov	r5,b
   003D D0 01               152 	pop	ar1
   003F D0 00               153 	pop	ar0
   0041 D0 02               154 	pop	ar2
                            155 ;	_strpbrk.c:41: if (p != NULL && (ret == NULL || p < ret)) {
   0043 BB 00 08            156 	cjne	r3,#0x00,00116$
   0046 BC 00 05            157 	cjne	r4,#0x00,00116$
   0049 BD 00 02            158 	cjne	r5,#0x00,00116$
   004C 80 20               159 	sjmp	00102$
   004E                     160 00116$:
   004E E4                  161 	clr	a
   004F B5*06 0A            162 	cjne	a,_strpbrk_ret_1_1,00117$
   0052 E4                  163 	clr	a
   0053 B5*07 06            164 	cjne	a,(_strpbrk_ret_1_1 + 1),00117$
   0056 E4                  165 	clr	a
   0057 B5*08 02            166 	cjne	a,(_strpbrk_ret_1_1 + 2),00117$
   005A 80 0C               167 	sjmp	00101$
   005C                     168 00117$:
   005C C3                  169 	clr	c
   005D EB                  170 	mov	a,r3
   005E 95*06               171 	subb	a,_strpbrk_ret_1_1
   0060 EC                  172 	mov	a,r4
   0061 95*07               173 	subb	a,(_strpbrk_ret_1_1 + 1)
   0063 ED                  174 	mov	a,r5
   0064 95*08               175 	subb	a,(_strpbrk_ret_1_1 + 2)
   0066 50 06               176 	jnc	00102$
   0068                     177 00101$:
                            178 ;	_strpbrk.c:42: ret = p;
   0068 8B*06               179 	mov	_strpbrk_ret_1_1,r3
   006A 8C*07               180 	mov	(_strpbrk_ret_1_1 + 1),r4
   006C 8D*08               181 	mov	(_strpbrk_ret_1_1 + 2),r5
   006E                     182 00102$:
                            183 ;	_strpbrk.c:44: control++;
   006E 08                  184 	inc	r0
   006F B8 00 A4            185 	cjne	r0,#0x00,00105$
   0072 09                  186 	inc	r1
   0073 80 A1               187 	sjmp	00105$
   0075                     188 00107$:
                            189 ;	_strpbrk.c:47: return (ret);
   0075 85*06 82            190 	mov	dpl,_strpbrk_ret_1_1
   0078 85*07 83            191 	mov	dph,(_strpbrk_ret_1_1 + 1)
   007B 85*08 F0            192 	mov	b,(_strpbrk_ret_1_1 + 2)
   007E 22                  193 	ret
                            194 	.area CSEG    (CODE)
                            195 	.area CONST   (CODE)
                            196 	.area XINIT   (CODE)
                            197 	.area CABS    (ABS,CODE)
