                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:18:18 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strpbrk
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strpbrk
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ;  ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; overlayable items in  ram 
                             22 ;--------------------------------------------------------
                             23 	.area _OVERLAY
                             24 ;--------------------------------------------------------
                             25 ; external initialized ram data
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _HOME
                             39 ;--------------------------------------------------------
                             40 ; code
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 ;../_strpbrk.c:31: char * strpbrk (
                             44 ;	---------------------------------
                             45 ; Function strpbrk
                             46 ; ---------------------------------
   0000                      47 _strpbrk_start::
   0000                      48 _strpbrk:
   0000 DD E5                49 	push	ix
   0002 DD 21 00 00          50 	ld	ix,#0
   0006 DD 39                51 	add	ix,sp
   0008 3B                   52 	dec	sp
                             53 ;../_strpbrk.c:36: char *ret = NULL;
   0009 01 00 00             54 	ld	bc,#0x0000
                             55 ;../_strpbrk.c:39: while (ch = *control) {
   000C DD 5E 06             56 	ld	e,6 (ix)
   000F DD 56 07             57 	ld	d,7 (ix)
   0012                      58 00105$:
   0012 1A                   59 	ld	a,(de)
   0013 6F                   60 	ld	l,a
   0014 DD 75 FF             61 	ld	-1 (ix),l
   0017 AF                   62 	xor	a,a
   0018 B5                   63 	or	a,l
   0019 28 2E                64 	jr	Z,00107$
                             65 ;../_strpbrk.c:40: char * p = strchr(string, ch);
   001B C5                   66 	push	bc
   001C D5                   67 	push	de
   001D DD 7E FF             68 	ld	a,-1 (ix)
   0020 F5                   69 	push	af
   0021 33                   70 	inc	sp
   0022 DD 6E 04             71 	ld	l,4 (ix)
   0025 DD 66 05             72 	ld	h,5 (ix)
   0028 E5                   73 	push	hl
   0029 CDr00s00             74 	call	_strchr
   002C F1                   75 	pop	af
   002D 33                   76 	inc	sp
   002E D1                   77 	pop	de
   002F C1                   78 	pop	bc
                             79 ;../_strpbrk.c:41: if (p != NULL && (ret == NULL || p < ret)) {
   0030 7D                   80 	ld	a,l
   0031 B4                   81 	or	a,h
   0032 28 12                82 	jr	Z,00102$
   0034 79                   83 	ld	a,c
   0035 B0                   84 	or	a,b
   0036 28 0C                85 	jr	Z,00101$
   0038 7D                   86 	ld	a,l
   0039 91                   87 	sub	a, c
   003A 7C                   88 	ld	a,h
   003B 98                   89 	sbc	a, b
   003C E2r41s00             90 	jp	PO, 00117$
   003F EE 80                91 	xor	a, #0x80
   0041                      92 00117$:
   0041 F2r46s00             93 	jp	P,00102$
   0044                      94 00101$:
                             95 ;../_strpbrk.c:42: ret = p;
   0044 4D                   96 	ld	c,l
   0045 44                   97 	ld	b,h
   0046                      98 00102$:
                             99 ;../_strpbrk.c:44: control++;
   0046 13                  100 	inc	de
   0047 18 C9               101 	jr	00105$
   0049                     102 00107$:
                            103 ;../_strpbrk.c:47: return (ret);
   0049 69                  104 	ld	l,c
   004A 60                  105 	ld	h,b
   004B DD F9               106 	ld	sp,ix
   004D DD E1               107 	pop	ix
   004F C9                  108 	ret
   0050                     109 _strpbrk_end::
                            110 	.area _CODE
                            111 	.area _CABS
