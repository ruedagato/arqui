                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:27 2015
                              5 ;--------------------------------------------------------
                              6 	.module logf
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _logf
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
   0000                      32 _logf_tmp:
   0000                      33 	.ds 4
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in internal ram 
                             36 ;--------------------------------------------------------
                             37 	.area OSEG    (OVR,DATA)
                             38 ;--------------------------------------------------------
                             39 ; indirectly addressable internal ram data
                             40 ;--------------------------------------------------------
                             41 	.area ISEG    (DATA)
                             42 ;--------------------------------------------------------
                             43 ; absolute internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area IABS    (ABS,DATA)
                             46 	.area IABS    (ABS,DATA)
                             47 ;--------------------------------------------------------
                             48 ; bit data
                             49 ;--------------------------------------------------------
                             50 	.area BSEG    (BIT)
                             51 ;--------------------------------------------------------
                             52 ; paged external ram data
                             53 ;--------------------------------------------------------
                             54 	.area PSEG    (PAG,XDATA)
                             55 ;--------------------------------------------------------
                             56 ; external ram data
                             57 ;--------------------------------------------------------
                             58 	.area XSEG    (XDATA)
                             59 ;--------------------------------------------------------
                             60 ; absolute external ram data
                             61 ;--------------------------------------------------------
                             62 	.area XABS    (ABS,XDATA)
                             63 ;--------------------------------------------------------
                             64 ; external initialized ram data
                             65 ;--------------------------------------------------------
                             66 	.area XISEG   (XDATA)
                             67 	.area HOME    (CODE)
                             68 	.area GSINIT0 (CODE)
                             69 	.area GSINIT1 (CODE)
                             70 	.area GSINIT2 (CODE)
                             71 	.area GSINIT3 (CODE)
                             72 	.area GSINIT4 (CODE)
                             73 	.area GSINIT5 (CODE)
                             74 	.area GSINIT  (CODE)
                             75 	.area GSFINAL (CODE)
                             76 	.area CSEG    (CODE)
                             77 ;--------------------------------------------------------
                             78 ; global & static initialisations
                             79 ;--------------------------------------------------------
                             80 	.area HOME    (CODE)
                             81 	.area GSINIT  (CODE)
                             82 	.area GSFINAL (CODE)
                             83 	.area GSINIT  (CODE)
                             84 ;--------------------------------------------------------
                             85 ; Home
                             86 ;--------------------------------------------------------
                             87 	.area HOME    (CODE)
                             88 	.area HOME    (CODE)
                             89 ;--------------------------------------------------------
                             90 ; code
                             91 ;--------------------------------------------------------
                             92 	.area CSEG    (CODE)
                             93 ;------------------------------------------------------------
                             94 ;Allocation info for local variables in function 'logf'
                             95 ;------------------------------------------------------------
                             96 ;x                         Allocated with name '_logf_x_1_1'
                             97 ;------------------------------------------------------------
                             98 ;	logf.c:47: float logf(float x)
                             99 ;	-----------------------------------------
                            100 ;	 function logf
                            101 ;	-----------------------------------------
   0000                     102 _logf:
                    0002    103 	ar2 = 0x02
                    0003    104 	ar3 = 0x03
                    0004    105 	ar4 = 0x04
                    0005    106 	ar5 = 0x05
                    0006    107 	ar6 = 0x06
                    0007    108 	ar7 = 0x07
                    0000    109 	ar0 = 0x00
                    0001    110 	ar1 = 0x01
                            111 ;	logf.c:200: __endasm;
                            112 	
                            113 	
                            114 	
                            115 	
                            116 	
                            117 	
                            118 	
   0000 12s00r00            119 	 lcall fsgetarg
   0003                     120 	logf_neg_check:
   0003 30 D1 06            121 	 jnb psw.1, logf_zero_check
                            122 	
   0006 12s00r00            123 	 lcall fs_return_nan
   0009 02s00rC8            124 	 ljmp logf_exit
                            125 	
   000C                     126 	logf_zero_check:
   000C BC 00 08            127 	 cjne r4, #0, logf_ok
                            128 	
   000F D2 D1               129 	 setb psw.1
   0011 12s00r00            130 	 lcall fs_return_inf
   0014 02s00rC8            131 	 ljmp logf_exit
                            132 	
   0017                     133 	logf_ok:
   0017 C0 82               134 	 push dpl
   0019 74 03               135 	 mov a, #3
   001B 79 00               136 	 mov r1, #0
   001D 12s00r00            137 	 lcall fs_rshift_a
                            138 	
   0020 E4                  139 	 clr a
   0021 F5*00               140 	 mov (_logf_tmp + 0), a
   0023 F5*01               141 	 mov (_logf_tmp + 1), a
   0025 F5*02               142 	 mov (_logf_tmp + 2), a
   0027 F5*03               143 	 mov (_logf_tmp + 3), a
   0029 90s00r00            144 	 mov dptr, #__fs_natural_log_table
   002C F8                  145 	 mov r0, a
   002D                     146 	logf_cordic_loop:
   002D 8C 07               147 	 mov ar7, r4
   002F 8B 06               148 	 mov ar6, r3
   0031 8A 05               149 	 mov ar5, r2
   0033 89 F0               150 	 mov b, r1
   0035 E8                  151 	 mov a, r0
   0036 12s00r00            152 	 lcall __fs_cordic_rshift_r765_unsigned
   0039 E9                  153 	 mov a, r1
   003A 25 F0               154 	 add a, b
   003C EA                  155 	 mov a, r2
   003D 3D                  156 	 addc a, r5
   003E EB                  157 	 mov a, r3
   003F 3E                  158 	 addc a, r6
   0040 EC                  159 	 mov a, r4
   0041 3F                  160 	 addc a, r7
   0042 54 E0               161 	 anl a, #0xE0
   0044 70 28               162 	 jnz logf_cordic_skip
   0046 E9                  163 	 mov a, r1
   0047 25 F0               164 	 add a, b
   0049 F9                  165 	 mov r1, a
   004A EA                  166 	 mov a, r2
   004B 3D                  167 	 addc a, r5
   004C FA                  168 	 mov r2, a
   004D EB                  169 	 mov a, r3
   004E 3E                  170 	 addc a, r6
   004F FB                  171 	 mov r3, a
   0050 EC                  172 	 mov a, r4
   0051 3F                  173 	 addc a, r7
   0052 FC                  174 	 mov r4, a
   0053 E4                  175 	 clr a
   0054 93                  176 	 movc a, @a+dptr
   0055 25*00               177 	 add a, (_logf_tmp + 0)
   0057 F5*00               178 	 mov (_logf_tmp + 0), a
   0059 74 01               179 	 mov a, #1
   005B 93                  180 	 movc a, @a+dptr
   005C 35*01               181 	 addc a, (_logf_tmp + 1)
   005E F5*01               182 	 mov (_logf_tmp + 1), a
   0060 74 02               183 	 mov a, #2
   0062 93                  184 	 movc a, @a+dptr
   0063 35*02               185 	 addc a, (_logf_tmp + 2)
   0065 F5*02               186 	 mov (_logf_tmp + 2), a
   0067 74 03               187 	 mov a, #3
   0069 93                  188 	 movc a, @a+dptr
   006A 35*03               189 	 addc a, (_logf_tmp + 3)
   006C F5*03               190 	 mov (_logf_tmp + 3), a
   006E                     191 	logf_cordic_skip:
   006E A3                  192 	 inc dptr
   006F A3                  193 	 inc dptr
   0070 A3                  194 	 inc dptr
   0071 A3                  195 	 inc dptr
   0072 08                  196 	 inc r0
   0073 B8 1E B7            197 	 cjne r0, #30, logf_cordic_loop
                            198 	
                            199 	
   0076 AC*03               200 	 mov r4, (_logf_tmp + 3)
   0078 AB*02               201 	 mov r3, (_logf_tmp + 2)
   007A AA*01               202 	 mov r2, (_logf_tmp + 1)
   007C A9*00               203 	 mov r1, (_logf_tmp + 0)
   007E 75 82 81            204 	 mov dpl, #129
   0081 D2 D1               205 	 setb psw.1
   0083 12s00r00            206 	 lcall fs_normalize_a
   0086 D0 E0               207 	 pop acc
   0088 B4 7E 05            208 	 cjne a, #126, logf_exponent
                            209 	
                            210 	
                            211 	
                            212 	
   008B 12s00r00            213 	 lcall fs_zerocheck_return
                            214 	
   008E 80 38               215 	 sjmp logf_exit
   0090                     216 	logf_exponent:
   0090 40 06               217 	 jc logf_exp_neg
                            218 	
   0092                     219 	logf_exp_pos:
   0092 24 82               220 	 add a, #130
   0094 C2 D5               221 	 clr psw.5
   0096 80 05               222 	 sjmp logf_exp_scale
   0098                     223 	logf_exp_neg:
                            224 	
   0098 F4                  225 	 cpl a
   0099 24 7F               226 	 add a, #127
   009B D2 D5               227 	 setb psw.5
   009D                     228 	logf_exp_scale:
                            229 	
   009D F8                  230 	 mov r0, a
                            231 	
                            232 	
   009E 12s00r00            233 	 lcall fs_swap_a_b
                            234 	
   00A1 74 18               235 	 mov a, #0x18
   00A3 88 F0               236 	 mov b, r0
   00A5 A4                  237 	 mul ab
   00A6 F9                  238 	 mov r1, a
   00A7 AA F0               239 	 mov r2, b
   00A9 74 B1               240 	 mov a, #0xB1
   00AB 88 F0               241 	 mov b, r0
   00AD A4                  242 	 mul ab
   00AE FB                  243 	 mov r3, a
   00AF AC F0               244 	 mov r4, b
   00B1 74 72               245 	 mov a, #0x72
   00B3 88 F0               246 	 mov b, r0
   00B5 A4                  247 	 mul ab
   00B6 2A                  248 	 add a, r2
   00B7 FA                  249 	 mov r2, a
   00B8 E5 F0               250 	 mov a, b
   00BA 3B                  251 	 addc a, r3
   00BB FB                  252 	 mov r3, a
   00BC E4                  253 	 clr a
   00BD 3C                  254 	 addc a, r4
   00BE FC                  255 	 mov r4, a
                            256 	
   00BF 75 82 86            257 	 mov dpl, #134
   00C2 12s00r00            258 	 lcall fs_normalize_a
                            259 	
   00C5 12s00r00            260 	 lcall fsadd_direct_entry
   00C8                     261 	logf_exit:
                            262 	 
   00C8 22                  263 	ret
                            264 	.area CSEG    (CODE)
                            265 	.area CONST   (CODE)
                            266 	.area XINIT   (CODE)
                            267 	.area CABS    (ABS,CODE)
