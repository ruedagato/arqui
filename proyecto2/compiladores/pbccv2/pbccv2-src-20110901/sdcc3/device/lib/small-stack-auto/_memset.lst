                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:31 2015
                              5 ;--------------------------------------------------------
                              6 	.module _memset
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _memset
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'memset'
                             93 ;------------------------------------------------------------
                             94 ;ch                        Allocated to stack - offset -3
                             95 ;count                     Allocated to stack - offset -5
                             96 ;buf                       Allocated to stack - offset 1
                             97 ;ret                       Allocated to stack - offset 4
                             98 ;------------------------------------------------------------
                             99 ;	_memset.c:36: void * memset (
                            100 ;	-----------------------------------------
                            101 ;	 function memset
                            102 ;	-----------------------------------------
   0000                     103 _memset:
                    0002    104 	ar2 = 0x02
                    0003    105 	ar3 = 0x03
                    0004    106 	ar4 = 0x04
                    0005    107 	ar5 = 0x05
                    0006    108 	ar6 = 0x06
                    0007    109 	ar7 = 0x07
                    0000    110 	ar0 = 0x00
                    0001    111 	ar1 = 0x01
   0000 C0*00               112 	push	_bp
   0002 85 81*00            113 	mov	_bp,sp
   0005 C0 82               114 	push	dpl
   0007 C0 83               115 	push	dph
   0009 C0 F0               116 	push	b
   000B 05 81               117 	inc	sp
   000D 05 81               118 	inc	sp
   000F 05 81               119 	inc	sp
                            120 ;	_memset.c:43: while (count--) {
   0011 A8*00               121 	mov	r0,_bp
   0013 08                  122 	inc	r0
   0014 E5*00               123 	mov	a,_bp
   0016 24 04               124 	add	a,#0x04
   0018 F9                  125 	mov	r1,a
   0019 E6                  126 	mov	a,@r0
   001A F7                  127 	mov	@r1,a
   001B 08                  128 	inc	r0
   001C 09                  129 	inc	r1
   001D E6                  130 	mov	a,@r0
   001E F7                  131 	mov	@r1,a
   001F 08                  132 	inc	r0
   0020 09                  133 	inc	r1
   0021 E6                  134 	mov	a,@r0
   0022 F7                  135 	mov	@r1,a
   0023 E5*00               136 	mov	a,_bp
   0025 24 FB               137 	add	a,#0xfb
   0027 F8                  138 	mov	r0,a
   0028 86 02               139 	mov	ar2,@r0
   002A 08                  140 	inc	r0
   002B 86 03               141 	mov	ar3,@r0
   002D                     142 00101$:
   002D 8A 04               143 	mov	ar4,r2
   002F 8B 05               144 	mov	ar5,r3
   0031 1A                  145 	dec	r2
   0032 BA FF 01            146 	cjne	r2,#0xff,00109$
   0035 1B                  147 	dec	r3
   0036                     148 00109$:
   0036 EC                  149 	mov	a,r4
   0037 4D                  150 	orl	a,r5
   0038 60 20               151 	jz	00103$
                            152 ;	_memset.c:44: *(unsigned char *) ret = ch;
   003A E5*00               153 	mov	a,_bp
   003C 24 04               154 	add	a,#0x04
   003E F8                  155 	mov	r0,a
   003F 86 82               156 	mov	dpl,@r0
   0041 08                  157 	inc	r0
   0042 86 83               158 	mov	dph,@r0
   0044 08                  159 	inc	r0
   0045 86 F0               160 	mov	b,@r0
   0047 E5*00               161 	mov	a,_bp
   0049 24 FD               162 	add	a,#0xfd
   004B F9                  163 	mov	r1,a
   004C E7                  164 	mov	a,@r1
   004D 12s00r00            165 	lcall	__gptrput
   0050 A3                  166 	inc	dptr
   0051 18                  167 	dec	r0
   0052 18                  168 	dec	r0
   0053 A6 82               169 	mov	@r0,dpl
   0055 08                  170 	inc	r0
   0056 A6 83               171 	mov	@r0,dph
                            172 ;	_memset.c:45: ret = ((unsigned char *) ret) + 1;
   0058 80 D3               173 	sjmp	00101$
   005A                     174 00103$:
                            175 ;	_memset.c:48: return buf ;
   005A A8*00               176 	mov	r0,_bp
   005C 08                  177 	inc	r0
   005D 86 82               178 	mov	dpl,@r0
   005F 08                  179 	inc	r0
   0060 86 83               180 	mov	dph,@r0
   0062 08                  181 	inc	r0
   0063 86 F0               182 	mov	b,@r0
   0065 85*00 81            183 	mov	sp,_bp
   0068 D0*00               184 	pop	_bp
   006A 22                  185 	ret
                            186 	.area CSEG    (CODE)
                            187 	.area CONST   (CODE)
                            188 	.area XINIT   (CODE)
                            189 	.area CABS    (ABS,CODE)
