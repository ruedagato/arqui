                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:26 2015
                              5 ;--------------------------------------------------------
                              6 	.module _free
                              7 	.optsdcc -mmcs51 --model-medium
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __sdcc_find_memheader
                             13 	.globl __sdcc_prev_memheader
                             14 	.globl _free
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 	.area RSEG    (ABS,DATA)
   0000                      19 	.org 0x0000
                             20 ;--------------------------------------------------------
                             21 ; special function bits
                             22 ;--------------------------------------------------------
                             23 	.area RSEG    (ABS,DATA)
   0000                      24 	.org 0x0000
                             25 ;--------------------------------------------------------
                             26 ; overlayable register banks
                             27 ;--------------------------------------------------------
                             28 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      29 	.ds 8
                             30 ;--------------------------------------------------------
                             31 ; internal ram data
                             32 ;--------------------------------------------------------
                             33 	.area DSEG    (DATA)
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in internal ram 
                             36 ;--------------------------------------------------------
                             37 	.area OSEG    (OVR,DATA)
                             38 ;--------------------------------------------------------
                             39 ; indirectly addressable internal ram data
                             40 ;--------------------------------------------------------
                             41 	.area ISEG    (DATA)
                             42 ;--------------------------------------------------------
                             43 ; absolute internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area IABS    (ABS,DATA)
                             46 	.area IABS    (ABS,DATA)
                             47 ;--------------------------------------------------------
                             48 ; bit data
                             49 ;--------------------------------------------------------
                             50 	.area BSEG    (BIT)
                             51 ;--------------------------------------------------------
                             52 ; paged external ram data
                             53 ;--------------------------------------------------------
                             54 	.area PSEG    (PAG,XDATA)
   0000                      55 __sdcc_prev_memheader::
   0000                      56 	.ds 2
                             57 ;--------------------------------------------------------
                             58 ; external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XSEG    (XDATA)
                             61 ;--------------------------------------------------------
                             62 ; absolute external ram data
                             63 ;--------------------------------------------------------
                             64 	.area XABS    (ABS,XDATA)
                             65 ;--------------------------------------------------------
                             66 ; external initialized ram data
                             67 ;--------------------------------------------------------
                             68 	.area XISEG   (XDATA)
                             69 	.area HOME    (CODE)
                             70 	.area GSINIT0 (CODE)
                             71 	.area GSINIT1 (CODE)
                             72 	.area GSINIT2 (CODE)
                             73 	.area GSINIT3 (CODE)
                             74 	.area GSINIT4 (CODE)
                             75 	.area GSINIT5 (CODE)
                             76 	.area GSINIT  (CODE)
                             77 	.area GSFINAL (CODE)
                             78 	.area CSEG    (CODE)
                             79 ;--------------------------------------------------------
                             80 ; global & static initialisations
                             81 ;--------------------------------------------------------
                             82 	.area HOME    (CODE)
                             83 	.area GSINIT  (CODE)
                             84 	.area GSFINAL (CODE)
                             85 	.area GSINIT  (CODE)
                             86 ;--------------------------------------------------------
                             87 ; Home
                             88 ;--------------------------------------------------------
                             89 	.area HOME    (CODE)
                             90 	.area HOME    (CODE)
                             91 ;--------------------------------------------------------
                             92 ; code
                             93 ;--------------------------------------------------------
                             94 	.area CSEG    (CODE)
                             95 ;------------------------------------------------------------
                             96 ;Allocation info for local variables in function '_sdcc_find_memheader'
                             97 ;------------------------------------------------------------
                             98 ;------------------------------------------------------------
                             99 ;	_free.c:129: MEMHEADER __xdata * _sdcc_find_memheader(void __xdata * p)
                            100 ;	-----------------------------------------
                            101 ;	 function _sdcc_find_memheader
                            102 ;	-----------------------------------------
   0000                     103 __sdcc_find_memheader:
                    0002    104 	ar2 = 0x02
                    0003    105 	ar3 = 0x03
                    0004    106 	ar4 = 0x04
                    0005    107 	ar5 = 0x05
                    0006    108 	ar6 = 0x06
                    0007    109 	ar7 = 0x07
                    0000    110 	ar0 = 0x00
                    0001    111 	ar1 = 0x01
   0000 AA 82               112 	mov	r2,dpl
   0002 AB 83               113 	mov	r3,dph
                            114 ;	_free.c:134: if (!p)
   0004 EA                  115 	mov	a,r2
   0005 4B                  116 	orl	a,r3
   0006 70 04               117 	jnz	00102$
                            118 ;	_free.c:135: return NULL;
   0008 90 00 00            119 	mov	dptr,#0x0000
   000B 22                  120 	ret
   000C                     121 00102$:
                            122 ;	_free.c:137: pthis -= 1; //to start of header
   000C EA                  123 	mov	a,r2
   000D 24 FC               124 	add	a,#0xfc
   000F FA                  125 	mov	r2,a
   0010 EB                  126 	mov	a,r3
   0011 34 FF               127 	addc	a,#0xff
   0013 FB                  128 	mov	r3,a
                            129 ;	_free.c:138: cur_header = _sdcc_first_memheader;
   0014 78r00               130 	mov	r0,#__sdcc_first_memheader
   0016 E2                  131 	movx	a,@r0
   0017 FC                  132 	mov	r4,a
   0018 08                  133 	inc	r0
   0019 E2                  134 	movx	a,@r0
   001A FD                  135 	mov	r5,a
                            136 ;	_free.c:139: _sdcc_prev_memheader = NULL;
   001B 78r00               137 	mov	r0,#__sdcc_prev_memheader
   001D E4                  138 	clr	a
   001E F2                  139 	movx	@r0,a
   001F 08                  140 	inc	r0
   0020 F2                  141 	movx	@r0,a
                            142 ;	_free.c:140: while (cur_header && pthis != cur_header)
   0021                     143 00104$:
   0021 EC                  144 	mov	a,r4
   0022 4D                  145 	orl	a,r5
   0023 60 1C               146 	jz	00106$
   0025 EA                  147 	mov	a,r2
   0026 B5 04 06            148 	cjne	a,ar4,00115$
   0029 EB                  149 	mov	a,r3
   002A B5 05 02            150 	cjne	a,ar5,00115$
   002D 80 12               151 	sjmp	00106$
   002F                     152 00115$:
                            153 ;	_free.c:142: _sdcc_prev_memheader = cur_header;
   002F 78r00               154 	mov	r0,#__sdcc_prev_memheader
   0031 EC                  155 	mov	a,r4
   0032 F2                  156 	movx	@r0,a
   0033 08                  157 	inc	r0
   0034 ED                  158 	mov	a,r5
   0035 F2                  159 	movx	@r0,a
                            160 ;	_free.c:143: cur_header = cur_header->next;
   0036 8C 82               161 	mov	dpl,r4
   0038 8D 83               162 	mov	dph,r5
   003A E0                  163 	movx	a,@dptr
   003B FC                  164 	mov	r4,a
   003C A3                  165 	inc	dptr
   003D E0                  166 	movx	a,@dptr
   003E FD                  167 	mov	r5,a
   003F 80 E0               168 	sjmp	00104$
   0041                     169 00106$:
                            170 ;	_free.c:145: return (cur_header);
   0041 8C 82               171 	mov	dpl,r4
   0043 8D 83               172 	mov	dph,r5
   0045 22                  173 	ret
                            174 ;------------------------------------------------------------
                            175 ;Allocation info for local variables in function 'free'
                            176 ;------------------------------------------------------------
                            177 ;------------------------------------------------------------
                            178 ;	_free.c:148: void free (void * p)
                            179 ;	-----------------------------------------
                            180 ;	 function free
                            181 ;	-----------------------------------------
   0046                     182 _free:
   0046 AA 82               183 	mov	r2,dpl
   0048 AB 83               184 	mov	r3,dph
                            185 ;	_free.c:154: pthis = _sdcc_find_memheader(p);
   004A 8A 82               186 	mov	dpl,r2
   004C 8B 83               187 	mov	dph,r3
   004E 12s00r00            188 	lcall	__sdcc_find_memheader
   0051 AA 82               189 	mov	r2,dpl
   0053 AB 83               190 	mov	r3,dph
                            191 ;	_free.c:155: if (pthis) //For allocated pointers only!
   0055 EA                  192 	mov	a,r2
   0056 4B                  193 	orl	a,r3
   0057 60 2F               194 	jz	00106$
                            195 ;	_free.c:157: if (!_sdcc_prev_memheader)
   0059 78r00               196 	mov	r0,#__sdcc_prev_memheader
   005B E2                  197 	movx	a,@r0
   005C F5 F0               198 	mov	b,a
   005E 08                  199 	inc	r0
   005F E2                  200 	movx	a,@r0
   0060 45 F0               201 	orl	a,b
   0062 70 0B               202 	jnz	00102$
                            203 ;	_free.c:159: pthis->len = 0;
   0064 8A 82               204 	mov	dpl,r2
   0066 8B 83               205 	mov	dph,r3
   0068 A3                  206 	inc	dptr
   0069 A3                  207 	inc	dptr
   006A E4                  208 	clr	a
   006B F0                  209 	movx	@dptr,a
   006C A3                  210 	inc	dptr
   006D F0                  211 	movx	@dptr,a
   006E 22                  212 	ret
   006F                     213 00102$:
                            214 ;	_free.c:163: _sdcc_prev_memheader->next = pthis->next;
   006F 78r00               215 	mov	r0,#__sdcc_prev_memheader
   0071 E2                  216 	movx	a,@r0
   0072 FC                  217 	mov	r4,a
   0073 08                  218 	inc	r0
   0074 E2                  219 	movx	a,@r0
   0075 FD                  220 	mov	r5,a
   0076 8A 82               221 	mov	dpl,r2
   0078 8B 83               222 	mov	dph,r3
   007A E0                  223 	movx	a,@dptr
   007B FA                  224 	mov	r2,a
   007C A3                  225 	inc	dptr
   007D E0                  226 	movx	a,@dptr
   007E FB                  227 	mov	r3,a
   007F 8C 82               228 	mov	dpl,r4
   0081 8D 83               229 	mov	dph,r5
   0083 EA                  230 	mov	a,r2
   0084 F0                  231 	movx	@dptr,a
   0085 A3                  232 	inc	dptr
   0086 EB                  233 	mov	a,r3
   0087 F0                  234 	movx	@dptr,a
   0088                     235 00106$:
   0088 22                  236 	ret
                            237 	.area CSEG    (CODE)
                            238 	.area CONST   (CODE)
                            239 	.area XINIT   (CODE)
                            240 	.area CABS    (ABS,CODE)
