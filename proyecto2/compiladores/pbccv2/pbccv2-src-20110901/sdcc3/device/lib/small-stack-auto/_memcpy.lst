                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:31 2015
                              5 ;--------------------------------------------------------
                              6 	.module _memcpy
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _memcpy
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'memcpy'
                             93 ;------------------------------------------------------------
                             94 ;src                       Allocated to stack - offset -5
                             95 ;acount                    Allocated to stack - offset -7
                             96 ;dst                       Allocated to registers r2 r3 r4 
                             97 ;ret                       Allocated to stack - offset 1
                             98 ;d                         Allocated to stack - offset 4
                             99 ;s                         Allocated to stack - offset 7
                            100 ;------------------------------------------------------------
                            101 ;	_memcpy.c:36: void * memcpy (
                            102 ;	-----------------------------------------
                            103 ;	 function memcpy
                            104 ;	-----------------------------------------
   0000                     105 _memcpy:
                    0002    106 	ar2 = 0x02
                    0003    107 	ar3 = 0x03
                    0004    108 	ar4 = 0x04
                    0005    109 	ar5 = 0x05
                    0006    110 	ar6 = 0x06
                    0007    111 	ar7 = 0x07
                    0000    112 	ar0 = 0x00
                    0001    113 	ar1 = 0x01
   0000 C0*00               114 	push	_bp
   0002 E5 81               115 	mov	a,sp
   0004 F5*00               116 	mov	_bp,a
   0006 24 09               117 	add	a,#0x09
   0008 F5 81               118 	mov	sp,a
   000A AA 82               119 	mov	r2,dpl
   000C AB 83               120 	mov	r3,dph
   000E AC F0               121 	mov	r4,b
                            122 ;	_memcpy.c:42: void * ret = dst;
   0010 A8*00               123 	mov	r0,_bp
   0012 08                  124 	inc	r0
   0013 A6 02               125 	mov	@r0,ar2
   0015 08                  126 	inc	r0
   0016 A6 03               127 	mov	@r0,ar3
   0018 08                  128 	inc	r0
   0019 A6 04               129 	mov	@r0,ar4
                            130 ;	_memcpy.c:44: char * s = src;
   001B E5*00               131 	mov	a,_bp
   001D 24 FB               132 	add	a,#0xfb
   001F F8                  133 	mov	r0,a
   0020 86 05               134 	mov	ar5,@r0
   0022 08                  135 	inc	r0
   0023 86 06               136 	mov	ar6,@r0
   0025 08                  137 	inc	r0
   0026 86 07               138 	mov	ar7,@r0
                            139 ;	_memcpy.c:49: while (acount--) {
   0028 E5*00               140 	mov	a,_bp
   002A 24 07               141 	add	a,#0x07
   002C F8                  142 	mov	r0,a
   002D A6 05               143 	mov	@r0,ar5
   002F 08                  144 	inc	r0
   0030 A6 06               145 	mov	@r0,ar6
   0032 08                  146 	inc	r0
   0033 A6 07               147 	mov	@r0,ar7
   0035 E5*00               148 	mov	a,_bp
   0037 24 04               149 	add	a,#0x04
   0039 F8                  150 	mov	r0,a
   003A A6 02               151 	mov	@r0,ar2
   003C 08                  152 	inc	r0
   003D A6 03               153 	mov	@r0,ar3
   003F 08                  154 	inc	r0
   0040 A6 04               155 	mov	@r0,ar4
   0042 E5*00               156 	mov	a,_bp
   0044 24 F9               157 	add	a,#0xf9
   0046 F8                  158 	mov	r0,a
   0047 86 05               159 	mov	ar5,@r0
   0049 08                  160 	inc	r0
   004A 86 06               161 	mov	ar6,@r0
   004C                     162 00101$:
   004C 8D 07               163 	mov	ar7,r5
   004E 8E 02               164 	mov	ar2,r6
   0050 1D                  165 	dec	r5
   0051 BD FF 01            166 	cjne	r5,#0xff,00109$
   0054 1E                  167 	dec	r6
   0055                     168 00109$:
   0055 EF                  169 	mov	a,r7
   0056 4A                  170 	orl	a,r2
   0057 60 34               171 	jz	00103$
                            172 ;	_memcpy.c:50: *d++ = *s++;
   0059 E5*00               173 	mov	a,_bp
   005B 24 07               174 	add	a,#0x07
   005D F8                  175 	mov	r0,a
   005E 86 82               176 	mov	dpl,@r0
   0060 08                  177 	inc	r0
   0061 86 83               178 	mov	dph,@r0
   0063 08                  179 	inc	r0
   0064 86 F0               180 	mov	b,@r0
   0066 12s00r00            181 	lcall	__gptrget
   0069 FA                  182 	mov	r2,a
   006A A3                  183 	inc	dptr
   006B 18                  184 	dec	r0
   006C 18                  185 	dec	r0
   006D A6 82               186 	mov	@r0,dpl
   006F 08                  187 	inc	r0
   0070 A6 83               188 	mov	@r0,dph
   0072 E5*00               189 	mov	a,_bp
   0074 24 04               190 	add	a,#0x04
   0076 F8                  191 	mov	r0,a
   0077 86 82               192 	mov	dpl,@r0
   0079 08                  193 	inc	r0
   007A 86 83               194 	mov	dph,@r0
   007C 08                  195 	inc	r0
   007D 86 F0               196 	mov	b,@r0
   007F EA                  197 	mov	a,r2
   0080 12s00r00            198 	lcall	__gptrput
   0083 A3                  199 	inc	dptr
   0084 18                  200 	dec	r0
   0085 18                  201 	dec	r0
   0086 A6 82               202 	mov	@r0,dpl
   0088 08                  203 	inc	r0
   0089 A6 83               204 	mov	@r0,dph
   008B 80 BF               205 	sjmp	00101$
   008D                     206 00103$:
                            207 ;	_memcpy.c:53: return(ret);
   008D A8*00               208 	mov	r0,_bp
   008F 08                  209 	inc	r0
   0090 86 82               210 	mov	dpl,@r0
   0092 08                  211 	inc	r0
   0093 86 83               212 	mov	dph,@r0
   0095 08                  213 	inc	r0
   0096 86 F0               214 	mov	b,@r0
   0098 85*00 81            215 	mov	sp,_bp
   009B D0*00               216 	pop	_bp
   009D 22                  217 	ret
                            218 	.area CSEG    (CODE)
                            219 	.area CONST   (CODE)
                            220 	.area XINIT   (CODE)
                            221 	.area CABS    (ABS,CODE)
