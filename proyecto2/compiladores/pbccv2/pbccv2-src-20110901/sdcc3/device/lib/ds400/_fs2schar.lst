                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:18 2015
                              5 ;--------------------------------------------------------
                              6 	.module _fs2schar
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl ___fs2schar
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      43 	.ds 8
                             44 ;--------------------------------------------------------
                             45 ; internal ram data
                             46 ;--------------------------------------------------------
                             47 	.area DSEG    (DATA)
                             48 ;--------------------------------------------------------
                             49 ; overlayable items in internal ram 
                             50 ;--------------------------------------------------------
                             51 	.area OSEG    (OVR,DATA)
                             52 ;--------------------------------------------------------
                             53 ; indirectly addressable internal ram data
                             54 ;--------------------------------------------------------
                             55 	.area ISEG    (DATA)
                             56 ;--------------------------------------------------------
                             57 ; absolute internal ram data
                             58 ;--------------------------------------------------------
                             59 	.area IABS    (ABS,DATA)
                             60 	.area IABS    (ABS,DATA)
                             61 ;--------------------------------------------------------
                             62 ; bit data
                             63 ;--------------------------------------------------------
                             64 	.area BSEG    (BIT)
                             65 ;--------------------------------------------------------
                             66 ; paged external ram data
                             67 ;--------------------------------------------------------
                             68 	.area PSEG    (PAG,XDATA)
                             69 ;--------------------------------------------------------
                             70 ; external ram data
                             71 ;--------------------------------------------------------
                             72 	.area XSEG    (XDATA)
                             73 ;--------------------------------------------------------
                             74 ; absolute external ram data
                             75 ;--------------------------------------------------------
                             76 	.area XABS    (ABS,XDATA)
                             77 ;--------------------------------------------------------
                             78 ; external initialized ram data
                             79 ;--------------------------------------------------------
                             80 	.area XISEG   (XDATA)
                             81 ;--------------------------------------------------------
                             82 ; global & static initialisations
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area GSINIT  (CODE)
                             86 	.area GSFINAL (CODE)
                             87 	.area GSINIT  (CODE)
                             88 ;--------------------------------------------------------
                             89 ; Home
                             90 ;--------------------------------------------------------
                             91 	.area HOME    (CODE)
                             92 	.area HOME    (CODE)
                             93 ;--------------------------------------------------------
                             94 ; code
                             95 ;--------------------------------------------------------
                             96 	.area CSEG    (CODE)
                             97 ;------------------------------------------------------------
                             98 ;Allocation info for local variables in function '__fs2schar'
                             99 ;------------------------------------------------------------
                            100 ;f                         Allocated to registers r2 r3 r4 r5 
                            101 ;sl                        Allocated to registers r2 r3 r4 r5 
                            102 ;------------------------------------------------------------
                            103 ;	_fs2schar.c:87: signed char __fs2schar (float f)
                            104 ;	-----------------------------------------
                            105 ;	 function __fs2schar
                            106 ;	-----------------------------------------
   0000                     107 ___fs2schar:
                    0002    108 	ar2 = 0x02
                    0003    109 	ar3 = 0x03
                    0004    110 	ar4 = 0x04
                    0005    111 	ar5 = 0x05
                    0006    112 	ar6 = 0x06
                    0007    113 	ar7 = 0x07
                    0000    114 	ar0 = 0x00
                    0001    115 	ar1 = 0x01
                            116 ;	_fs2schar.c:89: signed long sl=__fs2slong(f);
   0000 AA 82               117 	mov     r2,dpl
   0002 AB 83               118 	mov     r3,dph
   0004 AC 93               119 	mov     r4,dpx
   0006 AD F0               120 	mov     r5,b
   0008 8D F0               121 	mov	b,r5
   000A 12s00r00r00         122 	lcall	___fs2slong
   000E AA 82               123 	mov	r2,dpl
   0010 AB 83               124 	mov	r3,dph
   0012 AC 93               125 	mov	r4,dpx
   0014 AD F0               126 	mov	r5,b
                            127 ;	genAssign: resultIsFar = TRUE
                            128 ;	_fs2schar.c:90: if (sl>=SCHAR_MAX)
   0016 C3                  129 	clr	c
   0017 EA                  130 	mov	a,r2
   0018 94 7F               131 	subb	a,#0x7F
   001A EB                  132 	mov	a,r3
   001B 94 00               133 	subb	a,#0x00
   001D EC                  134 	mov	a,r4
   001E 94 00               135 	subb	a,#0x00
   0020 ED                  136 	mov	a,r5
   0021 64 80               137 	xrl	a,#0x80
   0023 94 80               138 	subb	a,#0x80
   0025 40 05               139 	jc   00102$
   0027                     140 00109$:
                            141 ;	_fs2schar.c:91: return SCHAR_MAX;
   0027 75 82 7F            142 	mov	dpl,#0x7F
   002A 80 1B               143 	sjmp 00105$
   002C                     144 00102$:
                            145 ;	_fs2schar.c:92: if (sl<=SCHAR_MIN)
   002C C3                  146 	clr	c
   002D 74 80               147 	mov	a,#0x80
   002F 9A                  148 	subb	a,r2
   0030 74 FF               149 	mov	a,#0xFF
   0032 9B                  150 	subb	a,r3
   0033 74 FF               151 	mov	a,#0xFF
   0035 9C                  152 	subb	a,r4
   0036 74 7F               153 	mov  a,#(0xFF ^ 0x80)
   0038 8D F0               154 	mov	b,r5
   003A 63 F0 80            155 	xrl	b,#0x80
   003D 95 F0               156 	subb	a,b
   003F 40 04               157 	jc   00104$
   0041                     158 00110$:
                            159 ;	_fs2schar.c:93: return -SCHAR_MIN;
   0041 75 82 80            160 	mov	dpl,#0x80
                            161 ;	_fs2schar.c:94: return sl;
   0044 22                  162 	ret
   0045                     163 00104$:
   0045 8A 82               164 	mov     dpl,r2
   0047                     165 00105$:
   0047 22                  166 	ret
                            167 	.area CSEG    (CODE)
                            168 	.area CONST   (CODE)
                            169 	.area XINIT   (CODE)
                            170 	.area CABS    (ABS,CODE)
