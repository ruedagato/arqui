/* This file is auto-generated by opts.sh.  */

#include "config.h"
#include "system.h"
#include "options.h"
#include "opts.h"
#include "intl.h"

#ifdef GCC_DRIVER
int target_flags;
#endif /* GCC_DRIVER */

/* Set by -Wfatal-errors.
   Exit on the first error occurred  */
int flag_fatal_errors;

/* Set by -Wtraditional.
   Warn about features not present in traditional C  */
int warn_traditional;

/* Set by -pedantic.
   Issue warnings needed for strict compliance to the standard  */
int pedantic;

/* Set by -w.
   Suppress warnings  */
int inhibit_warnings;


/* Local state variables.  */

const char * const lang_names[] =
{
  "SDCPP",
  0
};

const unsigned int cl_options_count = N_OPTS;

const struct cl_option cl_options[];// =
//{
//buffer: b
//  { "-buffer: ;",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: L",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: C",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: D",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: C",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: D",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: ;",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: A",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: C",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: D",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: C",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: D",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: H",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: P",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: I",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: M",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: G",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: M",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: G",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: M",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: M",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: T",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: M",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: L",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: M",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: L",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: M",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: G",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: M",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: M",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: P",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: D",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: U",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: W",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: E",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: W",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: W",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: W",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: W",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: W",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: T",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: W",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: E",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: W",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: D",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: ;",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: W",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: D",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: W",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: W",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: W",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: W",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: W",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: D",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: a",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: A",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: d",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: f",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: P",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: f",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: f",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: ;",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: f",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: T",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: f",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: f",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: M",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: f",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: f",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: M",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: f",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: f",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: G",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: i",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: i",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: i",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: C",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: i",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: i",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: i",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: i",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: i",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: i",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: i",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: l",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: C",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: l",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: n",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: D",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: o",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: o",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: p",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: I",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: p",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: L",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: p",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: P",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: r",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: R",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: s",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: C",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: s",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: C",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: s",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: C",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: s",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: C",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: s",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: C",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: t",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: E",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: t",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: -",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: v",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: E",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: ;",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: w",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: S",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: b
//  { "-buffer: ;",
//    0,
//    N_OPTS, 9, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: -
//  { "--help",
//    "Display this information",
//    N_OPTS, 5, -1,
//    CL_COMMON,
//    0, CLVC_BOOLEAN, 0 },
//buffer: -
//  { "--version",
//    "Display the compiler's version",
//    N_OPTS, 8, -1,
//    CL_COMMON,
//    0, CLVC_BOOLEAN, 0 },
//buffer: A
//  { "-A",
//    "-A<question>=<answer>	Assert the <answer> to <question>.  Putting '-' before <question> disables the <answer> to <question>",
//    N_OPTS, 1, -1,
//    CL_SDCPP | CL_JOINED | CL_SEPARATE,
//    0, CLVC_STRING, 0 },
//buffer: C
//  { "-C",
//    "Do not discard comments",
//    N_OPTS, 1, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: C
//  { "-CC",
//    "Do not discard comments in macro expansions",
//    N_OPTS, 2, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: D
//  { "-D",
//    "-D<macro>[=<val>]	Define a <macro> with <val> as its value.  If just <macro> is given, <val> is taken to be 1",
//    N_OPTS, 1, -1,
//    CL_SDCPP | CL_JOINED | CL_SEPARATE,
//    0, CLVC_STRING, 0 },
//buffer: H
//  { "-H",
//    "Print the name of header files as they are used",
//    N_OPTS, 1, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: I
//  { "-I",
//    "-I <dir>	Add <dir> to the end of the main include path.  -I- gives more include path control; see info documentation",
//    N_OPTS, 1, -1,
//    CL_SDCPP | CL_JOINED | CL_SEPARATE,
//    0, CLVC_STRING, 0 },
//buffer: M
//  { "-M",
//    "Generate make dependencies",
//    N_OPTS, 1, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: M
//  { "-MD",
//    "Generate make dependencies and compile",
//    N_OPTS, 2, -1,
//    CL_SDCPP | CL_SEPARATE,
//    0, CLVC_BOOLEAN, 0 },
//buffer: M
//  { "-MF",
//    "-MF <file>	Write dependency output to the given file",
//    N_OPTS, 2, -1,
//    CL_SDCPP | CL_JOINED | CL_SEPARATE,
//    0, CLVC_STRING, 0 },
//buffer: M
//  { "-MG",
//    "Treat missing header files as generated files",
//    N_OPTS, 2, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: M
//  { "-MM",
//    "Like -M but ignore system header files",
//    N_OPTS, 2, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: M
//  { "-MMD",
//    "Like -MD but ignore system header files",
//    N_OPTS, 3, -1,
//    CL_SDCPP | CL_SEPARATE,
//    0, CLVC_BOOLEAN, 0 },
//buffer: M
//  { "-MP",
//    "Generate phony targets for all headers",
//    N_OPTS, 2, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: M
//  { "-MQ",
//    "-MQ <target>	Add a MAKE-quoted target",
//    N_OPTS, 2, -1,
//    CL_SDCPP | CL_JOINED | CL_SEPARATE,
//    0, CLVC_STRING, 0 },
//buffer: M
//  { "-MT",
//    "-MT <target>	Add an unquoted target",
//    N_OPTS, 2, -1,
//    CL_SDCPP | CL_JOINED | CL_SEPARATE,
//    0, CLVC_STRING, 0 },
//buffer: P
//  { "-P",
//    "Do not generate #line directives",
//    N_OPTS, 1, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: U
//  { "-U",
//    "-U<macro>	Undefine <macro>",
//    N_OPTS, 1, -1,
//    CL_SDCPP | CL_JOINED | CL_SEPARATE,
//    0, CLVC_STRING, 0 },
//buffer: W
//  { "-Wall",
//    "Enable most warning messages",
//    N_OPTS, 4, 231,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: W
//  { "-Wcomment",
//    "Warn about possibly nested block comments, and C++ comments spanning more than one physical line",
//    N_OPTS, 8, 232,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: W
//  { "-Wcomments",
//    "Synonym for -Wcomment",
//    N_OPTS, 9, 233,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: W
//  { "-Wdeprecated",
//    "Warn about deprecated compiler features",
//    N_OPTS, 11, 234,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: W
//  { "-Wendif-labels",
//    "Warn about stray tokens after #elif and #endif",
//    N_OPTS, 13, 235,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: W
//  { "-Werror",
//    "Treat all warnings as errors",
//    N_OPTS, 6, 236,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: W
//  { "-Wfatal-errors",
//    "Exit on the first error occurred",
//    N_OPTS, 13, 237,
//    CL_SDCPP,
//    &flag_fatal_errors, CLVC_BOOLEAN, 0 },
//buffer: W
//  { "-Wimport",
//    "Deprecated.  This switch has no effect.",
//    N_OPTS, 7, 238,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: W
//  { "-Wsystem-headers",
//    "Do not suppress warnings from system headers",
//    N_OPTS, 15, 239,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: W
//  { "-Wtraditional",
//    "Warn about features not present in traditional C",
//    N_OPTS, 12, 240,
//    CL_SDCPP,
//    &warn_traditional, CLVC_BOOLEAN, 0 },
//buffer: W
//  { "-Wtrigraphs",
//    "Warn if trigraphs are encountered that might affect the meaning of the program",
//    N_OPTS, 10, 241,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: W
//  { "-Wundef",
//    "Warn if an undefined macro is used in an #if directive",
//    N_OPTS, 6, 242,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: W
//  { "-Wunused-macros",
//    "Warn about macros defined in the main file that are not used",
//    N_OPTS, 14, 243,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: W
//  { "-Wvariadic-macros",
//    "Do not warn about using variadic macros when -pedantic",
//    N_OPTS, 16, 244,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: a
//  { "-ansi",
//    "A synonym for -std=c89.",
//    N_OPTS, 4, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: d
//  { "-d",
//    "-d<letters>	Enable dumps from specific passes of the compiler",
//    N_OPTS, 1, -1,
//    CL_SDCPP | CL_JOINED,
//    0, CLVC_STRING, 0 },
//buffer: f
//  { "-fdollars-in-identifiers",
//    "Permit '$' as an identifier character",
//    N_OPTS, 23, 247,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//  { "-fexec-charset=",
//    "-fexec-charset=<cset>	Convert all strings and character constants to character set <cset>",
//    N_OPTS, 14, -1,
//    CL_SDCPP | CL_JOINED | CL_REJECT_NEGATIVE,
//    0, CLVC_STRING, 0 },
//  { "-finput-charset=",
//    "-finput-charset=<cset>      Specify the default character set for source files.",
//    N_OPTS, 15, -1,
//    CL_SDCPP | CL_JOINED | CL_REJECT_NEGATIVE,
//    0, CLVC_STRING, 0 },
//buffer: f
//  { "-fpreprocessed",
//    "Treat the input file as already preprocessed",
//    N_OPTS, 13, 250,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: f
//  { "-fshow-column",
//    0,
//    N_OPTS, 12, 251,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: f
//  { "-fsigned-char",
//    "Make \"char\" signed by default",
//    N_OPTS, 12, 252,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//  { "-ftabstop=",
//    "-ftabstop=<number>	Distance between tab stops for column reporting",
//    N_OPTS, 9, -1,
//    CL_SDCPP | CL_JOINED | CL_REJECT_NEGATIVE | CL_UINTEGER,
//    0, CLVC_BOOLEAN, 0 },
//buffer: f
//  { "-funsigned-char",
//    "Make \"char\" unsigned by default",
//    N_OPTS, 14, 254,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//  { "-fwide-exec-charset=",
//    "-fwide-exec-charset=<cset>	Convert all wide strings and character constants to character set <cset>",
//    N_OPTS, 19, -1,
//    CL_SDCPP | CL_JOINED | CL_REJECT_NEGATIVE,
//    0, CLVC_STRING, 0 },
//buffer: f
//  { "-fworking-directory",
//    "Generate a #line directive pointing at the current working directory",
//    N_OPTS, 18, 256,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: i
//  { "-idirafter",
//    "-idirafter <dir>	Add <dir> to the end of the system include path",
//    N_OPTS, 9, -1,
//    CL_SDCPP | CL_JOINED | CL_SEPARATE,
//    0, CLVC_STRING, 0 },
//buffer: i
//  { "-imacros",
//    "-imacros <file>	Accept definition of macros in <file>",
//    N_OPTS, 7, -1,
//    CL_SDCPP | CL_JOINED | CL_SEPARATE,
//    0, CLVC_STRING, 0 },
//buffer: i
//  { "-imultilib",
//    "-imultilib <dir> Set <dir> to be the multilib include subdirectory",
//    N_OPTS, 9, -1,
//    CL_JOINED | CL_SEPARATE,
//    0, CLVC_STRING, 0 },
//buffer: i
//  { "-include",
//    "-include <file>	Include the contents of <file> before other files",
//    N_OPTS, 7, -1,
//    CL_SDCPP | CL_JOINED | CL_SEPARATE,
//    0, CLVC_STRING, 0 },
//buffer: i
//  { "-iprefix",
//    "-iprefix <path>	Specify <path> as a prefix for next two options",
//    N_OPTS, 7, -1,
//    CL_SDCPP | CL_JOINED | CL_SEPARATE,
//    0, CLVC_STRING, 0 },
//buffer: i
//  { "-iquote",
//    "-iquote <dir>	Add <dir> to the end of the quote include path",
//    N_OPTS, 6, -1,
//    CL_SDCPP | CL_JOINED | CL_SEPARATE,
//    0, CLVC_STRING, 0 },
//buffer: i
//  { "-isysroot",
//    "-isysroot <dir>	Set <dir> to be the system root directory",
//    N_OPTS, 8, -1,
//    CL_SDCPP | CL_JOINED | CL_SEPARATE,
//    0, CLVC_STRING, 0 },
//buffer: i
//  { "-isystem",
//    "-isystem <dir>	Add <dir> to the start of the system include path",
//    N_OPTS, 7, -1,
//    CL_SDCPP | CL_JOINED | CL_SEPARATE,
//    0, CLVC_STRING, 0 },
//buffer: i
//  { "-iwithprefix",
//    "-iwithprefix <dir>	Add <dir> to the end of the system include path",
//    N_OPTS, 11, -1,
//    CL_SDCPP | CL_JOINED | CL_SEPARATE,
//    0, CLVC_STRING, 0 },
//buffer: i
//  { "-iwithprefixbefore",
//    "-iwithprefixbefore <dir>	Add <dir> to the end of the main include path",
//    OPT_iwithprefix, 17, -1,
//    CL_SDCPP | CL_JOINED | CL_SEPARATE,
//    0, CLVC_STRING, 0 },
//buffer: l
//  { "-lang-asm",
//    0,
//    N_OPTS, 8, -1,
//    CL_UNDOCUMENTED,
//    0, CLVC_BOOLEAN, 0 },
//buffer: l
//  { "-lang-objc",
//    0,
//    N_OPTS, 9, -1,
//    CL_SDCPP | CL_UNDOCUMENTED,
//    0, CLVC_BOOLEAN, 0 },
//buffer: n
//  { "-nostdinc",
//    "Do not search standard system include directories (those specified with -isystem will still be used)",
//    N_OPTS, 8, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: o
//  { "-o",
//    "-o <file>	Place output into <file>",
//    N_OPTS, 1, -1,
//    CL_SDCPP | CL_JOINED | CL_SEPARATE,
//    0, CLVC_STRING, 0 },
//buffer: o
//  { "-obj-ext=",
//    "-obj-ext=<extension>	Define object file extension, used for generation of make dependencies",
//    OPT_o, 8, -1,
//    CL_SDCPP | CL_JOINED,
//    0, CLVC_STRING, 0 },
//buffer: p
//  { "-pedantic",
//    "Issue warnings needed for strict compliance to the standard",
//    N_OPTS, 8, -1,
//    CL_SDCPP,
//    &pedantic, CLVC_BOOLEAN, 0 },
//buffer: p
//  { "-pedantic-errors",
//    "Like -pedantic but issue them as errors",
//    N_OPTS, 15, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: p
//  { "-pedantic-parse-number",
//    "Pedantic parse number",
//    N_OPTS, 21, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: r
//  { "-remap",
//    "Remap file names when including files",
//    N_OPTS, 5, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: s
//  { "-std=c89",
//    "Conform to the ISO 1990 C standard",
//    N_OPTS, 7, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: s
//  { "-std=c99",
//    "Conform to the ISO 1999 C standard",
//    N_OPTS, 7, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: s
//  { "-std=iso9899:1990",
//    "Conform to the ISO 1990 C standard",
//    N_OPTS, 16, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: s
//  { "-std=iso9899:199409",
//    "Conform to the ISO 1990 C standard as amended in 1994",
//    N_OPTS, 18, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: s
//  { "-std=iso9899:1999",
//    "Conform to the ISO 1999 C standard",
//    N_OPTS, 16, -1,
//    0,
//    0, CLVC_BOOLEAN, 0 },
//buffer: t
//  { "-traditional-cpp",
//    "Enable traditional preprocessing",
//    N_OPTS, 15, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: t
//  { "-trigraphs",
//    "-trigraphs	Support ISO C trigraphs",
//    N_OPTS, 9, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: v
//  { "-v",
//    "Enable verbose output",
//    N_OPTS, 1, -1,
//    CL_SDCPP,
//    0, CLVC_BOOLEAN, 0 },
//buffer: w
//  { "-w",
//    "Suppress warnings",
//    N_OPTS, 1, -1,
//    CL_SDCPP,
//    &inhibit_warnings, CLVC_BOOLEAN, 0 }
//};
