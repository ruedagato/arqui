                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:21 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strstr
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG (CODE)
                             14 	.area XINIT
                             15 	.area CONST   (CODE)
                             16 	.area DSEG
                             17 	.area OSEG    (OVR)
                             18 	.area BSEG
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl _strstr_PARM_2
                             25 	.globl _strstr
                             26 ;--------------------------------------------------------
                             27 ;  ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in  ram 
                             32 ;--------------------------------------------------------
                             33 	.area	OSEG    (OVR)
   0000                      34 _strstr_sloc0_1_0::
   0000                      35 	.ds 2
   0002                      36 _strstr_sloc1_1_0::
   0002                      37 	.ds 2
   0004                      38 _strstr_sloc2_1_0::
   0004                      39 	.ds 2
   0006                      40 _strstr_sloc3_1_0::
   0006                      41 	.ds 2
   0008                      42 _strstr_sloc4_1_0::
   0008                      43 	.ds 2
   000A                      44 _strstr_sloc5_1_0::
   000A                      45 	.ds 2
                             46 ;--------------------------------------------------------
                             47 ; absolute external ram data
                             48 ;--------------------------------------------------------
                             49 	.area XABS    (ABS)
                             50 ;--------------------------------------------------------
                             51 ; external initialized ram data
                             52 ;--------------------------------------------------------
                             53 	.area XISEG
                             54 ;--------------------------------------------------------
                             55 ; extended address mode data
                             56 ;--------------------------------------------------------
                             57 	.area XSEG
   0000                      58 _strstr_PARM_2:
   0000                      59 	.ds 2
   0002                      60 _strstr_str1_1_1:
   0002                      61 	.ds 2
   0004                      62 _strstr_cp_1_1:
   0004                      63 	.ds 2
   0006                      64 _strstr_s2_1_1:
   0006                      65 	.ds 2
                             66 ;--------------------------------------------------------
                             67 ; global & static initialisations
                             68 ;--------------------------------------------------------
                             69 	.area HOME (CODE)
                             70 	.area GSINIT (CODE)
                             71 	.area GSFINAL (CODE)
                             72 	.area GSINIT (CODE)
                             73 ;--------------------------------------------------------
                             74 ; Home
                             75 ;--------------------------------------------------------
                             76 	.area HOME (CODE)
                             77 	.area HOME (CODE)
                             78 ;--------------------------------------------------------
                             79 ; code
                             80 ;--------------------------------------------------------
                             81 	.area CSEG (CODE)
                             82 ;------------------------------------------------------------
                             83 ;Allocation info for local variables in function 'strstr'
                             84 ;------------------------------------------------------------
                             85 ;str2                      Allocated with name '_strstr_PARM_2'
                             86 ;str1                      Allocated with name '_strstr_str1_1_1'
                             87 ;cp                        Allocated with name '_strstr_cp_1_1'
                             88 ;s1                        Allocated to registers 
                             89 ;s2                        Allocated with name '_strstr_s2_1_1'
                             90 ;sloc0                     Allocated with name '_strstr_sloc0_1_0'
                             91 ;sloc1                     Allocated with name '_strstr_sloc1_1_0'
                             92 ;sloc2                     Allocated with name '_strstr_sloc2_1_0'
                             93 ;sloc3                     Allocated with name '_strstr_sloc3_1_0'
                             94 ;sloc4                     Allocated with name '_strstr_sloc4_1_0'
                             95 ;sloc5                     Allocated with name '_strstr_sloc5_1_0'
                             96 ;------------------------------------------------------------
                             97 ;../_strstr.c:31: char * strstr (
                             98 ;	-----------------------------------------
                             99 ;	 function strstr
                            100 ;	-----------------------------------------
   0000                     101 _strstr:
   0000 C7s00r03            102 	sta	(_strstr_str1_1_1 + 1)
   0003 CFs00r02            103 	stx	_strstr_str1_1_1
                            104 ;../_strstr.c:36: const char * cp = str1;
   0006 C6s00r02            105 	lda	_strstr_str1_1_1
   0009 C7s00r04            106 	sta	_strstr_cp_1_1
   000C C6s00r03            107 	lda	(_strstr_str1_1_1 + 1)
   000F C7s00r05            108 	sta	(_strstr_cp_1_1 + 1)
                            109 ;../_strstr.c:40: if ( !*str2 )
   0012 C6s00r00            110 	lda	_strstr_PARM_2
   0015 B7*00               111 	sta	*_strstr_sloc0_1_0
   0017 C6s00r01            112 	lda	(_strstr_PARM_2 + 1)
   001A B7*01               113 	sta	*(_strstr_sloc0_1_0 + 1)
   001C 55*00               114 	ldhx	*_strstr_sloc0_1_0
   001E F6                  115 	lda	,x
   001F 26 07               116 	bne	00122$
   0021                     117 00124$:
                            118 ;../_strstr.c:41: return str1;
   0021 CEs00r02            119 	ldx	_strstr_str1_1_1
   0024 C6s00r03            120 	lda	(_strstr_str1_1_1 + 1)
   0027 81                  121 	rts
                            122 ;../_strstr.c:43: while (*cp)
   0028                     123 00122$:
   0028 C6s00r02            124 	lda	_strstr_str1_1_1
   002B B7*02               125 	sta	*_strstr_sloc1_1_0
   002D C6s00r03            126 	lda	(_strstr_str1_1_1 + 1)
   0030 B7*03               127 	sta	*(_strstr_sloc1_1_0 + 1)
   0032                     128 00110$:
   0032 55*02               129 	ldhx	*_strstr_sloc1_1_0
   0034 F6                  130 	lda	,x
   0035 26 03               131 	bne	00125$
   0037 CCs00rB3            132 	jmp	00112$
   003A                     133 00125$:
                            134 ;../_strstr.c:46: s2 = str2;
   003A B6*00               135 	lda	*_strstr_sloc0_1_0
   003C C7s00r06            136 	sta	_strstr_s2_1_1
   003F B6*01               137 	lda	*(_strstr_sloc0_1_0 + 1)
   0041 C7s00r07            138 	sta	(_strstr_s2_1_1 + 1)
                            139 ;../_strstr.c:48: while ( *s1 && *s2 && !(*s1-*s2) )
   0044 4E*02*04            140 	mov	*_strstr_sloc1_1_0,*_strstr_sloc2_1_0
   0047 4E*03*05            141 	mov	*(_strstr_sloc1_1_0 + 1),*(_strstr_sloc2_1_0 + 1)
   004A C6s00r06            142 	lda	_strstr_s2_1_1
   004D B7*06               143 	sta	*_strstr_sloc3_1_0
   004F C6s00r07            144 	lda	(_strstr_s2_1_1 + 1)
   0052 B7*07               145 	sta	*(_strstr_sloc3_1_0 + 1)
   0054                     146 00105$:
   0054 55*04               147 	ldhx	*_strstr_sloc2_1_0
   0056 F6                  148 	lda	,x
   0057 27 3B               149 	beq	00107$
   0059                     150 00126$:
   0059 55*06               151 	ldhx	*_strstr_sloc3_1_0
   005B F6                  152 	lda	,x
   005C 27 36               153 	beq	00107$
   005E                     154 00127$:
   005E 55*04               155 	ldhx	*_strstr_sloc2_1_0
   0060 F6                  156 	lda	,x
   0061 B7*09               157 	sta	*(_strstr_sloc4_1_0 + 1)
   0063 49                  158 	rola	
   0064 4F                  159 	clra	
   0065 A2 00               160 	sbc	#0x00
   0067 B7*08               161 	sta	*_strstr_sloc4_1_0
   0069 55*06               162 	ldhx	*_strstr_sloc3_1_0
   006B F6                  163 	lda	,x
   006C B7*0B               164 	sta	*(_strstr_sloc5_1_0 + 1)
   006E 49                  165 	rola	
   006F 4F                  166 	clra	
   0070 A2 00               167 	sbc	#0x00
   0072 B7*0A               168 	sta	*_strstr_sloc5_1_0
   0074 B6*09               169 	lda	*(_strstr_sloc4_1_0 + 1)
   0076 B0*0B               170 	sub	*(_strstr_sloc5_1_0 + 1)
   0078 B7*0B               171 	sta	*(_strstr_sloc5_1_0 + 1)
   007A B6*08               172 	lda	*_strstr_sloc4_1_0
   007C B2*0A               173 	sbc	*_strstr_sloc5_1_0
   007E B7*0A               174 	sta	*_strstr_sloc5_1_0
   0080 B6*0B               175 	lda	*(_strstr_sloc5_1_0 + 1)
   0082 BA*0A               176 	ora	*_strstr_sloc5_1_0
   0084 26 0E               177 	bne	00107$
   0086                     178 00128$:
                            179 ;../_strstr.c:49: s1++, s2++;
   0086 55*04               180 	ldhx	*_strstr_sloc2_1_0
   0088 AF 01               181 	aix	#1
   008A 35*04               182 	sthx	*_strstr_sloc2_1_0
   008C 55*06               183 	ldhx	*_strstr_sloc3_1_0
   008E AF 01               184 	aix	#1
   0090 35*06               185 	sthx	*_strstr_sloc3_1_0
   0092 20 C0               186 	bra	00105$
   0094                     187 00107$:
                            188 ;../_strstr.c:51: if (!*s2)
   0094 55*06               189 	ldhx	*_strstr_sloc3_1_0
   0096 F6                  190 	lda	,x
   0097 26 07               191 	bne	00109$
   0099                     192 00129$:
                            193 ;../_strstr.c:52: return( (char*)cp );
   0099 CEs00r04            194 	ldx	_strstr_cp_1_1
   009C C6s00r05            195 	lda	(_strstr_cp_1_1 + 1)
   009F 81                  196 	rts
   00A0                     197 00109$:
                            198 ;../_strstr.c:54: cp++;
   00A0 55*02               199 	ldhx	*_strstr_sloc1_1_0
   00A2 AF 01               200 	aix	#1
   00A4 35*02               201 	sthx	*_strstr_sloc1_1_0
   00A6 B6*02               202 	lda	*_strstr_sloc1_1_0
   00A8 C7s00r04            203 	sta	_strstr_cp_1_1
   00AB B6*03               204 	lda	*(_strstr_sloc1_1_0 + 1)
   00AD C7s00r05            205 	sta	(_strstr_cp_1_1 + 1)
   00B0 CCs00r32            206 	jmp	00110$
   00B3                     207 00112$:
                            208 ;../_strstr.c:57: return (NULL) ;
   00B3 5F                  209 	clrx
   00B4 4F                  210 	clra
   00B5                     211 00113$:
   00B5 81                  212 	rts
                            213 	.area CSEG (CODE)
                            214 	.area CONST   (CODE)
                            215 	.area XINIT
                            216 	.area CABS    (ABS,CODE)
