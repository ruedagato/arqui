                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:16 2015
                              5 ;--------------------------------------------------------
                              6 	.module _atol
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _atol
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 ;--------------------------------------------------------
                             43 ; internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area DSEG    (DATA)
   0000                      46 _atol_rv_1_1:
   0000                      47 	.ds 4
                             48 ;--------------------------------------------------------
                             49 ; overlayable items in internal ram 
                             50 ;--------------------------------------------------------
                             51 	.area OSEG    (OVR,DATA)
                             52 ;--------------------------------------------------------
                             53 ; indirectly addressable internal ram data
                             54 ;--------------------------------------------------------
                             55 	.area ISEG    (DATA)
                             56 ;--------------------------------------------------------
                             57 ; absolute internal ram data
                             58 ;--------------------------------------------------------
                             59 	.area IABS    (ABS,DATA)
                             60 	.area IABS    (ABS,DATA)
                             61 ;--------------------------------------------------------
                             62 ; bit data
                             63 ;--------------------------------------------------------
                             64 	.area BSEG    (BIT)
                             65 ;--------------------------------------------------------
                             66 ; paged external ram data
                             67 ;--------------------------------------------------------
                             68 	.area PSEG    (PAG,XDATA)
                             69 ;--------------------------------------------------------
                             70 ; external ram data
                             71 ;--------------------------------------------------------
                             72 	.area XSEG    (XDATA)
   0000                      73 _atol_sloc1_1_0:
   0000                      74 	.ds 4
                             75 ;--------------------------------------------------------
                             76 ; absolute external ram data
                             77 ;--------------------------------------------------------
                             78 	.area XABS    (ABS,XDATA)
                             79 ;--------------------------------------------------------
                             80 ; external initialized ram data
                             81 ;--------------------------------------------------------
                             82 	.area XISEG   (XDATA)
                             83 ;--------------------------------------------------------
                             84 ; global & static initialisations
                             85 ;--------------------------------------------------------
                             86 	.area HOME    (CODE)
                             87 	.area GSINIT  (CODE)
                             88 	.area GSFINAL (CODE)
                             89 	.area GSINIT  (CODE)
                             90 ;--------------------------------------------------------
                             91 ; Home
                             92 ;--------------------------------------------------------
                             93 	.area HOME    (CODE)
                             94 	.area HOME    (CODE)
                             95 ;--------------------------------------------------------
                             96 ; code
                             97 ;--------------------------------------------------------
                             98 	.area CSEG    (CODE)
                             99 ;------------------------------------------------------------
                            100 ;Allocation info for local variables in function 'atol'
                            101 ;------------------------------------------------------------
                            102 ;rv                        Allocated with name '_atol_rv_1_1'
                            103 ;sign                      Allocated to registers r0 
                            104 ;s                         Allocated to registers r2 r3 r4 r5 
                            105 ;sloc0                     Allocated with name '_atol_sloc0_1_0'
                            106 ;sloc1                     Allocated with name '_atol_sloc1_1_0'
                            107 ;------------------------------------------------------------
                            108 ;	_atol.c:29: long atol(char * s)
                            109 ;	-----------------------------------------
                            110 ;	 function atol
                            111 ;	-----------------------------------------
   0000                     112 _atol:
                    0002    113 	ar2 = 0x02
                    0003    114 	ar3 = 0x03
                    0004    115 	ar4 = 0x04
                    0005    116 	ar5 = 0x05
                    0006    117 	ar6 = 0x06
                    0007    118 	ar7 = 0x07
                    0000    119 	ar0 = 0x00
                    0001    120 	ar1 = 0x01
   0000 AA 82               121 	mov	r2,dpl
   0002 AB 83               122 	mov	r3,dph
   0004 AC 93               123 	mov	r4,dpx
   0006 AD F0               124 	mov	r5,b
                            125 ;	_atol.c:31: register long rv=0; 
                            126 ;	genAssign: resultIsFar = FALSE
   0008 E4                  127 	clr	a
   0009 F5*00               128 	mov	_atol_rv_1_1,a
   000B F5*01               129 	mov	(_atol_rv_1_1 + 1),a
   000D F5*02               130 	mov	(_atol_rv_1_1 + 2),a
   000F F5*03               131 	mov	(_atol_rv_1_1 + 3),a
                            132 ;	_atol.c:35: while (*s) {
                            133 ;	genAssign: resultIsFar = FALSE
   0011 8A 06               134 	mov	ar6,r2
   0013 8B 07               135 	mov	ar7,r3
   0015 8C 00               136 	mov	ar0,r4
   0017 8D 01               137 	mov	ar1,r5
   0019                     138 00107$:
   0019 8E 82               139 	mov	dpl,r6
   001B 8F 83               140 	mov	dph,r7
   001D 88 93               141 	mov	dpx,r0
   001F 89 F0               142 	mov	b,r1
   0021 12s00r00r00         143 	lcall	__gptrget
   0025 FA                  144 	mov  r2,a
   0026 60 37               145 	jz  00133$
   0028                     146 00135$:
                            147 ;	_atol.c:36: if (*s <= '9' && *s >= '0')
   0028 C3                  148 	clr	c
   0029 74 B9               149 	mov  a,#(0x39 ^ 0x80)
   002B 8A F0               150 	mov	b,r2
   002D 63 F0 80            151 	xrl	b,#0x80
   0030 95 F0               152 	subb	a,b
   0032 40 08               153 	jc   00102$
   0034                     154 00136$:
   0034 C3                  155 	clr	c
   0035 EA                  156 	mov	a,r2
   0036 64 80               157 	xrl	a,#0x80
   0038 94 B0               158 	subb	a,#0xB0
   003A 50 23               159 	jnc  00133$
   003C                     160 00137$:
                            161 ;	_atol.c:37: break;
   003C                     162 00102$:
                            163 ;	_atol.c:38: if (*s == '-' || *s == '+') 
   003C 8E 82               164 	mov	dpl,r6
   003E 8F 83               165 	mov	dph,r7
   0040 88 93               166 	mov	dpx,r0
   0042 89 F0               167 	mov	b,r1
   0044 12s00r00r00         168 	lcall	__gptrget
   0048 FA                  169 	mov  r2,a
   0049 B4 2D 02            170 	cjne	a,#0x2D,00138$
   004C 80 11               171 	sjmp 00133$
   004E                     172 00138$:
   004E EA                  173 	mov	a,r2
   004F B4 2B 02            174 	cjne	a,#0x2B,00139$
   0052 80 0B               175 	sjmp 00133$
   0054                     176 00139$:
                            177 ;	_atol.c:40: s++;
   0054 0E                  178 	inc	r6
   0055 BE 00 05            179 	cjne	r6,#0,00140$
   0058 0F                  180 	inc	r7
   0059 BF 00 01            181 	cjne	r7,#0,00140$
   005C 08                  182 	inc	r0
   005D                     183 00140$:
   005D 80 BA               184 	sjmp 00107$
   005F                     185 00133$:
                            186 ;	genAssign: resultIsFar = TRUE
   005F 8E 02               187 	mov	ar2,r6
   0061 8F 03               188 	mov	ar3,r7
   0063 88 04               189 	mov	ar4,r0
   0065 89 05               190 	mov	ar5,r1
                            191 ;	_atol.c:43: sign = (*s == '-');
   0067 8E 82               192 	mov	dpl,r6
   0069 8F 83               193 	mov	dph,r7
   006B 88 93               194 	mov	dpx,r0
   006D 89 F0               195 	mov	b,r1
   006F 12s00r00r00         196 	lcall	__gptrget
   0073 FE                  197 	mov  r6,a
   0074 B4 2D 04            198 	cjne	a,#0x2D,00141$
   0077 74 01               199 	mov	a,#1
   0079 80 01               200 	sjmp	00142$
   007B                     201 00141$:
   007B E4                  202 	clr	a
   007C                     203 00142$:
                            204 ;	genAssign: resultIsFar = FALSE
                            205 ;	_atol.c:44: if (*s == '-' || *s == '+') s++;
   007C FF                  206 	mov  r7,a
   007D 8F 00               207 	mov  ar0,r7 
   007F 70 04               208 	jnz  00110$
   0081                     209 00143$:
   0081 EE                  210 	mov	a,r6
   0082 B4 2B 09            211 	cjne a,#0x2B,00131$
   0085                     212 00145$:
   0085                     213 00110$:
   0085 0A                  214 	inc	r2
   0086 BA 00 05            215 	cjne	r2,#0,00146$
   0089 0B                  216 	inc	r3
   008A BB 00 01            217 	cjne	r3,#0,00146$
   008D 0C                  218 	inc	r4
   008E                     219 00146$:
                            220 ;	_atol.c:46: while (*s && *s >= '0' && *s <= '9') {
   008E                     221 00131$:
                            222 ;	genAssign: resultIsFar = TRUE
   008E 90s00r00r00         223 	mov	dptr,#_atol_sloc1_1_0
   0092 EA                  224 	mov	a,r2
   0093 F0                  225 	movx	@dptr,a
   0094 A3                  226 	inc	dptr
   0095 EB                  227 	mov	a,r3
   0096 F0                  228 	movx	@dptr,a
   0097 A3                  229 	inc	dptr
   0098 EC                  230 	mov	a,r4
   0099 F0                  231 	movx	@dptr,a
   009A A3                  232 	inc	dptr
   009B ED                  233 	mov	a,r5
   009C F0                  234 	movx	@dptr,a
   009D                     235 00115$:
   009D 75 86 01            236 	mov     dps, #1
   00A0 90s00r00r00         237 	mov     dptr, #_atol_sloc1_1_0
   00A4 E0                  238 	movx	a,@dptr
   00A5 F5 82               239 	mov	dpl,a
   00A7 A3                  240 	inc	dptr
   00A8 E0                  241 	movx	a,@dptr
   00A9 F5 83               242 	mov	dph,a
   00AB A3                  243 	inc	dptr
   00AC E0                  244 	movx	a,@dptr
   00AD F5 93               245 	mov	dpx,a
   00AF A3                  246 	inc	dptr
   00B0 E0                  247 	movx	a,@dptr
   00B1 F5 F0               248 	mov	b,a
   00B3 75 86 00            249 	mov	dps,#0
   00B6 12s00r00r00         250 	lcall	__gptrget
   00BA FE                  251 	mov  r6,a
   00BB 70 04               252 	jnz	00147$
   00BD 02s00r01r42         253 	ljmp	00117$
   00C1                     254 00147$:
   00C1 C3                  255 	clr	c
   00C2 EE                  256 	mov	a,r6
   00C3 64 80               257 	xrl	a,#0x80
   00C5 94 B0               258 	subb	a,#0xB0
   00C7 50 04               259 	jnc	00148$
   00C9 02s00r01r42         260 	ljmp	00117$
   00CD                     261 00148$:
   00CD C3                  262 	clr	c
   00CE 74 B9               263 	mov  a,#(0x39 ^ 0x80)
   00D0 8E F0               264 	mov	b,r6
   00D2 63 F0 80            265 	xrl	b,#0x80
   00D5 95 F0               266 	subb	a,b
   00D7 40 69               267 	jc   00117$
   00D9                     268 00149$:
                            269 ;	_atol.c:47: rv = (rv * 10) + (*s - '0');
   00D9 C0 00               270 	push	ar0
                            271 ;	genAssign: resultIsFar = TRUE
   00DB 90s00r00r00         272 	mov	dptr,#__mullong_PARM_2
   00DF E5*00               273 	mov	a,_atol_rv_1_1
   00E1 F0                  274 	movx	@dptr,a
   00E2 A3                  275 	inc	dptr
   00E3 E5*01               276 	mov	a,(_atol_rv_1_1 + 1)
   00E5 F0                  277 	movx	@dptr,a
   00E6 A3                  278 	inc	dptr
   00E7 E5*02               279 	mov	a,(_atol_rv_1_1 + 2)
   00E9 F0                  280 	movx	@dptr,a
   00EA A3                  281 	inc	dptr
   00EB E5*03               282 	mov	a,(_atol_rv_1_1 + 3)
   00ED F0                  283 	movx	@dptr,a
   00EE C0 06               284 	push	ar6
   00F0 90 00 00 0A         285 	mov	dptr,#0x00000A
   00F4 75 F0 00            286 	mov	b,#0x00
   00F7 12s00r00r00         287 	lcall	__mullong
   00FB AF 82               288 	mov	r7,dpl
   00FD A9 83               289 	mov	r1,dph
   00FF A8 93               290 	mov	r0,dpx
   0101 AA F0               291 	mov	r2,b
   0103 D0 06               292 	pop	ar6
   0105 EE                  293 	mov	a,r6
   0106 33                  294 	rlc	a
   0107 95 E0               295 	subb	a,acc
   0109 FB                  296 	mov	r3,a
   010A EE                  297 	mov	a,r6
   010B 24 D0               298 	add	a,#0xD0
   010D FE                  299 	mov	r6,a
   010E EB                  300 	mov	a,r3
   010F 34 FF               301 	addc	a,#0xFF
   0111 FB                  302 	mov  r3,a
   0112 33                  303 	rlc	a
   0113 95 E0               304 	subb	a,acc
   0115 FC                  305 	mov	r4,a
   0116 FD                  306 	mov	r5,a
   0117 EE                  307 	mov	a,r6
   0118 2F                  308 	add	a,r7
   0119 F5*00               309 	mov	_atol_rv_1_1,a
   011B EB                  310 	mov	a,r3
   011C 39                  311 	addc	a,r1
   011D F5*01               312 	mov	(_atol_rv_1_1 + 1),a
   011F EC                  313 	mov	a,r4
   0120 38                  314 	addc	a,r0
   0121 F5*02               315 	mov	(_atol_rv_1_1 + 2),a
   0123 ED                  316 	mov	a,r5
   0124 3A                  317 	addc	a,r2
   0125 F5*03               318 	mov	(_atol_rv_1_1 + 3),a
                            319 ;	_atol.c:48: s++;
   0127 90s00r00r00         320 	mov	dptr,#_atol_sloc1_1_0
   012B E0                  321 	movx	a,@dptr
   012C 24 01               322 	add	a,#0x01
   012E F0                  323 	movx	@dptr,a
   012F A3                  324 	inc	dptr
   0130 E0                  325 	movx	a,@dptr
   0131 34 00               326 	addc	a,#0x00
   0133 F0                  327 	movx	@dptr,a
   0134 A3                  328 	inc	dptr
   0135 E0                  329 	movx	a,@dptr
   0136 34 00               330 	addc	a,#0x00
   0138 F0                  331 	movx	@dptr,a
   0139 A3                  332 	inc	dptr
   013A E0                  333 	movx	a,@dptr
   013B F0                  334 	movx	@dptr,a
   013C D0 00               335 	pop	ar0
   013E 02s00r00r9D         336 	ljmp	00115$
   0142                     337 00117$:
                            338 ;	_atol.c:51: return (sign ? -rv : rv);
   0142 E8                  339 	mov	a,r0
   0143 60 13               340 	jz  00120$
   0145                     341 00150$:
   0145 C3                  342 	clr	c
   0146 E4                  343 	clr	a
   0147 95*00               344 	subb	a,_atol_rv_1_1
   0149 FA                  345 	mov	r2,a
   014A E4                  346 	clr	a
   014B 95*01               347 	subb	a,(_atol_rv_1_1 + 1)
   014D FB                  348 	mov	r3,a
   014E E4                  349 	clr	a
   014F 95*02               350 	subb	a,(_atol_rv_1_1 + 2)
   0151 FC                  351 	mov	r4,a
   0152 E4                  352 	clr	a
   0153 95*03               353 	subb	a,(_atol_rv_1_1 + 3)
   0155 FD                  354 	mov	r5,a
   0156 80 08               355 	sjmp 00121$
   0158                     356 00120$:
                            357 ;	genAssign: resultIsFar = FALSE
   0158 AA*00               358 	mov	r2,_atol_rv_1_1
   015A AB*01               359 	mov	r3,(_atol_rv_1_1 + 1)
   015C AC*02               360 	mov	r4,(_atol_rv_1_1 + 2)
   015E AD*03               361 	mov	r5,(_atol_rv_1_1 + 3)
   0160                     362 00121$:
   0160 8A 82               363 	mov	dpl,r2
   0162 8B 83               364 	mov	dph,r3
   0164 8C 93               365 	mov	dpx,r4
   0166 8D F0               366 	mov	b,r5
   0168                     367 00118$:
   0168 22                  368 	ret
                            369 	.area CSEG    (CODE)
                            370 	.area CONST   (CODE)
                            371 	.area XINIT   (CODE)
                            372 	.area CABS    (ABS,CODE)
