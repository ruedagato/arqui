                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:26 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strpbrk
                              7 	.optsdcc -mmcs51 --model-medium
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strpbrk_PARM_2
                             13 	.globl _strpbrk
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 	.area RSEG    (ABS,DATA)
   0000                      18 	.org 0x0000
                             19 ;--------------------------------------------------------
                             20 ; special function bits
                             21 ;--------------------------------------------------------
                             22 	.area RSEG    (ABS,DATA)
   0000                      23 	.org 0x0000
                             24 ;--------------------------------------------------------
                             25 ; overlayable register banks
                             26 ;--------------------------------------------------------
                             27 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      28 	.ds 8
                             29 ;--------------------------------------------------------
                             30 ; internal ram data
                             31 ;--------------------------------------------------------
                             32 	.area DSEG    (DATA)
                             33 ;--------------------------------------------------------
                             34 ; overlayable items in internal ram 
                             35 ;--------------------------------------------------------
                             36 	.area OSEG    (OVR,DATA)
                             37 ;--------------------------------------------------------
                             38 ; indirectly addressable internal ram data
                             39 ;--------------------------------------------------------
                             40 	.area ISEG    (DATA)
                             41 ;--------------------------------------------------------
                             42 ; absolute internal ram data
                             43 ;--------------------------------------------------------
                             44 	.area IABS    (ABS,DATA)
                             45 	.area IABS    (ABS,DATA)
                             46 ;--------------------------------------------------------
                             47 ; bit data
                             48 ;--------------------------------------------------------
                             49 	.area BSEG    (BIT)
                             50 ;--------------------------------------------------------
                             51 ; paged external ram data
                             52 ;--------------------------------------------------------
                             53 	.area PSEG    (PAG,XDATA)
   0000                      54 _strpbrk_PARM_2:
   0000                      55 	.ds 3
   0003                      56 _strpbrk_string_1_1:
   0003                      57 	.ds 3
   0006                      58 _strpbrk_ret_1_1:
   0006                      59 	.ds 3
                             60 ;--------------------------------------------------------
                             61 ; external ram data
                             62 ;--------------------------------------------------------
                             63 	.area XSEG    (XDATA)
                             64 ;--------------------------------------------------------
                             65 ; absolute external ram data
                             66 ;--------------------------------------------------------
                             67 	.area XABS    (ABS,XDATA)
                             68 ;--------------------------------------------------------
                             69 ; external initialized ram data
                             70 ;--------------------------------------------------------
                             71 	.area XISEG   (XDATA)
                             72 	.area HOME    (CODE)
                             73 	.area GSINIT0 (CODE)
                             74 	.area GSINIT1 (CODE)
                             75 	.area GSINIT2 (CODE)
                             76 	.area GSINIT3 (CODE)
                             77 	.area GSINIT4 (CODE)
                             78 	.area GSINIT5 (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area CSEG    (CODE)
                             82 ;--------------------------------------------------------
                             83 ; global & static initialisations
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area GSINIT  (CODE)
                             87 	.area GSFINAL (CODE)
                             88 	.area GSINIT  (CODE)
                             89 ;--------------------------------------------------------
                             90 ; Home
                             91 ;--------------------------------------------------------
                             92 	.area HOME    (CODE)
                             93 	.area HOME    (CODE)
                             94 ;--------------------------------------------------------
                             95 ; code
                             96 ;--------------------------------------------------------
                             97 	.area CSEG    (CODE)
                             98 ;------------------------------------------------------------
                             99 ;Allocation info for local variables in function 'strpbrk'
                            100 ;------------------------------------------------------------
                            101 ;ch                        Allocated to registers r6 
                            102 ;------------------------------------------------------------
                            103 ;	_strpbrk.c:31: char * strpbrk (
                            104 ;	-----------------------------------------
                            105 ;	 function strpbrk
                            106 ;	-----------------------------------------
   0000                     107 _strpbrk:
                    0002    108 	ar2 = 0x02
                    0003    109 	ar3 = 0x03
                    0004    110 	ar4 = 0x04
                    0005    111 	ar5 = 0x05
                    0006    112 	ar6 = 0x06
                    0007    113 	ar7 = 0x07
                    0000    114 	ar0 = 0x00
                    0001    115 	ar1 = 0x01
   0000 AA F0               116 	mov	r2,b
   0002 AB 83               117 	mov	r3,dph
   0004 E5 82               118 	mov	a,dpl
   0006 78r03               119 	mov	r0,#_strpbrk_string_1_1
   0008 F2                  120 	movx	@r0,a
   0009 08                  121 	inc	r0
   000A EB                  122 	mov	a,r3
   000B F2                  123 	movx	@r0,a
   000C 08                  124 	inc	r0
   000D EA                  125 	mov	a,r2
   000E F2                  126 	movx	@r0,a
                            127 ;	_strpbrk.c:36: char *ret = NULL;
   000F 78r06               128 	mov	r0,#_strpbrk_ret_1_1
   0011 E4                  129 	clr	a
   0012 F2                  130 	movx	@r0,a
   0013 08                  131 	inc	r0
   0014 F2                  132 	movx	@r0,a
   0015 08                  133 	inc	r0
   0016 F2                  134 	movx	@r0,a
                            135 ;	_strpbrk.c:39: while (ch = *control) {
   0017 78r00               136 	mov	r0,#_strpbrk_PARM_2
   0019 E2                  137 	movx	a,@r0
   001A FA                  138 	mov	r2,a
   001B 08                  139 	inc	r0
   001C E2                  140 	movx	a,@r0
   001D FB                  141 	mov	r3,a
   001E 08                  142 	inc	r0
   001F E2                  143 	movx	a,@r0
   0020 FC                  144 	mov	r4,a
   0021                     145 00105$:
   0021 8A 82               146 	mov	dpl,r2
   0023 8B 83               147 	mov	dph,r3
   0025 8C F0               148 	mov	b,r4
   0027 12s00r00            149 	lcall	__gptrget
   002A FD                  150 	mov	r5,a
   002B FE                  151 	mov	r6,a
   002C 60 6D               152 	jz	00107$
                            153 ;	_strpbrk.c:40: char * p = strchr(string, ch);
   002E 78r00               154 	mov	r0,#_strchr_PARM_2
   0030 EE                  155 	mov	a,r6
   0031 F2                  156 	movx	@r0,a
   0032 78r03               157 	mov	r0,#_strpbrk_string_1_1
   0034 E2                  158 	movx	a,@r0
   0035 F5 82               159 	mov	dpl,a
   0037 08                  160 	inc	r0
   0038 E2                  161 	movx	a,@r0
   0039 F5 83               162 	mov	dph,a
   003B 08                  163 	inc	r0
   003C E2                  164 	movx	a,@r0
   003D F5 F0               165 	mov	b,a
   003F C0 02               166 	push	ar2
   0041 C0 03               167 	push	ar3
   0043 C0 04               168 	push	ar4
   0045 12s00r00            169 	lcall	_strchr
   0048 AD 82               170 	mov	r5,dpl
   004A AE 83               171 	mov	r6,dph
   004C AF F0               172 	mov	r7,b
   004E D0 04               173 	pop	ar4
   0050 D0 03               174 	pop	ar3
   0052 D0 02               175 	pop	ar2
                            176 ;	_strpbrk.c:41: if (p != NULL && (ret == NULL || p < ret)) {
   0054 BD 00 08            177 	cjne	r5,#0x00,00116$
   0057 BE 00 05            178 	cjne	r6,#0x00,00116$
   005A BF 00 02            179 	cjne	r7,#0x00,00116$
   005D 80 35               180 	sjmp	00102$
   005F                     181 00116$:
   005F 78r06               182 	mov	r0,#_strpbrk_ret_1_1
   0061 E2                  183 	movx	a,@r0
   0062 B4 00 0C            184 	cjne	a,#0x00,00117$
   0065 08                  185 	inc	r0
   0066 E2                  186 	movx	a,@r0
   0067 B4 00 07            187 	cjne	a,#0x00,00117$
   006A 08                  188 	inc	r0
   006B E2                  189 	movx	a,@r0
   006C B4 00 02            190 	cjne	a,#0x00,00117$
   006F 80 19               191 	sjmp	00101$
   0071                     192 00117$:
   0071 78r06               193 	mov	r0,#_strpbrk_ret_1_1
   0073 C3                  194 	clr	c
   0074 E2                  195 	movx	a,@r0
   0075 F5 F0               196 	mov	b,a
   0077 ED                  197 	mov	a,r5
   0078 95 F0               198 	subb	a,b
   007A 08                  199 	inc	r0
   007B E2                  200 	movx	a,@r0
   007C F5 F0               201 	mov	b,a
   007E EE                  202 	mov	a,r6
   007F 95 F0               203 	subb	a,b
   0081 08                  204 	inc	r0
   0082 E2                  205 	movx	a,@r0
   0083 F5 F0               206 	mov	b,a
   0085 EF                  207 	mov	a,r7
   0086 95 F0               208 	subb	a,b
   0088 50 0A               209 	jnc	00102$
   008A                     210 00101$:
                            211 ;	_strpbrk.c:42: ret = p;
   008A 78r06               212 	mov	r0,#_strpbrk_ret_1_1
   008C ED                  213 	mov	a,r5
   008D F2                  214 	movx	@r0,a
   008E 08                  215 	inc	r0
   008F EE                  216 	mov	a,r6
   0090 F2                  217 	movx	@r0,a
   0091 08                  218 	inc	r0
   0092 EF                  219 	mov	a,r7
   0093 F2                  220 	movx	@r0,a
   0094                     221 00102$:
                            222 ;	_strpbrk.c:44: control++;
   0094 0A                  223 	inc	r2
   0095 BA 00 89            224 	cjne	r2,#0x00,00105$
   0098 0B                  225 	inc	r3
   0099 80 86               226 	sjmp	00105$
   009B                     227 00107$:
                            228 ;	_strpbrk.c:47: return (ret);
   009B 78r06               229 	mov	r0,#_strpbrk_ret_1_1
   009D E2                  230 	movx	a,@r0
   009E F5 82               231 	mov	dpl,a
   00A0 08                  232 	inc	r0
   00A1 E2                  233 	movx	a,@r0
   00A2 F5 83               234 	mov	dph,a
   00A4 08                  235 	inc	r0
   00A5 E2                  236 	movx	a,@r0
   00A6 F5 F0               237 	mov	b,a
   00A8 22                  238 	ret
                            239 	.area CSEG    (CODE)
                            240 	.area CONST   (CODE)
                            241 	.area XINIT   (CODE)
                            242 	.area CABS    (ABS,CODE)
