                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:16 2015
                              5 ;--------------------------------------------------------
                              6 	.module tanhf
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _tanhf
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 ;--------------------------------------------------------
                             43 ; internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area DSEG    (DATA)
                             46 ;--------------------------------------------------------
                             47 ; overlayable items in internal ram 
                             48 ;--------------------------------------------------------
                             49 	.area OSEG    (OVR,DATA)
                             50 ;--------------------------------------------------------
                             51 ; indirectly addressable internal ram data
                             52 ;--------------------------------------------------------
                             53 	.area ISEG    (DATA)
                             54 ;--------------------------------------------------------
                             55 ; absolute internal ram data
                             56 ;--------------------------------------------------------
                             57 	.area IABS    (ABS,DATA)
                             58 	.area IABS    (ABS,DATA)
                             59 ;--------------------------------------------------------
                             60 ; bit data
                             61 ;--------------------------------------------------------
                             62 	.area BSEG    (BIT)
                             63 ;--------------------------------------------------------
                             64 ; paged external ram data
                             65 ;--------------------------------------------------------
                             66 	.area PSEG    (PAG,XDATA)
                             67 ;--------------------------------------------------------
                             68 ; external ram data
                             69 ;--------------------------------------------------------
                             70 	.area XSEG    (XDATA)
                             71 ;--------------------------------------------------------
                             72 ; absolute external ram data
                             73 ;--------------------------------------------------------
                             74 	.area XABS    (ABS,XDATA)
                             75 ;--------------------------------------------------------
                             76 ; external initialized ram data
                             77 ;--------------------------------------------------------
                             78 	.area XISEG   (XDATA)
                             79 ;--------------------------------------------------------
                             80 ; global & static initialisations
                             81 ;--------------------------------------------------------
                             82 	.area HOME    (CODE)
                             83 	.area GSINIT  (CODE)
                             84 	.area GSFINAL (CODE)
                             85 	.area GSINIT  (CODE)
                             86 ;--------------------------------------------------------
                             87 ; Home
                             88 ;--------------------------------------------------------
                             89 	.area HOME    (CODE)
                             90 	.area HOME    (CODE)
                             91 ;--------------------------------------------------------
                             92 ; code
                             93 ;--------------------------------------------------------
                             94 	.area CSEG    (CODE)
                             95 ;------------------------------------------------------------
                             96 ;Allocation info for local variables in function 'tanhf'
                             97 ;------------------------------------------------------------
                             98 ;x                         Allocated to stack - offset 1
                             99 ;f                         Allocated to stack - offset 5
                            100 ;g                         Allocated to registers r2 r3 r4 r5 
                            101 ;r                         Allocated to registers r2 r3 r4 r5 
                            102 ;sloc0                     Allocated to stack - offset 9
                            103 ;------------------------------------------------------------
                            104 ;	tanhf.c:50: float tanhf(const float x) _FLOAT_FUNC_REENTRANT
                            105 ;	-----------------------------------------
                            106 ;	 function tanhf
                            107 ;	-----------------------------------------
   0000                     108 _tanhf:
                    0002    109 	ar2 = 0x02
                    0003    110 	ar3 = 0x03
                    0004    111 	ar4 = 0x04
                    0005    112 	ar5 = 0x05
                    0006    113 	ar6 = 0x06
                    0007    114 	ar7 = 0x07
                    0000    115 	ar0 = 0x00
                    0001    116 	ar1 = 0x01
   0000 C0*00               117 	push	_bpx
   0002 C0*01               118 	push	_bpx+1
   0004 85 81*00            119 	mov	_bpx,sp
   0007 85 9B*01            120 	mov	_bpx+1,esp
   000A 53*01 03            121 	anl	_bpx+1,#3
   000D E5 81               122 	mov	a,sp
   000F 24 0C               123 	add	a,#0x0C
   0011 F5 81               124 	mov	sp,a
   0013 E5 9B               125 	mov	a,esp
   0015 54 03               126 	anl	a,#3
   0017 34 00               127 	addc	a,#0x00
   0019 F5 9B               128 	mov	esp,a
   001B 75 95 40            129 	mov	dpx1,#0x40
   001E 85*01 85            130 	mov	dph1,_bpx+1
   0021 85*00 84            131 	mov	dpl1,_bpx
   0024 75 86 01            132 	mov	dps,#1
   0027 A3                  133 	inc	dptr
   0028 75 86 01            134 	mov	dps, #1
   002B E5 82               135 	mov	a,dpl
   002D F0                  136 	movx	@dptr,a
   002E A3                  137 	inc	dptr
   002F E5 83               138 	mov	a,dph
   0031 F0                  139 	movx	@dptr,a
   0032 A3                  140 	inc	dptr
   0033 E5 93               141 	mov	a,dpx
   0035 F0                  142 	movx	@dptr,a
   0036 A3                  143 	inc	dptr
   0037 E5 F0               144 	mov	a,b
   0039 F0                  145 	movx	@dptr,a
   003A 75 86 00            146 	mov	dps,#0
                            147 ;	tanhf.c:54: f=fabsf(x);
   003D 75 95 40            148 	mov	dpx1,#0x40
   0040 85*01 85            149 	mov	dph1,_bpx+1
   0043 85*00 84            150 	mov	dpl1,_bpx
   0046 75 86 01            151 	mov	dps,#1
   0049 A3                  152 	inc	dptr
   004A 75 86 01            153 	mov	dps, #1
   004D E0                  154 	movx	a,@dptr
   004E F5 82               155 	mov	dpl,a
   0050 A3                  156 	inc	dptr
   0051 E0                  157 	movx	a,@dptr
   0052 F5 83               158 	mov	dph,a
   0054 A3                  159 	inc	dptr
   0055 E0                  160 	movx	a,@dptr
   0056 F5 93               161 	mov	dpx,a
   0058 A3                  162 	inc	dptr
   0059 E0                  163 	movx	a,@dptr
   005A F5 F0               164 	mov	b,a
   005C 75 86 00            165 	mov	dps,#0
   005F 12s00r00r00         166 	lcall	_fabsf
   0063 AE 82               167 	mov	r6,dpl
   0065 AF 83               168 	mov	r7,dph
   0067 A8 93               169 	mov	r0,dpx
   0069 A9 F0               170 	mov	r1,b
                            171 ;	genAssign: resultIsFar = TRUE
   006B E5*00               172 	mov	a,_bpx
   006D C3                  173 	clr	c
   006E 94 FB               174 	subb	a,#0xFB
   0070 F5 82               175 	mov	dpl,a
   0072 E5*01               176 	mov	a,_bpx+1
   0074 94 FF               177 	subb	a,#0xFF
   0076 F5 83               178 	mov	dph,a
   0078 75 93 40            179 	mov	dpx,#0x40
   007B EE                  180 	mov	a,r6
   007C F0                  181 	movx	@dptr,a
   007D A3                  182 	inc	dptr
   007E EF                  183 	mov	a,r7
   007F F0                  184 	movx	@dptr,a
   0080 A3                  185 	inc	dptr
   0081 E8                  186 	mov	a,r0
   0082 F0                  187 	movx	@dptr,a
   0083 A3                  188 	inc	dptr
   0084 E9                  189 	mov	a,r1
   0085 F0                  190 	movx	@dptr,a
                            191 ;	tanhf.c:55: if(f>SBIG) r=1.0;
                            192 ;	genAssign: resultIsFar = TRUE
   0086 90s00r00r00         193 	mov	dptr,#___fsgt_PARM_2
   008A 74 B0               194 	mov	a,#0xB0
   008C F0                  195 	movx	@dptr,a
   008D A3                  196 	inc	dptr
   008E 74 2C               197 	mov	a,#0x2C
   0090 F0                  198 	movx	@dptr,a
   0091 A3                  199 	inc	dptr
   0092 74 10               200 	mov	a,#0x10
   0094 F0                  201 	movx	@dptr,a
   0095 A3                  202 	inc	dptr
   0096 74 41               203 	mov	a,#0x41
   0098 F0                  204 	movx	@dptr,a
   0099 E5*00               205 	mov	a,_bpx
   009B C3                  206 	clr	c
   009C 94 FB               207 	subb	a,#0xFB
   009E F5 84               208 	mov	dpl1,a
   00A0 E5*01               209 	mov	a,_bpx+1
   00A2 94 FF               210 	subb	a,#0xFF
   00A4 F5 85               211 	mov	dph1,a
   00A6 75 95 40            212 	mov	dpx1,#0x40
   00A9 05 86               213 	inc	dps
   00AB E0                  214 	movx	a,@dptr
   00AC F5 82               215 	mov	dpl,a
   00AE A3                  216 	inc	dptr
   00AF E0                  217 	movx	a,@dptr
   00B0 F5 83               218 	mov	dph,a
   00B2 A3                  219 	inc	dptr
   00B3 E0                  220 	movx	a,@dptr
   00B4 F5 93               221 	mov	dpx,a
   00B6 A3                  222 	inc	dptr
   00B7 E0                  223 	movx	a,@dptr
   00B8 F5 F0               224 	mov	b,a
   00BA 75 86 00            225 	mov	dps,#0
   00BD 12s00r00r00         226 	lcall	___fsgt
   00C1 E5 82               227 	mov	a,dpl
   00C3 60 0C               228 	jz  00108$
   00C5                     229 00118$:
                            230 ;	genAssign: resultIsFar = TRUE
   00C5 7A 00               231 	mov	r2,#0x00
   00C7 7B 00               232 	mov	r3,#0x00
   00C9 7C 80               233 	mov	r4,#0x80
   00CB 7D 3F               234 	mov	r5,#0x3F
   00CD 02s00r04r71         235 	ljmp	00109$
   00D1                     236 00108$:
                            237 ;	tanhf.c:56: else if(f>K1)
                            238 ;	genAssign: resultIsFar = TRUE
   00D1 90s00r00r00         239 	mov	dptr,#___fsgt_PARM_2
   00D5 74 54               240 	mov	a,#0x54
   00D7 F0                  241 	movx	@dptr,a
   00D8 A3                  242 	inc	dptr
   00D9 74 9F               243 	mov	a,#0x9F
   00DB F0                  244 	movx	@dptr,a
   00DC A3                  245 	inc	dptr
   00DD 74 0C               246 	mov	a,#0x0C
   00DF F0                  247 	movx	@dptr,a
   00E0 A3                  248 	inc	dptr
   00E1 74 3F               249 	mov	a,#0x3F
   00E3 F0                  250 	movx	@dptr,a
   00E4 E5*00               251 	mov	a,_bpx
   00E6 C3                  252 	clr	c
   00E7 94 FB               253 	subb	a,#0xFB
   00E9 F5 84               254 	mov	dpl1,a
   00EB E5*01               255 	mov	a,_bpx+1
   00ED 94 FF               256 	subb	a,#0xFF
   00EF F5 85               257 	mov	dph1,a
   00F1 75 95 40            258 	mov	dpx1,#0x40
   00F4 05 86               259 	inc	dps
   00F6 E0                  260 	movx	a,@dptr
   00F7 F5 82               261 	mov	dpl,a
   00F9 A3                  262 	inc	dptr
   00FA E0                  263 	movx	a,@dptr
   00FB F5 83               264 	mov	dph,a
   00FD A3                  265 	inc	dptr
   00FE E0                  266 	movx	a,@dptr
   00FF F5 93               267 	mov	dpx,a
   0101 A3                  268 	inc	dptr
   0102 E0                  269 	movx	a,@dptr
   0103 F5 F0               270 	mov	b,a
   0105 75 86 00            271 	mov	dps,#0
   0108 12s00r00r00         272 	lcall	___fsgt
   010C E5 82               273 	mov	a,dpl
   010E 70 04               274 	jnz	00119$
   0110 02s00r02r12         275 	ljmp	00105$
   0114                     276 00119$:
                            277 ;	tanhf.c:58: r=0.5-1.0/(expf(f+f)+1.0);
   0114 E5*00               278 	mov	a,_bpx
   0116 C3                  279 	clr	c
   0117 94 FB               280 	subb	a,#0xFB
   0119 F5 82               281 	mov	dpl,a
   011B E5*01               282 	mov	a,_bpx+1
   011D 94 FF               283 	subb	a,#0xFF
   011F F5 83               284 	mov	dph,a
   0121 75 93 40            285 	mov	dpx,#0x40
                            286 ;	genAssign: resultIsFar = TRUE
   0124 75 86 21            287 	mov	dps,#0x21
   0127 90s00r00r00         288 	mov	dptr,#___fsadd_PARM_2
   012B E0                  289 	movx	a,@dptr
   012C F0                  290 	movx	@dptr,a
   012D A3                  291 	inc	dptr
   012E A3                  292 	inc	dptr
   012F E0                  293 	movx	a,@dptr
   0130 F0                  294 	movx	@dptr,a
   0131 A3                  295 	inc	dptr
   0132 A3                  296 	inc	dptr
   0133 E0                  297 	movx	a,@dptr
   0134 F0                  298 	movx	@dptr,a
   0135 A3                  299 	inc	dptr
   0136 A3                  300 	inc	dptr
   0137 E0                  301 	movx	a,@dptr
   0138 F0                  302 	movx	@dptr,a
   0139 75 86 00            303 	mov	dps,#0
   013C E5*00               304 	mov	a,_bpx
   013E C3                  305 	clr	c
   013F 94 FB               306 	subb	a,#0xFB
   0141 F5 84               307 	mov	dpl1,a
   0143 E5*01               308 	mov	a,_bpx+1
   0145 94 FF               309 	subb	a,#0xFF
   0147 F5 85               310 	mov	dph1,a
   0149 75 95 40            311 	mov	dpx1,#0x40
   014C 05 86               312 	inc	dps
   014E E0                  313 	movx	a,@dptr
   014F F5 82               314 	mov	dpl,a
   0151 A3                  315 	inc	dptr
   0152 E0                  316 	movx	a,@dptr
   0153 F5 83               317 	mov	dph,a
   0155 A3                  318 	inc	dptr
   0156 E0                  319 	movx	a,@dptr
   0157 F5 93               320 	mov	dpx,a
   0159 A3                  321 	inc	dptr
   015A E0                  322 	movx	a,@dptr
   015B F5 F0               323 	mov	b,a
   015D 75 86 00            324 	mov	dps,#0
   0160 12s00r00r00         325 	lcall	___fsadd
   0164 12s00r00r00         326 	lcall	_expf
   0168 AA 82               327 	mov	r2,dpl
   016A AB 83               328 	mov	r3,dph
   016C AC 93               329 	mov	r4,dpx
   016E AD F0               330 	mov	r5,b
                            331 ;	genAssign: resultIsFar = TRUE
   0170 90s00r00r00         332 	mov	dptr,#___fsadd_PARM_2
   0174 E4                  333 	clr  a
   0175 F0                  334 	movx @dptr,a
   0176 A3                  335 	inc  dptr
   0177 F0                  336 	movx @dptr,a
   0178 A3                  337 	inc	dptr
   0179 74 80               338 	mov	a,#0x80
   017B F0                  339 	movx	@dptr,a
   017C A3                  340 	inc	dptr
   017D 74 3F               341 	mov	a,#0x3F
   017F F0                  342 	movx	@dptr,a
   0180 8A 82               343 	mov	dpl,r2
   0182 8B 83               344 	mov	dph,r3
   0184 8C 93               345 	mov	dpx,r4
   0186 8D F0               346 	mov	b,r5
   0188 12s00r00r00         347 	lcall	___fsadd
   018C AA 82               348 	mov	r2,dpl
   018E AB 83               349 	mov	r3,dph
   0190 AC 93               350 	mov	r4,dpx
   0192 AD F0               351 	mov	r5,b
                            352 ;	genAssign: resultIsFar = TRUE
   0194 90s00r00r00         353 	mov	dptr,#___fsdiv_PARM_2
   0198 EA                  354 	mov	a,r2
   0199 F0                  355 	movx	@dptr,a
   019A A3                  356 	inc	dptr
   019B EB                  357 	mov	a,r3
   019C F0                  358 	movx	@dptr,a
   019D A3                  359 	inc	dptr
   019E EC                  360 	mov	a,r4
   019F F0                  361 	movx	@dptr,a
   01A0 A3                  362 	inc	dptr
   01A1 ED                  363 	mov	a,r5
   01A2 F0                  364 	movx	@dptr,a
   01A3 90 00 00 00         365 	mov  dptr,#0x0000
   01A7 75 93 80            366 	mov	dpx,#0x80
   01AA 75 F0 3F            367 	mov	b,#0x3F
   01AD 12s00r00r00         368 	lcall	___fsdiv
   01B1 AA 82               369 	mov	r2,dpl
   01B3 AB 83               370 	mov	r3,dph
   01B5 AC 93               371 	mov	r4,dpx
   01B7 AD F0               372 	mov	r5,b
                            373 ;	genAssign: resultIsFar = TRUE
   01B9 90s00r00r00         374 	mov	dptr,#___fssub_PARM_2
   01BD EA                  375 	mov	a,r2
   01BE F0                  376 	movx	@dptr,a
   01BF A3                  377 	inc	dptr
   01C0 EB                  378 	mov	a,r3
   01C1 F0                  379 	movx	@dptr,a
   01C2 A3                  380 	inc	dptr
   01C3 EC                  381 	mov	a,r4
   01C4 F0                  382 	movx	@dptr,a
   01C5 A3                  383 	inc	dptr
   01C6 ED                  384 	mov	a,r5
   01C7 F0                  385 	movx	@dptr,a
   01C8 90 00 00 00         386 	mov  dptr,#0x0000
   01CC 75 F0 3F            387 	mov	b,#0x3F
   01CF 12s00r00r00         388 	lcall	___fssub
   01D3 AE 82               389 	mov	r6,dpl
   01D5 AF 83               390 	mov	r7,dph
   01D7 A8 93               391 	mov	r0,dpx
   01D9 A9 F0               392 	mov	r1,b
                            393 ;	genAssign: resultIsFar = TRUE
   01DB 8E 02               394 	mov	ar2,r6
   01DD 8F 03               395 	mov	ar3,r7
   01DF 88 04               396 	mov	ar4,r0
   01E1 89 05               397 	mov	ar5,r1
                            398 ;	tanhf.c:59: r+=r;
                            399 ;	genAssign: resultIsFar = TRUE
   01E3 90s00r00r00         400 	mov	dptr,#___fsadd_PARM_2
   01E7 EA                  401 	mov	a,r2
   01E8 F0                  402 	movx	@dptr,a
   01E9 A3                  403 	inc	dptr
   01EA EB                  404 	mov	a,r3
   01EB F0                  405 	movx	@dptr,a
   01EC A3                  406 	inc	dptr
   01ED EC                  407 	mov	a,r4
   01EE F0                  408 	movx	@dptr,a
   01EF A3                  409 	inc	dptr
   01F0 ED                  410 	mov	a,r5
   01F1 F0                  411 	movx	@dptr,a
   01F2 8A 82               412 	mov	dpl,r2
   01F4 8B 83               413 	mov	dph,r3
   01F6 8C 93               414 	mov	dpx,r4
   01F8 8D F0               415 	mov	b,r5
   01FA 12s00r00r00         416 	lcall	___fsadd
   01FE AE 82               417 	mov	r6,dpl
   0200 AF 83               418 	mov	r7,dph
   0202 A8 93               419 	mov	r0,dpx
   0204 A9 F0               420 	mov	r1,b
                            421 ;	genAssign: resultIsFar = TRUE
   0206 8E 02               422 	mov	ar2,r6
   0208 8F 03               423 	mov	ar3,r7
   020A 88 04               424 	mov	ar4,r0
   020C 89 05               425 	mov	ar5,r1
   020E 02s00r04r71         426 	ljmp	00109$
   0212                     427 00105$:
                            428 ;	tanhf.c:61: else if(f<EPS) r=f;
                            429 ;	genAssign: resultIsFar = TRUE
   0212 90s00r00r00         430 	mov	dptr,#___fslt_PARM_2
   0216 E4                  431 	clr  a
   0217 F0                  432 	movx @dptr,a
   0218 A3                  433 	inc  dptr
   0219 F0                  434 	movx @dptr,a
   021A A3                  435 	inc	dptr
   021B 74 80               436 	mov	a,#0x80
   021D F0                  437 	movx	@dptr,a
   021E A3                  438 	inc	dptr
   021F 74 39               439 	mov	a,#0x39
   0221 F0                  440 	movx	@dptr,a
   0222 E5*00               441 	mov	a,_bpx
   0224 C3                  442 	clr	c
   0225 94 FB               443 	subb	a,#0xFB
   0227 F5 84               444 	mov	dpl1,a
   0229 E5*01               445 	mov	a,_bpx+1
   022B 94 FF               446 	subb	a,#0xFF
   022D F5 85               447 	mov	dph1,a
   022F 75 95 40            448 	mov	dpx1,#0x40
   0232 05 86               449 	inc	dps
   0234 E0                  450 	movx	a,@dptr
   0235 F5 82               451 	mov	dpl,a
   0237 A3                  452 	inc	dptr
   0238 E0                  453 	movx	a,@dptr
   0239 F5 83               454 	mov	dph,a
   023B A3                  455 	inc	dptr
   023C E0                  456 	movx	a,@dptr
   023D F5 93               457 	mov	dpx,a
   023F A3                  458 	inc	dptr
   0240 E0                  459 	movx	a,@dptr
   0241 F5 F0               460 	mov	b,a
   0243 75 86 00            461 	mov	dps,#0
   0246 12s00r00r00         462 	lcall	___fslt
   024A E5 82               463 	mov	a,dpl
   024C 60 1F               464 	jz  00102$
   024E                     465 00120$:
   024E E5*00               466 	mov	a,_bpx
   0250 C3                  467 	clr	c
   0251 94 FB               468 	subb	a,#0xFB
   0253 F5 82               469 	mov	dpl,a
   0255 E5*01               470 	mov	a,_bpx+1
   0257 94 FF               471 	subb	a,#0xFF
   0259 F5 83               472 	mov	dph,a
   025B 75 93 40            473 	mov	dpx,#0x40
                            474 ;	genAssign: resultIsFar = TRUE
   025E E0                  475 	movx	a,@dptr
   025F FA                  476 	mov	r2,a
   0260 A3                  477 	inc	dptr
   0261 E0                  478 	movx	a,@dptr
   0262 FB                  479 	mov	r3,a
   0263 A3                  480 	inc	dptr
   0264 E0                  481 	movx	a,@dptr
   0265 FC                  482 	mov	r4,a
   0266 A3                  483 	inc	dptr
   0267 E0                  484 	movx	a,@dptr
   0268 FD                  485 	mov	r5,a
   0269 02s00r04r71         486 	ljmp	00109$
   026D                     487 00102$:
                            488 ;	tanhf.c:64: g=f*f;
   026D E5*00               489 	mov	a,_bpx
   026F C3                  490 	clr	c
   0270 94 FB               491 	subb	a,#0xFB
   0272 F5 82               492 	mov	dpl,a
   0274 E5*01               493 	mov	a,_bpx+1
   0276 94 FF               494 	subb	a,#0xFF
   0278 F5 83               495 	mov	dph,a
   027A 75 93 40            496 	mov	dpx,#0x40
                            497 ;	genAssign: resultIsFar = TRUE
   027D 75 86 21            498 	mov	dps,#0x21
   0280 90s00r00r00         499 	mov	dptr,#___fsmul_PARM_2
   0284 E0                  500 	movx	a,@dptr
   0285 F0                  501 	movx	@dptr,a
   0286 A3                  502 	inc	dptr
   0287 A3                  503 	inc	dptr
   0288 E0                  504 	movx	a,@dptr
   0289 F0                  505 	movx	@dptr,a
   028A A3                  506 	inc	dptr
   028B A3                  507 	inc	dptr
   028C E0                  508 	movx	a,@dptr
   028D F0                  509 	movx	@dptr,a
   028E A3                  510 	inc	dptr
   028F A3                  511 	inc	dptr
   0290 E0                  512 	movx	a,@dptr
   0291 F0                  513 	movx	@dptr,a
   0292 75 86 00            514 	mov	dps,#0
   0295 E5*00               515 	mov	a,_bpx
   0297 C3                  516 	clr	c
   0298 94 FB               517 	subb	a,#0xFB
   029A F5 84               518 	mov	dpl1,a
   029C E5*01               519 	mov	a,_bpx+1
   029E 94 FF               520 	subb	a,#0xFF
   02A0 F5 85               521 	mov	dph1,a
   02A2 75 95 40            522 	mov	dpx1,#0x40
   02A5 05 86               523 	inc	dps
   02A7 E0                  524 	movx	a,@dptr
   02A8 F5 82               525 	mov	dpl,a
   02AA A3                  526 	inc	dptr
   02AB E0                  527 	movx	a,@dptr
   02AC F5 83               528 	mov	dph,a
   02AE A3                  529 	inc	dptr
   02AF E0                  530 	movx	a,@dptr
   02B0 F5 93               531 	mov	dpx,a
   02B2 A3                  532 	inc	dptr
   02B3 E0                  533 	movx	a,@dptr
   02B4 F5 F0               534 	mov	b,a
   02B6 75 86 00            535 	mov	dps,#0
   02B9 12s00r00r00         536 	lcall	___fsmul
   02BD AE 82               537 	mov	r6,dpl
   02BF AF 83               538 	mov	r7,dph
   02C1 A8 93               539 	mov	r0,dpx
   02C3 A9 F0               540 	mov	r1,b
                            541 ;	genAssign: resultIsFar = FALSE
   02C5 8E 02               542 	mov	ar2,r6
   02C7 8F 03               543 	mov	ar3,r7
   02C9 88 04               544 	mov	ar4,r0
   02CB 89 05               545 	mov	ar5,r1
                            546 ;	tanhf.c:65: r=f+f*(P(g)/Q(g));
                            547 ;	genAssign: resultIsFar = TRUE
   02CD 90s00r00r00         548 	mov	dptr,#___fsmul_PARM_2
   02D1 EA                  549 	mov	a,r2
   02D2 F0                  550 	movx	@dptr,a
   02D3 A3                  551 	inc	dptr
   02D4 EB                  552 	mov	a,r3
   02D5 F0                  553 	movx	@dptr,a
   02D6 A3                  554 	inc	dptr
   02D7 EC                  555 	mov	a,r4
   02D8 F0                  556 	movx	@dptr,a
   02D9 A3                  557 	inc	dptr
   02DA ED                  558 	mov	a,r5
   02DB F0                  559 	movx	@dptr,a
   02DC C0 02               560 	push	ar2
   02DE C0 03               561 	push	ar3
   02E0 C0 04               562 	push	ar4
   02E2 C0 05               563 	push	ar5
   02E4 90 7B 11 B2         564 	mov	dptr,#0x7B11B2
   02E8 75 F0 BB            565 	mov	b,#0xBB
   02EB 12s00r00r00         566 	lcall	___fsmul
   02EF AE 82               567 	mov	r6,dpl
   02F1 AF 83               568 	mov	r7,dph
   02F3 A8 93               569 	mov	r0,dpx
   02F5 A9 F0               570 	mov	r1,b
   02F7 D0 05               571 	pop	ar5
   02F9 D0 04               572 	pop	ar4
   02FB D0 03               573 	pop	ar3
   02FD D0 02               574 	pop	ar2
                            575 ;	genAssign: resultIsFar = TRUE
   02FF 90s00r00r00         576 	mov	dptr,#___fsadd_PARM_2
   0303 74 C6               577 	mov	a,#0xC6
   0305 F0                  578 	movx	@dptr,a
   0306 A3                  579 	inc	dptr
   0307 74 E2               580 	mov	a,#0xE2
   0309 F0                  581 	movx	@dptr,a
   030A A3                  582 	inc	dptr
   030B 74 52               583 	mov	a,#0x52
   030D F0                  584 	movx	@dptr,a
   030E A3                  585 	inc	dptr
   030F 74 BF               586 	mov	a,#0xBF
   0311 F0                  587 	movx	@dptr,a
   0312 C0 02               588 	push	ar2
   0314 C0 03               589 	push	ar3
   0316 C0 04               590 	push	ar4
   0318 C0 05               591 	push	ar5
   031A 8E 82               592 	mov	dpl,r6
   031C 8F 83               593 	mov	dph,r7
   031E 88 93               594 	mov	dpx,r0
   0320 89 F0               595 	mov	b,r1
   0322 12s00r00r00         596 	lcall	___fsadd
   0326 AE 82               597 	mov	r6,dpl
   0328 AF 83               598 	mov	r7,dph
   032A A8 93               599 	mov	r0,dpx
   032C A9 F0               600 	mov	r1,b
   032E D0 05               601 	pop	ar5
   0330 D0 04               602 	pop	ar4
   0332 D0 03               603 	pop	ar3
   0334 D0 02               604 	pop	ar2
                            605 ;	genAssign: resultIsFar = TRUE
   0336 90s00r00r00         606 	mov	dptr,#___fsmul_PARM_2
   033A EA                  607 	mov	a,r2
   033B F0                  608 	movx	@dptr,a
   033C A3                  609 	inc	dptr
   033D EB                  610 	mov	a,r3
   033E F0                  611 	movx	@dptr,a
   033F A3                  612 	inc	dptr
   0340 EC                  613 	mov	a,r4
   0341 F0                  614 	movx	@dptr,a
   0342 A3                  615 	inc	dptr
   0343 ED                  616 	mov	a,r5
   0344 F0                  617 	movx	@dptr,a
   0345 C0 02               618 	push	ar2
   0347 C0 03               619 	push	ar3
   0349 C0 04               620 	push	ar4
   034B C0 05               621 	push	ar5
   034D 8E 82               622 	mov	dpl,r6
   034F 8F 83               623 	mov	dph,r7
   0351 88 93               624 	mov	dpx,r0
   0353 89 F0               625 	mov	b,r1
   0355 12s00r00r00         626 	lcall	___fsmul
   0359 E5*00               627 	mov	a,_bpx
   035B C3                  628 	clr	c
   035C 94 F7               629 	subb	a,#0xF7
   035E F5 84               630 	mov	dpl1,a
   0360 E5*01               631 	mov	a,_bpx+1
   0362 94 FF               632 	subb	a,#0xFF
   0364 F5 85               633 	mov	dph1,a
   0366 75 95 40            634 	mov	dpx1,#0x40
   0369 05 86               635 	inc	dps
   036B E5 82               636 	mov	a,dpl
   036D F0                  637 	movx	@dptr,a
   036E A3                  638 	inc	dptr
   036F E5 83               639 	mov	a,dph
   0371 F0                  640 	movx	@dptr,a
   0372 A3                  641 	inc	dptr
   0373 E5 93               642 	mov	a,dpx
   0375 F0                  643 	movx	@dptr,a
   0376 A3                  644 	inc	dptr
   0377 E5 F0               645 	mov	a,b
   0379 F0                  646 	movx	@dptr,a
   037A 75 86 00            647 	mov	dps,#0
   037D D0 05               648 	pop	ar5
   037F D0 04               649 	pop	ar4
   0381 D0 03               650 	pop	ar3
   0383 D0 02               651 	pop	ar2
                            652 ;	genAssign: resultIsFar = TRUE
   0385 90s00r00r00         653 	mov	dptr,#___fsadd_PARM_2
   0389 74 1A               654 	mov	a,#0x1A
   038B F0                  655 	movx	@dptr,a
   038C A3                  656 	inc	dptr
   038D 74 2A               657 	mov	a,#0x2A
   038F F0                  658 	movx	@dptr,a
   0390 A3                  659 	inc	dptr
   0391 74 1E               660 	mov	a,#0x1E
   0393 F0                  661 	movx	@dptr,a
   0394 A3                  662 	inc	dptr
   0395 74 40               663 	mov	a,#0x40
   0397 F0                  664 	movx	@dptr,a
   0398 8A 82               665 	mov	dpl,r2
   039A 8B 83               666 	mov	dph,r3
   039C 8C 93               667 	mov	dpx,r4
   039E 8D F0               668 	mov	b,r5
   03A0 12s00r00r00         669 	lcall	___fsadd
   03A4 AE 82               670 	mov	r6,dpl
   03A6 AF 83               671 	mov	r7,dph
   03A8 A8 93               672 	mov	r0,dpx
   03AA A9 F0               673 	mov	r1,b
                            674 ;	genAssign: resultIsFar = TRUE
   03AC 90s00r00r00         675 	mov	dptr,#___fsdiv_PARM_2
   03B0 EE                  676 	mov	a,r6
   03B1 F0                  677 	movx	@dptr,a
   03B2 A3                  678 	inc	dptr
   03B3 EF                  679 	mov	a,r7
   03B4 F0                  680 	movx	@dptr,a
   03B5 A3                  681 	inc	dptr
   03B6 E8                  682 	mov	a,r0
   03B7 F0                  683 	movx	@dptr,a
   03B8 A3                  684 	inc	dptr
   03B9 E9                  685 	mov	a,r1
   03BA F0                  686 	movx	@dptr,a
   03BB E5*00               687 	mov	a,_bpx
   03BD C3                  688 	clr	c
   03BE 94 F7               689 	subb	a,#0xF7
   03C0 F5 84               690 	mov	dpl1,a
   03C2 E5*01               691 	mov	a,_bpx+1
   03C4 94 FF               692 	subb	a,#0xFF
   03C6 F5 85               693 	mov	dph1,a
   03C8 75 95 40            694 	mov	dpx1,#0x40
   03CB 05 86               695 	inc	dps
   03CD E0                  696 	movx	a,@dptr
   03CE F5 82               697 	mov	dpl,a
   03D0 A3                  698 	inc	dptr
   03D1 E0                  699 	movx	a,@dptr
   03D2 F5 83               700 	mov	dph,a
   03D4 A3                  701 	inc	dptr
   03D5 E0                  702 	movx	a,@dptr
   03D6 F5 93               703 	mov	dpx,a
   03D8 A3                  704 	inc	dptr
   03D9 E0                  705 	movx	a,@dptr
   03DA F5 F0               706 	mov	b,a
   03DC 75 86 00            707 	mov	dps,#0
   03DF 12s00r00r00         708 	lcall	___fsdiv
   03E3 AE 82               709 	mov	r6,dpl
   03E5 AF 83               710 	mov	r7,dph
   03E7 A8 93               711 	mov	r0,dpx
   03E9 A9 F0               712 	mov	r1,b
                            713 ;	genAssign: resultIsFar = TRUE
   03EB 90s00r00r00         714 	mov	dptr,#___fsmul_PARM_2
   03EF EE                  715 	mov	a,r6
   03F0 F0                  716 	movx	@dptr,a
   03F1 A3                  717 	inc	dptr
   03F2 EF                  718 	mov	a,r7
   03F3 F0                  719 	movx	@dptr,a
   03F4 A3                  720 	inc	dptr
   03F5 E8                  721 	mov	a,r0
   03F6 F0                  722 	movx	@dptr,a
   03F7 A3                  723 	inc	dptr
   03F8 E9                  724 	mov	a,r1
   03F9 F0                  725 	movx	@dptr,a
   03FA E5*00               726 	mov	a,_bpx
   03FC C3                  727 	clr	c
   03FD 94 FB               728 	subb	a,#0xFB
   03FF F5 84               729 	mov	dpl1,a
   0401 E5*01               730 	mov	a,_bpx+1
   0403 94 FF               731 	subb	a,#0xFF
   0405 F5 85               732 	mov	dph1,a
   0407 75 95 40            733 	mov	dpx1,#0x40
   040A 05 86               734 	inc	dps
   040C E0                  735 	movx	a,@dptr
   040D F5 82               736 	mov	dpl,a
   040F A3                  737 	inc	dptr
   0410 E0                  738 	movx	a,@dptr
   0411 F5 83               739 	mov	dph,a
   0413 A3                  740 	inc	dptr
   0414 E0                  741 	movx	a,@dptr
   0415 F5 93               742 	mov	dpx,a
   0417 A3                  743 	inc	dptr
   0418 E0                  744 	movx	a,@dptr
   0419 F5 F0               745 	mov	b,a
   041B 75 86 00            746 	mov	dps,#0
   041E 12s00r00r00         747 	lcall	___fsmul
   0422 AE 82               748 	mov	r6,dpl
   0424 AF 83               749 	mov	r7,dph
   0426 A8 93               750 	mov	r0,dpx
   0428 A9 F0               751 	mov	r1,b
                            752 ;	genAssign: resultIsFar = TRUE
   042A 90s00r00r00         753 	mov	dptr,#___fsadd_PARM_2
   042E EE                  754 	mov	a,r6
   042F F0                  755 	movx	@dptr,a
   0430 A3                  756 	inc	dptr
   0431 EF                  757 	mov	a,r7
   0432 F0                  758 	movx	@dptr,a
   0433 A3                  759 	inc	dptr
   0434 E8                  760 	mov	a,r0
   0435 F0                  761 	movx	@dptr,a
   0436 A3                  762 	inc	dptr
   0437 E9                  763 	mov	a,r1
   0438 F0                  764 	movx	@dptr,a
   0439 E5*00               765 	mov	a,_bpx
   043B C3                  766 	clr	c
   043C 94 FB               767 	subb	a,#0xFB
   043E F5 84               768 	mov	dpl1,a
   0440 E5*01               769 	mov	a,_bpx+1
   0442 94 FF               770 	subb	a,#0xFF
   0444 F5 85               771 	mov	dph1,a
   0446 75 95 40            772 	mov	dpx1,#0x40
   0449 05 86               773 	inc	dps
   044B E0                  774 	movx	a,@dptr
   044C F5 82               775 	mov	dpl,a
   044E A3                  776 	inc	dptr
   044F E0                  777 	movx	a,@dptr
   0450 F5 83               778 	mov	dph,a
   0452 A3                  779 	inc	dptr
   0453 E0                  780 	movx	a,@dptr
   0454 F5 93               781 	mov	dpx,a
   0456 A3                  782 	inc	dptr
   0457 E0                  783 	movx	a,@dptr
   0458 F5 F0               784 	mov	b,a
   045A 75 86 00            785 	mov	dps,#0
   045D 12s00r00r00         786 	lcall	___fsadd
   0461 AE 82               787 	mov	r6,dpl
   0463 AF 83               788 	mov	r7,dph
   0465 A8 93               789 	mov	r0,dpx
   0467 A9 F0               790 	mov	r1,b
                            791 ;	genAssign: resultIsFar = TRUE
   0469 8E 02               792 	mov	ar2,r6
   046B 8F 03               793 	mov	ar3,r7
   046D 88 04               794 	mov	ar4,r0
   046F 89 05               795 	mov	ar5,r1
   0471                     796 00109$:
                            797 ;	tanhf.c:67: if(x<0.0) r=-r;
                            798 ;	genAssign: resultIsFar = TRUE
   0471 90s00r00r00         799 	mov	dptr,#___fslt_PARM_2
   0475 E4                  800 	clr	a
   0476 F0                  801 	movx	@dptr,a
   0477 A3                  802 	inc	dptr
   0478 F0                  803 	movx	@dptr,a
   0479 A3                  804 	inc	dptr
   047A F0                  805 	movx	@dptr,a
   047B A3                  806 	inc	dptr
   047C F0                  807 	movx	@dptr,a
   047D C0 02               808 	push	ar2
   047F C0 03               809 	push	ar3
   0481 C0 04               810 	push	ar4
   0483 C0 05               811 	push	ar5
   0485 75 95 40            812 	mov	dpx1,#0x40
   0488 85*01 85            813 	mov	dph1,_bpx+1
   048B 85*00 84            814 	mov	dpl1,_bpx
   048E 75 86 01            815 	mov	dps,#1
   0491 A3                  816 	inc	dptr
   0492 75 86 01            817 	mov	dps, #1
   0495 E0                  818 	movx	a,@dptr
   0496 F5 82               819 	mov	dpl,a
   0498 A3                  820 	inc	dptr
   0499 E0                  821 	movx	a,@dptr
   049A F5 83               822 	mov	dph,a
   049C A3                  823 	inc	dptr
   049D E0                  824 	movx	a,@dptr
   049E F5 93               825 	mov	dpx,a
   04A0 A3                  826 	inc	dptr
   04A1 E0                  827 	movx	a,@dptr
   04A2 F5 F0               828 	mov	b,a
   04A4 75 86 00            829 	mov	dps,#0
   04A7 12s00r00r00         830 	lcall	___fslt
   04AB D0 05               831 	pop	ar5
   04AD D0 04               832 	pop	ar4
   04AF D0 03               833 	pop	ar3
   04B1 D0 02               834 	pop	ar2
   04B3 E5 82               835 	mov	a,dpl
   04B5 60 04               836 	jz  00111$
   04B7                     837 00121$:
   04B7 ED                  838 	mov	a,r5
   04B8 B2 E7               839 	cpl	acc.7
   04BA FD                  840 	mov	r5,a
   04BB                     841 00111$:
                            842 ;	tanhf.c:68: return r;
   04BB 8A 82               843 	mov	dpl,r2
   04BD 8B 83               844 	mov	dph,r3
   04BF 8C 93               845 	mov	dpx,r4
   04C1 8D F0               846 	mov	b,r5
   04C3                     847 00112$:
   04C3 85*00 81            848 	mov	sp,_bpx
   04C6 85*01 9B            849 	mov	esp,_bpx+1
   04C9 D0*01               850 	pop	_bpx+1
   04CB D0*00               851 	pop	_bpx
   04CD 22                  852 	ret
                            853 	.area CSEG    (CODE)
                            854 	.area CONST   (CODE)
                            855 	.area XINIT   (CODE)
                            856 	.area CABS    (ABS,CODE)
