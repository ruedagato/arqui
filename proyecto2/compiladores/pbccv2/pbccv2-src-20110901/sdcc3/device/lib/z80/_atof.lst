                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:18:16 2015
                              5 ;--------------------------------------------------------
                              6 	.module _atof
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _atof
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ;  ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; overlayable items in  ram 
                             22 ;--------------------------------------------------------
                             23 	.area _OVERLAY
                             24 ;--------------------------------------------------------
                             25 ; external initialized ram data
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _HOME
                             39 ;--------------------------------------------------------
                             40 ; code
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 ;../_atof.c:33: float atof(const char * s)
                             44 ;	---------------------------------
                             45 ; Function atof
                             46 ; ---------------------------------
   0000                      47 _atof_start::
   0000                      48 _atof:
   0000 DD E5                49 	push	ix
   0002 DD 21 00 00          50 	ld	ix,#0
   0006 DD 39                51 	add	ix,sp
   0008 21 F0 FF             52 	ld	hl,#-16
   000B 39                   53 	add	hl,sp
   000C F9                   54 	ld	sp,hl
                             55 ;../_atof.c:40: while (isspace(*s)) s++;
   000D DD 4E 04             56 	ld	c,4 (ix)
   0010 DD 46 05             57 	ld	b,5 (ix)
   0013                      58 00101$:
   0013 0A                   59 	ld	a,(bc)
   0014 6F                   60 	ld	l,a
   0015 C5                   61 	push	bc
   0016 7D                   62 	ld	a,l
   0017 F5                   63 	push	af
   0018 33                   64 	inc	sp
   0019 CDr00s00             65 	call	_isspace
   001C 33                   66 	inc	sp
   001D C1                   67 	pop	bc
   001E AF                   68 	xor	a,a
   001F B5                   69 	or	a,l
   0020 28 03                70 	jr	Z,00148$
   0022 03                   71 	inc	bc
   0023 18 EE                72 	jr	00101$
   0025                      73 00148$:
   0025 DD 71 04             74 	ld	4 (ix),c
   0028 DD 70 05             75 	ld	5 (ix),b
                             76 ;../_atof.c:43: if (*s == '-')
   002B 0A                   77 	ld	a,(bc)
   002C 5F                   78 	ld	e,a
   002D D6 2D                79 	sub	a,#0x2D
   002F 20 10                80 	jr	NZ,00107$
                             81 ;../_atof.c:45: sign=1;
   0031 DD 36 F6 01          82 	ld	-10 (ix),#0x01
                             83 ;../_atof.c:46: s++;
   0035 21 01 00             84 	ld	hl,#0x0001
   0038 09                   85 	add	hl,bc
   0039 DD 75 04             86 	ld	4 (ix),l
   003C DD 74 05             87 	ld	5 (ix),h
   003F 18 13                88 	jr	00108$
   0041                      89 00107$:
                             90 ;../_atof.c:50: sign=0;
   0041 DD 36 F6 00          91 	ld	-10 (ix),#0x00
                             92 ;../_atof.c:51: if (*s == '+') s++;
   0045 7B                   93 	ld	a,e
   0046 D6 2B                94 	sub	a,#0x2B
   0048 20 0A                95 	jr	NZ,00108$
   004A 21 01 00             96 	ld	hl,#0x0001
   004D 09                   97 	add	hl,bc
   004E DD 75 04             98 	ld	4 (ix),l
   0051 DD 74 05             99 	ld	5 (ix),h
   0054                     100 00108$:
                            101 ;../_atof.c:55: for (value=0.0; isdigit(*s); s++)
   0054 DD 36 FC 00         102 	ld	-4 (ix),#0x00
   0058 DD 36 FD 00         103 	ld	-3 (ix),#0x00
   005C DD 36 FE 00         104 	ld	-2 (ix),#0x00
   0060 DD 36 FF 00         105 	ld	-1 (ix),#0x00
   0064 DD 7E 04            106 	ld	a,4 (ix)
   0067 DD 77 F4            107 	ld	-12 (ix),a
   006A DD 7E 05            108 	ld	a,5 (ix)
   006D DD 77 F5            109 	ld	-11 (ix),a
   0070                     110 00121$:
   0070 DD 6E F4            111 	ld	l,-12 (ix)
   0073 DD 66 F5            112 	ld	h,-11 (ix)
   0076 7E                  113 	ld	a, (hl)
   0077 F5                  114 	push	af
   0078 33                  115 	inc	sp
   0079 CDr00s00            116 	call	_isdigit
   007C 33                  117 	inc	sp
   007D AF                  118 	xor	a,a
   007E B5                  119 	or	a,l
   007F 28 6D               120 	jr	Z,00149$
                            121 ;../_atof.c:57: value=10.0*value+(*s-'0');
   0081 DD 6E FE            122 	ld	l,-2 (ix)
   0084 DD 66 FF            123 	ld	h,-1 (ix)
   0087 E5                  124 	push	hl
   0088 DD 6E FC            125 	ld	l,-4 (ix)
   008B DD 66 FD            126 	ld	h,-3 (ix)
   008E E5                  127 	push	hl
   008F 21 20 41            128 	ld	hl,#0x4120
   0092 E5                  129 	push	hl
   0093 21 00 00            130 	ld	hl,#0x0000
   0096 E5                  131 	push	hl
   0097 CDr00s00            132 	call	___fsmul
   009A F1                  133 	pop	af
   009B F1                  134 	pop	af
   009C F1                  135 	pop	af
   009D F1                  136 	pop	af
   009E DD 72 F3            137 	ld	-13 (ix),d
   00A1 DD 73 F2            138 	ld	-14 (ix),e
   00A4 DD 74 F1            139 	ld	-15 (ix),h
   00A7 DD 75 F0            140 	ld	-16 (ix),l
   00AA DD 6E F4            141 	ld	l,-12 (ix)
   00AD DD 66 F5            142 	ld	h,-11 (ix)
   00B0 6E                  143 	ld	l,(hl)
   00B1 7D                  144 	ld	a,l
   00B2 17                  145 	rla	
   00B3 9F                  146 	sbc	a,a
   00B4 67                  147 	ld	h,a
   00B5 11 D0 FF            148 	ld	de, #0xFFD0
   00B8 19                  149 	add	hl, de
   00B9 E5                  150 	push	hl
   00BA CDr00s00            151 	call	___sint2fs
   00BD F1                  152 	pop	af
   00BE 44                  153 	ld	b,h
   00BF 4D                  154 	ld	c,l
   00C0 D5                  155 	push	de
   00C1 C5                  156 	push	bc
   00C2 DD 6E F2            157 	ld	l,-14 (ix)
   00C5 DD 66 F3            158 	ld	h,-13 (ix)
   00C8 E5                  159 	push	hl
   00C9 DD 6E F0            160 	ld	l,-16 (ix)
   00CC DD 66 F1            161 	ld	h,-15 (ix)
   00CF E5                  162 	push	hl
   00D0 CDr00s00            163 	call	___fsadd
   00D3 F1                  164 	pop	af
   00D4 F1                  165 	pop	af
   00D5 F1                  166 	pop	af
   00D6 F1                  167 	pop	af
   00D7 DD 75 FC            168 	ld	-4 (ix), l
   00DA DD 74 FD            169 	ld	-3 (ix), h
   00DD DD 73 FE            170 	ld	-2 (ix),e
   00E0 DD 72 FF            171 	ld	-1 (ix),d
                            172 ;../_atof.c:55: for (value=0.0; isdigit(*s); s++)
   00E3 DD 34 F4            173 	inc	-12 (ix)
   00E6 20 88               174 	jr	NZ,00121$
   00E8 DD 34 F5            175 	inc	-11 (ix)
   00EB C3r70s00            176 	jp	00121$
   00EE                     177 00149$:
   00EE DD 7E F4            178 	ld	a,-12 (ix)
   00F1 DD 77 04            179 	ld	4 (ix),a
   00F4 DD 7E F5            180 	ld	a,-11 (ix)
   00F7 DD 77 05            181 	ld	5 (ix),a
                            182 ;../_atof.c:61: if (*s == '.')
   00FA DD 6E F4            183 	ld	l,-12 (ix)
   00FD DD 66 F5            184 	ld	h,-11 (ix)
   0100 7E                  185 	ld	a, (hl)
   0101 D6 2E               186 	sub	a,#0x2E
   0103 C2rC9s01            187 	jp	NZ,00110$
                            188 ;../_atof.c:63: s++;
   0106 DD 4E F4            189 	ld	c,-12 (ix)
   0109 DD 46 F5            190 	ld	b,-11 (ix)
   010C 03                  191 	inc	bc
                            192 ;../_atof.c:64: for (fraction=0.1; isdigit(*s); s++)
   010D DD 36 F8 CD         193 	ld	-8 (ix),#0xCD
   0111 DD 36 F9 CC         194 	ld	-7 (ix),#0xCC
   0115 DD 36 FA CC         195 	ld	-6 (ix),#0xCC
   0119 DD 36 FB 3D         196 	ld	-5 (ix),#0x3D
   011D DD 71 F0            197 	ld	-16 (ix),c
   0120 DD 70 F1            198 	ld	-15 (ix),b
   0123                     199 00125$:
   0123 DD 6E F0            200 	ld	l,-16 (ix)
   0126 DD 66 F1            201 	ld	h,-15 (ix)
   0129 7E                  202 	ld	a, (hl)
   012A F5                  203 	push	af
   012B 33                  204 	inc	sp
   012C CDr00s00            205 	call	_isdigit
   012F 33                  206 	inc	sp
   0130 AF                  207 	xor	a,a
   0131 B5                  208 	or	a,l
   0132 CArBDs01            209 	jp	Z,00150$
                            210 ;../_atof.c:66: value+=(*s-'0')*fraction;
   0135 DD 6E F0            211 	ld	l,-16 (ix)
   0138 DD 66 F1            212 	ld	h,-15 (ix)
   013B 6E                  213 	ld	l,(hl)
   013C 7D                  214 	ld	a,l
   013D 17                  215 	rla	
   013E 9F                  216 	sbc	a,a
   013F 67                  217 	ld	h,a
   0140 11 D0 FF            218 	ld	de, #0xFFD0
   0143 19                  219 	add	hl, de
   0144 E5                  220 	push	hl
   0145 CDr00s00            221 	call	___sint2fs
   0148 F1                  222 	pop	af
   0149 42                  223 	ld	b,d
   014A 4B                  224 	ld	c,e
   014B EB                  225 	ex	de,hl
   014C DD 6E FA            226 	ld	l,-6 (ix)
   014F DD 66 FB            227 	ld	h,-5 (ix)
   0152 E5                  228 	push	hl
   0153 DD 6E F8            229 	ld	l,-8 (ix)
   0156 DD 66 F9            230 	ld	h,-7 (ix)
   0159 E5                  231 	push	hl
   015A C5                  232 	push	bc
   015B D5                  233 	push	de
   015C CDr00s00            234 	call	___fsmul
   015F F1                  235 	pop	af
   0160 F1                  236 	pop	af
   0161 F1                  237 	pop	af
   0162 F1                  238 	pop	af
   0163 44                  239 	ld	b,h
   0164 4D                  240 	ld	c,l
   0165 D5                  241 	push	de
   0166 C5                  242 	push	bc
   0167 DD 6E FE            243 	ld	l,-2 (ix)
   016A DD 66 FF            244 	ld	h,-1 (ix)
   016D E5                  245 	push	hl
   016E DD 6E FC            246 	ld	l,-4 (ix)
   0171 DD 66 FD            247 	ld	h,-3 (ix)
   0174 E5                  248 	push	hl
   0175 CDr00s00            249 	call	___fsadd
   0178 F1                  250 	pop	af
   0179 F1                  251 	pop	af
   017A F1                  252 	pop	af
   017B F1                  253 	pop	af
   017C DD 75 FC            254 	ld	-4 (ix), l
   017F DD 74 FD            255 	ld	-3 (ix), h
   0182 DD 73 FE            256 	ld	-2 (ix),e
   0185 DD 72 FF            257 	ld	-1 (ix),d
                            258 ;../_atof.c:67: fraction*=0.1;
   0188 DD 6E FA            259 	ld	l,-6 (ix)
   018B DD 66 FB            260 	ld	h,-5 (ix)
   018E E5                  261 	push	hl
   018F DD 6E F8            262 	ld	l,-8 (ix)
   0192 DD 66 F9            263 	ld	h,-7 (ix)
   0195 E5                  264 	push	hl
   0196 21 CC 3D            265 	ld	hl,#0x3DCC
   0199 E5                  266 	push	hl
   019A 21 CD CC            267 	ld	hl,#0xCCCD
   019D E5                  268 	push	hl
   019E CDr00s00            269 	call	___fsmul
   01A1 F1                  270 	pop	af
   01A2 F1                  271 	pop	af
   01A3 F1                  272 	pop	af
   01A4 F1                  273 	pop	af
   01A5 DD 75 F8            274 	ld	-8 (ix), l
   01A8 DD 74 F9            275 	ld	-7 (ix), h
   01AB DD 73 FA            276 	ld	-6 (ix),e
   01AE DD 72 FB            277 	ld	-5 (ix),d
                            278 ;../_atof.c:64: for (fraction=0.1; isdigit(*s); s++)
   01B1 DD 34 F0            279 	inc	-16 (ix)
   01B4 C2r23s01            280 	jp	NZ,00125$
   01B7 DD 34 F1            281 	inc	-15 (ix)
   01BA C3r23s01            282 	jp	00125$
   01BD                     283 00150$:
   01BD DD 7E F0            284 	ld	a,-16 (ix)
   01C0 DD 77 04            285 	ld	4 (ix),a
   01C3 DD 7E F1            286 	ld	a,-15 (ix)
   01C6 DD 77 05            287 	ld	5 (ix),a
   01C9                     288 00110$:
                            289 ;../_atof.c:72: if (toupper(*s)=='E')
   01C9 DD 4E 04            290 	ld	c,4 (ix)
   01CC DD 46 05            291 	ld	b,5 (ix)
   01CF 0A                  292 	ld	a,(bc)
   01D0 6F                  293 	ld	l,a
   01D1 C5                  294 	push	bc
   01D2 7D                  295 	ld	a,l
   01D3 F5                  296 	push	af
   01D4 33                  297 	inc	sp
   01D5 CDr00s00            298 	call	_islower
   01D8 33                  299 	inc	sp
   01D9 C1                  300 	pop	bc
   01DA AF                  301 	xor	a,a
   01DB B5                  302 	or	a,l
   01DC 28 06               303 	jr	Z,00131$
   01DE 0A                  304 	ld	a,(bc)
   01DF E6 DF               305 	and	a,#0xDF
   01E1 5F                  306 	ld	e,a
   01E2 18 02               307 	jr	00132$
   01E4                     308 00131$:
   01E4 0A                  309 	ld	a,(bc)
   01E5 5F                  310 	ld	e,a
   01E6                     311 00132$:
   01E6 7B                  312 	ld	a,e
   01E7 D6 45               313 	sub	a,#0x45
   01E9 20 73               314 	jr	NZ,00118$
                            315 ;../_atof.c:74: s++;
   01EB 03                  316 	inc	bc
                            317 ;../_atof.c:75: iexp=(signed char)atoi(s);
   01EC C5                  318 	push	bc
   01ED CDr00s00            319 	call	_atoi
   01F0 F1                  320 	pop	af
   01F1 DD 75 F7            321 	ld	-9 (ix),l
                            322 ;../_atof.c:77: while(iexp!=0)
   01F4                     323 00114$:
   01F4 AF                  324 	xor	a,a
   01F5 DD B6 F7            325 	or	a,-9 (ix)
   01F8 28 64               326 	jr	Z,00118$
                            327 ;../_atof.c:79: if(iexp<0)
   01FA DD CB F7 7E         328 	bit	7,-9 (ix)
   01FE 28 30               329 	jr	Z,00112$
                            330 ;../_atof.c:81: value*=0.1;
   0200 DD 6E FE            331 	ld	l,-2 (ix)
   0203 DD 66 FF            332 	ld	h,-1 (ix)
   0206 E5                  333 	push	hl
   0207 DD 6E FC            334 	ld	l,-4 (ix)
   020A DD 66 FD            335 	ld	h,-3 (ix)
   020D E5                  336 	push	hl
   020E 21 CC 3D            337 	ld	hl,#0x3DCC
   0211 E5                  338 	push	hl
   0212 21 CD CC            339 	ld	hl,#0xCCCD
   0215 E5                  340 	push	hl
   0216 CDr00s00            341 	call	___fsmul
   0219 F1                  342 	pop	af
   021A F1                  343 	pop	af
   021B F1                  344 	pop	af
   021C F1                  345 	pop	af
   021D 4A                  346 	ld	c,d
   021E 53                  347 	ld	d,e
   021F DD 75 FC            348 	ld	-4 (ix), l
   0222 DD 74 FD            349 	ld	-3 (ix), h
   0225 DD 72 FE            350 	ld	-2 (ix),d
   0228 DD 71 FF            351 	ld	-1 (ix),c
                            352 ;../_atof.c:82: iexp++;
   022B DD 34 F7            353 	inc	-9 (ix)
   022E 18 C4               354 	jr	00114$
   0230                     355 00112$:
                            356 ;../_atof.c:86: value*=10.0;
   0230 DD 6E FE            357 	ld	l,-2 (ix)
   0233 DD 66 FF            358 	ld	h,-1 (ix)
   0236 E5                  359 	push	hl
   0237 DD 6E FC            360 	ld	l,-4 (ix)
   023A DD 66 FD            361 	ld	h,-3 (ix)
   023D E5                  362 	push	hl
   023E 21 20 41            363 	ld	hl,#0x4120
   0241 E5                  364 	push	hl
   0242 21 00 00            365 	ld	hl,#0x0000
   0245 E5                  366 	push	hl
   0246 CDr00s00            367 	call	___fsmul
   0249 F1                  368 	pop	af
   024A F1                  369 	pop	af
   024B F1                  370 	pop	af
   024C F1                  371 	pop	af
   024D DD 75 FC            372 	ld	-4 (ix), l
   0250 DD 74 FD            373 	ld	-3 (ix), h
   0253 DD 73 FE            374 	ld	-2 (ix),e
   0256 DD 72 FF            375 	ld	-1 (ix),d
                            376 ;../_atof.c:87: iexp--;
   0259 DD 35 F7            377 	dec	-9 (ix)
   025C 18 96               378 	jr	00114$
   025E                     379 00118$:
                            380 ;../_atof.c:93: if(sign) value*=-1.0;
   025E DD CB F6 46         381 	bit	0,-10 (ix)
   0262 28 08               382 	jr	Z,00120$
   0264 DD 7E FF            383 	ld	a,-1 (ix)
   0267 EE 80               384 	xor	a,#0x80
   0269 DD 77 FF            385 	ld	-1 (ix),a
   026C                     386 00120$:
                            387 ;../_atof.c:94: return (value);
   026C DD 6E FC            388 	ld	l,-4 (ix)
   026F DD 66 FD            389 	ld	h,-3 (ix)
   0272 DD 5E FE            390 	ld	e,-2 (ix)
   0275 DD 56 FF            391 	ld	d,-1 (ix)
   0278 DD F9               392 	ld	sp,ix
   027A DD E1               393 	pop	ix
   027C C9                  394 	ret
   027D                     395 _atof_end::
                            396 	.area _CODE
                            397 	.area _CABS
