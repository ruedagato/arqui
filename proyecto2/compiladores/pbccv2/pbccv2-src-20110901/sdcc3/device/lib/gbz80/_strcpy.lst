                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:18:20 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strcpy
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strcpy
                             13 ;--------------------------------------------------------
                             14 ;  ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in  ram 
                             19 ;--------------------------------------------------------
                             20 	.area _OVERLAY
                             21 ;--------------------------------------------------------
                             22 ; external initialized ram data
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; global & static initialisations
                             26 ;--------------------------------------------------------
                             27 	.area _HOME
                             28 	.area _GSINIT
                             29 	.area _GSFINAL
                             30 	.area _GSINIT
                             31 ;--------------------------------------------------------
                             32 ; Home
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _HOME
                             36 ;--------------------------------------------------------
                             37 ; code
                             38 ;--------------------------------------------------------
                             39 	.area _CODE
                             40 ;../_strcpy.c:34: char * strcpy (
                             41 ;	---------------------------------
                             42 ; Function strcpy
                             43 ; ---------------------------------
   0000                      44 _strcpy_start::
   0000                      45 _strcpy:
                             46 	
   0000 F5                   47 	push	af
   0001 F5                   48 	push	af
                             49 ;../_strcpy.c:39: register char * to = d;
   0002 F8 06                50 	ldhl	sp,#6
   0004 7E                   51 	ld	a,(hl)
   0005 23                   52 	inc	hl
   0006 5E                   53 	ld	e,(hl)
   0007 F8 02                54 	ldhl	sp,#2
   0009 77                   55 	ld	(hl),a
   000A 23                   56 	inc	hl
   000B 73                   57 	ld	(hl),e
                             58 ;../_strcpy.c:40: register const char * from = s;
   000C F8 09                59 	ldhl	sp,#9
   000E 2B                   60 	dec	hl
   000F 4E                   61 	ld	c,(hl)
   0010 23                   62 	inc	hl
   0011 46                   63 	ld	b,(hl)
                             64 ;../_strcpy.c:42: while (*to++ = *from++) ;
   0012 F8 02                65 	ldhl	sp,#2
   0014 7E                   66 	ld	a,(hl)
   0015 23                   67 	inc	hl
   0016 5E                   68 	ld	e,(hl)
   0017 F8 00                69 	ldhl	sp,#0
   0019 77                   70 	ld	(hl),a
   001A 23                   71 	inc	hl
   001B 73                   72 	ld	(hl),e
   001C                      73 00101$:
   001C 0A                   74 	ld	a,(bc)
   001D 03                   75 	inc	bc
   001E F8 01                76 	ldhl	sp,#1
   0020 2B                   77 	dec	hl
   0021 5E                   78 	ld	e,(hl)
   0022 23                   79 	inc	hl
   0023 56                   80 	ld	d,(hl)
   0024 12                   81 	ld	(de),a
   0025 2B                   82 	dec	hl
   0026 34                   83 	inc	(hl)
   0027 C2r2Cs00             84 	jp	NZ,00109$
   002A 23                   85 	inc	hl
   002B 34                   86 	inc	(hl)
   002C                      87 00109$:
   002C B7                   88 	or	a,a
   002D C2r1Cs00             89 	jp	NZ,00101$
                             90 ;../_strcpy.c:44: return d;
   0030 F8 07                91 	ldhl	sp,#7
   0032 2B                   92 	dec	hl
   0033 5E                   93 	ld	e,(hl)
   0034 23                   94 	inc	hl
   0035 56                   95 	ld	d,(hl)
   0036                      96 00104$:
   0036 E8 04                97 	lda	sp,4(sp)
   0038 C9                   98 	ret
   0039                      99 _strcpy_end::
                            100 	.area _CODE
                            101 	.area _CABS
