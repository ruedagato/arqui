                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:18:20 2015
                              5 ;--------------------------------------------------------
                              6 	.module assert
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __assert
                             13 ;--------------------------------------------------------
                             14 ;  ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in  ram 
                             19 ;--------------------------------------------------------
                             20 	.area _OVERLAY
                             21 ;--------------------------------------------------------
                             22 ; external initialized ram data
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; global & static initialisations
                             26 ;--------------------------------------------------------
                             27 	.area _HOME
                             28 	.area _GSINIT
                             29 	.area _GSFINAL
                             30 	.area _GSINIT
                             31 ;--------------------------------------------------------
                             32 ; Home
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _HOME
                             36 ;--------------------------------------------------------
                             37 ; code
                             38 ;--------------------------------------------------------
                             39 	.area _CODE
                             40 ;../assert.c:32: void _assert(char *expr, const char *filename, unsigned int linenumber)
                             41 ;	---------------------------------
                             42 ; Function _assert
                             43 ; ---------------------------------
   0000                      44 __assert_start::
   0000                      45 __assert:
                             46 	
                             47 ;../assert.c:34: printf("Assert(%s) failed at line %u in file %s.\n",
   0000 F8 04                48 	ldhl	sp,#4
   0002 7E                   49 	ld	a,(hl)
   0003 23                   50 	inc	hl
   0004 66                   51 	ld	h,(hl)
   0005 6F                   52 	ld	l,a
   0006 E5                   53 	push	hl
   0007 F8 08                54 	ldhl	sp,#8
   0009 7E                   55 	ld	a,(hl)
   000A 23                   56 	inc	hl
   000B 66                   57 	ld	h,(hl)
   000C 6F                   58 	ld	l,a
   000D E5                   59 	push	hl
   000E F8 06                60 	ldhl	sp,#6
   0010 7E                   61 	ld	a,(hl)
   0011 23                   62 	inc	hl
   0012 66                   63 	ld	h,(hl)
   0013 6F                   64 	ld	l,a
   0014 E5                   65 	push	hl
   0015 21r21s00             66 	ld	hl,#__str_0
   0018 E5                   67 	push	hl
   0019 CDr00s00             68 	call	_printf
   001C E8 08                69 	lda	sp,8(sp)
                             70 ;../assert.c:36: while(1);
   001E                      71 00102$:
   001E 18 FE                72 	jr	00102$
   0020                      73 00104$:
                             74 	
   0020 C9                   75 	ret
   0021                      76 __assert_end::
   0021                      77 __str_0:
   0021 41 73 73 65 72 74    78 	.ascii "Assert(%s) failed at line %u in file %s."
        28 25 73 29 20 66
        61 69 6C 65 64 20
        61 74 20 6C 69 6E
        65 20 25 75 20 69
        6E 20 66 69 6C 65
        20 25 73 2E
   0049 0A                   79 	.db 0x0A
   004A 00                   80 	.db 0x00
                             81 	.area _CODE
                             82 	.area _CABS
