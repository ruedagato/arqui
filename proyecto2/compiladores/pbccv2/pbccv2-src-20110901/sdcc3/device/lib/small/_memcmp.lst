                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:23 2015
                              5 ;--------------------------------------------------------
                              6 	.module _memcmp
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _memcmp_PARM_3
                             13 	.globl _memcmp_PARM_2
                             14 	.globl _memcmp
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 	.area RSEG    (ABS,DATA)
   0000                      19 	.org 0x0000
                             20 ;--------------------------------------------------------
                             21 ; special function bits
                             22 ;--------------------------------------------------------
                             23 	.area RSEG    (ABS,DATA)
   0000                      24 	.org 0x0000
                             25 ;--------------------------------------------------------
                             26 ; overlayable register banks
                             27 ;--------------------------------------------------------
                             28 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      29 	.ds 8
                             30 ;--------------------------------------------------------
                             31 ; internal ram data
                             32 ;--------------------------------------------------------
                             33 	.area DSEG    (DATA)
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in internal ram 
                             36 ;--------------------------------------------------------
                             37 	.area	OSEG    (OVR,DATA)
   0000                      38 _memcmp_PARM_2::
   0000                      39 	.ds 3
   0003                      40 _memcmp_PARM_3::
   0003                      41 	.ds 2
   0005                      42 _memcmp_buf1_1_1::
   0005                      43 	.ds 3
                             44 ;--------------------------------------------------------
                             45 ; indirectly addressable internal ram data
                             46 ;--------------------------------------------------------
                             47 	.area ISEG    (DATA)
                             48 ;--------------------------------------------------------
                             49 ; absolute internal ram data
                             50 ;--------------------------------------------------------
                             51 	.area IABS    (ABS,DATA)
                             52 	.area IABS    (ABS,DATA)
                             53 ;--------------------------------------------------------
                             54 ; bit data
                             55 ;--------------------------------------------------------
                             56 	.area BSEG    (BIT)
                             57 ;--------------------------------------------------------
                             58 ; paged external ram data
                             59 ;--------------------------------------------------------
                             60 	.area PSEG    (PAG,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external ram data
                             63 ;--------------------------------------------------------
                             64 	.area XSEG    (XDATA)
                             65 ;--------------------------------------------------------
                             66 ; absolute external ram data
                             67 ;--------------------------------------------------------
                             68 	.area XABS    (ABS,XDATA)
                             69 ;--------------------------------------------------------
                             70 ; external initialized ram data
                             71 ;--------------------------------------------------------
                             72 	.area XISEG   (XDATA)
                             73 	.area HOME    (CODE)
                             74 	.area GSINIT0 (CODE)
                             75 	.area GSINIT1 (CODE)
                             76 	.area GSINIT2 (CODE)
                             77 	.area GSINIT3 (CODE)
                             78 	.area GSINIT4 (CODE)
                             79 	.area GSINIT5 (CODE)
                             80 	.area GSINIT  (CODE)
                             81 	.area GSFINAL (CODE)
                             82 	.area CSEG    (CODE)
                             83 ;--------------------------------------------------------
                             84 ; global & static initialisations
                             85 ;--------------------------------------------------------
                             86 	.area HOME    (CODE)
                             87 	.area GSINIT  (CODE)
                             88 	.area GSFINAL (CODE)
                             89 	.area GSINIT  (CODE)
                             90 ;--------------------------------------------------------
                             91 ; Home
                             92 ;--------------------------------------------------------
                             93 	.area HOME    (CODE)
                             94 	.area HOME    (CODE)
                             95 ;--------------------------------------------------------
                             96 ; code
                             97 ;--------------------------------------------------------
                             98 	.area CSEG    (CODE)
                             99 ;------------------------------------------------------------
                            100 ;Allocation info for local variables in function 'memcmp'
                            101 ;------------------------------------------------------------
                            102 ;buf2                      Allocated with name '_memcmp_PARM_2'
                            103 ;count                     Allocated with name '_memcmp_PARM_3'
                            104 ;buf1                      Allocated with name '_memcmp_buf1_1_1'
                            105 ;------------------------------------------------------------
                            106 ;	_memcmp.c:31: int memcmp (
                            107 ;	-----------------------------------------
                            108 ;	 function memcmp
                            109 ;	-----------------------------------------
   0000                     110 _memcmp:
                    0002    111 	ar2 = 0x02
                    0003    112 	ar3 = 0x03
                    0004    113 	ar4 = 0x04
                    0005    114 	ar5 = 0x05
                    0006    115 	ar6 = 0x06
                    0007    116 	ar7 = 0x07
                    0000    117 	ar0 = 0x00
                    0001    118 	ar1 = 0x01
   0000 85 82*05            119 	mov	_memcmp_buf1_1_1,dpl
   0003 85 83*06            120 	mov	(_memcmp_buf1_1_1 + 1),dph
   0006 85 F0*07            121 	mov	(_memcmp_buf1_1_1 + 2),b
                            122 ;	_memcmp.c:37: if (!count)
   0009 E5*03               123 	mov	a,_memcmp_PARM_3
   000B 45*04               124 	orl	a,(_memcmp_PARM_3 + 1)
   000D 70 04               125 	jnz	00112$
                            126 ;	_memcmp.c:38: return(0);
   000F 90 00 00            127 	mov	dptr,#0x0000
                            128 ;	_memcmp.c:40: while ( --count && *((char *)buf1) == *((char *)buf2) ) {
   0012 22                  129 	ret
   0013                     130 00112$:
   0013 AD*03               131 	mov	r5,_memcmp_PARM_3
   0015 AE*04               132 	mov	r6,(_memcmp_PARM_3 + 1)
   0017                     133 00104$:
   0017 1D                  134 	dec	r5
   0018 BD FF 01            135 	cjne	r5,#0xff,00115$
   001B 1E                  136 	dec	r6
   001C                     137 00115$:
   001C ED                  138 	mov	a,r5
   001D 4E                  139 	orl	a,r6
   001E 60 36               140 	jz	00106$
   0020 85*05 82            141 	mov	dpl,_memcmp_buf1_1_1
   0023 85*06 83            142 	mov	dph,(_memcmp_buf1_1_1 + 1)
   0026 85*07 F0            143 	mov	b,(_memcmp_buf1_1_1 + 2)
   0029 12s00r00            144 	lcall	__gptrget
   002C FF                  145 	mov	r7,a
   002D A8*00               146 	mov	r0,_memcmp_PARM_2
   002F A9*01               147 	mov	r1,(_memcmp_PARM_2 + 1)
   0031 AA*02               148 	mov	r2,(_memcmp_PARM_2 + 2)
   0033 88 82               149 	mov	dpl,r0
   0035 89 83               150 	mov	dph,r1
   0037 8A F0               151 	mov	b,r2
   0039 12s00r00            152 	lcall	__gptrget
   003C FB                  153 	mov	r3,a
   003D EF                  154 	mov	a,r7
   003E B5 03 15            155 	cjne	a,ar3,00106$
                            156 ;	_memcmp.c:41: buf1 = (char *)buf1 + 1;
   0041 05*05               157 	inc	_memcmp_buf1_1_1
   0043 E4                  158 	clr	a
   0044 B5*05 02            159 	cjne	a,_memcmp_buf1_1_1,00119$
   0047 05*06               160 	inc	(_memcmp_buf1_1_1 + 1)
   0049                     161 00119$:
                            162 ;	_memcmp.c:42: buf2 = (char *)buf2 + 1;
   0049 74 01               163 	mov	a,#0x01
   004B 28                  164 	add	a,r0
   004C F5*00               165 	mov	_memcmp_PARM_2,a
   004E E4                  166 	clr	a
   004F 39                  167 	addc	a,r1
   0050 F5*01               168 	mov	(_memcmp_PARM_2 + 1),a
   0052 8A*02               169 	mov	(_memcmp_PARM_2 + 2),r2
   0054 80 C1               170 	sjmp	00104$
   0056                     171 00106$:
                            172 ;	_memcmp.c:45: return( *((unsigned char *)buf1) - *((unsigned char *)buf2) );
   0056 85*05 82            173 	mov	dpl,_memcmp_buf1_1_1
   0059 85*06 83            174 	mov	dph,(_memcmp_buf1_1_1 + 1)
   005C 85*07 F0            175 	mov	b,(_memcmp_buf1_1_1 + 2)
   005F 12s00r00            176 	lcall	__gptrget
   0062 FA                  177 	mov	r2,a
   0063 7B 00               178 	mov	r3,#0x00
   0065 AC*00               179 	mov	r4,_memcmp_PARM_2
   0067 AD*01               180 	mov	r5,(_memcmp_PARM_2 + 1)
   0069 AE*02               181 	mov	r6,(_memcmp_PARM_2 + 2)
   006B 8C 82               182 	mov	dpl,r4
   006D 8D 83               183 	mov	dph,r5
   006F 8E F0               184 	mov	b,r6
   0071 12s00r00            185 	lcall	__gptrget
   0074 FC                  186 	mov	r4,a
   0075 7D 00               187 	mov	r5,#0x00
   0077 EA                  188 	mov	a,r2
   0078 C3                  189 	clr	c
   0079 9C                  190 	subb	a,r4
   007A F5 82               191 	mov	dpl,a
   007C EB                  192 	mov	a,r3
   007D 9D                  193 	subb	a,r5
   007E F5 83               194 	mov	dph,a
   0080 22                  195 	ret
                            196 	.area CSEG    (CODE)
                            197 	.area CONST   (CODE)
                            198 	.area XINIT   (CODE)
                            199 	.area CABS    (ABS,CODE)
