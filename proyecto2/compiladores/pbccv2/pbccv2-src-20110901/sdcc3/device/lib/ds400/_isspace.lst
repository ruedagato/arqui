                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:19 2015
                              5 ;--------------------------------------------------------
                              6 	.module _isspace
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _isspace
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      43 	.ds 8
                             44 ;--------------------------------------------------------
                             45 ; internal ram data
                             46 ;--------------------------------------------------------
                             47 	.area DSEG    (DATA)
                             48 ;--------------------------------------------------------
                             49 ; overlayable items in internal ram 
                             50 ;--------------------------------------------------------
                             51 	.area OSEG    (OVR,DATA)
                             52 ;--------------------------------------------------------
                             53 ; indirectly addressable internal ram data
                             54 ;--------------------------------------------------------
                             55 	.area ISEG    (DATA)
                             56 ;--------------------------------------------------------
                             57 ; absolute internal ram data
                             58 ;--------------------------------------------------------
                             59 	.area IABS    (ABS,DATA)
                             60 	.area IABS    (ABS,DATA)
                             61 ;--------------------------------------------------------
                             62 ; bit data
                             63 ;--------------------------------------------------------
                             64 	.area BSEG    (BIT)
                             65 ;--------------------------------------------------------
                             66 ; paged external ram data
                             67 ;--------------------------------------------------------
                             68 	.area PSEG    (PAG,XDATA)
                             69 ;--------------------------------------------------------
                             70 ; external ram data
                             71 ;--------------------------------------------------------
                             72 	.area XSEG    (XDATA)
                             73 ;--------------------------------------------------------
                             74 ; absolute external ram data
                             75 ;--------------------------------------------------------
                             76 	.area XABS    (ABS,XDATA)
                             77 ;--------------------------------------------------------
                             78 ; external initialized ram data
                             79 ;--------------------------------------------------------
                             80 	.area XISEG   (XDATA)
                             81 ;--------------------------------------------------------
                             82 ; global & static initialisations
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area GSINIT  (CODE)
                             86 	.area GSFINAL (CODE)
                             87 	.area GSINIT  (CODE)
                             88 ;--------------------------------------------------------
                             89 ; Home
                             90 ;--------------------------------------------------------
                             91 	.area HOME    (CODE)
                             92 	.area HOME    (CODE)
                             93 ;--------------------------------------------------------
                             94 ; code
                             95 ;--------------------------------------------------------
                             96 	.area CSEG    (CODE)
                             97 ;------------------------------------------------------------
                             98 ;Allocation info for local variables in function 'isspace'
                             99 ;------------------------------------------------------------
                            100 ;c                         Allocated to registers r2 
                            101 ;------------------------------------------------------------
                            102 ;	_isspace.c:33: char isspace (unsigned char c)
                            103 ;	-----------------------------------------
                            104 ;	 function isspace
                            105 ;	-----------------------------------------
   0000                     106 _isspace:
                    0002    107 	ar2 = 0x02
                    0003    108 	ar3 = 0x03
                    0004    109 	ar4 = 0x04
                    0005    110 	ar5 = 0x05
                    0006    111 	ar6 = 0x06
                    0007    112 	ar7 = 0x07
                    0000    113 	ar0 = 0x00
                    0001    114 	ar1 = 0x01
   0000 AA 82               115 	mov	r2,dpl
                            116 ;	_isspace.c:35: if ( c == UC(' ')  ||
   0002 EA                  117 	mov	a,r2
   0003 B4 20 02            118 	cjne	a,#0x20,00115$
   0006 80 1C               119 	sjmp 00101$
   0008                     120 00115$:
                            121 ;	_isspace.c:36: c == UC('\f') ||
   0008 EA                  122 	mov	a,r2
   0009 B4 0C 02            123 	cjne	a,#0x0C,00116$
   000C 80 16               124 	sjmp 00101$
   000E                     125 00116$:
                            126 ;	_isspace.c:37: c == UC('\n') ||
   000E EA                  127 	mov	a,r2
   000F B4 0A 02            128 	cjne	a,#0x0A,00117$
   0012 80 10               129 	sjmp 00101$
   0014                     130 00117$:
                            131 ;	_isspace.c:38: c == UC('\r') ||
   0014 EA                  132 	mov	a,r2
   0015 B4 0D 02            133 	cjne	a,#0x0D,00118$
   0018 80 0A               134 	sjmp 00101$
   001A                     135 00118$:
                            136 ;	_isspace.c:39: c == UC('\t') ||
   001A EA                  137 	mov	a,r2
   001B B4 09 02            138 	cjne	a,#0x09,00119$
   001E 80 04               139 	sjmp 00101$
   0020                     140 00119$:
                            141 ;	_isspace.c:40: c == UC('\v') )
   0020 EA                  142 	mov	a,r2
   0021 B4 0B 04            143 	cjne a,#0x0B,00102$
   0024                     144 00121$:
   0024                     145 00101$:
                            146 ;	_isspace.c:41: return 1;
   0024 75 82 01            147 	mov	dpl,#0x01
                            148 ;	_isspace.c:42: return 0;
   0027 22                  149 	ret
   0028                     150 00102$:
   0028 75 82 00            151 	mov     dpl,#0x00
   002B                     152 00108$:
   002B 22                  153 	ret
                            154 	.area CSEG    (CODE)
                            155 	.area CONST   (CODE)
                            156 	.area XINIT   (CODE)
                            157 	.area CABS    (ABS,CODE)
