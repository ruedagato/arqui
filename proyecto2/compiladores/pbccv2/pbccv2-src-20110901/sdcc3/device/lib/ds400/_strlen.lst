                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:20 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strlen
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _strlen
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      43 	.ds 8
                             44 ;--------------------------------------------------------
                             45 ; internal ram data
                             46 ;--------------------------------------------------------
                             47 	.area DSEG    (DATA)
                             48 ;--------------------------------------------------------
                             49 ; overlayable items in internal ram 
                             50 ;--------------------------------------------------------
                             51 	.area	OSEG    (OVR,DATA)
                             52 ;--------------------------------------------------------
                             53 ; indirectly addressable internal ram data
                             54 ;--------------------------------------------------------
                             55 	.area ISEG    (DATA)
                             56 ;--------------------------------------------------------
                             57 ; absolute internal ram data
                             58 ;--------------------------------------------------------
                             59 	.area IABS    (ABS,DATA)
                             60 	.area IABS    (ABS,DATA)
                             61 ;--------------------------------------------------------
                             62 ; bit data
                             63 ;--------------------------------------------------------
                             64 	.area BSEG    (BIT)
                             65 ;--------------------------------------------------------
                             66 ; paged external ram data
                             67 ;--------------------------------------------------------
                             68 	.area PSEG    (PAG,XDATA)
                             69 ;--------------------------------------------------------
                             70 ; external ram data
                             71 ;--------------------------------------------------------
                             72 	.area XSEG    (XDATA)
                             73 ;--------------------------------------------------------
                             74 ; absolute external ram data
                             75 ;--------------------------------------------------------
                             76 	.area XABS    (ABS,XDATA)
                             77 ;--------------------------------------------------------
                             78 ; external initialized ram data
                             79 ;--------------------------------------------------------
                             80 	.area XISEG   (XDATA)
                             81 ;--------------------------------------------------------
                             82 ; global & static initialisations
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area GSINIT  (CODE)
                             86 	.area GSFINAL (CODE)
                             87 	.area GSINIT  (CODE)
                             88 ;--------------------------------------------------------
                             89 ; Home
                             90 ;--------------------------------------------------------
                             91 	.area HOME    (CODE)
                             92 	.area HOME    (CODE)
                             93 ;--------------------------------------------------------
                             94 ; code
                             95 ;--------------------------------------------------------
                             96 	.area CSEG    (CODE)
                             97 ;------------------------------------------------------------
                             98 ;Allocation info for local variables in function 'strlen'
                             99 ;------------------------------------------------------------
                            100 ;str                       Allocated to registers r2 r3 r4 r5 
                            101 ;i                         Allocated to registers r6 r7 
                            102 ;------------------------------------------------------------
                            103 ;	_strlen.c:35: size_t strlen ( const char * str )
                            104 ;	-----------------------------------------
                            105 ;	 function strlen
                            106 ;	-----------------------------------------
   0000                     107 _strlen:
                    0002    108 	ar2 = 0x02
                    0003    109 	ar3 = 0x03
                    0004    110 	ar4 = 0x04
                    0005    111 	ar5 = 0x05
                    0006    112 	ar6 = 0x06
                    0007    113 	ar7 = 0x07
                    0000    114 	ar0 = 0x00
                    0001    115 	ar1 = 0x01
   0000 AA 82               116 	mov	r2,dpl
   0002 AB 83               117 	mov	r3,dph
   0004 AC 93               118 	mov	r4,dpx
   0006 AD F0               119 	mov	r5,b
                            120 ;	_strlen.c:39: while (*str++)
                            121 ;	genAssign: resultIsFar = FALSE
   0008 E4                  122 	clr	a
   0009 F5 84               123 	mov	dpl1,a
   000B F5 85               124 	mov	dph1,a
                            125 ;	genAssign: resultIsFar = FALSE
   000D                     126 00101$:
   000D 8A 82               127 	mov	dpl,r2
   000F 8B 83               128 	mov	dph,r3
   0011 8C 93               129 	mov	dpx,r4
   0013 8D F0               130 	mov	b,r5
   0015 12s00r00r00         131 	lcall	__gptrget
   0019 F8                  132 	mov	r0,a
   001A A3                  133 	inc	dptr
   001B AA 82               134 	mov	r2,dpl
   001D AB 83               135 	mov	r3,dph
   001F AC 93               136 	mov	r4,dpx
   0021 AD F0               137 	mov	r5,b
   0023 E8                  138 	mov	a,r0
   0024 60 09               139 	jz  00103$
   0026                     140 00109$:
                            141 ;	_strlen.c:40: i++ ;
   0026 75 86 01            142 	mov	dps,#0x01
   0029 A3                  143 	inc	dptr
   002A 75 86 00            144 	mov	dps,#0
   002D 80 DE               145 	sjmp 00101$
   002F                     146 00103$:
                            147 ;	_strlen.c:42: return i;
   002F 85 84 82            148 	mov	dpl,dpl1
   0032 85 85 83            149 	mov	dph,dph1
   0035                     150 00104$:
   0035 22                  151 	ret
                            152 	.area CSEG    (CODE)
                            153 	.area CONST   (CODE)
                            154 	.area XINIT   (CODE)
                            155 	.area CABS    (ABS,CODE)
