                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:19 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strstr
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _strstr_PARM_2
                             31 	.globl _strstr
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      44 	.ds 8
                             45 ;--------------------------------------------------------
                             46 ; internal ram data
                             47 ;--------------------------------------------------------
                             48 	.area DSEG    (DATA)
                             49 ;--------------------------------------------------------
                             50 ; overlayable items in internal ram 
                             51 ;--------------------------------------------------------
                             52 	.area OSEG    (OVR,DATA)
                             53 ;--------------------------------------------------------
                             54 ; indirectly addressable internal ram data
                             55 ;--------------------------------------------------------
                             56 	.area ISEG    (DATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute internal ram data
                             59 ;--------------------------------------------------------
                             60 	.area IABS    (ABS,DATA)
                             61 	.area IABS    (ABS,DATA)
                             62 ;--------------------------------------------------------
                             63 ; bit data
                             64 ;--------------------------------------------------------
                             65 	.area BSEG    (BIT)
                             66 ;--------------------------------------------------------
                             67 ; paged external ram data
                             68 ;--------------------------------------------------------
                             69 	.area PSEG    (PAG,XDATA)
                             70 ;--------------------------------------------------------
                             71 ; external ram data
                             72 ;--------------------------------------------------------
                             73 	.area XSEG    (XDATA)
   0000                      74 _strstr_PARM_2:
   0000                      75 	.ds 4
   0004                      76 _strstr_cp_1_1:
   0004                      77 	.ds 4
   0008                      78 _strstr_sloc0_1_0:
   0008                      79 	.ds 4
   000C                      80 _strstr_sloc1_1_0:
   000C                      81 	.ds 4
   0010                      82 _strstr_sloc2_1_0:
   0010                      83 	.ds 1
   0011                      84 _strstr_sloc3_1_0:
   0011                      85 	.ds 1
                             86 ;--------------------------------------------------------
                             87 ; absolute external ram data
                             88 ;--------------------------------------------------------
                             89 	.area XABS    (ABS,XDATA)
                             90 ;--------------------------------------------------------
                             91 ; external initialized ram data
                             92 ;--------------------------------------------------------
                             93 	.area XISEG   (XDATA)
                             94 ;--------------------------------------------------------
                             95 ; global & static initialisations
                             96 ;--------------------------------------------------------
                             97 	.area HOME    (CODE)
                             98 	.area GSINIT  (CODE)
                             99 	.area GSFINAL (CODE)
                            100 	.area GSINIT  (CODE)
                            101 ;--------------------------------------------------------
                            102 ; Home
                            103 ;--------------------------------------------------------
                            104 	.area HOME    (CODE)
                            105 	.area HOME    (CODE)
                            106 ;--------------------------------------------------------
                            107 ; code
                            108 ;--------------------------------------------------------
                            109 	.area CSEG    (CODE)
                            110 ;------------------------------------------------------------
                            111 ;Allocation info for local variables in function 'strstr'
                            112 ;------------------------------------------------------------
                            113 ;str2                      Allocated with name '_strstr_PARM_2'
                            114 ;str1                      Allocated to registers r6 r3 r4 r5 
                            115 ;cp                        Allocated with name '_strstr_cp_1_1'
                            116 ;s1                        Allocated to registers 
                            117 ;s2                        Allocated to registers r6 r7 r0 r1 
                            118 ;sloc0                     Allocated with name '_strstr_sloc0_1_0'
                            119 ;sloc1                     Allocated with name '_strstr_sloc1_1_0'
                            120 ;sloc2                     Allocated with name '_strstr_sloc2_1_0'
                            121 ;sloc3                     Allocated with name '_strstr_sloc3_1_0'
                            122 ;------------------------------------------------------------
                            123 ;	_strstr.c:31: char * strstr (
                            124 ;	-----------------------------------------
                            125 ;	 function strstr
                            126 ;	-----------------------------------------
   0000                     127 _strstr:
                    0002    128 	ar2 = 0x02
                    0003    129 	ar3 = 0x03
                    0004    130 	ar4 = 0x04
                    0005    131 	ar5 = 0x05
                    0006    132 	ar6 = 0x06
                    0007    133 	ar7 = 0x07
                    0000    134 	ar0 = 0x00
                    0001    135 	ar1 = 0x01
   0000 AE 82               136 	mov	r6,dpl
   0002 AB 83               137 	mov	r3,dph
   0004 AC 93               138 	mov	r4,dpx
   0006 AD F0               139 	mov	r5,b
                            140 ;	_strstr.c:36: const char * cp = str1;
                            141 ;	genAssign: resultIsFar = TRUE
   0008 90s00r00r04         142 	mov	dptr,#_strstr_cp_1_1
   000C EE                  143 	mov	a,r6
   000D F0                  144 	movx	@dptr,a
   000E A3                  145 	inc	dptr
   000F EB                  146 	mov	a,r3
   0010 F0                  147 	movx	@dptr,a
   0011 A3                  148 	inc	dptr
   0012 EC                  149 	mov	a,r4
   0013 F0                  150 	movx	@dptr,a
   0014 A3                  151 	inc	dptr
   0015 ED                  152 	mov	a,r5
   0016 F0                  153 	movx	@dptr,a
                            154 ;	_strstr.c:40: if ( !*str2 )
   0017 90s00r00r00         155 	mov	dptr,#_strstr_PARM_2
                            156 ;	genAssign: resultIsFar = TRUE
   001B 75 86 21            157 	mov	dps,#0x21
   001E 90s00r00r08         158 	mov	dptr,#_strstr_sloc0_1_0
   0022 E0                  159 	movx	a,@dptr
   0023 F0                  160 	movx	@dptr,a
   0024 A3                  161 	inc	dptr
   0025 A3                  162 	inc	dptr
   0026 E0                  163 	movx	a,@dptr
   0027 F0                  164 	movx	@dptr,a
   0028 A3                  165 	inc	dptr
   0029 A3                  166 	inc	dptr
   002A E0                  167 	movx	a,@dptr
   002B F0                  168 	movx	@dptr,a
   002C A3                  169 	inc	dptr
   002D A3                  170 	inc	dptr
   002E E0                  171 	movx	a,@dptr
   002F F0                  172 	movx	@dptr,a
   0030 75 86 01            173 	mov     dps, #1
   0033 90s00r00r08         174 	mov     dptr, #_strstr_sloc0_1_0
   0037 E0                  175 	movx	a,@dptr
   0038 F5 82               176 	mov	dpl,a
   003A A3                  177 	inc	dptr
   003B E0                  178 	movx	a,@dptr
   003C F5 83               179 	mov	dph,a
   003E A3                  180 	inc	dptr
   003F E0                  181 	movx	a,@dptr
   0040 F5 93               182 	mov	dpx,a
   0042 A3                  183 	inc	dptr
   0043 E0                  184 	movx	a,@dptr
   0044 F5 F0               185 	mov	b,a
   0046 75 86 00            186 	mov	dps,#0
   0049 12s00r00r00         187 	lcall	__gptrget
   004D FA                  188 	mov  r2,a
   004E 70 0C               189 	jnz  00122$
   0050                     190 00124$:
                            191 ;	_strstr.c:41: return str1;
   0050 8E 82               192 	mov	dpl,r6
   0052 8B 83               193 	mov	dph,r3
   0054 8C 93               194 	mov	dpx,r4
   0056 8D F0               195 	mov	b,r5
   0058 02s00r01r82         196 	ljmp	00113$
                            197 ;	_strstr.c:43: while (*cp)
   005C                     198 00122$:
                            199 ;	genAssign: resultIsFar = FALSE
   005C 8E 02               200 	mov	ar2,r6
   005E                     201 00110$:
   005E 8A 82               202 	mov	dpl,r2
   0060 8B 83               203 	mov	dph,r3
   0062 8C 93               204 	mov	dpx,r4
   0064 8D F0               205 	mov	b,r5
   0066 12s00r00r00         206 	lcall	__gptrget
   006A FE                  207 	mov  r6,a
   006B 70 04               208 	jnz	00125$
   006D 02s00r01r7B         209 	ljmp	00112$
   0071                     210 00125$:
                            211 ;	_strstr.c:46: s2 = str2;
   0071 90s00r00r08         212 	mov	dptr,#_strstr_sloc0_1_0
                            213 ;	genAssign: resultIsFar = TRUE
   0075 E0                  214 	movx	a,@dptr
   0076 FE                  215 	mov	r6,a
   0077 A3                  216 	inc	dptr
   0078 E0                  217 	movx	a,@dptr
   0079 FF                  218 	mov	r7,a
   007A A3                  219 	inc	dptr
   007B E0                  220 	movx	a,@dptr
   007C F8                  221 	mov	r0,a
   007D A3                  222 	inc	dptr
   007E E0                  223 	movx	a,@dptr
   007F F9                  224 	mov	r1,a
                            225 ;	_strstr.c:48: while ( *s1 && *s2 && !(*s1-*s2) )
                            226 ;	genAssign: resultIsFar = TRUE
   0080 90s00r00r0C         227 	mov	dptr,#_strstr_sloc1_1_0
   0084 EA                  228 	mov	a,r2
   0085 F0                  229 	movx	@dptr,a
   0086 A3                  230 	inc	dptr
   0087 EB                  231 	mov	a,r3
   0088 F0                  232 	movx	@dptr,a
   0089 A3                  233 	inc	dptr
   008A EC                  234 	mov	a,r4
   008B F0                  235 	movx	@dptr,a
   008C A3                  236 	inc	dptr
   008D ED                  237 	mov	a,r5
   008E F0                  238 	movx	@dptr,a
                            239 ;	genAssign: resultIsFar = FALSE
   008F                     240 00105$:
   008F 75 86 01            241 	mov     dps, #1
   0092 90s00r00r0C         242 	mov     dptr, #_strstr_sloc1_1_0
   0096 E0                  243 	movx	a,@dptr
   0097 F5 82               244 	mov	dpl,a
   0099 A3                  245 	inc	dptr
   009A E0                  246 	movx	a,@dptr
   009B F5 83               247 	mov	dph,a
   009D A3                  248 	inc	dptr
   009E E0                  249 	movx	a,@dptr
   009F F5 93               250 	mov	dpx,a
   00A1 A3                  251 	inc	dptr
   00A2 E0                  252 	movx	a,@dptr
   00A3 F5 F0               253 	mov	b,a
   00A5 75 86 01            254 	mov	dps, #1
   00A8 90s00r00r10         255 	mov	dptr, #_strstr_sloc2_1_0
   00AC 15 86               256 	dec	dps
   00AE 12s00r00r00         257 	lcall	__gptrget
   00B2 75 86 01            258 	mov	dps,#1
   00B5 F0                  259 	movx	@dptr,a
   00B6 75 86 00            260 	mov	dps,#0
   00B9 90s00r00r10         261 	mov	dptr,#_strstr_sloc2_1_0
   00BD E0                  262 	movx	a,@dptr
   00BE 60 75               263 	jz   00107$
   00C0                     264 00126$:
   00C0 8E 82               265 	mov	dpl,r6
   00C2 8F 83               266 	mov	dph,r7
   00C4 88 93               267 	mov	dpx,r0
   00C6 89 F0               268 	mov	b,r1
   00C8 75 86 01            269 	mov	dps, #1
   00CB 90s00r00r11         270 	mov	dptr, #_strstr_sloc3_1_0
   00CF 15 86               271 	dec	dps
   00D1 12s00r00r00         272 	lcall	__gptrget
   00D5 75 86 01            273 	mov	dps,#1
   00D8 F0                  274 	movx	@dptr,a
   00D9 75 86 00            275 	mov	dps,#0
   00DC 90s00r00r11         276 	mov	dptr,#_strstr_sloc3_1_0
   00E0 E0                  277 	movx	a,@dptr
   00E1 60 52               278 	jz  00107$
   00E3                     279 00127$:
   00E3 C0 02               280 	push	ar2
   00E5 C0 03               281 	push	ar3
   00E7 C0 04               282 	push	ar4
   00E9 C0 05               283 	push	ar5
   00EB 90s00r00r10         284 	mov	dptr,#_strstr_sloc2_1_0
   00EF E0                  285 	movx	a,@dptr
   00F0 FA                  286 	mov	r2,a
   00F1 E0                  287 	movx	a,@dptr
   00F2 33                  288 	rlc	a
   00F3 95 E0               289 	subb	a,acc
   00F5 FB                  290 	mov	r3,a
   00F6 90s00r00r11         291 	mov	dptr,#_strstr_sloc3_1_0
   00FA E0                  292 	movx	a,@dptr
   00FB FC                  293 	mov	r4,a
   00FC E0                  294 	movx	a,@dptr
   00FD 33                  295 	rlc	a
   00FE 95 E0               296 	subb	a,acc
   0100 FD                  297 	mov	r5,a
   0101 C3                  298 	clr	c
   0102 EA                  299 	mov	a,r2
   0103 9C                  300 	subb	a,r4
   0104 FA                  301 	mov	r2,a
   0105 EB                  302 	mov	a,r3
   0106 9D                  303 	subb	a,r5
   0107 FB                  304 	mov  r3,a
   0108 4A                  305 	orl  a,r2
   0109 D0 05               306 	pop	ar5
   010B D0 04               307 	pop	ar4
   010D D0 03               308 	pop	ar3
   010F D0 02               309 	pop	ar2
   0111 70 22               310 	jnz  00107$
   0113                     311 00128$:
                            312 ;	_strstr.c:49: s1++, s2++;
   0113 90s00r00r0C         313 	mov	dptr,#_strstr_sloc1_1_0
   0117 E0                  314 	movx	a,@dptr
   0118 24 01               315 	add	a,#0x01
   011A F0                  316 	movx	@dptr,a
   011B A3                  317 	inc	dptr
   011C E0                  318 	movx	a,@dptr
   011D 34 00               319 	addc	a,#0x00
   011F F0                  320 	movx	@dptr,a
   0120 A3                  321 	inc	dptr
   0121 E0                  322 	movx	a,@dptr
   0122 34 00               323 	addc	a,#0x00
   0124 F0                  324 	movx	@dptr,a
   0125 A3                  325 	inc	dptr
   0126 E0                  326 	movx	a,@dptr
   0127 F0                  327 	movx	@dptr,a
   0128 0E                  328 	inc	r6
   0129 BE 00 05            329 	cjne	r6,#0,00129$
   012C 0F                  330 	inc	r7
   012D BF 00 01            331 	cjne	r7,#0,00129$
   0130 08                  332 	inc	r0
   0131                     333 00129$:
   0131 02s00r00r8F         334 	ljmp	00105$
   0135                     335 00107$:
                            336 ;	_strstr.c:51: if (!*s2)
   0135 8E 82               337 	mov	dpl,r6
   0137 8F 83               338 	mov	dph,r7
   0139 88 93               339 	mov	dpx,r0
   013B 89 F0               340 	mov	b,r1
   013D 12s00r00r00         341 	lcall	__gptrget
   0141 FE                  342 	mov  r6,a
   0142 70 1B               343 	jnz  00109$
   0144                     344 00130$:
                            345 ;	_strstr.c:52: return( (char*)cp );
   0144 75 86 01            346 	mov     dps, #1
   0147 90s00r00r04         347 	mov     dptr, #_strstr_cp_1_1
   014B E0                  348 	movx	a,@dptr
   014C F5 82               349 	mov	dpl,a
   014E A3                  350 	inc	dptr
   014F E0                  351 	movx	a,@dptr
   0150 F5 83               352 	mov	dph,a
   0152 A3                  353 	inc	dptr
   0153 E0                  354 	movx	a,@dptr
   0154 F5 93               355 	mov	dpx,a
   0156 A3                  356 	inc	dptr
   0157 E0                  357 	movx	a,@dptr
   0158 F5 F0               358 	mov	b,a
   015A 75 86 00            359 	mov	dps,#0
   015D 80 23               360 	sjmp 00113$
   015F                     361 00109$:
                            362 ;	_strstr.c:54: cp++;
   015F 0A                  363 	inc	r2
   0160 BA 00 05            364 	cjne	r2,#0,00131$
   0163 0B                  365 	inc	r3
   0164 BB 00 01            366 	cjne	r3,#0,00131$
   0167 0C                  367 	inc	r4
   0168                     368 00131$:
                            369 ;	genAssign: resultIsFar = TRUE
   0168 90s00r00r04         370 	mov	dptr,#_strstr_cp_1_1
   016C EA                  371 	mov	a,r2
   016D F0                  372 	movx	@dptr,a
   016E A3                  373 	inc	dptr
   016F EB                  374 	mov	a,r3
   0170 F0                  375 	movx	@dptr,a
   0171 A3                  376 	inc	dptr
   0172 EC                  377 	mov	a,r4
   0173 F0                  378 	movx	@dptr,a
   0174 A3                  379 	inc	dptr
   0175 ED                  380 	mov	a,r5
   0176 F0                  381 	movx	@dptr,a
   0177 02s00r00r5E         382 	ljmp	00110$
   017B                     383 00112$:
                            384 ;	_strstr.c:57: return (NULL) ;
   017B 90 00 00 00         385 	mov  dptr,#0x0000
   017F 75 F0 00            386 	mov	b,#0x00
   0182                     387 00113$:
   0182 22                  388 	ret
                            389 	.area CSEG    (CODE)
                            390 	.area CONST   (CODE)
                            391 	.area XINIT   (CODE)
                            392 	.area CABS    (ABS,CODE)
