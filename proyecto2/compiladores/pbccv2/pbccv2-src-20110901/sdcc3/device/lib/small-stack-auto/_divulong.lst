                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:31 2015
                              5 ;--------------------------------------------------------
                              6 	.module _divulong
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 ;--------------------------------------------------------
                             13 ; special function registers
                             14 ;--------------------------------------------------------
                             15 	.area RSEG    (ABS,DATA)
   0000                      16 	.org 0x0000
                             17 ;--------------------------------------------------------
                             18 ; special function bits
                             19 ;--------------------------------------------------------
                             20 	.area RSEG    (ABS,DATA)
   0000                      21 	.org 0x0000
                             22 ;--------------------------------------------------------
                             23 ; overlayable register banks
                             24 ;--------------------------------------------------------
                             25 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      26 	.ds 8
                             27 ;--------------------------------------------------------
                             28 ; internal ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (DATA)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in internal ram 
                             33 ;--------------------------------------------------------
                             34 	.area OSEG    (OVR,DATA)
                             35 ;--------------------------------------------------------
                             36 ; indirectly addressable internal ram data
                             37 ;--------------------------------------------------------
                             38 	.area ISEG    (DATA)
                             39 ;--------------------------------------------------------
                             40 ; absolute internal ram data
                             41 ;--------------------------------------------------------
                             42 	.area IABS    (ABS,DATA)
                             43 	.area IABS    (ABS,DATA)
                             44 ;--------------------------------------------------------
                             45 ; bit data
                             46 ;--------------------------------------------------------
                             47 	.area BSEG    (BIT)
                             48 ;--------------------------------------------------------
                             49 ; paged external ram data
                             50 ;--------------------------------------------------------
                             51 	.area PSEG    (PAG,XDATA)
                             52 ;--------------------------------------------------------
                             53 ; external ram data
                             54 ;--------------------------------------------------------
                             55 	.area XSEG    (XDATA)
                             56 ;--------------------------------------------------------
                             57 ; absolute external ram data
                             58 ;--------------------------------------------------------
                             59 	.area XABS    (ABS,XDATA)
                             60 ;--------------------------------------------------------
                             61 ; external initialized ram data
                             62 ;--------------------------------------------------------
                             63 	.area XISEG   (XDATA)
                             64 	.area HOME    (CODE)
                             65 	.area GSINIT0 (CODE)
                             66 	.area GSINIT1 (CODE)
                             67 	.area GSINIT2 (CODE)
                             68 	.area GSINIT3 (CODE)
                             69 	.area GSINIT4 (CODE)
                             70 	.area GSINIT5 (CODE)
                             71 	.area GSINIT  (CODE)
                             72 	.area GSFINAL (CODE)
                             73 	.area CSEG    (CODE)
                             74 ;--------------------------------------------------------
                             75 ; global & static initialisations
                             76 ;--------------------------------------------------------
                             77 	.area HOME    (CODE)
                             78 	.area GSINIT  (CODE)
                             79 	.area GSFINAL (CODE)
                             80 	.area GSINIT  (CODE)
                             81 ;--------------------------------------------------------
                             82 ; Home
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area HOME    (CODE)
                             86 ;--------------------------------------------------------
                             87 ; code
                             88 ;--------------------------------------------------------
                             89 	.area CSEG    (CODE)
                             90 ;------------------------------------------------------------
                             91 ;Allocation info for local variables in function '_divlong_dummy'
                             92 ;------------------------------------------------------------
                             93 ;------------------------------------------------------------
                             94 ;	_divulong.c:192: _divlong_dummy (void) __naked
                             95 ;	-----------------------------------------
                             96 ;	 function _divlong_dummy
                             97 ;	-----------------------------------------
   0000                      98 __divlong_dummy:
                             99 ;	naked function: no prologue.
                            100 ;	_divulong.c:311: subb	a,@r0		; y3
                            101 	
                            102 	
                            103 	 .globl __divulong
                            104 	
   0000                     105 	__divulong:
                            106 ;	# 212 "_divulong.c"
                            107 	 .globl __divlong ; entry point for __divslong
                            108 	
                            109 	
                            110 	
                            111     ; parameter x comes in a, b, dph, dpl
   0000 FB                  112 	 mov r3,a ; save parameter r3
                            113 	
   0001 E5 81               114 	 mov a,sp
   0003 24 FB               115 	 add a,#-2-3 ; 2 bytes return address, 3 bytes param y
   0005 F8                  116 	 mov r0,a ; r0 points to r1
                            117 	
   0006                     118 	__divlong:
                            119 ; entry point for __divslong
                            120 	
   0006 E6                  121 	 mov a,@r0 ; load r1
   0007 F9                  122 	 mov r1,a
   0008 08                  123 	 inc r0 ; r0 points to y1
                            124 	
   0009 7A 20               125 	 mov r2,#32
   000B E4                  126 	 clr a
   000C FC                  127 	 mov r4,a
   000D FD                  128 	 mov r5,a
   000E FE                  129 	 mov r6,a
   000F FF                  130 	 mov r7,a
                            131 	
                            132  ; optimization loop in lp0 until the first bit is shifted into rest
                            133 	
   0010                     134 	lp0:
   0010 E5 82               135 	mov a,dpl ; x <<= 1
   0012 25 82               136 	 add a,dpl
   0014 F5 82               137 	 mov dpl,a
   0016 E5 83               138 	 mov a,dph
   0018 33                  139 	 rlc a
   0019 F5 83               140 	 mov dph,a
   001B E5 F0               141 	 mov a,b
   001D 33                  142 	 rlc a
   001E F5 F0               143 	 mov b,a
   0020 EB                  144 	 mov a,r3
   0021 33                  145 	 rlc a
   0022 FB                  146 	 mov r3,a
                            147 	
   0023 40 17               148 	 jc in_lp
   0025 DA E9               149 	 djnz r2,lp0
                            150 	
   0027 80 42               151 	 sjmp exit
                            152 	
   0029                     153 	loop:
   0029 E5 82               154 	mov a,dpl ; x <<= 1
   002B 25 82               155 	 add a,dpl
   002D F5 82               156 	 mov dpl,a
   002F E5 83               157 	 mov a,dph
   0031 33                  158 	 rlc a
   0032 F5 83               159 	 mov dph,a
   0034 E5 F0               160 	 mov a,b
   0036 33                  161 	 rlc a
   0037 F5 F0               162 	 mov b,a
   0039 EB                  163 	 mov a,r3
   003A 33                  164 	 rlc a
   003B FB                  165 	 mov r3,a
                            166 	
   003C                     167 	in_lp:
   003C EC                  168 	mov a,r4 ; reste <<= 1
   003D 33                  169 	 rlc a ; feed in carry
   003E FC                  170 	 mov r4,a
   003F ED                  171 	 mov a,r5
   0040 33                  172 	 rlc a
   0041 FD                  173 	 mov r5,a
   0042 EE                  174 	 mov a,r6
   0043 33                  175 	 rlc a
   0044 FE                  176 	 mov r6,a
   0045 EF                  177 	 mov a,r7
   0046 33                  178 	 rlc a
   0047 FF                  179 	 mov r7,a
                            180 	
   0048 EC                  181 	 mov a,r4 ; reste - y
   0049 99                  182 	 subb a,r1 ; carry is always clear here, because
                            183     ; reste <<= 1 never overflows
   004A ED                  184 	 mov a,r5
   004B 96                  185 	 subb a,@r0 ; y1
   004C EE                  186 	 mov a,r6
   004D 08                  187 	 inc r0
   004E 96                  188 	 subb a,@r0 ; y2
   004F EF                  189 	 mov a,r7
   0050 08                  190 	 inc r0
   0051 96                  191 	 subb a,@r0 ; y3
   0052 18                  192 	 dec r0
   0053 18                  193 	 dec r0
                            194 	
   0054 40 13               195 	 jc minus ; reste >= y?
                            196 	
                            197     ; -> yes; reste -= y;
   0056 EC                  198 	 mov a,r4
   0057 99                  199 	 subb a,r1 ; carry is always clear here (jc)
   0058 FC                  200 	 mov r4,a
   0059 ED                  201 	 mov a,r5
   005A 96                  202 	 subb a,@r0 ; y1
   005B FD                  203 	 mov r5,a
   005C EE                  204 	 mov a,r6
   005D 08                  205 	 inc r0
   005E 96                  206 	 subb a,@r0 ; y2
   005F FE                  207 	 mov r6,a
   0060 EF                  208 	 mov a,r7
   0061 08                  209 	 inc r0
   0062 96                  210 	 subb a,@r0 ; y3
   0063 FF                  211 	 mov r7,a
   0064 18                  212 	 dec r0
   0065 18                  213 	 dec r0
                            214 	
   0066 43 82 01            215 	 orl dpl,#1
                            216 	
   0069                     217 	minus:
   0069 DA BE               218 	djnz r2,loop ; -> no
                            219 	
   006B                     220 	exit:
   006B EB                  221 	mov a,r3 ; prepare the return value
   006C 22                  222 	 ret
                            223 	
                            224 	 
                            225 ;	naked function: no epilogue.
                            226 	.area CSEG    (CODE)
                            227 	.area CONST   (CODE)
                            228 	.area XINIT   (CODE)
                            229 	.area CABS    (ABS,CODE)
