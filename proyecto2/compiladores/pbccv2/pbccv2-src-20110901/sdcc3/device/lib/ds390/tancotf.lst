                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:16 2015
                              5 ;--------------------------------------------------------
                              6 	.module tancotf
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _tancotf
                             31 	.globl _tancotf_PARM_2
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 ;--------------------------------------------------------
                             44 ; internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area DSEG    (DATA)
                             47 ;--------------------------------------------------------
                             48 ; overlayable items in internal ram 
                             49 ;--------------------------------------------------------
                             50 	.area OSEG    (OVR,DATA)
                             51 ;--------------------------------------------------------
                             52 ; indirectly addressable internal ram data
                             53 ;--------------------------------------------------------
                             54 	.area ISEG    (DATA)
                             55 ;--------------------------------------------------------
                             56 ; absolute internal ram data
                             57 ;--------------------------------------------------------
                             58 	.area IABS    (ABS,DATA)
                             59 	.area IABS    (ABS,DATA)
                             60 ;--------------------------------------------------------
                             61 ; bit data
                             62 ;--------------------------------------------------------
                             63 	.area BSEG    (BIT)
   0000                      64 _tancotf_PARM_2:
   0000                      65 	.ds 1
                             66 ;--------------------------------------------------------
                             67 ; paged external ram data
                             68 ;--------------------------------------------------------
                             69 	.area PSEG    (PAG,XDATA)
                             70 ;--------------------------------------------------------
                             71 ; external ram data
                             72 ;--------------------------------------------------------
                             73 	.area XSEG    (XDATA)
   0000                      74 _tancotf_f_1_1:
   0000                      75 	.ds 4
   0004                      76 _tancotf_g_1_1:
   0004                      77 	.ds 4
   0008                      78 _tancotf_xn_1_1:
   0008                      79 	.ds 4
   000C                      80 _tancotf_xden_1_1:
   000C                      81 	.ds 4
   0010                      82 _tancotf_n_1_1:
   0010                      83 	.ds 2
   0012                      84 _tancotf_sloc0_1_0:
   0012                      85 	.ds 4
                             86 ;--------------------------------------------------------
                             87 ; absolute external ram data
                             88 ;--------------------------------------------------------
                             89 	.area XABS    (ABS,XDATA)
                             90 ;--------------------------------------------------------
                             91 ; external initialized ram data
                             92 ;--------------------------------------------------------
                             93 	.area XISEG   (XDATA)
                             94 ;--------------------------------------------------------
                             95 ; global & static initialisations
                             96 ;--------------------------------------------------------
                             97 	.area HOME    (CODE)
                             98 	.area GSINIT  (CODE)
                             99 	.area GSFINAL (CODE)
                            100 	.area GSINIT  (CODE)
                            101 ;--------------------------------------------------------
                            102 ; Home
                            103 ;--------------------------------------------------------
                            104 	.area HOME    (CODE)
                            105 	.area HOME    (CODE)
                            106 ;--------------------------------------------------------
                            107 ; code
                            108 ;--------------------------------------------------------
                            109 	.area CSEG    (CODE)
                            110 ;------------------------------------------------------------
                            111 ;Allocation info for local variables in function 'tancotf'
                            112 ;------------------------------------------------------------
                            113 ;x                         Allocated to registers r2 r3 r4 r5 
                            114 ;f                         Allocated with name '_tancotf_f_1_1'
                            115 ;g                         Allocated with name '_tancotf_g_1_1'
                            116 ;xn                        Allocated with name '_tancotf_xn_1_1'
                            117 ;xnum                      Allocated to registers r6 r7 r0 r1 
                            118 ;xden                      Allocated with name '_tancotf_xden_1_1'
                            119 ;n                         Allocated with name '_tancotf_n_1_1'
                            120 ;sloc0                     Allocated with name '_tancotf_sloc0_1_0'
                            121 ;------------------------------------------------------------
                            122 ;	tancotf.c:53: float tancotf(const float x, const BOOL iscotan)
                            123 ;	-----------------------------------------
                            124 ;	 function tancotf
                            125 ;	-----------------------------------------
   0000                     126 _tancotf:
                    0002    127 	ar2 = 0x02
                    0003    128 	ar3 = 0x03
                    0004    129 	ar4 = 0x04
                    0005    130 	ar5 = 0x05
                    0006    131 	ar6 = 0x06
                    0007    132 	ar7 = 0x07
                    0000    133 	ar0 = 0x00
                    0001    134 	ar1 = 0x01
   0000 AA 82               135 	mov	r2,dpl
   0002 AB 83               136 	mov	r3,dph
   0004 AC 93               137 	mov	r4,dpx
   0006 AD F0               138 	mov	r5,b
                            139 ;	tancotf.c:58: if (fabsf(x) > YMAX)
   0008 C0 02               140 	push	ar2
   000A C0 03               141 	push	ar3
   000C C0 04               142 	push	ar4
   000E C0 05               143 	push	ar5
   0010 8A 82               144 	mov	dpl,r2
   0012 8B 83               145 	mov	dph,r3
   0014 8C 93               146 	mov	dpx,r4
   0016 8D F0               147 	mov	b,r5
   0018 12s00r00r00         148 	lcall	_fabsf
   001C AE 82               149 	mov	r6,dpl
   001E AF 83               150 	mov	r7,dph
   0020 A8 93               151 	mov	r0,dpx
   0022 A9 F0               152 	mov	r1,b
   0024 D0 05               153 	pop	ar5
   0026 D0 04               154 	pop	ar4
   0028 D0 03               155 	pop	ar3
   002A D0 02               156 	pop	ar2
                            157 ;	genAssign: resultIsFar = TRUE
   002C 90s00r00r00         158 	mov	dptr,#___fsgt_PARM_2
   0030 E4                  159 	clr  a
   0031 F0                  160 	movx	@dptr,a
   0032 A3                  161 	inc	dptr
   0033 74 08               162 	mov	a,#0x08
   0035 F0                  163 	movx	@dptr,a
   0036 A3                  164 	inc	dptr
   0037 74 C9               165 	mov	a,#0xC9
   0039 F0                  166 	movx	@dptr,a
   003A A3                  167 	inc	dptr
   003B 74 45               168 	mov	a,#0x45
   003D F0                  169 	movx	@dptr,a
   003E C0 02               170 	push	ar2
   0040 C0 03               171 	push	ar3
   0042 C0 04               172 	push	ar4
   0044 C0 05               173 	push	ar5
   0046 8E 82               174 	mov	dpl,r6
   0048 8F 83               175 	mov	dph,r7
   004A 88 93               176 	mov	dpx,r0
   004C 89 F0               177 	mov	b,r1
   004E 12s00r00r00         178 	lcall	___fsgt
   0052 D0 05               179 	pop	ar5
   0054 D0 04               180 	pop	ar4
   0056 D0 03               181 	pop	ar3
   0058 D0 02               182 	pop	ar2
   005A E5 82               183 	mov	a,dpl
   005C 60 15               184 	jz  00102$
   005E                     185 00125$:
                            186 ;	tancotf.c:60: errno = ERANGE;
                            187 ;	genAssign: resultIsFar = TRUE
   005E 90s00r00r00         188 	mov	dptr,#_errno
   0062 74 22               189 	mov	a,#0x22
   0064 F0                  190 	movx	@dptr,a
   0065 E4                  191 	clr	a
   0066 A3                  192 	inc	dptr
   0067 F0                  193 	movx	@dptr,a
                            194 ;	tancotf.c:61: return 0.0;
   0068 90 00 00 00         195 	mov  dptr,#0x0000
   006C 75 F0 00            196 	mov	b,#0x00
   006F 02s00r06r20         197 	ljmp	00115$
   0073                     198 00102$:
                            199 ;	tancotf.c:65: n=(x*TWO_O_PI+(x>0.0?0.5:-0.5)); /*works for +-x*/
                            200 ;	genAssign: resultIsFar = TRUE
   0073 90s00r00r00         201 	mov	dptr,#___fsmul_PARM_2
   0077 EA                  202 	mov	a,r2
   0078 F0                  203 	movx	@dptr,a
   0079 A3                  204 	inc	dptr
   007A EB                  205 	mov	a,r3
   007B F0                  206 	movx	@dptr,a
   007C A3                  207 	inc	dptr
   007D EC                  208 	mov	a,r4
   007E F0                  209 	movx	@dptr,a
   007F A3                  210 	inc	dptr
   0080 ED                  211 	mov	a,r5
   0081 F0                  212 	movx	@dptr,a
   0082 C0 02               213 	push	ar2
   0084 C0 03               214 	push	ar3
   0086 C0 04               215 	push	ar4
   0088 C0 05               216 	push	ar5
   008A 90 22 F9 83         217 	mov	dptr,#0x22F983
   008E 75 F0 3F            218 	mov	b,#0x3F
   0091 12s00r00r00         219 	lcall	___fsmul
   0095 AE 82               220 	mov	r6,dpl
   0097 AF 83               221 	mov	r7,dph
   0099 A8 93               222 	mov	r0,dpx
   009B A9 F0               223 	mov	r1,b
   009D D0 05               224 	pop	ar5
   009F D0 04               225 	pop	ar4
   00A1 D0 03               226 	pop	ar3
   00A3 D0 02               227 	pop	ar2
                            228 ;	genAssign: resultIsFar = TRUE
   00A5 90s00r00r00         229 	mov	dptr,#___fsgt_PARM_2
   00A9 E4                  230 	clr	a
   00AA F0                  231 	movx	@dptr,a
   00AB A3                  232 	inc	dptr
   00AC F0                  233 	movx	@dptr,a
   00AD A3                  234 	inc	dptr
   00AE F0                  235 	movx	@dptr,a
   00AF A3                  236 	inc	dptr
   00B0 F0                  237 	movx	@dptr,a
   00B1 C0 02               238 	push	ar2
   00B3 C0 03               239 	push	ar3
   00B5 C0 04               240 	push	ar4
   00B7 C0 05               241 	push	ar5
   00B9 C0 06               242 	push	ar6
   00BB C0 07               243 	push	ar7
   00BD C0 00               244 	push	ar0
   00BF C0 01               245 	push	ar1
   00C1 8A 82               246 	mov	dpl,r2
   00C3 8B 83               247 	mov	dph,r3
   00C5 8C 93               248 	mov	dpx,r4
   00C7 8D F0               249 	mov	b,r5
   00C9 12s00r00r00         250 	lcall	___fsgt
   00CD D0 01               251 	pop	ar1
   00CF D0 00               252 	pop	ar0
   00D1 D0 07               253 	pop	ar7
   00D3 D0 06               254 	pop	ar6
   00D5 D0 05               255 	pop	ar5
   00D7 D0 04               256 	pop	ar4
   00D9 D0 03               257 	pop	ar3
   00DB D0 02               258 	pop	ar2
   00DD E5 82               259 	mov	a,dpl
   00DF 60 11               260 	jz  00117$
   00E1                     261 00126$:
                            262 ;	genAssign: resultIsFar = TRUE
   00E1 90s00r00r12         263 	mov	dptr,#_tancotf_sloc0_1_0
   00E5 E4                  264 	clr  a
   00E6 F0                  265 	movx @dptr,a
   00E7 A3                  266 	inc  dptr
   00E8 F0                  267 	movx @dptr,a
   00E9 A3                  268 	inc	dptr
   00EA E4                  269 	clr  a
   00EB F0                  270 	movx	@dptr,a
   00EC A3                  271 	inc	dptr
   00ED 74 3F               272 	mov	a,#0x3F
   00EF F0                  273 	movx	@dptr,a
   00F0 80 0F               274 	sjmp 00118$
   00F2                     275 00117$:
                            276 ;	genAssign: resultIsFar = TRUE
   00F2 90s00r00r12         277 	mov	dptr,#_tancotf_sloc0_1_0
   00F6 E4                  278 	clr  a
   00F7 F0                  279 	movx @dptr,a
   00F8 A3                  280 	inc  dptr
   00F9 F0                  281 	movx @dptr,a
   00FA A3                  282 	inc	dptr
   00FB E4                  283 	clr  a
   00FC F0                  284 	movx	@dptr,a
   00FD A3                  285 	inc	dptr
   00FE 74 BF               286 	mov	a,#0xBF
   0100 F0                  287 	movx	@dptr,a
   0101                     288 00118$:
   0101 90s00r00r12         289 	mov	dptr,#_tancotf_sloc0_1_0
                            290 ;	genAssign: resultIsFar = TRUE
   0105 75 86 21            291 	mov	dps,#0x21
   0108 90s00r00r00         292 	mov	dptr,#___fsadd_PARM_2
   010C E0                  293 	movx	a,@dptr
   010D F0                  294 	movx	@dptr,a
   010E A3                  295 	inc	dptr
   010F A3                  296 	inc	dptr
   0110 E0                  297 	movx	a,@dptr
   0111 F0                  298 	movx	@dptr,a
   0112 A3                  299 	inc	dptr
   0113 A3                  300 	inc	dptr
   0114 E0                  301 	movx	a,@dptr
   0115 F0                  302 	movx	@dptr,a
   0116 A3                  303 	inc	dptr
   0117 A3                  304 	inc	dptr
   0118 E0                  305 	movx	a,@dptr
   0119 F0                  306 	movx	@dptr,a
   011A 75 86 00            307 	mov	dps,#0
   011D C0 02               308 	push	ar2
   011F C0 03               309 	push	ar3
   0121 C0 04               310 	push	ar4
   0123 C0 05               311 	push	ar5
   0125 8E 82               312 	mov	dpl,r6
   0127 8F 83               313 	mov	dph,r7
   0129 88 93               314 	mov	dpx,r0
   012B 89 F0               315 	mov	b,r1
   012D 12s00r00r00         316 	lcall	___fsadd
   0131 D0 05               317 	pop	ar5
   0133 D0 04               318 	pop	ar4
   0135 D0 03               319 	pop	ar3
   0137 D0 02               320 	pop	ar2
   0139 C0 02               321 	push	ar2
   013B C0 03               322 	push	ar3
   013D C0 04               323 	push	ar4
   013F C0 05               324 	push	ar5
   0141 12s00r00r00         325 	lcall	___fs2sint
   0145 AE 82               326 	mov	r6,dpl
   0147 AF 83               327 	mov	r7,dph
   0149 D0 05               328 	pop	ar5
   014B D0 04               329 	pop	ar4
   014D D0 03               330 	pop	ar3
   014F D0 02               331 	pop	ar2
                            332 ;	genAssign: resultIsFar = TRUE
   0151 90s00r00r10         333 	mov	dptr,#_tancotf_n_1_1
   0155 EE                  334 	mov	a,r6
   0156 F0                  335 	movx	@dptr,a
   0157 A3                  336 	inc	dptr
   0158 EF                  337 	mov	a,r7
   0159 F0                  338 	movx	@dptr,a
                            339 ;	tancotf.c:66: xn=n;
   015A C0 02               340 	push	ar2
   015C C0 03               341 	push	ar3
   015E C0 04               342 	push	ar4
   0160 C0 05               343 	push	ar5
   0162 05 86               344 	inc	dps
   0164 90s00r00r10         345 	mov	dptr,#_tancotf_n_1_1
   0168 E0                  346 	movx	a,@dptr
   0169 F5 82               347 	mov	dpl,a
   016B A3                  348 	inc	dptr
   016C E0                  349 	movx	a,@dptr
   016D F5 83               350 	mov	dph,a
   016F 75 86 00            351 	mov	dps,#0
   0172 12s00r00r00         352 	lcall	___sint2fs
   0176 A8 82               353 	mov	r0,dpl
   0178 A9 83               354 	mov	r1,dph
   017A AE 93               355 	mov	r6,dpx
   017C AF F0               356 	mov	r7,b
   017E D0 05               357 	pop	ar5
   0180 D0 04               358 	pop	ar4
   0182 D0 03               359 	pop	ar3
   0184 D0 02               360 	pop	ar2
                            361 ;	genAssign: resultIsFar = TRUE
   0186 90s00r00r08         362 	mov	dptr,#_tancotf_xn_1_1
   018A E8                  363 	mov	a,r0
   018B F0                  364 	movx	@dptr,a
   018C A3                  365 	inc	dptr
   018D E9                  366 	mov	a,r1
   018E F0                  367 	movx	@dptr,a
   018F A3                  368 	inc	dptr
   0190 EE                  369 	mov	a,r6
   0191 F0                  370 	movx	@dptr,a
   0192 A3                  371 	inc	dptr
   0193 EF                  372 	mov	a,r7
   0194 F0                  373 	movx	@dptr,a
                            374 ;	tancotf.c:68: xnum=(int)x;
   0195 C0 02               375 	push	ar2
   0197 C0 03               376 	push	ar3
   0199 C0 04               377 	push	ar4
   019B C0 05               378 	push	ar5
   019D 8A 82               379 	mov	dpl,r2
   019F 8B 83               380 	mov	dph,r3
   01A1 8C 93               381 	mov	dpx,r4
   01A3 8D F0               382 	mov	b,r5
   01A5 12s00r00r00         383 	lcall	___fs2sint
   01A9 D0 05               384 	pop	ar5
   01AB D0 04               385 	pop	ar4
   01AD D0 03               386 	pop	ar3
   01AF D0 02               387 	pop	ar2
   01B1 C0 02               388 	push	ar2
   01B3 C0 03               389 	push	ar3
   01B5 C0 04               390 	push	ar4
   01B7 C0 05               391 	push	ar5
   01B9 12s00r00r00         392 	lcall	___sint2fs
   01BD AE 82               393 	mov	r6,dpl
   01BF AF 83               394 	mov	r7,dph
   01C1 A8 93               395 	mov	r0,dpx
   01C3 A9 F0               396 	mov	r1,b
   01C5 D0 05               397 	pop	ar5
   01C7 D0 04               398 	pop	ar4
   01C9 D0 03               399 	pop	ar3
   01CB D0 02               400 	pop	ar2
                            401 ;	genAssign: resultIsFar = TRUE
                            402 ;	tancotf.c:69: xden=x-xnum;
                            403 ;	genAssign: resultIsFar = TRUE
   01CD 90s00r00r00         404 	mov	dptr,#___fssub_PARM_2
   01D1 EE                  405 	mov	a,r6
   01D2 F0                  406 	movx	@dptr,a
   01D3 A3                  407 	inc	dptr
   01D4 EF                  408 	mov	a,r7
   01D5 F0                  409 	movx	@dptr,a
   01D6 A3                  410 	inc	dptr
   01D7 E8                  411 	mov	a,r0
   01D8 F0                  412 	movx	@dptr,a
   01D9 A3                  413 	inc	dptr
   01DA E9                  414 	mov	a,r1
   01DB F0                  415 	movx	@dptr,a
   01DC C0 06               416 	push	ar6
   01DE C0 07               417 	push	ar7
   01E0 C0 00               418 	push	ar0
   01E2 C0 01               419 	push	ar1
   01E4 8A 82               420 	mov	dpl,r2
   01E6 8B 83               421 	mov	dph,r3
   01E8 8C 93               422 	mov	dpx,r4
   01EA 8D F0               423 	mov	b,r5
   01EC 12s00r00r00         424 	lcall	___fssub
   01F0 AA 82               425 	mov	r2,dpl
   01F2 AB 83               426 	mov	r3,dph
   01F4 AC 93               427 	mov	r4,dpx
   01F6 AD F0               428 	mov	r5,b
   01F8 D0 01               429 	pop	ar1
   01FA D0 00               430 	pop	ar0
   01FC D0 07               431 	pop	ar7
   01FE D0 06               432 	pop	ar6
                            433 ;	genAssign: resultIsFar = TRUE
   0200 90s00r00r0C         434 	mov	dptr,#_tancotf_xden_1_1
   0204 EA                  435 	mov	a,r2
   0205 F0                  436 	movx	@dptr,a
   0206 A3                  437 	inc	dptr
   0207 EB                  438 	mov	a,r3
   0208 F0                  439 	movx	@dptr,a
   0209 A3                  440 	inc	dptr
   020A EC                  441 	mov	a,r4
   020B F0                  442 	movx	@dptr,a
   020C A3                  443 	inc	dptr
   020D ED                  444 	mov	a,r5
   020E F0                  445 	movx	@dptr,a
                            446 ;	tancotf.c:70: f=((xnum-xn*C1)+xden)-xn*C2;
   020F 90s00r00r08         447 	mov	dptr,#_tancotf_xn_1_1
                            448 ;	genAssign: resultIsFar = TRUE
   0213 75 86 21            449 	mov	dps,#0x21
   0216 90s00r00r00         450 	mov	dptr,#___fsmul_PARM_2
   021A E0                  451 	movx	a,@dptr
   021B F0                  452 	movx	@dptr,a
   021C A3                  453 	inc	dptr
   021D A3                  454 	inc	dptr
   021E E0                  455 	movx	a,@dptr
   021F F0                  456 	movx	@dptr,a
   0220 A3                  457 	inc	dptr
   0221 A3                  458 	inc	dptr
   0222 E0                  459 	movx	a,@dptr
   0223 F0                  460 	movx	@dptr,a
   0224 A3                  461 	inc	dptr
   0225 A3                  462 	inc	dptr
   0226 E0                  463 	movx	a,@dptr
   0227 F0                  464 	movx	@dptr,a
   0228 75 86 00            465 	mov	dps,#0
   022B C0 06               466 	push	ar6
   022D C0 07               467 	push	ar7
   022F C0 00               468 	push	ar0
   0231 C0 01               469 	push	ar1
   0233 90 00 00 00         470 	mov  dptr,#0x0000
   0237 75 93 C9            471 	mov	dpx,#0xC9
   023A 75 F0 3F            472 	mov	b,#0x3F
   023D 12s00r00r00         473 	lcall	___fsmul
   0241 AA 82               474 	mov	r2,dpl
   0243 AB 83               475 	mov	r3,dph
   0245 AC 93               476 	mov	r4,dpx
   0247 AD F0               477 	mov	r5,b
   0249 D0 01               478 	pop	ar1
   024B D0 00               479 	pop	ar0
   024D D0 07               480 	pop	ar7
   024F D0 06               481 	pop	ar6
                            482 ;	genAssign: resultIsFar = TRUE
   0251 90s00r00r00         483 	mov	dptr,#___fssub_PARM_2
   0255 EA                  484 	mov	a,r2
   0256 F0                  485 	movx	@dptr,a
   0257 A3                  486 	inc	dptr
   0258 EB                  487 	mov	a,r3
   0259 F0                  488 	movx	@dptr,a
   025A A3                  489 	inc	dptr
   025B EC                  490 	mov	a,r4
   025C F0                  491 	movx	@dptr,a
   025D A3                  492 	inc	dptr
   025E ED                  493 	mov	a,r5
   025F F0                  494 	movx	@dptr,a
   0260 8E 82               495 	mov	dpl,r6
   0262 8F 83               496 	mov	dph,r7
   0264 88 93               497 	mov	dpx,r0
   0266 89 F0               498 	mov	b,r1
   0268 12s00r00r00         499 	lcall	___fssub
   026C AA 82               500 	mov	r2,dpl
   026E AB 83               501 	mov	r3,dph
   0270 AC 93               502 	mov	r4,dpx
   0272 AD F0               503 	mov	r5,b
   0274 90s00r00r0C         504 	mov	dptr,#_tancotf_xden_1_1
                            505 ;	genAssign: resultIsFar = TRUE
   0278 75 86 21            506 	mov	dps,#0x21
   027B 90s00r00r00         507 	mov	dptr,#___fsadd_PARM_2
   027F E0                  508 	movx	a,@dptr
   0280 F0                  509 	movx	@dptr,a
   0281 A3                  510 	inc	dptr
   0282 A3                  511 	inc	dptr
   0283 E0                  512 	movx	a,@dptr
   0284 F0                  513 	movx	@dptr,a
   0285 A3                  514 	inc	dptr
   0286 A3                  515 	inc	dptr
   0287 E0                  516 	movx	a,@dptr
   0288 F0                  517 	movx	@dptr,a
   0289 A3                  518 	inc	dptr
   028A A3                  519 	inc	dptr
   028B E0                  520 	movx	a,@dptr
   028C F0                  521 	movx	@dptr,a
   028D 75 86 00            522 	mov	dps,#0
   0290 8A 82               523 	mov	dpl,r2
   0292 8B 83               524 	mov	dph,r3
   0294 8C 93               525 	mov	dpx,r4
   0296 8D F0               526 	mov	b,r5
   0298 12s00r00r00         527 	lcall	___fsadd
   029C AE 82               528 	mov	r6,dpl
   029E AF 83               529 	mov	r7,dph
   02A0 A8 93               530 	mov	r0,dpx
   02A2 A9 F0               531 	mov	r1,b
   02A4 90s00r00r08         532 	mov	dptr,#_tancotf_xn_1_1
                            533 ;	genAssign: resultIsFar = TRUE
   02A8 75 86 21            534 	mov	dps,#0x21
   02AB 90s00r00r00         535 	mov	dptr,#___fsmul_PARM_2
   02AF E0                  536 	movx	a,@dptr
   02B0 F0                  537 	movx	@dptr,a
   02B1 A3                  538 	inc	dptr
   02B2 A3                  539 	inc	dptr
   02B3 E0                  540 	movx	a,@dptr
   02B4 F0                  541 	movx	@dptr,a
   02B5 A3                  542 	inc	dptr
   02B6 A3                  543 	inc	dptr
   02B7 E0                  544 	movx	a,@dptr
   02B8 F0                  545 	movx	@dptr,a
   02B9 A3                  546 	inc	dptr
   02BA A3                  547 	inc	dptr
   02BB E0                  548 	movx	a,@dptr
   02BC F0                  549 	movx	@dptr,a
   02BD 75 86 00            550 	mov	dps,#0
   02C0 C0 06               551 	push	ar6
   02C2 C0 07               552 	push	ar7
   02C4 C0 00               553 	push	ar0
   02C6 C0 01               554 	push	ar1
   02C8 90 FD AA 22         555 	mov	dptr,#0xFDAA22
   02CC 75 F0 39            556 	mov	b,#0x39
   02CF 12s00r00r00         557 	lcall	___fsmul
   02D3 AA 82               558 	mov	r2,dpl
   02D5 AB 83               559 	mov	r3,dph
   02D7 AC 93               560 	mov	r4,dpx
   02D9 AD F0               561 	mov	r5,b
   02DB D0 01               562 	pop	ar1
   02DD D0 00               563 	pop	ar0
   02DF D0 07               564 	pop	ar7
   02E1 D0 06               565 	pop	ar6
                            566 ;	genAssign: resultIsFar = TRUE
   02E3 90s00r00r00         567 	mov	dptr,#___fssub_PARM_2
   02E7 EA                  568 	mov	a,r2
   02E8 F0                  569 	movx	@dptr,a
   02E9 A3                  570 	inc	dptr
   02EA EB                  571 	mov	a,r3
   02EB F0                  572 	movx	@dptr,a
   02EC A3                  573 	inc	dptr
   02ED EC                  574 	mov	a,r4
   02EE F0                  575 	movx	@dptr,a
   02EF A3                  576 	inc	dptr
   02F0 ED                  577 	mov	a,r5
   02F1 F0                  578 	movx	@dptr,a
   02F2 8E 82               579 	mov	dpl,r6
   02F4 8F 83               580 	mov	dph,r7
   02F6 88 93               581 	mov	dpx,r0
   02F8 89 F0               582 	mov	b,r1
   02FA 12s00r00r00         583 	lcall	___fssub
   02FE AA 82               584 	mov	r2,dpl
   0300 AB 83               585 	mov	r3,dph
   0302 AC 93               586 	mov	r4,dpx
   0304 AD F0               587 	mov	r5,b
                            588 ;	genAssign: resultIsFar = TRUE
   0306 90s00r00r00         589 	mov	dptr,#_tancotf_f_1_1
   030A EA                  590 	mov	a,r2
   030B F0                  591 	movx	@dptr,a
   030C A3                  592 	inc	dptr
   030D EB                  593 	mov	a,r3
   030E F0                  594 	movx	@dptr,a
   030F A3                  595 	inc	dptr
   0310 EC                  596 	mov	a,r4
   0311 F0                  597 	movx	@dptr,a
   0312 A3                  598 	inc	dptr
   0313 ED                  599 	mov	a,r5
   0314 F0                  600 	movx	@dptr,a
                            601 ;	tancotf.c:72: if (fabsf(f) < EPS)
   0315 05 86               602 	inc	dps
   0317 90s00r00r00         603 	mov	dptr,#_tancotf_f_1_1
   031B E0                  604 	movx	a,@dptr
   031C F5 82               605 	mov	dpl,a
   031E A3                  606 	inc	dptr
   031F E0                  607 	movx	a,@dptr
   0320 F5 83               608 	mov	dph,a
   0322 A3                  609 	inc	dptr
   0323 E0                  610 	movx	a,@dptr
   0324 F5 93               611 	mov	dpx,a
   0326 A3                  612 	inc	dptr
   0327 E0                  613 	movx	a,@dptr
   0328 F5 F0               614 	mov	b,a
   032A 75 86 00            615 	mov	dps,#0
   032D 12s00r00r00         616 	lcall	_fabsf
   0331 AA 82               617 	mov	r2,dpl
   0333 AB 83               618 	mov	r3,dph
   0335 AC 93               619 	mov	r4,dpx
   0337 AD F0               620 	mov	r5,b
                            621 ;	genAssign: resultIsFar = TRUE
   0339 90s00r00r00         622 	mov	dptr,#___fslt_PARM_2
   033D E4                  623 	clr  a
   033E F0                  624 	movx @dptr,a
   033F A3                  625 	inc  dptr
   0340 F0                  626 	movx @dptr,a
   0341 A3                  627 	inc	dptr
   0342 74 80               628 	mov	a,#0x80
   0344 F0                  629 	movx	@dptr,a
   0345 A3                  630 	inc	dptr
   0346 74 39               631 	mov	a,#0x39
   0348 F0                  632 	movx	@dptr,a
   0349 8A 82               633 	mov	dpl,r2
   034B 8B 83               634 	mov	dph,r3
   034D 8C 93               635 	mov	dpx,r4
   034F 8D F0               636 	mov	b,r5
   0351 12s00r00r00         637 	lcall	___fslt
   0355 E5 82               638 	mov	a,dpl
   0357 60 23               639 	jz  00104$
   0359                     640 00127$:
                            641 ;	tancotf.c:74: xnum = f;
   0359 90s00r00r00         642 	mov	dptr,#_tancotf_f_1_1
                            643 ;	genAssign: resultIsFar = TRUE
   035D E0                  644 	movx	a,@dptr
   035E FE                  645 	mov	r6,a
   035F A3                  646 	inc	dptr
   0360 E0                  647 	movx	a,@dptr
   0361 FF                  648 	mov	r7,a
   0362 A3                  649 	inc	dptr
   0363 E0                  650 	movx	a,@dptr
   0364 F8                  651 	mov	r0,a
   0365 A3                  652 	inc	dptr
   0366 E0                  653 	movx	a,@dptr
   0367 F9                  654 	mov	r1,a
                            655 ;	tancotf.c:75: xden = 1.0;
                            656 ;	genAssign: resultIsFar = TRUE
   0368 90s00r00r0C         657 	mov	dptr,#_tancotf_xden_1_1
   036C E4                  658 	clr  a
   036D F0                  659 	movx @dptr,a
   036E A3                  660 	inc  dptr
   036F F0                  661 	movx @dptr,a
   0370 A3                  662 	inc	dptr
   0371 74 80               663 	mov	a,#0x80
   0373 F0                  664 	movx	@dptr,a
   0374 A3                  665 	inc	dptr
   0375 74 3F               666 	mov	a,#0x3F
   0377 F0                  667 	movx	@dptr,a
   0378 02s00r05r59         668 	ljmp	00105$
   037C                     669 00104$:
                            670 ;	tancotf.c:79: g = f*f;
   037C 90s00r00r00         671 	mov	dptr,#_tancotf_f_1_1
                            672 ;	genAssign: resultIsFar = TRUE
   0380 75 86 21            673 	mov	dps,#0x21
   0383 90s00r00r00         674 	mov	dptr,#___fsmul_PARM_2
   0387 E0                  675 	movx	a,@dptr
   0388 F0                  676 	movx	@dptr,a
   0389 A3                  677 	inc	dptr
   038A A3                  678 	inc	dptr
   038B E0                  679 	movx	a,@dptr
   038C F0                  680 	movx	@dptr,a
   038D A3                  681 	inc	dptr
   038E A3                  682 	inc	dptr
   038F E0                  683 	movx	a,@dptr
   0390 F0                  684 	movx	@dptr,a
   0391 A3                  685 	inc	dptr
   0392 A3                  686 	inc	dptr
   0393 E0                  687 	movx	a,@dptr
   0394 F0                  688 	movx	@dptr,a
   0395 75 86 01            689 	mov	dps, #1
   0398 90s00r00r00         690 	mov	dptr,#_tancotf_f_1_1
   039C E0                  691 	movx	a,@dptr
   039D F5 82               692 	mov	dpl,a
   039F A3                  693 	inc	dptr
   03A0 E0                  694 	movx	a,@dptr
   03A1 F5 83               695 	mov	dph,a
   03A3 A3                  696 	inc	dptr
   03A4 E0                  697 	movx	a,@dptr
   03A5 F5 93               698 	mov	dpx,a
   03A7 A3                  699 	inc	dptr
   03A8 E0                  700 	movx	a,@dptr
   03A9 F5 F0               701 	mov	b,a
   03AB 75 86 00            702 	mov	dps,#0
   03AE 12s00r00r00         703 	lcall	___fsmul
   03B2 AA 82               704 	mov	r2,dpl
   03B4 AB 83               705 	mov	r3,dph
   03B6 AC 93               706 	mov	r4,dpx
   03B8 AD F0               707 	mov	r5,b
                            708 ;	genAssign: resultIsFar = TRUE
   03BA 90s00r00r04         709 	mov	dptr,#_tancotf_g_1_1
   03BE EA                  710 	mov	a,r2
   03BF F0                  711 	movx	@dptr,a
   03C0 A3                  712 	inc	dptr
   03C1 EB                  713 	mov	a,r3
   03C2 F0                  714 	movx	@dptr,a
   03C3 A3                  715 	inc	dptr
   03C4 EC                  716 	mov	a,r4
   03C5 F0                  717 	movx	@dptr,a
   03C6 A3                  718 	inc	dptr
   03C7 ED                  719 	mov	a,r5
   03C8 F0                  720 	movx	@dptr,a
                            721 ;	tancotf.c:80: xnum = P(f,g);
   03C9 90s00r00r04         722 	mov	dptr,#_tancotf_g_1_1
                            723 ;	genAssign: resultIsFar = TRUE
   03CD 75 86 21            724 	mov	dps,#0x21
   03D0 90s00r00r00         725 	mov	dptr,#___fsmul_PARM_2
   03D4 E0                  726 	movx	a,@dptr
   03D5 F0                  727 	movx	@dptr,a
   03D6 A3                  728 	inc	dptr
   03D7 A3                  729 	inc	dptr
   03D8 E0                  730 	movx	a,@dptr
   03D9 F0                  731 	movx	@dptr,a
   03DA A3                  732 	inc	dptr
   03DB A3                  733 	inc	dptr
   03DC E0                  734 	movx	a,@dptr
   03DD F0                  735 	movx	@dptr,a
   03DE A3                  736 	inc	dptr
   03DF A3                  737 	inc	dptr
   03E0 E0                  738 	movx	a,@dptr
   03E1 F0                  739 	movx	@dptr,a
   03E2 75 86 00            740 	mov	dps,#0
   03E5 90 C4 33 B8         741 	mov	dptr,#0xC433B8
   03E9 75 F0 BD            742 	mov	b,#0xBD
   03EC 12s00r00r00         743 	lcall	___fsmul
   03F0 AA 82               744 	mov	r2,dpl
   03F2 AB 83               745 	mov	r3,dph
   03F4 AC 93               746 	mov	r4,dpx
   03F6 AD F0               747 	mov	r5,b
   03F8 90s00r00r00         748 	mov	dptr,#_tancotf_f_1_1
                            749 ;	genAssign: resultIsFar = TRUE
   03FC 75 86 21            750 	mov	dps,#0x21
   03FF 90s00r00r00         751 	mov	dptr,#___fsmul_PARM_2
   0403 E0                  752 	movx	a,@dptr
   0404 F0                  753 	movx	@dptr,a
   0405 A3                  754 	inc	dptr
   0406 A3                  755 	inc	dptr
   0407 E0                  756 	movx	a,@dptr
   0408 F0                  757 	movx	@dptr,a
   0409 A3                  758 	inc	dptr
   040A A3                  759 	inc	dptr
   040B E0                  760 	movx	a,@dptr
   040C F0                  761 	movx	@dptr,a
   040D A3                  762 	inc	dptr
   040E A3                  763 	inc	dptr
   040F E0                  764 	movx	a,@dptr
   0410 F0                  765 	movx	@dptr,a
   0411 75 86 00            766 	mov	dps,#0
   0414 8A 82               767 	mov	dpl,r2
   0416 8B 83               768 	mov	dph,r3
   0418 8C 93               769 	mov	dpx,r4
   041A 8D F0               770 	mov	b,r5
   041C 12s00r00r00         771 	lcall	___fsmul
   0420 AA 82               772 	mov	r2,dpl
   0422 AB 83               773 	mov	r3,dph
   0424 AC 93               774 	mov	r4,dpx
   0426 AD F0               775 	mov	r5,b
   0428 90s00r00r00         776 	mov	dptr,#_tancotf_f_1_1
                            777 ;	genAssign: resultIsFar = TRUE
   042C 75 86 21            778 	mov	dps,#0x21
   042F 90s00r00r00         779 	mov	dptr,#___fsadd_PARM_2
   0433 E0                  780 	movx	a,@dptr
   0434 F0                  781 	movx	@dptr,a
   0435 A3                  782 	inc	dptr
   0436 A3                  783 	inc	dptr
   0437 E0                  784 	movx	a,@dptr
   0438 F0                  785 	movx	@dptr,a
   0439 A3                  786 	inc	dptr
   043A A3                  787 	inc	dptr
   043B E0                  788 	movx	a,@dptr
   043C F0                  789 	movx	@dptr,a
   043D A3                  790 	inc	dptr
   043E A3                  791 	inc	dptr
   043F E0                  792 	movx	a,@dptr
   0440 F0                  793 	movx	@dptr,a
   0441 75 86 00            794 	mov	dps,#0
   0444 8A 82               795 	mov	dpl,r2
   0446 8B 83               796 	mov	dph,r3
   0448 8C 93               797 	mov	dpx,r4
   044A 8D F0               798 	mov	b,r5
   044C 12s00r00r00         799 	lcall	___fsadd
   0450 AA 82               800 	mov	r2,dpl
   0452 AB 83               801 	mov	r3,dph
   0454 AC 93               802 	mov	r4,dpx
   0456 AD F0               803 	mov	r5,b
                            804 ;	genAssign: resultIsFar = TRUE
   0458 8A 06               805 	mov	ar6,r2
   045A 8B 07               806 	mov	ar7,r3
   045C 8C 00               807 	mov	ar0,r4
   045E 8D 01               808 	mov	ar1,r5
                            809 ;	tancotf.c:81: xden = Q(g);
   0460 90s00r00r04         810 	mov	dptr,#_tancotf_g_1_1
                            811 ;	genAssign: resultIsFar = TRUE
   0464 75 86 21            812 	mov	dps,#0x21
   0467 90s00r00r00         813 	mov	dptr,#___fsmul_PARM_2
   046B E0                  814 	movx	a,@dptr
   046C F0                  815 	movx	@dptr,a
   046D A3                  816 	inc	dptr
   046E A3                  817 	inc	dptr
   046F E0                  818 	movx	a,@dptr
   0470 F0                  819 	movx	@dptr,a
   0471 A3                  820 	inc	dptr
   0472 A3                  821 	inc	dptr
   0473 E0                  822 	movx	a,@dptr
   0474 F0                  823 	movx	@dptr,a
   0475 A3                  824 	inc	dptr
   0476 A3                  825 	inc	dptr
   0477 E0                  826 	movx	a,@dptr
   0478 F0                  827 	movx	@dptr,a
   0479 75 86 00            828 	mov	dps,#0
   047C C0 06               829 	push	ar6
   047E C0 07               830 	push	ar7
   0480 C0 00               831 	push	ar0
   0482 C0 01               832 	push	ar1
   0484 90 1F 33 75         833 	mov	dptr,#0x1F3375
   0488 75 F0 3C            834 	mov	b,#0x3C
   048B 12s00r00r00         835 	lcall	___fsmul
   048F AA 82               836 	mov	r2,dpl
   0491 AB 83               837 	mov	r3,dph
   0493 AC 93               838 	mov	r4,dpx
   0495 AD F0               839 	mov	r5,b
   0497 D0 01               840 	pop	ar1
   0499 D0 00               841 	pop	ar0
   049B D0 07               842 	pop	ar7
   049D D0 06               843 	pop	ar6
                            844 ;	genAssign: resultIsFar = TRUE
   049F 90s00r00r00         845 	mov	dptr,#___fsadd_PARM_2
   04A3 74 AF               846 	mov	a,#0xAF
   04A5 F0                  847 	movx	@dptr,a
   04A6 A3                  848 	inc	dptr
   04A7 74 B7               849 	mov	a,#0xB7
   04A9 F0                  850 	movx	@dptr,a
   04AA A3                  851 	inc	dptr
   04AB 74 DB               852 	mov	a,#0xDB
   04AD F0                  853 	movx	@dptr,a
   04AE A3                  854 	inc	dptr
   04AF 74 BE               855 	mov	a,#0xBE
   04B1 F0                  856 	movx	@dptr,a
   04B2 C0 06               857 	push	ar6
   04B4 C0 07               858 	push	ar7
   04B6 C0 00               859 	push	ar0
   04B8 C0 01               860 	push	ar1
   04BA 8A 82               861 	mov	dpl,r2
   04BC 8B 83               862 	mov	dph,r3
   04BE 8C 93               863 	mov	dpx,r4
   04C0 8D F0               864 	mov	b,r5
   04C2 12s00r00r00         865 	lcall	___fsadd
   04C6 AA 82               866 	mov	r2,dpl
   04C8 AB 83               867 	mov	r3,dph
   04CA AC 93               868 	mov	r4,dpx
   04CC AD F0               869 	mov	r5,b
   04CE D0 01               870 	pop	ar1
   04D0 D0 00               871 	pop	ar0
   04D2 D0 07               872 	pop	ar7
   04D4 D0 06               873 	pop	ar6
   04D6 90s00r00r04         874 	mov	dptr,#_tancotf_g_1_1
                            875 ;	genAssign: resultIsFar = TRUE
   04DA 75 86 21            876 	mov	dps,#0x21
   04DD 90s00r00r00         877 	mov	dptr,#___fsmul_PARM_2
   04E1 E0                  878 	movx	a,@dptr
   04E2 F0                  879 	movx	@dptr,a
   04E3 A3                  880 	inc	dptr
   04E4 A3                  881 	inc	dptr
   04E5 E0                  882 	movx	a,@dptr
   04E6 F0                  883 	movx	@dptr,a
   04E7 A3                  884 	inc	dptr
   04E8 A3                  885 	inc	dptr
   04E9 E0                  886 	movx	a,@dptr
   04EA F0                  887 	movx	@dptr,a
   04EB A3                  888 	inc	dptr
   04EC A3                  889 	inc	dptr
   04ED E0                  890 	movx	a,@dptr
   04EE F0                  891 	movx	@dptr,a
   04EF 75 86 00            892 	mov	dps,#0
   04F2 C0 06               893 	push	ar6
   04F4 C0 07               894 	push	ar7
   04F6 C0 00               895 	push	ar0
   04F8 C0 01               896 	push	ar1
   04FA 8A 82               897 	mov	dpl,r2
   04FC 8B 83               898 	mov	dph,r3
   04FE 8C 93               899 	mov	dpx,r4
   0500 8D F0               900 	mov	b,r5
   0502 12s00r00r00         901 	lcall	___fsmul
   0506 AA 82               902 	mov	r2,dpl
   0508 AB 83               903 	mov	r3,dph
   050A AC 93               904 	mov	r4,dpx
   050C AD F0               905 	mov	r5,b
   050E D0 01               906 	pop	ar1
   0510 D0 00               907 	pop	ar0
   0512 D0 07               908 	pop	ar7
   0514 D0 06               909 	pop	ar6
                            910 ;	genAssign: resultIsFar = TRUE
   0516 90s00r00r00         911 	mov	dptr,#___fsadd_PARM_2
   051A E4                  912 	clr  a
   051B F0                  913 	movx @dptr,a
   051C A3                  914 	inc  dptr
   051D F0                  915 	movx @dptr,a
   051E A3                  916 	inc	dptr
   051F 74 80               917 	mov	a,#0x80
   0521 F0                  918 	movx	@dptr,a
   0522 A3                  919 	inc	dptr
   0523 74 3F               920 	mov	a,#0x3F
   0525 F0                  921 	movx	@dptr,a
   0526 C0 06               922 	push	ar6
   0528 C0 07               923 	push	ar7
   052A C0 00               924 	push	ar0
   052C C0 01               925 	push	ar1
   052E 8A 82               926 	mov	dpl,r2
   0530 8B 83               927 	mov	dph,r3
   0532 8C 93               928 	mov	dpx,r4
   0534 8D F0               929 	mov	b,r5
   0536 12s00r00r00         930 	lcall	___fsadd
   053A AA 82               931 	mov	r2,dpl
   053C AB 83               932 	mov	r3,dph
   053E AC 93               933 	mov	r4,dpx
   0540 AD F0               934 	mov	r5,b
   0542 D0 01               935 	pop	ar1
   0544 D0 00               936 	pop	ar0
   0546 D0 07               937 	pop	ar7
   0548 D0 06               938 	pop	ar6
                            939 ;	genAssign: resultIsFar = TRUE
   054A 90s00r00r0C         940 	mov	dptr,#_tancotf_xden_1_1
   054E EA                  941 	mov	a,r2
   054F F0                  942 	movx	@dptr,a
   0550 A3                  943 	inc	dptr
   0551 EB                  944 	mov	a,r3
   0552 F0                  945 	movx	@dptr,a
   0553 A3                  946 	inc	dptr
   0554 EC                  947 	mov	a,r4
   0555 F0                  948 	movx	@dptr,a
   0556 A3                  949 	inc	dptr
   0557 ED                  950 	mov	a,r5
   0558 F0                  951 	movx	@dptr,a
   0559                     952 00105$:
                            953 ;	tancotf.c:84: if(n&1)
   0559 90s00r00r10         954 	mov	dptr,#_tancotf_n_1_1
   055D E0                  955 	movx	a,@dptr
   055E 30 E0 67            956 	jnb  acc.0,00113$
   0561                     957 00128$:
                            958 ;	tancotf.c:87: if(iscotan) return (-xnum/xden);
   0561 30*00 36            959 	jnb  _tancotf_PARM_2,00107$
   0564                     960 00129$:
   0564 8E 02               961 	mov	ar2,r6
   0566 8F 03               962 	mov	ar3,r7
   0568 88 04               963 	mov	ar4,r0
   056A E9                  964 	mov	a,r1
   056B B2 E7               965 	cpl	acc.7
   056D FD                  966 	mov	r5,a
   056E 90s00r00r0C         967 	mov	dptr,#_tancotf_xden_1_1
                            968 ;	genAssign: resultIsFar = TRUE
   0572 75 86 21            969 	mov	dps,#0x21
   0575 90s00r00r00         970 	mov	dptr,#___fsdiv_PARM_2
   0579 E0                  971 	movx	a,@dptr
   057A F0                  972 	movx	@dptr,a
   057B A3                  973 	inc	dptr
   057C A3                  974 	inc	dptr
   057D E0                  975 	movx	a,@dptr
   057E F0                  976 	movx	@dptr,a
   057F A3                  977 	inc	dptr
   0580 A3                  978 	inc	dptr
   0581 E0                  979 	movx	a,@dptr
   0582 F0                  980 	movx	@dptr,a
   0583 A3                  981 	inc	dptr
   0584 A3                  982 	inc	dptr
   0585 E0                  983 	movx	a,@dptr
   0586 F0                  984 	movx	@dptr,a
   0587 75 86 00            985 	mov	dps,#0
   058A 8A 82               986 	mov	dpl,r2
   058C 8B 83               987 	mov	dph,r3
   058E 8C 93               988 	mov	dpx,r4
   0590 8D F0               989 	mov	b,r5
   0592 12s00r00r00         990 	lcall	___fsdiv
   0596 02s00r06r20         991 	ljmp	00115$
   059A                     992 00107$:
                            993 ;	tancotf.c:88: else return (-xden/xnum);
   059A 90s00r00r0C         994 	mov	dptr,#_tancotf_xden_1_1
   059E E0                  995 	movx	a,@dptr
   059F FA                  996 	mov	r2,a
   05A0 A3                  997 	inc	dptr
   05A1 E0                  998 	movx	a,@dptr
   05A2 FB                  999 	mov	r3,a
   05A3 A3                 1000 	inc	dptr
   05A4 E0                 1001 	movx	a,@dptr
   05A5 FC                 1002 	mov	r4,a
   05A6 A3                 1003 	inc	dptr
   05A7 E0                 1004 	movx	a,@dptr
   05A8 B2 E7              1005 	cpl	acc.7
   05AA FD                 1006 	mov	r5,a
                           1007 ;	genAssign: resultIsFar = TRUE
   05AB 90s00r00r00        1008 	mov	dptr,#___fsdiv_PARM_2
   05AF EE                 1009 	mov	a,r6
   05B0 F0                 1010 	movx	@dptr,a
   05B1 A3                 1011 	inc	dptr
   05B2 EF                 1012 	mov	a,r7
   05B3 F0                 1013 	movx	@dptr,a
   05B4 A3                 1014 	inc	dptr
   05B5 E8                 1015 	mov	a,r0
   05B6 F0                 1016 	movx	@dptr,a
   05B7 A3                 1017 	inc	dptr
   05B8 E9                 1018 	mov	a,r1
   05B9 F0                 1019 	movx	@dptr,a
   05BA 8A 82              1020 	mov	dpl,r2
   05BC 8B 83              1021 	mov	dph,r3
   05BE 8C 93              1022 	mov	dpx,r4
   05C0 8D F0              1023 	mov	b,r5
   05C2 12s00r00r00        1024 	lcall	___fsdiv
   05C6 80 58              1025 	sjmp 00115$
   05C8                    1026 00113$:
                           1027 ;	tancotf.c:92: if(iscotan) return (xden/xnum);
   05C8 30*00 2D           1028 	jnb  _tancotf_PARM_2,00110$
   05CB                    1029 00130$:
                           1030 ;	genAssign: resultIsFar = TRUE
   05CB 90s00r00r00        1031 	mov	dptr,#___fsdiv_PARM_2
   05CF EE                 1032 	mov	a,r6
   05D0 F0                 1033 	movx	@dptr,a
   05D1 A3                 1034 	inc	dptr
   05D2 EF                 1035 	mov	a,r7
   05D3 F0                 1036 	movx	@dptr,a
   05D4 A3                 1037 	inc	dptr
   05D5 E8                 1038 	mov	a,r0
   05D6 F0                 1039 	movx	@dptr,a
   05D7 A3                 1040 	inc	dptr
   05D8 E9                 1041 	mov	a,r1
   05D9 F0                 1042 	movx	@dptr,a
   05DA 05 86              1043 	inc	dps
   05DC 90s00r00r0C        1044 	mov	dptr,#_tancotf_xden_1_1
   05E0 E0                 1045 	movx	a,@dptr
   05E1 F5 82              1046 	mov	dpl,a
   05E3 A3                 1047 	inc	dptr
   05E4 E0                 1048 	movx	a,@dptr
   05E5 F5 83              1049 	mov	dph,a
   05E7 A3                 1050 	inc	dptr
   05E8 E0                 1051 	movx	a,@dptr
   05E9 F5 93              1052 	mov	dpx,a
   05EB A3                 1053 	inc	dptr
   05EC E0                 1054 	movx	a,@dptr
   05ED F5 F0              1055 	mov	b,a
   05EF 75 86 00           1056 	mov	dps,#0
   05F2 12s00r00r00        1057 	lcall	___fsdiv
   05F6 80 28              1058 	sjmp 00115$
   05F8                    1059 00110$:
                           1060 ;	tancotf.c:93: else return (xnum/xden);
   05F8 90s00r00r0C        1061 	mov	dptr,#_tancotf_xden_1_1
                           1062 ;	genAssign: resultIsFar = TRUE
   05FC 75 86 21           1063 	mov	dps,#0x21
   05FF 90s00r00r00        1064 	mov	dptr,#___fsdiv_PARM_2
   0603 E0                 1065 	movx	a,@dptr
   0604 F0                 1066 	movx	@dptr,a
   0605 A3                 1067 	inc	dptr
   0606 A3                 1068 	inc	dptr
   0607 E0                 1069 	movx	a,@dptr
   0608 F0                 1070 	movx	@dptr,a
   0609 A3                 1071 	inc	dptr
   060A A3                 1072 	inc	dptr
   060B E0                 1073 	movx	a,@dptr
   060C F0                 1074 	movx	@dptr,a
   060D A3                 1075 	inc	dptr
   060E A3                 1076 	inc	dptr
   060F E0                 1077 	movx	a,@dptr
   0610 F0                 1078 	movx	@dptr,a
   0611 75 86 00           1079 	mov	dps,#0
   0614 8E 82              1080 	mov	dpl,r6
   0616 8F 83              1081 	mov	dph,r7
   0618 88 93              1082 	mov	dpx,r0
   061A 89 F0              1083 	mov	b,r1
   061C 12s00r00r00        1084 	lcall	___fsdiv
   0620                    1085 00115$:
   0620 22                 1086 	ret
                           1087 	.area CSEG    (CODE)
                           1088 	.area CONST   (CODE)
                           1089 	.area XINIT   (CODE)
                           1090 	.area CABS    (ABS,CODE)
