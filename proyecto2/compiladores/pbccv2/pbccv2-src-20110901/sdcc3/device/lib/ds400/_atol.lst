                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:19 2015
                              5 ;--------------------------------------------------------
                              6 	.module _atol
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _atol
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      43 	.ds 8
                             44 ;--------------------------------------------------------
                             45 ; internal ram data
                             46 ;--------------------------------------------------------
                             47 	.area DSEG    (DATA)
   0000                      48 _atol_rv_1_1:
   0000                      49 	.ds 4
                             50 ;--------------------------------------------------------
                             51 ; overlayable items in internal ram 
                             52 ;--------------------------------------------------------
                             53 	.area OSEG    (OVR,DATA)
                             54 ;--------------------------------------------------------
                             55 ; indirectly addressable internal ram data
                             56 ;--------------------------------------------------------
                             57 	.area ISEG    (DATA)
                             58 ;--------------------------------------------------------
                             59 ; absolute internal ram data
                             60 ;--------------------------------------------------------
                             61 	.area IABS    (ABS,DATA)
                             62 	.area IABS    (ABS,DATA)
                             63 ;--------------------------------------------------------
                             64 ; bit data
                             65 ;--------------------------------------------------------
                             66 	.area BSEG    (BIT)
                             67 ;--------------------------------------------------------
                             68 ; paged external ram data
                             69 ;--------------------------------------------------------
                             70 	.area PSEG    (PAG,XDATA)
                             71 ;--------------------------------------------------------
                             72 ; external ram data
                             73 ;--------------------------------------------------------
                             74 	.area XSEG    (XDATA)
   0000                      75 _atol_sloc1_1_0:
   0000                      76 	.ds 4
                             77 ;--------------------------------------------------------
                             78 ; absolute external ram data
                             79 ;--------------------------------------------------------
                             80 	.area XABS    (ABS,XDATA)
                             81 ;--------------------------------------------------------
                             82 ; external initialized ram data
                             83 ;--------------------------------------------------------
                             84 	.area XISEG   (XDATA)
                             85 ;--------------------------------------------------------
                             86 ; global & static initialisations
                             87 ;--------------------------------------------------------
                             88 	.area HOME    (CODE)
                             89 	.area GSINIT  (CODE)
                             90 	.area GSFINAL (CODE)
                             91 	.area GSINIT  (CODE)
                             92 ;--------------------------------------------------------
                             93 ; Home
                             94 ;--------------------------------------------------------
                             95 	.area HOME    (CODE)
                             96 	.area HOME    (CODE)
                             97 ;--------------------------------------------------------
                             98 ; code
                             99 ;--------------------------------------------------------
                            100 	.area CSEG    (CODE)
                            101 ;------------------------------------------------------------
                            102 ;Allocation info for local variables in function 'atol'
                            103 ;------------------------------------------------------------
                            104 ;rv                        Allocated with name '_atol_rv_1_1'
                            105 ;sign                      Allocated to registers r0 
                            106 ;s                         Allocated to registers r2 r3 r4 r5 
                            107 ;sloc0                     Allocated with name '_atol_sloc0_1_0'
                            108 ;sloc1                     Allocated with name '_atol_sloc1_1_0'
                            109 ;------------------------------------------------------------
                            110 ;	_atol.c:29: long atol(char * s)
                            111 ;	-----------------------------------------
                            112 ;	 function atol
                            113 ;	-----------------------------------------
   0000                     114 _atol:
                    0002    115 	ar2 = 0x02
                    0003    116 	ar3 = 0x03
                    0004    117 	ar4 = 0x04
                    0005    118 	ar5 = 0x05
                    0006    119 	ar6 = 0x06
                    0007    120 	ar7 = 0x07
                    0000    121 	ar0 = 0x00
                    0001    122 	ar1 = 0x01
   0000 AA 82               123 	mov	r2,dpl
   0002 AB 83               124 	mov	r3,dph
   0004 AC 93               125 	mov	r4,dpx
   0006 AD F0               126 	mov	r5,b
                            127 ;	_atol.c:31: register long rv=0; 
                            128 ;	genAssign: resultIsFar = FALSE
   0008 E4                  129 	clr	a
   0009 F5*00               130 	mov	_atol_rv_1_1,a
   000B F5*01               131 	mov	(_atol_rv_1_1 + 1),a
   000D F5*02               132 	mov	(_atol_rv_1_1 + 2),a
   000F F5*03               133 	mov	(_atol_rv_1_1 + 3),a
                            134 ;	_atol.c:35: while (*s) {
                            135 ;	genAssign: resultIsFar = FALSE
   0011 8A 06               136 	mov	ar6,r2
   0013 8B 07               137 	mov	ar7,r3
   0015 8C 00               138 	mov	ar0,r4
   0017 8D 01               139 	mov	ar1,r5
   0019                     140 00107$:
   0019 8E 82               141 	mov	dpl,r6
   001B 8F 83               142 	mov	dph,r7
   001D 88 93               143 	mov	dpx,r0
   001F 89 F0               144 	mov	b,r1
   0021 12s00r00r00         145 	lcall	__gptrget
   0025 FA                  146 	mov  r2,a
   0026 60 37               147 	jz  00133$
   0028                     148 00135$:
                            149 ;	_atol.c:36: if (*s <= '9' && *s >= '0')
   0028 C3                  150 	clr	c
   0029 74 B9               151 	mov  a,#(0x39 ^ 0x80)
   002B 8A F0               152 	mov	b,r2
   002D 63 F0 80            153 	xrl	b,#0x80
   0030 95 F0               154 	subb	a,b
   0032 40 08               155 	jc   00102$
   0034                     156 00136$:
   0034 C3                  157 	clr	c
   0035 EA                  158 	mov	a,r2
   0036 64 80               159 	xrl	a,#0x80
   0038 94 B0               160 	subb	a,#0xB0
   003A 50 23               161 	jnc  00133$
   003C                     162 00137$:
                            163 ;	_atol.c:37: break;
   003C                     164 00102$:
                            165 ;	_atol.c:38: if (*s == '-' || *s == '+') 
   003C 8E 82               166 	mov	dpl,r6
   003E 8F 83               167 	mov	dph,r7
   0040 88 93               168 	mov	dpx,r0
   0042 89 F0               169 	mov	b,r1
   0044 12s00r00r00         170 	lcall	__gptrget
   0048 FA                  171 	mov  r2,a
   0049 B4 2D 02            172 	cjne	a,#0x2D,00138$
   004C 80 11               173 	sjmp 00133$
   004E                     174 00138$:
   004E EA                  175 	mov	a,r2
   004F B4 2B 02            176 	cjne	a,#0x2B,00139$
   0052 80 0B               177 	sjmp 00133$
   0054                     178 00139$:
                            179 ;	_atol.c:40: s++;
   0054 0E                  180 	inc	r6
   0055 BE 00 05            181 	cjne	r6,#0,00140$
   0058 0F                  182 	inc	r7
   0059 BF 00 01            183 	cjne	r7,#0,00140$
   005C 08                  184 	inc	r0
   005D                     185 00140$:
   005D 80 BA               186 	sjmp 00107$
   005F                     187 00133$:
                            188 ;	genAssign: resultIsFar = TRUE
   005F 8E 02               189 	mov	ar2,r6
   0061 8F 03               190 	mov	ar3,r7
   0063 88 04               191 	mov	ar4,r0
   0065 89 05               192 	mov	ar5,r1
                            193 ;	_atol.c:43: sign = (*s == '-');
   0067 8E 82               194 	mov	dpl,r6
   0069 8F 83               195 	mov	dph,r7
   006B 88 93               196 	mov	dpx,r0
   006D 89 F0               197 	mov	b,r1
   006F 12s00r00r00         198 	lcall	__gptrget
   0073 FE                  199 	mov  r6,a
   0074 B4 2D 04            200 	cjne	a,#0x2D,00141$
   0077 74 01               201 	mov	a,#1
   0079 80 01               202 	sjmp	00142$
   007B                     203 00141$:
   007B E4                  204 	clr	a
   007C                     205 00142$:
                            206 ;	genAssign: resultIsFar = FALSE
                            207 ;	_atol.c:44: if (*s == '-' || *s == '+') s++;
   007C FF                  208 	mov  r7,a
   007D 8F 00               209 	mov  ar0,r7 
   007F 70 04               210 	jnz  00110$
   0081                     211 00143$:
   0081 EE                  212 	mov	a,r6
   0082 B4 2B 09            213 	cjne a,#0x2B,00131$
   0085                     214 00145$:
   0085                     215 00110$:
   0085 0A                  216 	inc	r2
   0086 BA 00 05            217 	cjne	r2,#0,00146$
   0089 0B                  218 	inc	r3
   008A BB 00 01            219 	cjne	r3,#0,00146$
   008D 0C                  220 	inc	r4
   008E                     221 00146$:
                            222 ;	_atol.c:46: while (*s && *s >= '0' && *s <= '9') {
   008E                     223 00131$:
                            224 ;	genAssign: resultIsFar = TRUE
   008E 90s00r00r00         225 	mov	dptr,#_atol_sloc1_1_0
   0092 EA                  226 	mov	a,r2
   0093 F0                  227 	movx	@dptr,a
   0094 A3                  228 	inc	dptr
   0095 EB                  229 	mov	a,r3
   0096 F0                  230 	movx	@dptr,a
   0097 A3                  231 	inc	dptr
   0098 EC                  232 	mov	a,r4
   0099 F0                  233 	movx	@dptr,a
   009A A3                  234 	inc	dptr
   009B ED                  235 	mov	a,r5
   009C F0                  236 	movx	@dptr,a
   009D                     237 00115$:
   009D 75 86 01            238 	mov     dps, #1
   00A0 90s00r00r00         239 	mov     dptr, #_atol_sloc1_1_0
   00A4 E0                  240 	movx	a,@dptr
   00A5 F5 82               241 	mov	dpl,a
   00A7 A3                  242 	inc	dptr
   00A8 E0                  243 	movx	a,@dptr
   00A9 F5 83               244 	mov	dph,a
   00AB A3                  245 	inc	dptr
   00AC E0                  246 	movx	a,@dptr
   00AD F5 93               247 	mov	dpx,a
   00AF A3                  248 	inc	dptr
   00B0 E0                  249 	movx	a,@dptr
   00B1 F5 F0               250 	mov	b,a
   00B3 75 86 00            251 	mov	dps,#0
   00B6 12s00r00r00         252 	lcall	__gptrget
   00BA FE                  253 	mov  r6,a
   00BB 70 04               254 	jnz	00147$
   00BD 02s00r01r42         255 	ljmp	00117$
   00C1                     256 00147$:
   00C1 C3                  257 	clr	c
   00C2 EE                  258 	mov	a,r6
   00C3 64 80               259 	xrl	a,#0x80
   00C5 94 B0               260 	subb	a,#0xB0
   00C7 50 04               261 	jnc	00148$
   00C9 02s00r01r42         262 	ljmp	00117$
   00CD                     263 00148$:
   00CD C3                  264 	clr	c
   00CE 74 B9               265 	mov  a,#(0x39 ^ 0x80)
   00D0 8E F0               266 	mov	b,r6
   00D2 63 F0 80            267 	xrl	b,#0x80
   00D5 95 F0               268 	subb	a,b
   00D7 40 69               269 	jc   00117$
   00D9                     270 00149$:
                            271 ;	_atol.c:47: rv = (rv * 10) + (*s - '0');
   00D9 C0 00               272 	push	ar0
                            273 ;	genAssign: resultIsFar = TRUE
   00DB 90s00r00r00         274 	mov	dptr,#__mullong_PARM_2
   00DF E5*00               275 	mov	a,_atol_rv_1_1
   00E1 F0                  276 	movx	@dptr,a
   00E2 A3                  277 	inc	dptr
   00E3 E5*01               278 	mov	a,(_atol_rv_1_1 + 1)
   00E5 F0                  279 	movx	@dptr,a
   00E6 A3                  280 	inc	dptr
   00E7 E5*02               281 	mov	a,(_atol_rv_1_1 + 2)
   00E9 F0                  282 	movx	@dptr,a
   00EA A3                  283 	inc	dptr
   00EB E5*03               284 	mov	a,(_atol_rv_1_1 + 3)
   00ED F0                  285 	movx	@dptr,a
   00EE C0 06               286 	push	ar6
   00F0 90 00 00 0A         287 	mov	dptr,#0x00000A
   00F4 75 F0 00            288 	mov	b,#0x00
   00F7 12s00r00r00         289 	lcall	__mullong
   00FB AF 82               290 	mov	r7,dpl
   00FD A9 83               291 	mov	r1,dph
   00FF A8 93               292 	mov	r0,dpx
   0101 AA F0               293 	mov	r2,b
   0103 D0 06               294 	pop	ar6
   0105 EE                  295 	mov	a,r6
   0106 33                  296 	rlc	a
   0107 95 E0               297 	subb	a,acc
   0109 FB                  298 	mov	r3,a
   010A EE                  299 	mov	a,r6
   010B 24 D0               300 	add	a,#0xD0
   010D FE                  301 	mov	r6,a
   010E EB                  302 	mov	a,r3
   010F 34 FF               303 	addc	a,#0xFF
   0111 FB                  304 	mov  r3,a
   0112 33                  305 	rlc	a
   0113 95 E0               306 	subb	a,acc
   0115 FC                  307 	mov	r4,a
   0116 FD                  308 	mov	r5,a
   0117 EE                  309 	mov	a,r6
   0118 2F                  310 	add	a,r7
   0119 F5*00               311 	mov	_atol_rv_1_1,a
   011B EB                  312 	mov	a,r3
   011C 39                  313 	addc	a,r1
   011D F5*01               314 	mov	(_atol_rv_1_1 + 1),a
   011F EC                  315 	mov	a,r4
   0120 38                  316 	addc	a,r0
   0121 F5*02               317 	mov	(_atol_rv_1_1 + 2),a
   0123 ED                  318 	mov	a,r5
   0124 3A                  319 	addc	a,r2
   0125 F5*03               320 	mov	(_atol_rv_1_1 + 3),a
                            321 ;	_atol.c:48: s++;
   0127 90s00r00r00         322 	mov	dptr,#_atol_sloc1_1_0
   012B E0                  323 	movx	a,@dptr
   012C 24 01               324 	add	a,#0x01
   012E F0                  325 	movx	@dptr,a
   012F A3                  326 	inc	dptr
   0130 E0                  327 	movx	a,@dptr
   0131 34 00               328 	addc	a,#0x00
   0133 F0                  329 	movx	@dptr,a
   0134 A3                  330 	inc	dptr
   0135 E0                  331 	movx	a,@dptr
   0136 34 00               332 	addc	a,#0x00
   0138 F0                  333 	movx	@dptr,a
   0139 A3                  334 	inc	dptr
   013A E0                  335 	movx	a,@dptr
   013B F0                  336 	movx	@dptr,a
   013C D0 00               337 	pop	ar0
   013E 02s00r00r9D         338 	ljmp	00115$
   0142                     339 00117$:
                            340 ;	_atol.c:51: return (sign ? -rv : rv);
   0142 E8                  341 	mov	a,r0
   0143 60 13               342 	jz  00120$
   0145                     343 00150$:
   0145 C3                  344 	clr	c
   0146 E4                  345 	clr	a
   0147 95*00               346 	subb	a,_atol_rv_1_1
   0149 FA                  347 	mov	r2,a
   014A E4                  348 	clr	a
   014B 95*01               349 	subb	a,(_atol_rv_1_1 + 1)
   014D FB                  350 	mov	r3,a
   014E E4                  351 	clr	a
   014F 95*02               352 	subb	a,(_atol_rv_1_1 + 2)
   0151 FC                  353 	mov	r4,a
   0152 E4                  354 	clr	a
   0153 95*03               355 	subb	a,(_atol_rv_1_1 + 3)
   0155 FD                  356 	mov	r5,a
   0156 80 08               357 	sjmp 00121$
   0158                     358 00120$:
                            359 ;	genAssign: resultIsFar = FALSE
   0158 AA*00               360 	mov	r2,_atol_rv_1_1
   015A AB*01               361 	mov	r3,(_atol_rv_1_1 + 1)
   015C AC*02               362 	mov	r4,(_atol_rv_1_1 + 2)
   015E AD*03               363 	mov	r5,(_atol_rv_1_1 + 3)
   0160                     364 00121$:
   0160 8A 82               365 	mov	dpl,r2
   0162 8B 83               366 	mov	dph,r3
   0164 8C 93               367 	mov	dpx,r4
   0166 8D F0               368 	mov	b,r5
   0168                     369 00118$:
   0168 22                  370 	ret
                            371 	.area CSEG    (CODE)
                            372 	.area CONST   (CODE)
                            373 	.area XINIT   (CODE)
                            374 	.area CABS    (ABS,CODE)
