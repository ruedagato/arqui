                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:17 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strchr
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _strchr_PARM_2
                             31 	.globl _strchr
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 ;--------------------------------------------------------
                             44 ; internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area DSEG    (DATA)
                             47 ;--------------------------------------------------------
                             48 ; overlayable items in internal ram 
                             49 ;--------------------------------------------------------
                             50 	.area OSEG    (OVR,DATA)
                             51 ;--------------------------------------------------------
                             52 ; indirectly addressable internal ram data
                             53 ;--------------------------------------------------------
                             54 	.area ISEG    (DATA)
                             55 ;--------------------------------------------------------
                             56 ; absolute internal ram data
                             57 ;--------------------------------------------------------
                             58 	.area IABS    (ABS,DATA)
                             59 	.area IABS    (ABS,DATA)
                             60 ;--------------------------------------------------------
                             61 ; bit data
                             62 ;--------------------------------------------------------
                             63 	.area BSEG    (BIT)
                             64 ;--------------------------------------------------------
                             65 ; paged external ram data
                             66 ;--------------------------------------------------------
                             67 	.area PSEG    (PAG,XDATA)
                             68 ;--------------------------------------------------------
                             69 ; external ram data
                             70 ;--------------------------------------------------------
                             71 	.area XSEG    (XDATA)
   0000                      72 _strchr_PARM_2:
   0000                      73 	.ds 1
                             74 ;--------------------------------------------------------
                             75 ; absolute external ram data
                             76 ;--------------------------------------------------------
                             77 	.area XABS    (ABS,XDATA)
                             78 ;--------------------------------------------------------
                             79 ; external initialized ram data
                             80 ;--------------------------------------------------------
                             81 	.area XISEG   (XDATA)
                             82 ;--------------------------------------------------------
                             83 ; global & static initialisations
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area GSINIT  (CODE)
                             87 	.area GSFINAL (CODE)
                             88 	.area GSINIT  (CODE)
                             89 ;--------------------------------------------------------
                             90 ; Home
                             91 ;--------------------------------------------------------
                             92 	.area HOME    (CODE)
                             93 	.area HOME    (CODE)
                             94 ;--------------------------------------------------------
                             95 ; code
                             96 ;--------------------------------------------------------
                             97 	.area CSEG    (CODE)
                             98 ;------------------------------------------------------------
                             99 ;Allocation info for local variables in function 'strchr'
                            100 ;------------------------------------------------------------
                            101 ;ch                        Allocated with name '_strchr_PARM_2'
                            102 ;string                    Allocated to registers r2 r3 r4 r5 
                            103 ;------------------------------------------------------------
                            104 ;	_strchr.c:31: char * strchr (
                            105 ;	-----------------------------------------
                            106 ;	 function strchr
                            107 ;	-----------------------------------------
   0000                     108 _strchr:
                    0002    109 	ar2 = 0x02
                    0003    110 	ar3 = 0x03
                    0004    111 	ar4 = 0x04
                    0005    112 	ar5 = 0x05
                    0006    113 	ar6 = 0x06
                    0007    114 	ar7 = 0x07
                    0000    115 	ar0 = 0x00
                    0001    116 	ar1 = 0x01
   0000 AA 82               117 	mov	r2,dpl
   0002 AB 83               118 	mov	r3,dph
   0004 AC 93               119 	mov	r4,dpx
   0006 AD F0               120 	mov	r5,b
                            121 ;	_strchr.c:36: while (*string && *string != ch)
                            122 ;	genAssign: resultIsFar = FALSE
   0008                     123 00102$:
   0008 8A 82               124 	mov	dpl,r2
   000A 8B 83               125 	mov	dph,r3
   000C 8C 93               126 	mov	dpx,r4
   000E 8D F0               127 	mov	b,r5
   0010 12s00r00r00         128 	lcall	__gptrget
   0014 FE                  129 	mov  r6,a
   0015 60 17               130 	jz  00104$
   0017                     131 00114$:
   0017 90s00r00r00         132 	mov	dptr,#_strchr_PARM_2
   001B 8E F0               133 	mov	b,r6
   001D E0                  134 	movx	a,@dptr
   001E B5 F0 02            135 	cjne	a,b,00115$
   0021 80 0B               136 	sjmp 00104$
   0023                     137 00115$:
                            138 ;	_strchr.c:37: string++;
   0023 0A                  139 	inc	r2
   0024 BA 00 E1            140 	cjne	r2,#0,00102$
   0027 0B                  141 	inc	r3
   0028 BB 00 DD            142 	cjne	r3,#0,00102$
   002B 0C                  143 	inc	r4
   002C 80 DA               144 	sjmp 00102$
   002E                     145 00104$:
                            146 ;	_strchr.c:39: if (*string == ch)
   002E 8A 82               147 	mov	dpl,r2
   0030 8B 83               148 	mov	dph,r3
   0032 8C 93               149 	mov	dpx,r4
   0034 8D F0               150 	mov	b,r5
   0036 12s00r00r00         151 	lcall	__gptrget
   003A FE                  152 	mov	r6,a
   003B 90s00r00r00         153 	mov	dptr,#_strchr_PARM_2
   003F 8E F0               154 	mov	b,r6
   0041 E0                  155 	movx	a,@dptr
   0042 B5 F0 0A            156 	cjne a,b,00106$
   0045                     157 00117$:
                            158 ;	_strchr.c:40: return(string);
   0045 8A 82               159 	mov	dpl,r2
   0047 8B 83               160 	mov	dph,r3
   0049 8C 93               161 	mov	dpx,r4
   004B 8D F0               162 	mov	b,r5
   004D 80 07               163 	sjmp 00107$
   004F                     164 00106$:
                            165 ;	_strchr.c:41: return ( NULL );
   004F 90 00 00 00         166 	mov  dptr,#0x0000
   0053 75 F0 00            167 	mov	b,#0x00
   0056                     168 00107$:
   0056 22                  169 	ret
                            170 	.area CSEG    (CODE)
                            171 	.area CONST   (CODE)
                            172 	.area XINIT   (CODE)
                            173 	.area CABS    (ABS,CODE)
