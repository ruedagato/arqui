                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:25 2015
                              5 ;--------------------------------------------------------
                              6 	.module logf
                              7 	.optsdcc -mmcs51 --model-medium
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _logf
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
   0000                      32 _logf_tmp:
   0000                      33 	.ds 4
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in internal ram 
                             36 ;--------------------------------------------------------
                             37 	.area OSEG    (OVR,DATA)
                             38 ;--------------------------------------------------------
                             39 ; indirectly addressable internal ram data
                             40 ;--------------------------------------------------------
                             41 	.area ISEG    (DATA)
                             42 ;--------------------------------------------------------
                             43 ; absolute internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area IABS    (ABS,DATA)
                             46 	.area IABS    (ABS,DATA)
                             47 ;--------------------------------------------------------
                             48 ; bit data
                             49 ;--------------------------------------------------------
                             50 	.area BSEG    (BIT)
                             51 ;--------------------------------------------------------
                             52 ; paged external ram data
                             53 ;--------------------------------------------------------
                             54 	.area PSEG    (PAG,XDATA)
                             55 ;--------------------------------------------------------
                             56 ; external ram data
                             57 ;--------------------------------------------------------
                             58 	.area XSEG    (XDATA)
                             59 ;--------------------------------------------------------
                             60 ; absolute external ram data
                             61 ;--------------------------------------------------------
                             62 	.area XABS    (ABS,XDATA)
                             63 ;--------------------------------------------------------
                             64 ; external initialized ram data
                             65 ;--------------------------------------------------------
                             66 	.area XISEG   (XDATA)
                             67 	.area HOME    (CODE)
                             68 	.area GSINIT0 (CODE)
                             69 	.area GSINIT1 (CODE)
                             70 	.area GSINIT2 (CODE)
                             71 	.area GSINIT3 (CODE)
                             72 	.area GSINIT4 (CODE)
                             73 	.area GSINIT5 (CODE)
                             74 	.area GSINIT  (CODE)
                             75 	.area GSFINAL (CODE)
                             76 	.area CSEG    (CODE)
                             77 ;--------------------------------------------------------
                             78 ; global & static initialisations
                             79 ;--------------------------------------------------------
                             80 	.area HOME    (CODE)
                             81 	.area GSINIT  (CODE)
                             82 	.area GSFINAL (CODE)
                             83 	.area GSINIT  (CODE)
                             84 ;--------------------------------------------------------
                             85 ; Home
                             86 ;--------------------------------------------------------
                             87 	.area HOME    (CODE)
                             88 	.area HOME    (CODE)
                             89 ;--------------------------------------------------------
                             90 ; code
                             91 ;--------------------------------------------------------
                             92 	.area CSEG    (CODE)
                             93 ;------------------------------------------------------------
                             94 ;Allocation info for local variables in function 'logf'
                             95 ;------------------------------------------------------------
                             96 ;------------------------------------------------------------
                             97 ;	logf.c:47: float logf(float x)
                             98 ;	-----------------------------------------
                             99 ;	 function logf
                            100 ;	-----------------------------------------
   0000                     101 _logf:
                    0002    102 	ar2 = 0x02
                    0003    103 	ar3 = 0x03
                    0004    104 	ar4 = 0x04
                    0005    105 	ar5 = 0x05
                    0006    106 	ar6 = 0x06
                    0007    107 	ar7 = 0x07
                    0000    108 	ar0 = 0x00
                    0001    109 	ar1 = 0x01
                            110 ;	logf.c:200: __endasm;
                            111 	
                            112 	
                            113 	
                            114 	
                            115 	
                            116 	
                            117 	
   0000 12s00r00            118 	 lcall fsgetarg
   0003                     119 	logf_neg_check:
   0003 30 D1 06            120 	 jnb psw.1, logf_zero_check
                            121 	
   0006 12s00r00            122 	 lcall fs_return_nan
   0009 02s00rC8            123 	 ljmp logf_exit
                            124 	
   000C                     125 	logf_zero_check:
   000C BC 00 08            126 	 cjne r4, #0, logf_ok
                            127 	
   000F D2 D1               128 	 setb psw.1
   0011 12s00r00            129 	 lcall fs_return_inf
   0014 02s00rC8            130 	 ljmp logf_exit
                            131 	
   0017                     132 	logf_ok:
   0017 C0 82               133 	 push dpl
   0019 74 03               134 	 mov a, #3
   001B 79 00               135 	 mov r1, #0
   001D 12s00r00            136 	 lcall fs_rshift_a
                            137 	
   0020 E4                  138 	 clr a
   0021 F5*00               139 	 mov (_logf_tmp + 0), a
   0023 F5*01               140 	 mov (_logf_tmp + 1), a
   0025 F5*02               141 	 mov (_logf_tmp + 2), a
   0027 F5*03               142 	 mov (_logf_tmp + 3), a
   0029 90s00r00            143 	 mov dptr, #__fs_natural_log_table
   002C F8                  144 	 mov r0, a
   002D                     145 	logf_cordic_loop:
   002D 8C 07               146 	 mov ar7, r4
   002F 8B 06               147 	 mov ar6, r3
   0031 8A 05               148 	 mov ar5, r2
   0033 89 F0               149 	 mov b, r1
   0035 E8                  150 	 mov a, r0
   0036 12s00r00            151 	 lcall __fs_cordic_rshift_r765_unsigned
   0039 E9                  152 	 mov a, r1
   003A 25 F0               153 	 add a, b
   003C EA                  154 	 mov a, r2
   003D 3D                  155 	 addc a, r5
   003E EB                  156 	 mov a, r3
   003F 3E                  157 	 addc a, r6
   0040 EC                  158 	 mov a, r4
   0041 3F                  159 	 addc a, r7
   0042 54 E0               160 	 anl a, #0xE0
   0044 70 28               161 	 jnz logf_cordic_skip
   0046 E9                  162 	 mov a, r1
   0047 25 F0               163 	 add a, b
   0049 F9                  164 	 mov r1, a
   004A EA                  165 	 mov a, r2
   004B 3D                  166 	 addc a, r5
   004C FA                  167 	 mov r2, a
   004D EB                  168 	 mov a, r3
   004E 3E                  169 	 addc a, r6
   004F FB                  170 	 mov r3, a
   0050 EC                  171 	 mov a, r4
   0051 3F                  172 	 addc a, r7
   0052 FC                  173 	 mov r4, a
   0053 E4                  174 	 clr a
   0054 93                  175 	 movc a, @a+dptr
   0055 25*00               176 	 add a, (_logf_tmp + 0)
   0057 F5*00               177 	 mov (_logf_tmp + 0), a
   0059 74 01               178 	 mov a, #1
   005B 93                  179 	 movc a, @a+dptr
   005C 35*01               180 	 addc a, (_logf_tmp + 1)
   005E F5*01               181 	 mov (_logf_tmp + 1), a
   0060 74 02               182 	 mov a, #2
   0062 93                  183 	 movc a, @a+dptr
   0063 35*02               184 	 addc a, (_logf_tmp + 2)
   0065 F5*02               185 	 mov (_logf_tmp + 2), a
   0067 74 03               186 	 mov a, #3
   0069 93                  187 	 movc a, @a+dptr
   006A 35*03               188 	 addc a, (_logf_tmp + 3)
   006C F5*03               189 	 mov (_logf_tmp + 3), a
   006E                     190 	logf_cordic_skip:
   006E A3                  191 	 inc dptr
   006F A3                  192 	 inc dptr
   0070 A3                  193 	 inc dptr
   0071 A3                  194 	 inc dptr
   0072 08                  195 	 inc r0
   0073 B8 1E B7            196 	 cjne r0, #30, logf_cordic_loop
                            197 	
                            198 	
   0076 AC*03               199 	 mov r4, (_logf_tmp + 3)
   0078 AB*02               200 	 mov r3, (_logf_tmp + 2)
   007A AA*01               201 	 mov r2, (_logf_tmp + 1)
   007C A9*00               202 	 mov r1, (_logf_tmp + 0)
   007E 75 82 81            203 	 mov dpl, #129
   0081 D2 D1               204 	 setb psw.1
   0083 12s00r00            205 	 lcall fs_normalize_a
   0086 D0 E0               206 	 pop acc
   0088 B4 7E 05            207 	 cjne a, #126, logf_exponent
                            208 	
                            209 	
                            210 	
                            211 	
   008B 12s00r00            212 	 lcall fs_zerocheck_return
                            213 	
   008E 80 38               214 	 sjmp logf_exit
   0090                     215 	logf_exponent:
   0090 40 06               216 	 jc logf_exp_neg
                            217 	
   0092                     218 	logf_exp_pos:
   0092 24 82               219 	 add a, #130
   0094 C2 D5               220 	 clr psw.5
   0096 80 05               221 	 sjmp logf_exp_scale
   0098                     222 	logf_exp_neg:
                            223 	
   0098 F4                  224 	 cpl a
   0099 24 7F               225 	 add a, #127
   009B D2 D5               226 	 setb psw.5
   009D                     227 	logf_exp_scale:
                            228 	
   009D F8                  229 	 mov r0, a
                            230 	
                            231 	
   009E 12s00r00            232 	 lcall fs_swap_a_b
                            233 	
   00A1 74 18               234 	 mov a, #0x18
   00A3 88 F0               235 	 mov b, r0
   00A5 A4                  236 	 mul ab
   00A6 F9                  237 	 mov r1, a
   00A7 AA F0               238 	 mov r2, b
   00A9 74 B1               239 	 mov a, #0xB1
   00AB 88 F0               240 	 mov b, r0
   00AD A4                  241 	 mul ab
   00AE FB                  242 	 mov r3, a
   00AF AC F0               243 	 mov r4, b
   00B1 74 72               244 	 mov a, #0x72
   00B3 88 F0               245 	 mov b, r0
   00B5 A4                  246 	 mul ab
   00B6 2A                  247 	 add a, r2
   00B7 FA                  248 	 mov r2, a
   00B8 E5 F0               249 	 mov a, b
   00BA 3B                  250 	 addc a, r3
   00BB FB                  251 	 mov r3, a
   00BC E4                  252 	 clr a
   00BD 3C                  253 	 addc a, r4
   00BE FC                  254 	 mov r4, a
                            255 	
   00BF 75 82 86            256 	 mov dpl, #134
   00C2 12s00r00            257 	 lcall fs_normalize_a
                            258 	
   00C5 12s00r00            259 	 lcall fsadd_direct_entry
   00C8                     260 	logf_exit:
                            261 	 
   00C8 22                  262 	ret
                            263 	.area CSEG    (CODE)
                            264 	.area CONST   (CODE)
                            265 	.area XINIT   (CODE)
                            266 	.area CABS    (ABS,CODE)
