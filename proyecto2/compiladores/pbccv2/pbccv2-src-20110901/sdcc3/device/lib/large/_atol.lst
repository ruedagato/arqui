                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:28 2015
                              5 ;--------------------------------------------------------
                              6 	.module _atol
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _atol
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
   0000                      32 _atol_sloc0_1_0:
   0000                      33 	.ds 3
   0003                      34 _atol_sloc1_1_0:
   0003                      35 	.ds 3
   0006                      36 _atol_sloc2_1_0:
   0006                      37 	.ds 4
                             38 ;--------------------------------------------------------
                             39 ; overlayable items in internal ram 
                             40 ;--------------------------------------------------------
                             41 	.area OSEG    (OVR,DATA)
                             42 ;--------------------------------------------------------
                             43 ; indirectly addressable internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area ISEG    (DATA)
                             46 ;--------------------------------------------------------
                             47 ; absolute internal ram data
                             48 ;--------------------------------------------------------
                             49 	.area IABS    (ABS,DATA)
                             50 	.area IABS    (ABS,DATA)
                             51 ;--------------------------------------------------------
                             52 ; bit data
                             53 ;--------------------------------------------------------
                             54 	.area BSEG    (BIT)
                             55 ;--------------------------------------------------------
                             56 ; paged external ram data
                             57 ;--------------------------------------------------------
                             58 	.area PSEG    (PAG,XDATA)
                             59 ;--------------------------------------------------------
                             60 ; external ram data
                             61 ;--------------------------------------------------------
                             62 	.area XSEG    (XDATA)
   0000                      63 _atol_s_1_1:
   0000                      64 	.ds 3
                             65 ;--------------------------------------------------------
                             66 ; absolute external ram data
                             67 ;--------------------------------------------------------
                             68 	.area XABS    (ABS,XDATA)
                             69 ;--------------------------------------------------------
                             70 ; external initialized ram data
                             71 ;--------------------------------------------------------
                             72 	.area XISEG   (XDATA)
                             73 	.area HOME    (CODE)
                             74 	.area GSINIT0 (CODE)
                             75 	.area GSINIT1 (CODE)
                             76 	.area GSINIT2 (CODE)
                             77 	.area GSINIT3 (CODE)
                             78 	.area GSINIT4 (CODE)
                             79 	.area GSINIT5 (CODE)
                             80 	.area GSINIT  (CODE)
                             81 	.area GSFINAL (CODE)
                             82 	.area CSEG    (CODE)
                             83 ;--------------------------------------------------------
                             84 ; global & static initialisations
                             85 ;--------------------------------------------------------
                             86 	.area HOME    (CODE)
                             87 	.area GSINIT  (CODE)
                             88 	.area GSFINAL (CODE)
                             89 	.area GSINIT  (CODE)
                             90 ;--------------------------------------------------------
                             91 ; Home
                             92 ;--------------------------------------------------------
                             93 	.area HOME    (CODE)
                             94 	.area HOME    (CODE)
                             95 ;--------------------------------------------------------
                             96 ; code
                             97 ;--------------------------------------------------------
                             98 	.area CSEG    (CODE)
                             99 ;------------------------------------------------------------
                            100 ;Allocation info for local variables in function 'atol'
                            101 ;------------------------------------------------------------
                            102 ;rv                        Allocated to registers r2 r3 r4 r5 
                            103 ;sign                      Allocated to registers r0 
                            104 ;sloc0                     Allocated with name '_atol_sloc0_1_0'
                            105 ;sloc1                     Allocated with name '_atol_sloc1_1_0'
                            106 ;sloc2                     Allocated with name '_atol_sloc2_1_0'
                            107 ;s                         Allocated with name '_atol_s_1_1'
                            108 ;------------------------------------------------------------
                            109 ;	_atol.c:29: long atol(char * s)
                            110 ;	-----------------------------------------
                            111 ;	 function atol
                            112 ;	-----------------------------------------
   0000                     113 _atol:
                    0002    114 	ar2 = 0x02
                    0003    115 	ar3 = 0x03
                    0004    116 	ar4 = 0x04
                    0005    117 	ar5 = 0x05
                    0006    118 	ar6 = 0x06
                    0007    119 	ar7 = 0x07
                    0000    120 	ar0 = 0x00
                    0001    121 	ar1 = 0x01
   0000 AA F0               122 	mov	r2,b
   0002 AB 83               123 	mov	r3,dph
   0004 E5 82               124 	mov	a,dpl
   0006 90s00r00            125 	mov	dptr,#_atol_s_1_1
   0009 F0                  126 	movx	@dptr,a
   000A A3                  127 	inc	dptr
   000B EB                  128 	mov	a,r3
   000C F0                  129 	movx	@dptr,a
   000D A3                  130 	inc	dptr
   000E EA                  131 	mov	a,r2
   000F F0                  132 	movx	@dptr,a
                            133 ;	_atol.c:31: register long rv=0; 
   0010 7A 00               134 	mov	r2,#0x00
   0012 7B 00               135 	mov	r3,#0x00
   0014 7C 00               136 	mov	r4,#0x00
   0016 7D 00               137 	mov	r5,#0x00
                            138 ;	_atol.c:35: while (*s) {
   0018 90s00r00            139 	mov	dptr,#_atol_s_1_1
   001B E0                  140 	movx	a,@dptr
   001C FE                  141 	mov	r6,a
   001D A3                  142 	inc	dptr
   001E E0                  143 	movx	a,@dptr
   001F FF                  144 	mov	r7,a
   0020 A3                  145 	inc	dptr
   0021 E0                  146 	movx	a,@dptr
   0022 F8                  147 	mov	r0,a
   0023                     148 00107$:
   0023 8E 82               149 	mov	dpl,r6
   0025 8F 83               150 	mov	dph,r7
   0027 88 F0               151 	mov	b,r0
   0029 12s00r00            152 	lcall	__gptrget
   002C F9                  153 	mov	r1,a
   002D 60 39               154 	jz	00133$
                            155 ;	_atol.c:36: if (*s <= '9' && *s >= '0')
   002F C3                  156 	clr	c
   0030 74 B9               157 	mov	a,#(0x39 ^ 0x80)
   0032 89 F0               158 	mov	b,r1
   0034 63 F0 80            159 	xrl	b,#0x80
   0037 95 F0               160 	subb	a,b
   0039 40 07               161 	jc	00102$
   003B E9                  162 	mov	a,r1
   003C 64 80               163 	xrl	a,#0x80
   003E 94 B0               164 	subb	a,#0xb0
   0040 50 26               165 	jnc	00133$
                            166 ;	_atol.c:37: break;
   0042                     167 00102$:
                            168 ;	_atol.c:38: if (*s == '-' || *s == '+') 
   0042 8E 82               169 	mov	dpl,r6
   0044 8F 83               170 	mov	dph,r7
   0046 88 F0               171 	mov	b,r0
   0048 12s00r00            172 	lcall	__gptrget
   004B F9                  173 	mov	r1,a
   004C B9 2D 02            174 	cjne	r1,#0x2D,00138$
   004F 80 17               175 	sjmp	00133$
   0051                     176 00138$:
   0051 B9 2B 02            177 	cjne	r1,#0x2B,00139$
   0054 80 12               178 	sjmp	00133$
   0056                     179 00139$:
                            180 ;	_atol.c:40: s++;
   0056 0E                  181 	inc	r6
   0057 BE 00 01            182 	cjne	r6,#0x00,00140$
   005A 0F                  183 	inc	r7
   005B                     184 00140$:
   005B 90s00r00            185 	mov	dptr,#_atol_s_1_1
   005E EE                  186 	mov	a,r6
   005F F0                  187 	movx	@dptr,a
   0060 A3                  188 	inc	dptr
   0061 EF                  189 	mov	a,r7
   0062 F0                  190 	movx	@dptr,a
   0063 A3                  191 	inc	dptr
   0064 E8                  192 	mov	a,r0
   0065 F0                  193 	movx	@dptr,a
   0066 80 BB               194 	sjmp	00107$
   0068                     195 00133$:
   0068 90s00r00            196 	mov	dptr,#_atol_s_1_1
   006B EE                  197 	mov	a,r6
   006C F0                  198 	movx	@dptr,a
   006D A3                  199 	inc	dptr
   006E EF                  200 	mov	a,r7
   006F F0                  201 	movx	@dptr,a
   0070 A3                  202 	inc	dptr
   0071 E8                  203 	mov	a,r0
   0072 F0                  204 	movx	@dptr,a
                            205 ;	_atol.c:43: sign = (*s == '-');
   0073 8E*00               206 	mov	_atol_sloc0_1_0,r6
   0075 8F*01               207 	mov	(_atol_sloc0_1_0 + 1),r7
   0077 88*02               208 	mov	(_atol_sloc0_1_0 + 2),r0
   0079 8E 82               209 	mov	dpl,r6
   007B 8F 83               210 	mov	dph,r7
   007D 88 F0               211 	mov	b,r0
   007F 12s00r00            212 	lcall	__gptrget
   0082 FE                  213 	mov	r6,a
   0083 E4                  214 	clr	a
   0084 BE 2D 01            215 	cjne	r6,#0x2D,00141$
   0087 04                  216 	inc	a
   0088                     217 00141$:
                            218 ;	_atol.c:44: if (*s == '-' || *s == '+') s++;
   0088 FF                  219 	mov	r7,a
   0089 F8                  220 	mov	r0,a
   008A 70 03               221 	jnz	00110$
   008C BE 2B 11            222 	cjne	r6,#0x2B,00131$
   008F                     223 00110$:
   008F 90s00r00            224 	mov	dptr,#_atol_s_1_1
   0092 74 01               225 	mov	a,#0x01
   0094 25*00               226 	add	a,_atol_sloc0_1_0
   0096 F0                  227 	movx	@dptr,a
   0097 E4                  228 	clr	a
   0098 35*01               229 	addc	a,(_atol_sloc0_1_0 + 1)
   009A A3                  230 	inc	dptr
   009B F0                  231 	movx	@dptr,a
   009C A3                  232 	inc	dptr
   009D E5*02               233 	mov	a,(_atol_sloc0_1_0 + 2)
   009F F0                  234 	movx	@dptr,a
                            235 ;	_atol.c:46: while (*s && *s >= '0' && *s <= '9') {
   00A0                     236 00131$:
   00A0 90s00r00            237 	mov	dptr,#_atol_s_1_1
   00A3 E0                  238 	movx	a,@dptr
   00A4 F5*03               239 	mov	_atol_sloc1_1_0,a
   00A6 A3                  240 	inc	dptr
   00A7 E0                  241 	movx	a,@dptr
   00A8 F5*04               242 	mov	(_atol_sloc1_1_0 + 1),a
   00AA A3                  243 	inc	dptr
   00AB E0                  244 	movx	a,@dptr
   00AC F5*05               245 	mov	(_atol_sloc1_1_0 + 2),a
   00AE                     246 00115$:
   00AE 85*03 82            247 	mov	dpl,_atol_sloc1_1_0
   00B1 85*04 83            248 	mov	dph,(_atol_sloc1_1_0 + 1)
   00B4 85*05 F0            249 	mov	b,(_atol_sloc1_1_0 + 2)
   00B7 12s00r00            250 	lcall	__gptrget
   00BA F5*00               251 	mov	_atol_sloc0_1_0,a
   00BC 70 03               252 	jnz	00146$
   00BE 02s01r41            253 	ljmp	00134$
   00C1                     254 00146$:
   00C1 C3                  255 	clr	c
   00C2 E5*00               256 	mov	a,_atol_sloc0_1_0
   00C4 64 80               257 	xrl	a,#0x80
   00C6 94 B0               258 	subb	a,#0xb0
   00C8 50 03               259 	jnc	00147$
   00CA 02s01r41            260 	ljmp	00134$
   00CD                     261 00147$:
   00CD C3                  262 	clr	c
   00CE 74 B9               263 	mov	a,#(0x39 ^ 0x80)
   00D0 85*00 F0            264 	mov	b,_atol_sloc0_1_0
   00D3 63 F0 80            265 	xrl	b,#0x80
   00D6 95 F0               266 	subb	a,b
   00D8 40 67               267 	jc	00134$
                            268 ;	_atol.c:47: rv = (rv * 10) + (*s - '0');
   00DA C0 00               269 	push	ar0
   00DC 90s00r00            270 	mov	dptr,#__mullong_PARM_2
   00DF EA                  271 	mov	a,r2
   00E0 F0                  272 	movx	@dptr,a
   00E1 A3                  273 	inc	dptr
   00E2 EB                  274 	mov	a,r3
   00E3 F0                  275 	movx	@dptr,a
   00E4 A3                  276 	inc	dptr
   00E5 EC                  277 	mov	a,r4
   00E6 F0                  278 	movx	@dptr,a
   00E7 A3                  279 	inc	dptr
   00E8 ED                  280 	mov	a,r5
   00E9 F0                  281 	movx	@dptr,a
   00EA 90 00 0A            282 	mov	dptr,#(0x0A&0x00ff)
   00ED E4                  283 	clr	a
   00EE F5 F0               284 	mov	b,a
   00F0 C0 00               285 	push	ar0
   00F2 12s00r00            286 	lcall	__mullong
   00F5 85 82*06            287 	mov	_atol_sloc2_1_0,dpl
   00F8 85 83*07            288 	mov	(_atol_sloc2_1_0 + 1),dph
   00FB 85 F0*08            289 	mov	(_atol_sloc2_1_0 + 2),b
   00FE F5*09               290 	mov	(_atol_sloc2_1_0 + 3),a
   0100 D0 00               291 	pop	ar0
   0102 E5*00               292 	mov	a,_atol_sloc0_1_0
   0104 FE                  293 	mov	r6,a
   0105 33                  294 	rlc	a
   0106 95 E0               295 	subb	a,acc
   0108 FF                  296 	mov	r7,a
   0109 EE                  297 	mov	a,r6
   010A 24 D0               298 	add	a,#0xd0
   010C FE                  299 	mov	r6,a
   010D EF                  300 	mov	a,r7
   010E 34 FF               301 	addc	a,#0xff
   0110 FF                  302 	mov	r7,a
   0111 33                  303 	rlc	a
   0112 95 E0               304 	subb	a,acc
   0114 F8                  305 	mov	r0,a
   0115 F9                  306 	mov	r1,a
   0116 EE                  307 	mov	a,r6
   0117 25*06               308 	add	a,_atol_sloc2_1_0
   0119 FA                  309 	mov	r2,a
   011A EF                  310 	mov	a,r7
   011B 35*07               311 	addc	a,(_atol_sloc2_1_0 + 1)
   011D FB                  312 	mov	r3,a
   011E E8                  313 	mov	a,r0
   011F 35*08               314 	addc	a,(_atol_sloc2_1_0 + 2)
   0121 FC                  315 	mov	r4,a
   0122 E9                  316 	mov	a,r1
   0123 35*09               317 	addc	a,(_atol_sloc2_1_0 + 3)
   0125 FD                  318 	mov	r5,a
                            319 ;	_atol.c:48: s++;
   0126 05*03               320 	inc	_atol_sloc1_1_0
   0128 E4                  321 	clr	a
   0129 B5*03 02            322 	cjne	a,_atol_sloc1_1_0,00149$
   012C 05*04               323 	inc	(_atol_sloc1_1_0 + 1)
   012E                     324 00149$:
   012E 90s00r00            325 	mov	dptr,#_atol_s_1_1
   0131 E5*03               326 	mov	a,_atol_sloc1_1_0
   0133 F0                  327 	movx	@dptr,a
   0134 A3                  328 	inc	dptr
   0135 E5*04               329 	mov	a,(_atol_sloc1_1_0 + 1)
   0137 F0                  330 	movx	@dptr,a
   0138 A3                  331 	inc	dptr
   0139 E5*05               332 	mov	a,(_atol_sloc1_1_0 + 2)
   013B F0                  333 	movx	@dptr,a
   013C D0 00               334 	pop	ar0
   013E 02s00rAE            335 	ljmp	00115$
   0141                     336 00134$:
   0141 90s00r00            337 	mov	dptr,#_atol_s_1_1
   0144 E5*03               338 	mov	a,_atol_sloc1_1_0
   0146 F0                  339 	movx	@dptr,a
   0147 A3                  340 	inc	dptr
   0148 E5*04               341 	mov	a,(_atol_sloc1_1_0 + 1)
   014A F0                  342 	movx	@dptr,a
   014B A3                  343 	inc	dptr
   014C E5*05               344 	mov	a,(_atol_sloc1_1_0 + 2)
   014E F0                  345 	movx	@dptr,a
                            346 ;	_atol.c:51: return (sign ? -rv : rv);
   014F E8                  347 	mov	a,r0
   0150 60 0F               348 	jz	00120$
   0152 C3                  349 	clr	c
   0153 E4                  350 	clr	a
   0154 9A                  351 	subb	a,r2
   0155 FE                  352 	mov	r6,a
   0156 E4                  353 	clr	a
   0157 9B                  354 	subb	a,r3
   0158 FF                  355 	mov	r7,a
   0159 E4                  356 	clr	a
   015A 9C                  357 	subb	a,r4
   015B F8                  358 	mov	r0,a
   015C E4                  359 	clr	a
   015D 9D                  360 	subb	a,r5
   015E F9                  361 	mov	r1,a
   015F 80 08               362 	sjmp	00121$
   0161                     363 00120$:
   0161 8A 06               364 	mov	ar6,r2
   0163 8B 07               365 	mov	ar7,r3
   0165 8C 00               366 	mov	ar0,r4
   0167 8D 01               367 	mov	ar1,r5
   0169                     368 00121$:
   0169 8E 82               369 	mov	dpl,r6
   016B 8F 83               370 	mov	dph,r7
   016D 88 F0               371 	mov	b,r0
   016F E9                  372 	mov	a,r1
   0170 22                  373 	ret
                            374 	.area CSEG    (CODE)
                            375 	.area CONST   (CODE)
                            376 	.area XINIT   (CODE)
                            377 	.area CABS    (ABS,CODE)
