                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:21 2015
                              5 ;--------------------------------------------------------
                              6 	.module powf
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG (CODE)
                             14 	.area XINIT
                             15 	.area CONST   (CODE)
                             16 	.area DSEG
                             17 	.area OSEG    (OVR)
                             18 	.area BSEG
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl _powf_PARM_2
                             25 	.globl _powf_PARM_1
                             26 	.globl _powf
                             27 ;--------------------------------------------------------
                             28 ;  ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG
   0000                      31 _powf_sloc0_1_0:
   0000                      32 	.ds 1
   0001                      33 _powf_sloc1_1_0:
   0001                      34 	.ds 4
                             35 ;--------------------------------------------------------
                             36 ; overlayable items in  ram 
                             37 ;--------------------------------------------------------
                             38 	.area OSEG    (OVR)
                             39 ;--------------------------------------------------------
                             40 ; absolute external ram data
                             41 ;--------------------------------------------------------
                             42 	.area XABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; external initialized ram data
                             45 ;--------------------------------------------------------
                             46 	.area XISEG
                             47 ;--------------------------------------------------------
                             48 ; extended address mode data
                             49 ;--------------------------------------------------------
                             50 	.area XSEG
   0000                      51 _powf_PARM_1:
   0000                      52 	.ds 4
   0004                      53 _powf_PARM_2:
   0004                      54 	.ds 4
                             55 ;--------------------------------------------------------
                             56 ; global & static initialisations
                             57 ;--------------------------------------------------------
                             58 	.area HOME (CODE)
                             59 	.area GSINIT (CODE)
                             60 	.area GSFINAL (CODE)
                             61 	.area GSINIT (CODE)
                             62 ;--------------------------------------------------------
                             63 ; Home
                             64 ;--------------------------------------------------------
                             65 	.area HOME (CODE)
                             66 	.area HOME (CODE)
                             67 ;--------------------------------------------------------
                             68 ; code
                             69 ;--------------------------------------------------------
                             70 	.area CSEG (CODE)
                             71 ;------------------------------------------------------------
                             72 ;Allocation info for local variables in function 'powf'
                             73 ;------------------------------------------------------------
                             74 ;sloc0                     Allocated with name '_powf_sloc0_1_0'
                             75 ;sloc1                     Allocated with name '_powf_sloc1_1_0'
                             76 ;x                         Allocated with name '_powf_PARM_1'
                             77 ;y                         Allocated with name '_powf_PARM_2'
                             78 ;------------------------------------------------------------
                             79 ;../powf.c:35: float powf(const float x, const float y)
                             80 ;	-----------------------------------------
                             81 ;	 function powf
                             82 ;	-----------------------------------------
   0000                      83 _powf:
                             84 ;../powf.c:37: if(y == 0.0) return 1.0;
   0000 C6s00r07             85 	lda	(_powf_PARM_2 + 3)
   0003 CAs00r06             86 	ora	(_powf_PARM_2 + 2)
   0006 CAs00r05             87 	ora	(_powf_PARM_2 + 1)
   0009 CAs00r04             88 	ora	_powf_PARM_2
   000C 26 07                89 	bne	00102$
   000E                      90 00112$:
   000E 3F*00                91 	clr	*__ret3
   0010 3F*00                92 	clr	*__ret2
   0012 5F                   93 	clrx
   0013 4F                   94 	clra
   0014 81                   95 	rts
   0015                      96 00102$:
                             97 ;../powf.c:38: if(y==1.0) return x;
   0015 C6s00r04             98 	lda	_powf_PARM_2
   0018 C7s00r00             99 	sta	___fseq_PARM_1
   001B C6s00r05            100 	lda	(_powf_PARM_2 + 1)
   001E C7s00r01            101 	sta	(___fseq_PARM_1 + 1)
   0021 C6s00r06            102 	lda	(_powf_PARM_2 + 2)
   0024 C7s00r02            103 	sta	(___fseq_PARM_1 + 2)
   0027 C6s00r07            104 	lda	(_powf_PARM_2 + 3)
   002A C7s00r03            105 	sta	(___fseq_PARM_1 + 3)
   002D A6 3F               106 	lda	#0x3F
   002F C7s00r00            107 	sta	___fseq_PARM_2
   0032 A6 80               108 	lda	#0x80
   0034 C7s00r01            109 	sta	(___fseq_PARM_2 + 1)
   0037 4F                  110 	clra
   0038 C7s00r02            111 	sta	(___fseq_PARM_2 + 2)
   003B C7s00r03            112 	sta	(___fseq_PARM_2 + 3)
   003E CDs00r00            113 	jsr	___fseq
   0041 B7*00               114 	sta	*_powf_sloc0_1_0
   0043 3D*00               115 	tst	*_powf_sloc0_1_0
   0045 27 11               116 	beq	00104$
   0047                     117 00113$:
   0047 C6s00r00            118 	lda	_powf_PARM_1
   004A B7*00               119 	sta	*__ret3
   004C C6s00r01            120 	lda	(_powf_PARM_1 + 1)
   004F B7*00               121 	sta	*__ret2
   0051 CEs00r02            122 	ldx	(_powf_PARM_1 + 2)
   0054 C6s00r03            123 	lda	(_powf_PARM_1 + 3)
   0057 81                  124 	rts
   0058                     125 00104$:
                            126 ;../powf.c:39: if(x <= 0.0) return 0.0;
   0058 C6s00r00            127 	lda	_powf_PARM_1
   005B C7s00r00            128 	sta	___fsgt_PARM_1
   005E C6s00r01            129 	lda	(_powf_PARM_1 + 1)
   0061 C7s00r01            130 	sta	(___fsgt_PARM_1 + 1)
   0064 C6s00r02            131 	lda	(_powf_PARM_1 + 2)
   0067 C7s00r02            132 	sta	(___fsgt_PARM_1 + 2)
   006A C6s00r03            133 	lda	(_powf_PARM_1 + 3)
   006D C7s00r03            134 	sta	(___fsgt_PARM_1 + 3)
   0070 4F                  135 	clra
   0071 C7s00r00            136 	sta	___fsgt_PARM_2
   0074 C7s00r01            137 	sta	(___fsgt_PARM_2 + 1)
   0077 C7s00r02            138 	sta	(___fsgt_PARM_2 + 2)
   007A C7s00r03            139 	sta	(___fsgt_PARM_2 + 3)
   007D CDs00r00            140 	jsr	___fsgt
   0080 B7*00               141 	sta	*_powf_sloc0_1_0
   0082 3D*00               142 	tst	*_powf_sloc0_1_0
   0084 26 07               143 	bne	00106$
   0086                     144 00114$:
   0086 3F*00               145 	clr	*__ret3
   0088 3F*00               146 	clr	*__ret2
   008A 5F                  147 	clrx
   008B 4F                  148 	clra
   008C 81                  149 	rts
   008D                     150 00106$:
                            151 ;../powf.c:40: return expf(logf(x) * y);
   008D C6s00r03            152 	lda	(_powf_PARM_1 + 3)
   0090 87                  153 	psha
   0091 C6s00r02            154 	lda	(_powf_PARM_1 + 2)
   0094 87                  155 	psha
   0095 C6s00r01            156 	lda	(_powf_PARM_1 + 1)
   0098 87                  157 	psha
   0099 C6s00r00            158 	lda	_powf_PARM_1
   009C 87                  159 	psha
   009D CDs00r00            160 	jsr	_logf
   00A0 C7s00r03            161 	sta	(___fsmul_PARM_1 + 3)
   00A3 CFs00r02            162 	stx	(___fsmul_PARM_1 + 2)
   00A6 B6*00               163 	lda	*__ret2
   00A8 C7s00r01            164 	sta	(___fsmul_PARM_1 + 1)
   00AB B6*00               165 	lda	*__ret3
   00AD C7s00r00            166 	sta	___fsmul_PARM_1
   00B0 A7 04               167 	ais	#4
   00B2 C6s00r04            168 	lda	_powf_PARM_2
   00B5 C7s00r00            169 	sta	___fsmul_PARM_2
   00B8 C6s00r05            170 	lda	(_powf_PARM_2 + 1)
   00BB C7s00r01            171 	sta	(___fsmul_PARM_2 + 1)
   00BE C6s00r06            172 	lda	(_powf_PARM_2 + 2)
   00C1 C7s00r02            173 	sta	(___fsmul_PARM_2 + 2)
   00C4 C6s00r07            174 	lda	(_powf_PARM_2 + 3)
   00C7 C7s00r03            175 	sta	(___fsmul_PARM_2 + 3)
   00CA CDs00r00            176 	jsr	___fsmul
   00CD C7s00r03            177 	sta	(_expf_PARM_1 + 3)
   00D0 CFs00r02            178 	stx	(_expf_PARM_1 + 2)
   00D3 B6*00               179 	lda	*__ret2
   00D5 C7s00r01            180 	sta	(_expf_PARM_1 + 1)
   00D8 B6*00               181 	lda	*__ret3
   00DA C7s00r00            182 	sta	_expf_PARM_1
   00DD CDs00r00            183 	jsr	_expf
   00E0 B7*04               184 	sta	*(_powf_sloc1_1_0 + 3)
   00E2 BF*03               185 	stx	*(_powf_sloc1_1_0 + 2)
   00E4 4E*00*02            186 	mov	*__ret2,*(_powf_sloc1_1_0 + 1)
   00E7 4E*00*01            187 	mov	*__ret3,*_powf_sloc1_1_0
   00EA 4E*01*00            188 	mov	*_powf_sloc1_1_0,*__ret3
   00ED 4E*02*00            189 	mov	*(_powf_sloc1_1_0 + 1),*__ret2
   00F0 BE*03               190 	ldx	*(_powf_sloc1_1_0 + 2)
   00F2 B6*04               191 	lda	*(_powf_sloc1_1_0 + 3)
   00F4                     192 00107$:
   00F4 81                  193 	rts
                            194 	.area CSEG (CODE)
                            195 	.area CONST   (CODE)
                            196 	.area XINIT
                            197 	.area CABS    (ABS,CODE)
