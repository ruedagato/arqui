                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:24 2015
                              5 ;--------------------------------------------------------
                              6 	.module _atof
                              7 	.optsdcc -mmcs51 --model-medium
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _atof
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
   0000                      32 _atof_sloc0_1_0:
   0000                      33 	.ds 3
   0003                      34 _atof_sloc1_1_0:
   0003                      35 	.ds 4
   0007                      36 _atof_sloc2_1_0:
   0007                      37 	.ds 2
   0009                      38 _atof_sloc3_1_0:
   0009                      39 	.ds 4
                             40 ;--------------------------------------------------------
                             41 ; overlayable items in internal ram 
                             42 ;--------------------------------------------------------
                             43 	.area OSEG    (OVR,DATA)
                             44 ;--------------------------------------------------------
                             45 ; indirectly addressable internal ram data
                             46 ;--------------------------------------------------------
                             47 	.area ISEG    (DATA)
                             48 ;--------------------------------------------------------
                             49 ; absolute internal ram data
                             50 ;--------------------------------------------------------
                             51 	.area IABS    (ABS,DATA)
                             52 	.area IABS    (ABS,DATA)
                             53 ;--------------------------------------------------------
                             54 ; bit data
                             55 ;--------------------------------------------------------
                             56 	.area BSEG    (BIT)
   0000                      57 _atof_sign_1_1:
   0000                      58 	.ds 1
                             59 ;--------------------------------------------------------
                             60 ; paged external ram data
                             61 ;--------------------------------------------------------
                             62 	.area PSEG    (PAG,XDATA)
   0000                      63 _atof_s_1_1:
   0000                      64 	.ds 3
   0003                      65 _atof_value_1_1:
   0003                      66 	.ds 4
   0007                      67 _atof_fraction_1_1:
   0007                      68 	.ds 4
                             69 ;--------------------------------------------------------
                             70 ; external ram data
                             71 ;--------------------------------------------------------
                             72 	.area XSEG    (XDATA)
                             73 ;--------------------------------------------------------
                             74 ; absolute external ram data
                             75 ;--------------------------------------------------------
                             76 	.area XABS    (ABS,XDATA)
                             77 ;--------------------------------------------------------
                             78 ; external initialized ram data
                             79 ;--------------------------------------------------------
                             80 	.area XISEG   (XDATA)
                             81 	.area HOME    (CODE)
                             82 	.area GSINIT0 (CODE)
                             83 	.area GSINIT1 (CODE)
                             84 	.area GSINIT2 (CODE)
                             85 	.area GSINIT3 (CODE)
                             86 	.area GSINIT4 (CODE)
                             87 	.area GSINIT5 (CODE)
                             88 	.area GSINIT  (CODE)
                             89 	.area GSFINAL (CODE)
                             90 	.area CSEG    (CODE)
                             91 ;--------------------------------------------------------
                             92 ; global & static initialisations
                             93 ;--------------------------------------------------------
                             94 	.area HOME    (CODE)
                             95 	.area GSINIT  (CODE)
                             96 	.area GSFINAL (CODE)
                             97 	.area GSINIT  (CODE)
                             98 ;--------------------------------------------------------
                             99 ; Home
                            100 ;--------------------------------------------------------
                            101 	.area HOME    (CODE)
                            102 	.area HOME    (CODE)
                            103 ;--------------------------------------------------------
                            104 ; code
                            105 ;--------------------------------------------------------
                            106 	.area CSEG    (CODE)
                            107 ;------------------------------------------------------------
                            108 ;Allocation info for local variables in function 'atof'
                            109 ;------------------------------------------------------------
                            110 ;sloc0                     Allocated with name '_atof_sloc0_1_0'
                            111 ;sloc1                     Allocated with name '_atof_sloc1_1_0'
                            112 ;sloc2                     Allocated with name '_atof_sloc2_1_0'
                            113 ;sloc3                     Allocated with name '_atof_sloc3_1_0'
                            114 ;------------------------------------------------------------
                            115 ;	_atof.c:33: float atof(const char * s)
                            116 ;	-----------------------------------------
                            117 ;	 function atof
                            118 ;	-----------------------------------------
   0000                     119 _atof:
                    0002    120 	ar2 = 0x02
                    0003    121 	ar3 = 0x03
                    0004    122 	ar4 = 0x04
                    0005    123 	ar5 = 0x05
                    0006    124 	ar6 = 0x06
                    0007    125 	ar7 = 0x07
                    0000    126 	ar0 = 0x00
                    0001    127 	ar1 = 0x01
   0000 AA F0               128 	mov	r2,b
   0002 AB 83               129 	mov	r3,dph
   0004 E5 82               130 	mov	a,dpl
   0006 78r00               131 	mov	r0,#_atof_s_1_1
   0008 F2                  132 	movx	@r0,a
   0009 08                  133 	inc	r0
   000A EB                  134 	mov	a,r3
   000B F2                  135 	movx	@r0,a
   000C 08                  136 	inc	r0
   000D EA                  137 	mov	a,r2
   000E F2                  138 	movx	@r0,a
                            139 ;	_atof.c:40: while (isspace(*s)) s++;
   000F 78r00               140 	mov	r0,#_atof_s_1_1
   0011 E2                  141 	movx	a,@r0
   0012 FD                  142 	mov	r5,a
   0013 08                  143 	inc	r0
   0014 E2                  144 	movx	a,@r0
   0015 FE                  145 	mov	r6,a
   0016 08                  146 	inc	r0
   0017 E2                  147 	movx	a,@r0
   0018 FF                  148 	mov	r7,a
   0019                     149 00101$:
   0019 8D 82               150 	mov	dpl,r5
   001B 8E 83               151 	mov	dph,r6
   001D 8F F0               152 	mov	b,r7
   001F 12s00r00            153 	lcall	__gptrget
   0022 F5 82               154 	mov	dpl,a
   0024 C0 05               155 	push	ar5
   0026 C0 06               156 	push	ar6
   0028 C0 07               157 	push	ar7
   002A 12s00r00            158 	lcall	_isspace
   002D E5 82               159 	mov	a,dpl
   002F D0 07               160 	pop	ar7
   0031 D0 06               161 	pop	ar6
   0033 D0 05               162 	pop	ar5
   0035 60 07               163 	jz	00148$
   0037 0D                  164 	inc	r5
   0038 BD 00 DE            165 	cjne	r5,#0x00,00101$
   003B 0E                  166 	inc	r6
   003C 80 DB               167 	sjmp	00101$
   003E                     168 00148$:
   003E 78r00               169 	mov	r0,#_atof_s_1_1
   0040 ED                  170 	mov	a,r5
   0041 F2                  171 	movx	@r0,a
   0042 08                  172 	inc	r0
   0043 EE                  173 	mov	a,r6
   0044 F2                  174 	movx	@r0,a
   0045 08                  175 	inc	r0
   0046 EF                  176 	mov	a,r7
   0047 F2                  177 	movx	@r0,a
                            178 ;	_atof.c:43: if (*s == '-')
   0048 8D 82               179 	mov	dpl,r5
   004A 8E 83               180 	mov	dph,r6
   004C 8F F0               181 	mov	b,r7
   004E 12s00r00            182 	lcall	__gptrget
   0051 F8                  183 	mov	r0,a
   0052 B8 2D 11            184 	cjne	r0,#0x2D,00107$
                            185 ;	_atof.c:45: sign=1;
   0055 D2*00               186 	setb	_atof_sign_1_1
                            187 ;	_atof.c:46: s++;
   0057 78r00               188 	mov	r0,#_atof_s_1_1
   0059 74 01               189 	mov	a,#0x01
   005B 2D                  190 	add	a,r5
   005C F2                  191 	movx	@r0,a
   005D E4                  192 	clr	a
   005E 3E                  193 	addc	a,r6
   005F 08                  194 	inc	r0
   0060 F2                  195 	movx	@r0,a
   0061 08                  196 	inc	r0
   0062 EF                  197 	mov	a,r7
   0063 F2                  198 	movx	@r0,a
   0064 80 12               199 	sjmp	00108$
   0066                     200 00107$:
                            201 ;	_atof.c:50: sign=0;
   0066 C2*00               202 	clr	_atof_sign_1_1
                            203 ;	_atof.c:51: if (*s == '+') s++;
   0068 B8 2B 0D            204 	cjne	r0,#0x2B,00108$
   006B 78r00               205 	mov	r0,#_atof_s_1_1
   006D 74 01               206 	mov	a,#0x01
   006F 2D                  207 	add	a,r5
   0070 F2                  208 	movx	@r0,a
   0071 E4                  209 	clr	a
   0072 3E                  210 	addc	a,r6
   0073 08                  211 	inc	r0
   0074 F2                  212 	movx	@r0,a
   0075 08                  213 	inc	r0
   0076 EF                  214 	mov	a,r7
   0077 F2                  215 	movx	@r0,a
   0078                     216 00108$:
                            217 ;	_atof.c:55: for (value=0.0; isdigit(*s); s++)
   0078 78r03               218 	mov	r0,#_atof_value_1_1
   007A E4                  219 	clr	a
   007B F2                  220 	movx	@r0,a
   007C 08                  221 	inc	r0
   007D F2                  222 	movx	@r0,a
   007E 08                  223 	inc	r0
   007F F2                  224 	movx	@r0,a
   0080 08                  225 	inc	r0
   0081 F2                  226 	movx	@r0,a
   0082 78r00               227 	mov	r0,#_atof_s_1_1
   0084 E2                  228 	movx	a,@r0
   0085 F5*00               229 	mov	_atof_sloc0_1_0,a
   0087 08                  230 	inc	r0
   0088 E2                  231 	movx	a,@r0
   0089 F5*01               232 	mov	(_atof_sloc0_1_0 + 1),a
   008B 08                  233 	inc	r0
   008C E2                  234 	movx	a,@r0
   008D F5*02               235 	mov	(_atof_sloc0_1_0 + 2),a
   008F                     236 00121$:
   008F 85*00 82            237 	mov	dpl,_atof_sloc0_1_0
   0092 85*01 83            238 	mov	dph,(_atof_sloc0_1_0 + 1)
   0095 85*02 F0            239 	mov	b,(_atof_sloc0_1_0 + 2)
   0098 12s00r00            240 	lcall	__gptrget
   009B F5 82               241 	mov	dpl,a
   009D 12s00r00            242 	lcall	_isdigit
   00A0 E5 82               243 	mov	a,dpl
   00A2 70 03               244 	jnz	00156$
   00A4 02s01r3C            245 	ljmp	00149$
   00A7                     246 00156$:
                            247 ;	_atof.c:57: value=10.0*value+(*s-'0');
   00A7 78r03               248 	mov	r0,#_atof_value_1_1
   00A9 E2                  249 	movx	a,@r0
   00AA C0 E0               250 	push	acc
   00AC 08                  251 	inc	r0
   00AD E2                  252 	movx	a,@r0
   00AE C0 E0               253 	push	acc
   00B0 08                  254 	inc	r0
   00B1 E2                  255 	movx	a,@r0
   00B2 C0 E0               256 	push	acc
   00B4 08                  257 	inc	r0
   00B5 E2                  258 	movx	a,@r0
   00B6 C0 E0               259 	push	acc
   00B8 90 00 00            260 	mov	dptr,#0x0000
   00BB 75 F0 20            261 	mov	b,#0x20
   00BE 74 41               262 	mov	a,#0x41
   00C0 12s00r00            263 	lcall	___fsmul
   00C3 85 82*03            264 	mov	_atof_sloc1_1_0,dpl
   00C6 85 83*04            265 	mov	(_atof_sloc1_1_0 + 1),dph
   00C9 85 F0*05            266 	mov	(_atof_sloc1_1_0 + 2),b
   00CC F5*06               267 	mov	(_atof_sloc1_1_0 + 3),a
   00CE E5 81               268 	mov	a,sp
   00D0 24 FC               269 	add	a,#0xfc
   00D2 F5 81               270 	mov	sp,a
   00D4 85*00 82            271 	mov	dpl,_atof_sloc0_1_0
   00D7 85*01 83            272 	mov	dph,(_atof_sloc0_1_0 + 1)
   00DA 85*02 F0            273 	mov	b,(_atof_sloc0_1_0 + 2)
   00DD 12s00r00            274 	lcall	__gptrget
   00E0 FF                  275 	mov	r7,a
   00E1 A3                  276 	inc	dptr
   00E2 85 82*00            277 	mov	_atof_sloc0_1_0,dpl
   00E5 85 83*01            278 	mov	(_atof_sloc0_1_0 + 1),dph
   00E8 EF                  279 	mov	a,r7
   00E9 F5*07               280 	mov	_atof_sloc2_1_0,a
   00EB 33                  281 	rlc	a
   00EC 95 E0               282 	subb	a,acc
   00EE F5*08               283 	mov	(_atof_sloc2_1_0 + 1),a
   00F0 E5*07               284 	mov	a,_atof_sloc2_1_0
   00F2 24 D0               285 	add	a,#0xd0
   00F4 F5 82               286 	mov	dpl,a
   00F6 E5*08               287 	mov	a,(_atof_sloc2_1_0 + 1)
   00F8 34 FF               288 	addc	a,#0xff
   00FA F5 83               289 	mov	dph,a
   00FC 12s00r00            290 	lcall	___sint2fs
   00FF 85 82*09            291 	mov	_atof_sloc3_1_0,dpl
   0102 85 83*0A            292 	mov	(_atof_sloc3_1_0 + 1),dph
   0105 85 F0*0B            293 	mov	(_atof_sloc3_1_0 + 2),b
   0108 F5*0C               294 	mov	(_atof_sloc3_1_0 + 3),a
   010A C0*09               295 	push	_atof_sloc3_1_0
   010C C0*0A               296 	push	(_atof_sloc3_1_0 + 1)
   010E C0*0B               297 	push	(_atof_sloc3_1_0 + 2)
   0110 C0*0C               298 	push	(_atof_sloc3_1_0 + 3)
   0112 85*03 82            299 	mov	dpl,_atof_sloc1_1_0
   0115 85*04 83            300 	mov	dph,(_atof_sloc1_1_0 + 1)
   0118 85*05 F0            301 	mov	b,(_atof_sloc1_1_0 + 2)
   011B E5*06               302 	mov	a,(_atof_sloc1_1_0 + 3)
   011D 12s00r00            303 	lcall	___fsadd
   0120 78r03               304 	mov	r0,#_atof_value_1_1
   0122 C0 E0               305 	push	acc
   0124 E5 82               306 	mov	a,dpl
   0126 F2                  307 	movx	@r0,a
   0127 08                  308 	inc	r0
   0128 E5 83               309 	mov	a,dph
   012A F2                  310 	movx	@r0,a
   012B 08                  311 	inc	r0
   012C E5 F0               312 	mov	a,b
   012E F2                  313 	movx	@r0,a
   012F D0 E0               314 	pop	acc
   0131 08                  315 	inc	r0
   0132 F2                  316 	movx	@r0,a
   0133 E5 81               317 	mov	a,sp
   0135 24 FC               318 	add	a,#0xfc
   0137 F5 81               319 	mov	sp,a
                            320 ;	_atof.c:55: for (value=0.0; isdigit(*s); s++)
   0139 02s00r8F            321 	ljmp	00121$
   013C                     322 00149$:
   013C 78r00               323 	mov	r0,#_atof_s_1_1
   013E E5*00               324 	mov	a,_atof_sloc0_1_0
   0140 F2                  325 	movx	@r0,a
   0141 08                  326 	inc	r0
   0142 E5*01               327 	mov	a,(_atof_sloc0_1_0 + 1)
   0144 F2                  328 	movx	@r0,a
   0145 08                  329 	inc	r0
   0146 E5*02               330 	mov	a,(_atof_sloc0_1_0 + 2)
   0148 F2                  331 	movx	@r0,a
                            332 ;	_atof.c:61: if (*s == '.')
   0149 85*00 82            333 	mov	dpl,_atof_sloc0_1_0
   014C 85*01 83            334 	mov	dph,(_atof_sloc0_1_0 + 1)
   014F 85*02 F0            335 	mov	b,(_atof_sloc0_1_0 + 2)
   0152 12s00r00            336 	lcall	__gptrget
   0155 FF                  337 	mov	r7,a
   0156 BF 2E 02            338 	cjne	r7,#0x2E,00157$
   0159 80 03               339 	sjmp	00158$
   015B                     340 00157$:
   015B 02s02r71            341 	ljmp	00110$
   015E                     342 00158$:
                            343 ;	_atof.c:63: s++;
   015E 78r00               344 	mov	r0,#_atof_s_1_1
   0160 74 01               345 	mov	a,#0x01
   0162 25*00               346 	add	a,_atof_sloc0_1_0
   0164 F2                  347 	movx	@r0,a
   0165 E4                  348 	clr	a
   0166 35*01               349 	addc	a,(_atof_sloc0_1_0 + 1)
   0168 08                  350 	inc	r0
   0169 F2                  351 	movx	@r0,a
   016A 08                  352 	inc	r0
   016B E5*02               353 	mov	a,(_atof_sloc0_1_0 + 2)
   016D F2                  354 	movx	@r0,a
                            355 ;	_atof.c:64: for (fraction=0.1; isdigit(*s); s++)
   016E 78r07               356 	mov	r0,#_atof_fraction_1_1
   0170 74 CD               357 	mov	a,#0xCD
   0172 F2                  358 	movx	@r0,a
   0173 08                  359 	inc	r0
   0174 74 CC               360 	mov	a,#0xCC
   0176 F2                  361 	movx	@r0,a
   0177 08                  362 	inc	r0
   0178 74 CC               363 	mov	a,#0xCC
   017A F2                  364 	movx	@r0,a
   017B 08                  365 	inc	r0
   017C 74 3D               366 	mov	a,#0x3D
   017E F2                  367 	movx	@r0,a
   017F 78r00               368 	mov	r0,#_atof_s_1_1
   0181 E2                  369 	movx	a,@r0
   0182 F5*09               370 	mov	_atof_sloc3_1_0,a
   0184 08                  371 	inc	r0
   0185 E2                  372 	movx	a,@r0
   0186 F5*0A               373 	mov	(_atof_sloc3_1_0 + 1),a
   0188 08                  374 	inc	r0
   0189 E2                  375 	movx	a,@r0
   018A F5*0B               376 	mov	(_atof_sloc3_1_0 + 2),a
   018C                     377 00125$:
   018C 85*09 82            378 	mov	dpl,_atof_sloc3_1_0
   018F 85*0A 83            379 	mov	dph,(_atof_sloc3_1_0 + 1)
   0192 85*0B F0            380 	mov	b,(_atof_sloc3_1_0 + 2)
   0195 12s00r00            381 	lcall	__gptrget
   0198 F5 82               382 	mov	dpl,a
   019A 12s00r00            383 	lcall	_isdigit
   019D E5 82               384 	mov	a,dpl
   019F 70 03               385 	jnz	00159$
   01A1 02s02r64            386 	ljmp	00150$
   01A4                     387 00159$:
                            388 ;	_atof.c:66: value+=(*s-'0')*fraction;
   01A4 85*09 82            389 	mov	dpl,_atof_sloc3_1_0
   01A7 85*0A 83            390 	mov	dph,(_atof_sloc3_1_0 + 1)
   01AA 85*0B F0            391 	mov	b,(_atof_sloc3_1_0 + 2)
   01AD 12s00r00            392 	lcall	__gptrget
   01B0 FC                  393 	mov	r4,a
   01B1 A3                  394 	inc	dptr
   01B2 85 82*09            395 	mov	_atof_sloc3_1_0,dpl
   01B5 85 83*0A            396 	mov	(_atof_sloc3_1_0 + 1),dph
   01B8 EC                  397 	mov	a,r4
   01B9 33                  398 	rlc	a
   01BA 95 E0               399 	subb	a,acc
   01BC FA                  400 	mov	r2,a
   01BD EC                  401 	mov	a,r4
   01BE 24 D0               402 	add	a,#0xd0
   01C0 F5 82               403 	mov	dpl,a
   01C2 EA                  404 	mov	a,r2
   01C3 34 FF               405 	addc	a,#0xff
   01C5 F5 83               406 	mov	dph,a
   01C7 12s00r00            407 	lcall	___sint2fs
   01CA AA 82               408 	mov	r2,dpl
   01CC AB 83               409 	mov	r3,dph
   01CE AC F0               410 	mov	r4,b
   01D0 FF                  411 	mov	r7,a
   01D1 78r07               412 	mov	r0,#_atof_fraction_1_1
   01D3 E2                  413 	movx	a,@r0
   01D4 C0 E0               414 	push	acc
   01D6 08                  415 	inc	r0
   01D7 E2                  416 	movx	a,@r0
   01D8 C0 E0               417 	push	acc
   01DA 08                  418 	inc	r0
   01DB E2                  419 	movx	a,@r0
   01DC C0 E0               420 	push	acc
   01DE 08                  421 	inc	r0
   01DF E2                  422 	movx	a,@r0
   01E0 C0 E0               423 	push	acc
   01E2 8A 82               424 	mov	dpl,r2
   01E4 8B 83               425 	mov	dph,r3
   01E6 8C F0               426 	mov	b,r4
   01E8 EF                  427 	mov	a,r7
   01E9 12s00r00            428 	lcall	___fsmul
   01EC AA 82               429 	mov	r2,dpl
   01EE AB 83               430 	mov	r3,dph
   01F0 AC F0               431 	mov	r4,b
   01F2 FF                  432 	mov	r7,a
   01F3 E5 81               433 	mov	a,sp
   01F5 24 FC               434 	add	a,#0xfc
   01F7 F5 81               435 	mov	sp,a
   01F9 C0 02               436 	push	ar2
   01FB C0 03               437 	push	ar3
   01FD C0 04               438 	push	ar4
   01FF C0 07               439 	push	ar7
   0201 78r03               440 	mov	r0,#_atof_value_1_1
   0203 E2                  441 	movx	a,@r0
   0204 F5 82               442 	mov	dpl,a
   0206 08                  443 	inc	r0
   0207 E2                  444 	movx	a,@r0
   0208 F5 83               445 	mov	dph,a
   020A 08                  446 	inc	r0
   020B E2                  447 	movx	a,@r0
   020C F5 F0               448 	mov	b,a
   020E 08                  449 	inc	r0
   020F E2                  450 	movx	a,@r0
   0210 12s00r00            451 	lcall	___fsadd
   0213 78r03               452 	mov	r0,#_atof_value_1_1
   0215 C0 E0               453 	push	acc
   0217 E5 82               454 	mov	a,dpl
   0219 F2                  455 	movx	@r0,a
   021A 08                  456 	inc	r0
   021B E5 83               457 	mov	a,dph
   021D F2                  458 	movx	@r0,a
   021E 08                  459 	inc	r0
   021F E5 F0               460 	mov	a,b
   0221 F2                  461 	movx	@r0,a
   0222 D0 E0               462 	pop	acc
   0224 08                  463 	inc	r0
   0225 F2                  464 	movx	@r0,a
   0226 E5 81               465 	mov	a,sp
   0228 24 FC               466 	add	a,#0xfc
   022A F5 81               467 	mov	sp,a
                            468 ;	_atof.c:67: fraction*=0.1;
   022C 78r07               469 	mov	r0,#_atof_fraction_1_1
   022E E2                  470 	movx	a,@r0
   022F C0 E0               471 	push	acc
   0231 08                  472 	inc	r0
   0232 E2                  473 	movx	a,@r0
   0233 C0 E0               474 	push	acc
   0235 08                  475 	inc	r0
   0236 E2                  476 	movx	a,@r0
   0237 C0 E0               477 	push	acc
   0239 08                  478 	inc	r0
   023A E2                  479 	movx	a,@r0
   023B C0 E0               480 	push	acc
   023D 90 CC CD            481 	mov	dptr,#0xCCCD
   0240 75 F0 CC            482 	mov	b,#0xCC
   0243 74 3D               483 	mov	a,#0x3D
   0245 12s00r00            484 	lcall	___fsmul
   0248 78r07               485 	mov	r0,#_atof_fraction_1_1
   024A C0 E0               486 	push	acc
   024C E5 82               487 	mov	a,dpl
   024E F2                  488 	movx	@r0,a
   024F 08                  489 	inc	r0
   0250 E5 83               490 	mov	a,dph
   0252 F2                  491 	movx	@r0,a
   0253 08                  492 	inc	r0
   0254 E5 F0               493 	mov	a,b
   0256 F2                  494 	movx	@r0,a
   0257 D0 E0               495 	pop	acc
   0259 08                  496 	inc	r0
   025A F2                  497 	movx	@r0,a
   025B E5 81               498 	mov	a,sp
   025D 24 FC               499 	add	a,#0xfc
   025F F5 81               500 	mov	sp,a
                            501 ;	_atof.c:64: for (fraction=0.1; isdigit(*s); s++)
   0261 02s01r8C            502 	ljmp	00125$
   0264                     503 00150$:
   0264 78r00               504 	mov	r0,#_atof_s_1_1
   0266 E5*09               505 	mov	a,_atof_sloc3_1_0
   0268 F2                  506 	movx	@r0,a
   0269 08                  507 	inc	r0
   026A E5*0A               508 	mov	a,(_atof_sloc3_1_0 + 1)
   026C F2                  509 	movx	@r0,a
   026D 08                  510 	inc	r0
   026E E5*0B               511 	mov	a,(_atof_sloc3_1_0 + 2)
   0270 F2                  512 	movx	@r0,a
   0271                     513 00110$:
                            514 ;	_atof.c:72: if (toupper(*s)=='E')
   0271 78r00               515 	mov	r0,#_atof_s_1_1
   0273 E2                  516 	movx	a,@r0
   0274 F5 82               517 	mov	dpl,a
   0276 08                  518 	inc	r0
   0277 E2                  519 	movx	a,@r0
   0278 F5 83               520 	mov	dph,a
   027A 08                  521 	inc	r0
   027B E2                  522 	movx	a,@r0
   027C F5 F0               523 	mov	b,a
   027E 12s00r00            524 	lcall	__gptrget
   0281 F5 82               525 	mov	dpl,a
   0283 12s00r00            526 	lcall	_islower
   0286 E5 82               527 	mov	a,dpl
   0288 60 16               528 	jz	00131$
   028A 78r00               529 	mov	r0,#_atof_s_1_1
   028C E2                  530 	movx	a,@r0
   028D F5 82               531 	mov	dpl,a
   028F 08                  532 	inc	r0
   0290 E2                  533 	movx	a,@r0
   0291 F5 83               534 	mov	dph,a
   0293 08                  535 	inc	r0
   0294 E2                  536 	movx	a,@r0
   0295 F5 F0               537 	mov	b,a
   0297 12s00r00            538 	lcall	__gptrget
   029A FA                  539 	mov	r2,a
   029B 53 02 DF            540 	anl	ar2,#0xDF
   029E 80 11               541 	sjmp	00132$
   02A0                     542 00131$:
   02A0 78r00               543 	mov	r0,#_atof_s_1_1
   02A2 E2                  544 	movx	a,@r0
   02A3 F5 82               545 	mov	dpl,a
   02A5 08                  546 	inc	r0
   02A6 E2                  547 	movx	a,@r0
   02A7 F5 83               548 	mov	dph,a
   02A9 08                  549 	inc	r0
   02AA E2                  550 	movx	a,@r0
   02AB F5 F0               551 	mov	b,a
   02AD 12s00r00            552 	lcall	__gptrget
   02B0 FA                  553 	mov	r2,a
   02B1                     554 00132$:
   02B1 BA 45 02            555 	cjne	r2,#0x45,00161$
   02B4 80 03               556 	sjmp	00162$
   02B6                     557 00161$:
   02B6 02s03r5B            558 	ljmp	00118$
   02B9                     559 00162$:
                            560 ;	_atof.c:74: s++;
   02B9 78r00               561 	mov	r0,#_atof_s_1_1
   02BB E2                  562 	movx	a,@r0
   02BC 24 01               563 	add	a,#0x01
   02BE F2                  564 	movx	@r0,a
   02BF 08                  565 	inc	r0
   02C0 E2                  566 	movx	a,@r0
   02C1 34 00               567 	addc	a,#0x00
   02C3 F2                  568 	movx	@r0,a
                            569 ;	_atof.c:75: iexp=(signed char)atoi(s);
   02C4 78r00               570 	mov	r0,#_atof_s_1_1
   02C6 E2                  571 	movx	a,@r0
   02C7 F5 82               572 	mov	dpl,a
   02C9 08                  573 	inc	r0
   02CA E2                  574 	movx	a,@r0
   02CB F5 83               575 	mov	dph,a
   02CD 08                  576 	inc	r0
   02CE E2                  577 	movx	a,@r0
   02CF F5 F0               578 	mov	b,a
   02D1 12s00r00            579 	lcall	_atoi
   02D4 AA 82               580 	mov	r2,dpl
   02D6 AB 83               581 	mov	r3,dph
                            582 ;	_atof.c:77: while(iexp!=0)
   02D8                     583 00114$:
   02D8 EA                  584 	mov	a,r2
   02D9 70 03               585 	jnz	00163$
   02DB 02s03r5B            586 	ljmp	00118$
   02DE                     587 00163$:
                            588 ;	_atof.c:79: if(iexp<0)
   02DE EA                  589 	mov	a,r2
   02DF 30 E7 3C            590 	jnb	acc.7,00112$
                            591 ;	_atof.c:81: value*=0.1;
   02E2 C0 02               592 	push	ar2
   02E4 78r03               593 	mov	r0,#_atof_value_1_1
   02E6 E2                  594 	movx	a,@r0
   02E7 C0 E0               595 	push	acc
   02E9 08                  596 	inc	r0
   02EA E2                  597 	movx	a,@r0
   02EB C0 E0               598 	push	acc
   02ED 08                  599 	inc	r0
   02EE E2                  600 	movx	a,@r0
   02EF C0 E0               601 	push	acc
   02F1 08                  602 	inc	r0
   02F2 E2                  603 	movx	a,@r0
   02F3 C0 E0               604 	push	acc
   02F5 90 CC CD            605 	mov	dptr,#0xCCCD
   02F8 75 F0 CC            606 	mov	b,#0xCC
   02FB 74 3D               607 	mov	a,#0x3D
   02FD 12s00r00            608 	lcall	___fsmul
   0300 78r03               609 	mov	r0,#_atof_value_1_1
   0302 C0 E0               610 	push	acc
   0304 E5 82               611 	mov	a,dpl
   0306 F2                  612 	movx	@r0,a
   0307 08                  613 	inc	r0
   0308 E5 83               614 	mov	a,dph
   030A F2                  615 	movx	@r0,a
   030B 08                  616 	inc	r0
   030C E5 F0               617 	mov	a,b
   030E F2                  618 	movx	@r0,a
   030F D0 E0               619 	pop	acc
   0311 08                  620 	inc	r0
   0312 F2                  621 	movx	@r0,a
   0313 E5 81               622 	mov	a,sp
   0315 24 FC               623 	add	a,#0xfc
   0317 F5 81               624 	mov	sp,a
   0319 D0 02               625 	pop	ar2
                            626 ;	_atof.c:82: iexp++;
   031B 0A                  627 	inc	r2
   031C 80 BA               628 	sjmp	00114$
   031E                     629 00112$:
                            630 ;	_atof.c:86: value*=10.0;
   031E C0 02               631 	push	ar2
   0320 78r03               632 	mov	r0,#_atof_value_1_1
   0322 E2                  633 	movx	a,@r0
   0323 C0 E0               634 	push	acc
   0325 08                  635 	inc	r0
   0326 E2                  636 	movx	a,@r0
   0327 C0 E0               637 	push	acc
   0329 08                  638 	inc	r0
   032A E2                  639 	movx	a,@r0
   032B C0 E0               640 	push	acc
   032D 08                  641 	inc	r0
   032E E2                  642 	movx	a,@r0
   032F C0 E0               643 	push	acc
   0331 90 00 00            644 	mov	dptr,#0x0000
   0334 75 F0 20            645 	mov	b,#0x20
   0337 74 41               646 	mov	a,#0x41
   0339 12s00r00            647 	lcall	___fsmul
   033C 78r03               648 	mov	r0,#_atof_value_1_1
   033E C0 E0               649 	push	acc
   0340 E5 82               650 	mov	a,dpl
   0342 F2                  651 	movx	@r0,a
   0343 08                  652 	inc	r0
   0344 E5 83               653 	mov	a,dph
   0346 F2                  654 	movx	@r0,a
   0347 08                  655 	inc	r0
   0348 E5 F0               656 	mov	a,b
   034A F2                  657 	movx	@r0,a
   034B D0 E0               658 	pop	acc
   034D 08                  659 	inc	r0
   034E F2                  660 	movx	@r0,a
   034F E5 81               661 	mov	a,sp
   0351 24 FC               662 	add	a,#0xfc
   0353 F5 81               663 	mov	sp,a
   0355 D0 02               664 	pop	ar2
                            665 ;	_atof.c:87: iexp--;
   0357 1A                  666 	dec	r2
   0358 02s02rD8            667 	ljmp	00114$
   035B                     668 00118$:
                            669 ;	_atof.c:93: if(sign) value*=-1.0;
   035B 30*00 0F            670 	jnb	_atof_sign_1_1,00120$
   035E 78r03               671 	mov	r0,#_atof_value_1_1
   0360 E2                  672 	movx	a,@r0
   0361 F2                  673 	movx	@r0,a
   0362 08                  674 	inc	r0
   0363 E2                  675 	movx	a,@r0
   0364 F2                  676 	movx	@r0,a
   0365 08                  677 	inc	r0
   0366 E2                  678 	movx	a,@r0
   0367 F2                  679 	movx	@r0,a
   0368 08                  680 	inc	r0
   0369 E2                  681 	movx	a,@r0
   036A B2 E7               682 	cpl	acc.7
   036C F2                  683 	movx	@r0,a
   036D                     684 00120$:
                            685 ;	_atof.c:94: return (value);
   036D 78r03               686 	mov	r0,#_atof_value_1_1
   036F E2                  687 	movx	a,@r0
   0370 F5 82               688 	mov	dpl,a
   0372 08                  689 	inc	r0
   0373 E2                  690 	movx	a,@r0
   0374 F5 83               691 	mov	dph,a
   0376 08                  692 	inc	r0
   0377 E2                  693 	movx	a,@r0
   0378 F5 F0               694 	mov	b,a
   037A 08                  695 	inc	r0
   037B E2                  696 	movx	a,@r0
   037C 22                  697 	ret
                            698 	.area CSEG    (CODE)
                            699 	.area CONST   (CODE)
                            700 	.area XINIT   (CODE)
                            701 	.area CABS    (ABS,CODE)
