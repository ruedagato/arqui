                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:18:18 2015
                              5 ;--------------------------------------------------------
                              6 	.module _malloc
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __sdcc_heap_init
                             13 	.globl _malloc
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ;  ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; overlayable items in  ram 
                             23 ;--------------------------------------------------------
                             24 	.area _OVERLAY
                             25 ;--------------------------------------------------------
                             26 ; external initialized ram data
                             27 ;--------------------------------------------------------
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../_malloc.c:59: _sdcc_heap_init(void)
                             45 ;	---------------------------------
                             46 ; Function _sdcc_heap_init
                             47 ; ---------------------------------
   0000                      48 __sdcc_heap_init_start::
   0000                      49 __sdcc_heap_init:
                             50 ;../_malloc.c:61: MEMHEADER *pbase = &_sdcc_heap_start;
                             51 ;../_malloc.c:62: unsigned int size = &_sdcc_heap_end - (char *)pbase;
   0000 3Er00                52 	ld	a,#<(__sdcc_heap_end)
   0002 D6r00                53 	sub	a,#<(__sdcc_heap_start)
   0004 6F                   54 	ld	l,a
   0005 3Es00                55 	ld	a,#>(__sdcc_heap_end)
   0007 DEs00                56 	sbc	a,#>(__sdcc_heap_start)
   0009 67                   57 	ld	h,a
                             58 ;../_malloc.c:64: pbase->next = (MEMHEADER *)((char *)pbase + size - HEADER_SIZE);
   000A 3Er00                59 	ld	a,#<(__sdcc_heap_start)
   000C 85                   60 	add	a,l
   000D 4F                   61 	ld	c,a
   000E 3Es00                62 	ld	a,#>(__sdcc_heap_start)
   0010 8C                   63 	adc	a,h
   0011 47                   64 	ld	b,a
   0012 79                   65 	ld	a,c
   0013 C6 FA                66 	add	a,#0xFA
   0015 4F                   67 	ld	c,a
   0016 78                   68 	ld	a,b
   0017 CE FF                69 	adc	a,#0xFF
   0019 47                   70 	ld	b,a
   001A 21r00s00             71 	ld	hl,#__sdcc_heap_start
   001D 71                   72 	ld	(hl),c
   001E 23                   73 	inc	hl
   001F 70                   74 	ld	(hl),b
                             75 ;../_malloc.c:65: pbase->next->next = NULL; //And mark it as last
   0020 69                   76 	ld	l,c
   0021 60                   77 	ld	h,b
   0022 36 00                78 	ld	(hl),#0x00
   0024 23                   79 	inc	hl
   0025 36 00                80 	ld	(hl),#0x00
                             81 ;../_malloc.c:66: pbase->prev       = NULL; //and mark first as first
   0027 21r02s00             82 	ld	hl,#0x0002 + __sdcc_heap_start
   002A 36 00                83 	ld	(hl),#0x00
   002C 23                   84 	inc	hl
   002D 36 00                85 	ld	(hl),#0x00
                             86 ;../_malloc.c:67: pbase->len        = 0;    //Empty and ready.
   002F 23                   87 	inc	hl
   0030 36 00                88 	ld	(hl),#0x00
   0032 23                   89 	inc	hl
   0033 36 00                90 	ld	(hl),#0x00
   0035 C9                   91 	ret
   0036                      92 __sdcc_heap_init_end::
                             93 ;../_malloc.c:71: malloc (unsigned int size)
                             94 ;	---------------------------------
                             95 ; Function malloc
                             96 ; ---------------------------------
   0036                      97 _malloc_start::
   0036                      98 _malloc:
   0036 DD E5                99 	push	ix
   0038 DD 21 00 00         100 	ld	ix,#0
   003C DD 39               101 	add	ix,sp
   003E 21 FA FF            102 	ld	hl,#-6
   0041 39                  103 	add	hl,sp
   0042 F9                  104 	ld	sp,hl
                            105 ;../_malloc.c:77: if (size>(0xFFFF-HEADER_SIZE))
   0043 3E F9               106 	ld	a,#0xF9
   0045 DD 96 04            107 	sub	a, 4 (ix)
   0048 3E FF               108 	ld	a,#0xFF
   004A DD 9E 05            109 	sbc	a, 5 (ix)
   004D 30 06               110 	jr	NC,00102$
                            111 ;../_malloc.c:79: return NULL; //To prevent overflow in next line
   004F 21 00 00            112 	ld	hl,#0x0000
   0052 C3r8Es01            113 	jp	00117$
   0055                     114 00102$:
                            115 ;../_malloc.c:82: size += HEADER_SIZE; //We need a memory for header too
   0055 DD 7E 04            116 	ld	a,4 (ix)
   0058 C6 06               117 	add	a,#0x06
   005A DD 77 04            118 	ld	4 (ix),a
   005D DD 7E 05            119 	ld	a,5 (ix)
   0060 CE 00               120 	adc	a,#0x00
   0062 DD 77 05            121 	ld	5 (ix),a
                            122 ;../_malloc.c:83: current_header = &_sdcc_heap_start;
   0065 DD 36 FEr00         123 	ld	-2 (ix),#<(__sdcc_heap_start)
   0069 DD 36 FFs00         124 	ld	-1 (ix),#>(__sdcc_heap_start)
                            125 ;../_malloc.c:132: }
   006D ED 57               126 	ld	a,i
   006F F3                  127 	di
   0070 F5                  128 	push	af
                            129 ;../_malloc.c:87: while (1)
   0071                     130 00108$:
                            131 ;../_malloc.c:96: if ((((unsigned int)current_header->next) -
   0071 DD 6E FE            132 	ld	l,-2 (ix)
   0074 DD 66 FF            133 	ld	h,-1 (ix)
   0077 5E                  134 	ld	e,(hl)
   0078 23                  135 	inc	hl
   0079 56                  136 	ld	d,(hl)
   007A 6B                  137 	ld	l,e
   007B 62                  138 	ld	h,d
                            139 ;../_malloc.c:97: ((unsigned int)current_header) -
   007C DD 4E FE            140 	ld	c,-2 (ix)
   007F DD 46 FF            141 	ld	b,-1 (ix)
   0082 7D                  142 	ld	a,l
   0083 91                  143 	sub	a,c
   0084 DD 77 FA            144 	ld	-6 (ix),a
   0087 7C                  145 	ld	a,h
   0088 98                  146 	sbc	a,b
   0089 DD 77 FB            147 	ld	-5 (ix),a
                            148 ;../_malloc.c:98: current_header->len) >= size)
   008C DD 7E FE            149 	ld	a,-2 (ix)
   008F C6 04               150 	add	a,#0x04
   0091 6F                  151 	ld	l, a
   0092 DD 7E FF            152 	ld	a, -1 (ix)
   0095 CE 00               153 	adc	a, #0x00
   0097 67                  154 	ld	h, a
   0098 7E                  155 	ld	a,(hl)
   0099 23                  156 	inc	hl
   009A 66                  157 	ld	h,(hl)
   009B 6F                  158 	ld	l,a
   009C DD 7E FA            159 	ld	a,-6 (ix)
   009F 95                  160 	sub	a,l
   00A0 6F                  161 	ld	l,a
   00A1 DD 7E FB            162 	ld	a,-5 (ix)
   00A4 9C                  163 	sbc	a,h
   00A5 67                  164 	ld	h,a
   00A6 7D                  165 	ld	a,l
   00A7 DD 96 04            166 	sub	a, 4 (ix)
   00AA 7C                  167 	ld	a,h
   00AB DD 9E 05            168 	sbc	a, 5 (ix)
   00AE 38 0E               169 	jr	C,00104$
                            170 ;../_malloc.c:100: ret = &current_header->mem;
   00B0 DD 7E FE            171 	ld	a,-2 (ix)
   00B3 C6 06               172 	add	a,#0x06
   00B5 4F                  173 	ld	c,a
   00B6 DD 7E FF            174 	ld	a,-1 (ix)
   00B9 CE 00               175 	adc	a,#0x00
   00BB 47                  176 	ld	b,a
                            177 ;../_malloc.c:101: break;
   00BC 18 16               178 	jr	00109$
   00BE                     179 00104$:
                            180 ;../_malloc.c:103: current_header = current_header->next;    //else try next
   00BE DD 73 FE            181 	ld	-2 (ix), e
   00C1 DD 72 FF            182 	ld	-1 (ix), d
                            183 ;../_malloc.c:104: if (!current_header->next)
   00C4 DD 6E FE            184 	ld	l,-2 (ix)
   00C7 DD 66 FF            185 	ld	h,-1 (ix)
   00CA 7E                  186 	ld	a,(hl)
   00CB 23                  187 	inc	hl
   00CC 66                  188 	ld	h,(hl)
   00CD 6F                  189 	ld	l,a
   00CE B4                  190 	or	a,h
   00CF 20 A0               191 	jr	NZ,00108$
                            192 ;../_malloc.c:106: ret = NULL;
   00D1 01 00 00            193 	ld	bc,#0x0000
                            194 ;../_malloc.c:107: break;
   00D4                     195 00109$:
                            196 ;../_malloc.c:111: if (ret)
   00D4 79                  197 	ld	a,c
   00D5 B0                  198 	or	a,b
   00D6 CAr87s01            199 	jp	Z,00116$
                            200 ;../_malloc.c:113: if (!current_header->len)
   00D9 DD 7E FE            201 	ld	a,-2 (ix)
   00DC C6 04               202 	add	a,#0x04
   00DE 5F                  203 	ld	e,a
   00DF DD 7E FF            204 	ld	a,-1 (ix)
   00E2 CE 00               205 	adc	a,#0x00
   00E4 57                  206 	ld	d, a
   00E5 6B                  207 	ld	l, e
   00E6 67                  208 	ld	h, a
   00E7 7E                  209 	ld	a,(hl)
   00E8 DD 77 FA            210 	ld	-6 (ix),a
   00EB 23                  211 	inc	hl
   00EC 7E                  212 	ld	a,(hl)
   00ED DD 77 FB            213 	ld	-5 (ix),a
   00F0 DD 7E FA            214 	ld	a,-6 (ix)
   00F3 DD B6 FB            215 	or	a,-5 (ix)
   00F6 20 0E               216 	jr	NZ,00113$
                            217 ;../_malloc.c:115: current_header->len = size; //for first allocation
   00F8 6B                  218 	ld	l,e
   00F9 62                  219 	ld	h,d
   00FA DD 7E 04            220 	ld	a,4 (ix)
   00FD 77                  221 	ld	(hl),a
   00FE 23                  222 	inc	hl
   00FF DD 7E 05            223 	ld	a,5 (ix)
   0102 77                  224 	ld	(hl),a
   0103 C3r87s01            225 	jp	00116$
   0106                     226 00113$:
                            227 ;../_malloc.c:120: new_header = (MEMHEADER * )((char *)current_header + current_header->len);
   0106 DD 7E FE            228 	ld	a,-2 (ix)
   0109 DD 86 FA            229 	add	a,-6 (ix)
   010C 5F                  230 	ld	e,a
   010D DD 7E FF            231 	ld	a,-1 (ix)
   0110 DD 8E FB            232 	adc	a,-5 (ix)
   0113 DD 73 FC            233 	ld	-4 (ix), e
   0116 DD 77 FD            234 	ld	-3 (ix), a
                            235 ;../_malloc.c:121: new_header->next = current_header->next; //and plug it into the chain
   0119 DD 6E FE            236 	ld	l,-2 (ix)
   011C DD 66 FF            237 	ld	h,-1 (ix)
   011F 4E                  238 	ld	c,(hl)
   0120 23                  239 	inc	hl
   0121 46                  240 	ld	b,(hl)
   0122 DD 6E FC            241 	ld	l,-4 (ix)
   0125 DD 66 FD            242 	ld	h,-3 (ix)
   0128 71                  243 	ld	(hl),c
   0129 23                  244 	inc	hl
   012A 70                  245 	ld	(hl),b
                            246 ;../_malloc.c:122: new_header->prev = current_header;
   012B DD 6E FC            247 	ld	l, -4 (ix)
   012E DD 66 FD            248 	ld	h, -3 (ix)
   0131 23                  249 	inc	hl
   0132 23                  250 	inc	hl
   0133 DD 7E FE            251 	ld	a,-2 (ix)
   0136 77                  252 	ld	(hl),a
   0137 23                  253 	inc	hl
   0138 DD 7E FF            254 	ld	a,-1 (ix)
   013B 77                  255 	ld	(hl),a
                            256 ;../_malloc.c:123: current_header->next  = new_header;
   013C DD 6E FE            257 	ld	l,-2 (ix)
   013F DD 66 FF            258 	ld	h,-1 (ix)
   0142 DD 7E FC            259 	ld	a,-4 (ix)
   0145 77                  260 	ld	(hl),a
   0146 23                  261 	inc	hl
   0147 DD 7E FD            262 	ld	a,-3 (ix)
   014A 77                  263 	ld	(hl),a
                            264 ;../_malloc.c:124: if (new_header->next)
   014B DD 6E FC            265 	ld	l,-4 (ix)
   014E DD 66 FD            266 	ld	h,-3 (ix)
   0151 7E                  267 	ld	a,(hl)
   0152 23                  268 	inc	hl
   0153 66                  269 	ld	h,(hl)
   0154 6F                  270 	ld	l,a
   0155 79                  271 	ld	a,c
   0156 B0                  272 	or	a,b
   0157 28 0B               273 	jr	Z,00111$
                            274 ;../_malloc.c:126: new_header->next->prev = new_header;
   0159 23                  275 	inc	hl
   015A 23                  276 	inc	hl
   015B DD 7E FC            277 	ld	a,-4 (ix)
   015E 77                  278 	ld	(hl),a
   015F 23                  279 	inc	hl
   0160 DD 7E FD            280 	ld	a,-3 (ix)
   0163 77                  281 	ld	(hl),a
   0164                     282 00111$:
                            283 ;../_malloc.c:128: new_header->len  = size; //mark as used
   0164 DD 7E FC            284 	ld	a,-4 (ix)
   0167 C6 04               285 	add	a,#0x04
   0169 5F                  286 	ld	e,a
   016A DD 7E FD            287 	ld	a,-3 (ix)
   016D CE 00               288 	adc	a,#0x00
   016F 57                  289 	ld	d, a
   0170 6B                  290 	ld	l, e
   0171 67                  291 	ld	h, a
   0172 DD 7E 04            292 	ld	a,4 (ix)
   0175 77                  293 	ld	(hl),a
   0176 23                  294 	inc	hl
   0177 DD 7E 05            295 	ld	a,5 (ix)
   017A 77                  296 	ld	(hl),a
                            297 ;../_malloc.c:129: ret = &new_header->mem;
   017B DD 7E FC            298 	ld	a,-4 (ix)
   017E C6 06               299 	add	a,#0x06
   0180 4F                  300 	ld	c,a
   0181 DD 7E FD            301 	ld	a,-3 (ix)
   0184 CE 00               302 	adc	a,#0x00
   0186 47                  303 	ld	b,a
   0187                     304 00116$:
   0187 F1                  305 	pop	af
   0188 E2r8Cs01            306 	jp	PO,00127$
   018B FB                  307 	ei
   018C                     308 00127$:
                            309 ;../_malloc.c:133: return ret;
   018C 69                  310 	ld	l,c
   018D 60                  311 	ld	h,b
   018E                     312 00117$:
   018E DD F9               313 	ld	sp,ix
   0190 DD E1               314 	pop	ix
   0192 C9                  315 	ret
   0193                     316 _malloc_end::
                            317 	.area _CODE
                            318 	.area _CABS
