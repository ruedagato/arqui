                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:16 2015
                              5 ;--------------------------------------------------------
                              6 	.module _ispunct
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _ispunct
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 ;--------------------------------------------------------
                             43 ; internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area DSEG    (DATA)
                             46 ;--------------------------------------------------------
                             47 ; overlayable items in internal ram 
                             48 ;--------------------------------------------------------
                             49 	.area OSEG    (OVR,DATA)
                             50 ;--------------------------------------------------------
                             51 ; indirectly addressable internal ram data
                             52 ;--------------------------------------------------------
                             53 	.area ISEG    (DATA)
                             54 ;--------------------------------------------------------
                             55 ; absolute internal ram data
                             56 ;--------------------------------------------------------
                             57 	.area IABS    (ABS,DATA)
                             58 	.area IABS    (ABS,DATA)
                             59 ;--------------------------------------------------------
                             60 ; bit data
                             61 ;--------------------------------------------------------
                             62 	.area BSEG    (BIT)
                             63 ;--------------------------------------------------------
                             64 ; paged external ram data
                             65 ;--------------------------------------------------------
                             66 	.area PSEG    (PAG,XDATA)
                             67 ;--------------------------------------------------------
                             68 ; external ram data
                             69 ;--------------------------------------------------------
                             70 	.area XSEG    (XDATA)
                             71 ;--------------------------------------------------------
                             72 ; absolute external ram data
                             73 ;--------------------------------------------------------
                             74 	.area XABS    (ABS,XDATA)
                             75 ;--------------------------------------------------------
                             76 ; external initialized ram data
                             77 ;--------------------------------------------------------
                             78 	.area XISEG   (XDATA)
                             79 ;--------------------------------------------------------
                             80 ; global & static initialisations
                             81 ;--------------------------------------------------------
                             82 	.area HOME    (CODE)
                             83 	.area GSINIT  (CODE)
                             84 	.area GSFINAL (CODE)
                             85 	.area GSINIT  (CODE)
                             86 ;--------------------------------------------------------
                             87 ; Home
                             88 ;--------------------------------------------------------
                             89 	.area HOME    (CODE)
                             90 	.area HOME    (CODE)
                             91 ;--------------------------------------------------------
                             92 ; code
                             93 ;--------------------------------------------------------
                             94 	.area CSEG    (CODE)
                             95 ;------------------------------------------------------------
                             96 ;Allocation info for local variables in function 'ispunct'
                             97 ;------------------------------------------------------------
                             98 ;c                         Allocated to registers r2 
                             99 ;------------------------------------------------------------
                            100 ;	_ispunct.c:31: char ispunct (unsigned char c)
                            101 ;	-----------------------------------------
                            102 ;	 function ispunct
                            103 ;	-----------------------------------------
   0000                     104 _ispunct:
                    0002    105 	ar2 = 0x02
                    0003    106 	ar3 = 0x03
                    0004    107 	ar4 = 0x04
                    0005    108 	ar5 = 0x05
                    0006    109 	ar6 = 0x06
                    0007    110 	ar7 = 0x07
                    0000    111 	ar0 = 0x00
                    0001    112 	ar1 = 0x01
   0000 AA 82               113 	mov	r2,dpl
                            114 ;	_ispunct.c:33: if ( isprint (c) &&
   0002 C0 02               115 	push	ar2
   0004 8A 82               116 	mov	dpl,r2
   0006 12s00r00r00         117 	lcall	_isprint
   000A D0 02               118 	pop	ar2
   000C E5 82               119 	mov	a,dpl
   000E 60 38               120 	jz  00102$
   0010                     121 00114$:
                            122 ;	_ispunct.c:34: !islower(c) &&
   0010 C0 02               123 	push	ar2
   0012 8A 82               124 	mov	dpl,r2
   0014 12s00r00r00         125 	lcall	_islower
   0018 D0 02               126 	pop	ar2
   001A E5 82               127 	mov	a,dpl
   001C 70 2A               128 	jnz  00102$
   001E                     129 00115$:
                            130 ;	_ispunct.c:35: !isupper(c) &&
   001E C0 02               131 	push	ar2
   0020 8A 82               132 	mov	dpl,r2
   0022 12s00r00r00         133 	lcall	_isupper
   0026 D0 02               134 	pop	ar2
   0028 E5 82               135 	mov	a,dpl
   002A 70 1C               136 	jnz  00102$
   002C                     137 00116$:
                            138 ;	_ispunct.c:36: !isspace(c) &&
   002C C0 02               139 	push	ar2
   002E 8A 82               140 	mov	dpl,r2
   0030 12s00r00r00         141 	lcall	_isspace
   0034 D0 02               142 	pop	ar2
   0036 E5 82               143 	mov	a,dpl
   0038 70 0E               144 	jnz  00102$
   003A                     145 00117$:
                            146 ;	_ispunct.c:37: !isdigit(c) )
   003A 8A 82               147 	mov	dpl,r2
   003C 12s00r00r00         148 	lcall	_isdigit
   0040 E5 82               149 	mov	a,dpl
   0042 70 04               150 	jnz  00102$
   0044                     151 00118$:
                            152 ;	_ispunct.c:38: return 1;
   0044 75 82 01            153 	mov	dpl,#0x01
                            154 ;	_ispunct.c:39: return 0;
   0047 22                  155 	ret
   0048                     156 00102$:
   0048 75 82 00            157 	mov     dpl,#0x00
   004B                     158 00107$:
   004B 22                  159 	ret
                            160 	.area CSEG    (CODE)
                            161 	.area CONST   (CODE)
                            162 	.area XINIT   (CODE)
                            163 	.area CABS    (ABS,CODE)
