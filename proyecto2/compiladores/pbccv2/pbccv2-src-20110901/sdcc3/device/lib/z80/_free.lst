                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:18:18 2015
                              5 ;--------------------------------------------------------
                              6 	.module _free
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __sdcc_find_memheader
                             13 	.globl __sdcc_prev_memheader
                             14 	.globl _free
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ;  ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
   0000                      22 __sdcc_prev_memheader::
   0000                      23 	.ds 2
                             24 ;--------------------------------------------------------
                             25 ; overlayable items in  ram 
                             26 ;--------------------------------------------------------
                             27 	.area _OVERLAY
                             28 ;--------------------------------------------------------
                             29 ; external initialized ram data
                             30 ;--------------------------------------------------------
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _GSINIT
                             36 	.area _GSFINAL
                             37 	.area _GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _HOME
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area _CODE
                             47 ;../_free.c:62: _sdcc_find_memheader(void * p)
                             48 ;	---------------------------------
                             49 ; Function _sdcc_find_memheader
                             50 ; ---------------------------------
   0000                      51 __sdcc_find_memheader_start::
   0000                      52 __sdcc_find_memheader:
   0000 DD E5                53 	push	ix
   0002 DD 21 00 00          54 	ld	ix,#0
   0006 DD 39                55 	add	ix,sp
                             56 ;../_free.c:65: if (!p)
   0008 DD 7E 04             57 	ld	a,4 (ix)
   000B DD B6 05             58 	or	a,5 (ix)
   000E 20 05                59 	jr	NZ,00102$
                             60 ;../_free.c:66: return NULL;
   0010 21 00 00             61 	ld	hl,#0x0000
   0013 18 20                62 	jr	00103$
   0015                      63 00102$:
                             64 ;../_free.c:67: pthis = (MEMHEADER * )((char *)  p - HEADER_SIZE); //to start of header
   0015 DD 7E 04             65 	ld	a, 4 (ix)
   0018 DD 66 05             66 	ld	h, 5 (ix)
   001B C6 FA                67 	add	a,#0xFA
   001D 4F                   68 	ld	c,a
   001E 7C                   69 	ld	a,h
   001F CE FF                70 	adc	a,#0xFF
                             71 ;../_free.c:68: _sdcc_prev_memheader = pthis->prev;
   0021 47                   72 	ld	b, a
   0022 69                   73 	ld	l, c
   0023 67                   74 	ld	h, a
   0024 23                   75 	inc	hl
   0025 23                   76 	inc	hl
   0026 7E                   77 	ld	a,(hl)
   0027 FD 21r00s00          78 	ld	iy,#__sdcc_prev_memheader
   002B FD 77 00             79 	ld	0 (iy),a
   002E 23                   80 	inc	hl
   002F 7E                   81 	ld	a,(hl)
   0030 FD 77 01             82 	ld	1 (iy),a
                             83 ;../_free.c:70: return (pthis);
   0033 69                   84 	ld	l,c
   0034 60                   85 	ld	h,b
   0035                      86 00103$:
   0035 DD E1                87 	pop	ix
   0037 C9                   88 	ret
   0038                      89 __sdcc_find_memheader_end::
                             90 ;../_free.c:74: free (void *p)
                             91 ;	---------------------------------
                             92 ; Function free
                             93 ; ---------------------------------
   0038                      94 _free_start::
   0038                      95 _free:
   0038 DD E5                96 	push	ix
   003A DD 21 00 00          97 	ld	ix,#0
   003E DD 39                98 	add	ix,sp
   0040 F5                   99 	push	af
                            100 ;../_free.c:78: if ( p ) //For allocated pointers only!
   0041 DD 7E 04            101 	ld	a,4 (ix)
   0044 DD B6 05            102 	or	a,5 (ix)
   0047 28 55               103 	jr	Z,00108$
                            104 ;../_free.c:95: }
   0049 ED 57               105 	ld	a,i
   004B F3                  106 	di
   004C F5                  107 	push	af
                            108 ;../_free.c:81: pthis = (MEMHEADER * )((char *)  p - HEADER_SIZE); //to start of header
   004D DD 7E 04            109 	ld	a, 4 (ix)
   0050 DD 66 05            110 	ld	h, 5 (ix)
   0053 C6 FA               111 	add	a,#0xFA
   0055 4F                  112 	ld	c,a
   0056 7C                  113 	ld	a,h
   0057 CE FF               114 	adc	a,#0xFF
                            115 ;../_free.c:82: if ( pthis->prev ) // For the regular header
   0059 47                  116 	ld	b, a
   005A 59                  117 	ld	e, c
   005B 57                  118 	ld	d, a
   005C 13                  119 	inc	de
   005D 13                  120 	inc	de
   005E 6B                  121 	ld	l,e
   005F 62                  122 	ld	h,d
   0060 7E                  123 	ld	a,(hl)
   0061 23                  124 	inc	hl
   0062 66                  125 	ld	h,(hl)
   0063 6F                  126 	ld	l,a
   0064 B4                  127 	or	a,h
   0065 28 27               128 	jr	Z,00104$
                            129 ;../_free.c:84: prev_header = pthis->prev;
   0067 DD 75 FE            130 	ld	-2 (ix),l
   006A DD 74 FF            131 	ld	-1 (ix),h
                            132 ;../_free.c:85: prev_header->next = pthis->next;
   006D 69                  133 	ld	l,c
   006E 60                  134 	ld	h,b
   006F 5E                  135 	ld	e,(hl)
   0070 23                  136 	inc	hl
   0071 56                  137 	ld	d,(hl)
   0072 DD 6E FE            138 	ld	l,-2 (ix)
   0075 DD 66 FF            139 	ld	h,-1 (ix)
   0078 73                  140 	ld	(hl),e
   0079 23                  141 	inc	hl
   007A 72                  142 	ld	(hl),d
                            143 ;../_free.c:86: if (pthis->next)
   007B 7B                  144 	ld	a,e
   007C B2                  145 	or	a,d
   007D 28 1A               146 	jr	Z,00105$
                            147 ;../_free.c:88: pthis->next->prev = prev_header;
   007F 13                  148 	inc	de
   0080 13                  149 	inc	de
   0081 6B                  150 	ld	l,e
   0082 62                  151 	ld	h,d
   0083 DD 7E FE            152 	ld	a,-2 (ix)
   0086 77                  153 	ld	(hl),a
   0087 23                  154 	inc	hl
   0088 DD 7E FF            155 	ld	a,-1 (ix)
   008B 77                  156 	ld	(hl),a
   008C 18 0B               157 	jr	00105$
   008E                     158 00104$:
                            159 ;../_free.c:93: pthis->len = 0; //For the first header
   008E 03                  160 	inc	bc
   008F 03                  161 	inc	bc
   0090 03                  162 	inc	bc
   0091 03                  163 	inc	bc
   0092 69                  164 	ld	l,c
   0093 60                  165 	ld	h,b
   0094 36 00               166 	ld	(hl),#0x00
   0096 23                  167 	inc	hl
   0097 36 00               168 	ld	(hl),#0x00
   0099                     169 00105$:
   0099 F1                  170 	pop	af
   009A E2r9Es00            171 	jp	PO,00114$
   009D FB                  172 	ei
   009E                     173 00114$:
   009E                     174 00108$:
   009E DD F9               175 	ld	sp,ix
   00A0 DD E1               176 	pop	ix
   00A2 C9                  177 	ret
   00A3                     178 _free_end::
                            179 	.area _CODE
                            180 	.area _CABS
