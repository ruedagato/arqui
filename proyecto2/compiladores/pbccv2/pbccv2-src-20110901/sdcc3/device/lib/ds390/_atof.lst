                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:15 2015
                              5 ;--------------------------------------------------------
                              6 	.module _atof
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _atof
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 ;--------------------------------------------------------
                             43 ; internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area DSEG    (DATA)
                             46 ;--------------------------------------------------------
                             47 ; overlayable items in internal ram 
                             48 ;--------------------------------------------------------
                             49 	.area OSEG    (OVR,DATA)
                             50 ;--------------------------------------------------------
                             51 ; indirectly addressable internal ram data
                             52 ;--------------------------------------------------------
                             53 	.area ISEG    (DATA)
                             54 ;--------------------------------------------------------
                             55 ; absolute internal ram data
                             56 ;--------------------------------------------------------
                             57 	.area IABS    (ABS,DATA)
                             58 	.area IABS    (ABS,DATA)
                             59 ;--------------------------------------------------------
                             60 ; bit data
                             61 ;--------------------------------------------------------
                             62 	.area BSEG    (BIT)
   0000                      63 _atof_sign_1_1:
   0000                      64 	.ds 1
                             65 ;--------------------------------------------------------
                             66 ; paged external ram data
                             67 ;--------------------------------------------------------
                             68 	.area PSEG    (PAG,XDATA)
                             69 ;--------------------------------------------------------
                             70 ; external ram data
                             71 ;--------------------------------------------------------
                             72 	.area XSEG    (XDATA)
   0000                      73 _atof_s_1_1:
   0000                      74 	.ds 4
   0004                      75 _atof_value_1_1:
   0004                      76 	.ds 4
   0008                      77 _atof_fraction_1_1:
   0008                      78 	.ds 4
   000C                      79 _atof_sloc0_1_0:
   000C                      80 	.ds 4
                             81 ;--------------------------------------------------------
                             82 ; absolute external ram data
                             83 ;--------------------------------------------------------
                             84 	.area XABS    (ABS,XDATA)
                             85 ;--------------------------------------------------------
                             86 ; external initialized ram data
                             87 ;--------------------------------------------------------
                             88 	.area XISEG   (XDATA)
                             89 ;--------------------------------------------------------
                             90 ; global & static initialisations
                             91 ;--------------------------------------------------------
                             92 	.area HOME    (CODE)
                             93 	.area GSINIT  (CODE)
                             94 	.area GSFINAL (CODE)
                             95 	.area GSINIT  (CODE)
                             96 ;--------------------------------------------------------
                             97 ; Home
                             98 ;--------------------------------------------------------
                             99 	.area HOME    (CODE)
                            100 	.area HOME    (CODE)
                            101 ;--------------------------------------------------------
                            102 ; code
                            103 ;--------------------------------------------------------
                            104 	.area CSEG    (CODE)
                            105 ;------------------------------------------------------------
                            106 ;Allocation info for local variables in function 'atof'
                            107 ;------------------------------------------------------------
                            108 ;s                         Allocated with name '_atof_s_1_1'
                            109 ;value                     Allocated with name '_atof_value_1_1'
                            110 ;fraction                  Allocated with name '_atof_fraction_1_1'
                            111 ;iexp                      Allocated to registers r2 
                            112 ;sloc0                     Allocated with name '_atof_sloc0_1_0'
                            113 ;sloc1                     Allocated with name '_atof_sloc1_1_0'
                            114 ;------------------------------------------------------------
                            115 ;	_atof.c:33: float atof(const char * s)
                            116 ;	-----------------------------------------
                            117 ;	 function atof
                            118 ;	-----------------------------------------
   0000                     119 _atof:
                    0002    120 	ar2 = 0x02
                    0003    121 	ar3 = 0x03
                    0004    122 	ar4 = 0x04
                    0005    123 	ar5 = 0x05
                    0006    124 	ar6 = 0x06
                    0007    125 	ar7 = 0x07
                    0000    126 	ar0 = 0x00
                    0001    127 	ar1 = 0x01
   0000 75 86 01            128 	mov     dps, #1
   0003 90s00r00r00         129 	mov     dptr, #_atof_s_1_1
   0007 E5 82               130 	mov	a,dpl
   0009 F0                  131 	movx	@dptr,a
   000A A3                  132 	inc	dptr
   000B E5 83               133 	mov	a,dph
   000D F0                  134 	movx	@dptr,a
   000E A3                  135 	inc	dptr
   000F E5 93               136 	mov	a,dpx
   0011 F0                  137 	movx	@dptr,a
   0012 A3                  138 	inc	dptr
   0013 E5 F0               139 	mov	a,b
   0015 F0                  140 	movx	@dptr,a
   0016 75 86 00            141 	mov	dps,#0
                            142 ;	_atof.c:40: while (isspace(*s)) s++;
   0019 90s00r00r00         143 	mov	dptr,#_atof_s_1_1
                            144 ;	genAssign: resultIsFar = FALSE
   001D E0                  145 	movx	a,@dptr
   001E FA                  146 	mov	r2,a
   001F A3                  147 	inc	dptr
   0020 E0                  148 	movx	a,@dptr
   0021 FB                  149 	mov	r3,a
   0022 A3                  150 	inc	dptr
   0023 E0                  151 	movx	a,@dptr
   0024 FC                  152 	mov	r4,a
   0025 A3                  153 	inc	dptr
   0026 E0                  154 	movx	a,@dptr
   0027 FD                  155 	mov	r5,a
   0028                     156 00101$:
   0028 8A 82               157 	mov	dpl,r2
   002A 8B 83               158 	mov	dph,r3
   002C 8C 93               159 	mov	dpx,r4
   002E 8D F0               160 	mov	b,r5
   0030 12s00r00r00         161 	lcall	__gptrget
   0034 FE                  162 	mov	r6,a
   0035 C0 02               163 	push	ar2
   0037 C0 03               164 	push	ar3
   0039 C0 04               165 	push	ar4
   003B C0 05               166 	push	ar5
   003D 8E 82               167 	mov	dpl,r6
   003F 12s00r00r00         168 	lcall	_isspace
   0043 D0 05               169 	pop	ar5
   0045 D0 04               170 	pop	ar4
   0047 D0 03               171 	pop	ar3
   0049 D0 02               172 	pop	ar2
   004B E5 82               173 	mov	a,dpl
   004D 60 0B               174 	jz  00148$
   004F                     175 00151$:
   004F 0A                  176 	inc	r2
   0050 BA 00 D5            177 	cjne	r2,#0,00101$
   0053 0B                  178 	inc	r3
   0054 BB 00 D1            179 	cjne	r3,#0,00101$
   0057 0C                  180 	inc	r4
   0058 80 CE               181 	sjmp 00101$
   005A                     182 00148$:
                            183 ;	genAssign: resultIsFar = TRUE
   005A 90s00r00r00         184 	mov	dptr,#_atof_s_1_1
   005E EA                  185 	mov	a,r2
   005F F0                  186 	movx	@dptr,a
   0060 A3                  187 	inc	dptr
   0061 EB                  188 	mov	a,r3
   0062 F0                  189 	movx	@dptr,a
   0063 A3                  190 	inc	dptr
   0064 EC                  191 	mov	a,r4
   0065 F0                  192 	movx	@dptr,a
   0066 A3                  193 	inc	dptr
   0067 ED                  194 	mov	a,r5
   0068 F0                  195 	movx	@dptr,a
                            196 ;	_atof.c:43: if (*s == '-')
   0069 8A 82               197 	mov	dpl,r2
   006B 8B 83               198 	mov	dph,r3
   006D 8C 93               199 	mov	dpx,r4
   006F 8D F0               200 	mov	b,r5
   0071 12s00r00r00         201 	lcall	__gptrget
   0075 FE                  202 	mov  r6,a
   0076 B4 2D 17            203 	cjne a,#0x2D,00107$
   0079                     204 00153$:
                            205 ;	_atof.c:45: sign=1;
                            206 ;	genAssign: resultIsFar = FALSE
   0079 D2*00               207 	setb	_atof_sign_1_1
                            208 ;	_atof.c:46: s++;
   007B 90s00r00r00         209 	mov	dptr,#_atof_s_1_1
   007F 74 01               210 	mov	a,#0x01
   0081 2A                  211 	add	a,r2
   0082 F0                  212 	movx	@dptr,a
   0083 E4                  213 	clr  a
   0084 3B                  214 	addc	a,r3
   0085 A3                  215 	inc	dptr
   0086 F0                  216 	movx	@dptr,a
   0087 E4                  217 	clr  a
   0088 3C                  218 	addc	a,r4
   0089 A3                  219 	inc	dptr
   008A F0                  220 	movx	@dptr,a
   008B A3                  221 	inc	dptr
   008C ED                  222 	mov	a,r5
   008D F0                  223 	movx	@dptr,a
   008E 80 19               224 	sjmp 00108$
   0090                     225 00107$:
                            226 ;	_atof.c:50: sign=0;
                            227 ;	genAssign: resultIsFar = FALSE
   0090 C2*00               228 	clr	_atof_sign_1_1
                            229 ;	_atof.c:51: if (*s == '+') s++;
   0092 EE                  230 	mov	a,r6
   0093 B4 2B 13            231 	cjne a,#0x2B,00108$
   0096                     232 00155$:
   0096 90s00r00r00         233 	mov	dptr,#_atof_s_1_1
   009A 74 01               234 	mov	a,#0x01
   009C 2A                  235 	add	a,r2
   009D F0                  236 	movx	@dptr,a
   009E E4                  237 	clr  a
   009F 3B                  238 	addc	a,r3
   00A0 A3                  239 	inc	dptr
   00A1 F0                  240 	movx	@dptr,a
   00A2 E4                  241 	clr  a
   00A3 3C                  242 	addc	a,r4
   00A4 A3                  243 	inc	dptr
   00A5 F0                  244 	movx	@dptr,a
   00A6 A3                  245 	inc	dptr
   00A7 ED                  246 	mov	a,r5
   00A8 F0                  247 	movx	@dptr,a
   00A9                     248 00108$:
                            249 ;	_atof.c:55: for (value=0.0; isdigit(*s); s++)
                            250 ;	genAssign: resultIsFar = TRUE
   00A9 90s00r00r04         251 	mov	dptr,#_atof_value_1_1
   00AD E4                  252 	clr	a
   00AE F0                  253 	movx	@dptr,a
   00AF A3                  254 	inc	dptr
   00B0 F0                  255 	movx	@dptr,a
   00B1 A3                  256 	inc	dptr
   00B2 F0                  257 	movx	@dptr,a
   00B3 A3                  258 	inc	dptr
   00B4 F0                  259 	movx	@dptr,a
   00B5 90s00r00r00         260 	mov	dptr,#_atof_s_1_1
                            261 ;	genAssign: resultIsFar = TRUE
   00B9 75 86 21            262 	mov	dps,#0x21
   00BC 90s00r00r0C         263 	mov	dptr,#_atof_sloc0_1_0
   00C0 E0                  264 	movx	a,@dptr
   00C1 F0                  265 	movx	@dptr,a
   00C2 A3                  266 	inc	dptr
   00C3 A3                  267 	inc	dptr
   00C4 E0                  268 	movx	a,@dptr
   00C5 F0                  269 	movx	@dptr,a
   00C6 A3                  270 	inc	dptr
   00C7 A3                  271 	inc	dptr
   00C8 E0                  272 	movx	a,@dptr
   00C9 F0                  273 	movx	@dptr,a
   00CA A3                  274 	inc	dptr
   00CB A3                  275 	inc	dptr
   00CC E0                  276 	movx	a,@dptr
   00CD F0                  277 	movx	@dptr,a
   00CE 75 86 00            278 	mov	dps,#0
   00D1                     279 00121$:
   00D1 75 86 01            280 	mov     dps, #1
   00D4 90s00r00r0C         281 	mov     dptr, #_atof_sloc0_1_0
   00D8 E0                  282 	movx	a,@dptr
   00D9 F5 82               283 	mov	dpl,a
   00DB A3                  284 	inc	dptr
   00DC E0                  285 	movx	a,@dptr
   00DD F5 83               286 	mov	dph,a
   00DF A3                  287 	inc	dptr
   00E0 E0                  288 	movx	a,@dptr
   00E1 F5 93               289 	mov	dpx,a
   00E3 A3                  290 	inc	dptr
   00E4 E0                  291 	movx	a,@dptr
   00E5 F5 F0               292 	mov	b,a
   00E7 75 86 00            293 	mov	dps,#0
   00EA 12s00r00r00         294 	lcall	__gptrget
   00EE FE                  295 	mov	r6,a
   00EF 8E 82               296 	mov	dpl,r6
   00F1 12s00r00r00         297 	lcall	_isdigit
   00F5 E5 82               298 	mov	a,dpl
   00F7 70 04               299 	jnz	00156$
   00F9 02s00r01rD1         300 	ljmp	00149$
   00FD                     301 00156$:
                            302 ;	_atof.c:57: value=10.0*value+(*s-'0');
   00FD 90s00r00r04         303 	mov	dptr,#_atof_value_1_1
                            304 ;	genAssign: resultIsFar = TRUE
   0101 75 86 21            305 	mov	dps,#0x21
   0104 90s00r00r00         306 	mov	dptr,#___fsmul_PARM_2
   0108 E0                  307 	movx	a,@dptr
   0109 F0                  308 	movx	@dptr,a
   010A A3                  309 	inc	dptr
   010B A3                  310 	inc	dptr
   010C E0                  311 	movx	a,@dptr
   010D F0                  312 	movx	@dptr,a
   010E A3                  313 	inc	dptr
   010F A3                  314 	inc	dptr
   0110 E0                  315 	movx	a,@dptr
   0111 F0                  316 	movx	@dptr,a
   0112 A3                  317 	inc	dptr
   0113 A3                  318 	inc	dptr
   0114 E0                  319 	movx	a,@dptr
   0115 F0                  320 	movx	@dptr,a
   0116 75 86 00            321 	mov	dps,#0
   0119 90 00 00 00         322 	mov  dptr,#0x0000
   011D 75 93 20            323 	mov	dpx,#0x20
   0120 75 F0 41            324 	mov	b,#0x41
   0123 12s00r00r00         325 	lcall	___fsmul
   0127 AE 82               326 	mov	r6,dpl
   0129 AF 83               327 	mov	r7,dph
   012B A8 93               328 	mov	r0,dpx
   012D A9 F0               329 	mov	r1,b
   012F 75 86 01            330 	mov     dps, #1
   0132 90s00r00r0C         331 	mov     dptr, #_atof_sloc0_1_0
   0136 E0                  332 	movx	a,@dptr
   0137 F5 82               333 	mov	dpl,a
   0139 A3                  334 	inc	dptr
   013A E0                  335 	movx	a,@dptr
   013B F5 83               336 	mov	dph,a
   013D A3                  337 	inc	dptr
   013E E0                  338 	movx	a,@dptr
   013F F5 93               339 	mov	dpx,a
   0141 A3                  340 	inc	dptr
   0142 E0                  341 	movx	a,@dptr
   0143 F5 F0               342 	mov	b,a
   0145 75 86 00            343 	mov	dps,#0
   0148 12s00r00r00         344 	lcall	__gptrget
   014C FA                  345 	mov	r2,a
   014D A3                  346 	inc	dptr
   014E 05 86               347 	inc	dps
   0150 12s00r00r00         348 	lcall	__decdptr
   0154 12s00r00r00         349 	lcall	__decdptr
   0158 12s00r00r00         350 	lcall	__decdptr
   015C E5 82               351 	mov	a,dpl
   015E F0                  352 	movx	@dptr,a
   015F A3                  353 	inc	dptr
   0160 E5 83               354 	mov	a,dph
   0162 F0                  355 	movx	@dptr,a
   0163 A3                  356 	inc	dptr
   0164 E5 93               357 	mov	a,dpx
   0166 F0                  358 	movx	@dptr,a
   0167 A3                  359 	inc	dptr
   0168 E5 F0               360 	mov	a,b
   016A F0                  361 	movx	@dptr,a
   016B 75 86 00            362 	mov	dps,#0
   016E EA                  363 	mov	a,r2
   016F 33                  364 	rlc	a
   0170 95 E0               365 	subb	a,acc
   0172 FB                  366 	mov	r3,a
   0173 EA                  367 	mov	a,r2
   0174 24 D0               368 	add	a,#0xD0
   0176 FA                  369 	mov	r2,a
   0177 EB                  370 	mov	a,r3
   0178 34 FF               371 	addc	a,#0xFF
   017A FB                  372 	mov	r3,a
   017B C0 06               373 	push	ar6
   017D C0 07               374 	push	ar7
   017F C0 00               375 	push	ar0
   0181 C0 01               376 	push	ar1
   0183 8A 82               377 	mov	dpl,r2
   0185 8B 83               378 	mov	dph,r3
   0187 12s00r00r00         379 	lcall	___sint2fs
   018B AA 82               380 	mov	r2,dpl
   018D AB 83               381 	mov	r3,dph
   018F AC 93               382 	mov	r4,dpx
   0191 AD F0               383 	mov	r5,b
   0193 D0 01               384 	pop	ar1
   0195 D0 00               385 	pop	ar0
   0197 D0 07               386 	pop	ar7
   0199 D0 06               387 	pop	ar6
                            388 ;	genAssign: resultIsFar = TRUE
   019B 90s00r00r00         389 	mov	dptr,#___fsadd_PARM_2
   019F EA                  390 	mov	a,r2
   01A0 F0                  391 	movx	@dptr,a
   01A1 A3                  392 	inc	dptr
   01A2 EB                  393 	mov	a,r3
   01A3 F0                  394 	movx	@dptr,a
   01A4 A3                  395 	inc	dptr
   01A5 EC                  396 	mov	a,r4
   01A6 F0                  397 	movx	@dptr,a
   01A7 A3                  398 	inc	dptr
   01A8 ED                  399 	mov	a,r5
   01A9 F0                  400 	movx	@dptr,a
   01AA 8E 82               401 	mov	dpl,r6
   01AC 8F 83               402 	mov	dph,r7
   01AE 88 93               403 	mov	dpx,r0
   01B0 89 F0               404 	mov	b,r1
   01B2 12s00r00r00         405 	lcall	___fsadd
   01B6 AA 82               406 	mov	r2,dpl
   01B8 AB 83               407 	mov	r3,dph
   01BA AC 93               408 	mov	r4,dpx
   01BC AD F0               409 	mov	r5,b
                            410 ;	genAssign: resultIsFar = TRUE
   01BE 90s00r00r04         411 	mov	dptr,#_atof_value_1_1
   01C2 EA                  412 	mov	a,r2
   01C3 F0                  413 	movx	@dptr,a
   01C4 A3                  414 	inc	dptr
   01C5 EB                  415 	mov	a,r3
   01C6 F0                  416 	movx	@dptr,a
   01C7 A3                  417 	inc	dptr
   01C8 EC                  418 	mov	a,r4
   01C9 F0                  419 	movx	@dptr,a
   01CA A3                  420 	inc	dptr
   01CB ED                  421 	mov	a,r5
   01CC F0                  422 	movx	@dptr,a
                            423 ;	_atof.c:55: for (value=0.0; isdigit(*s); s++)
   01CD 02s00r00rD1         424 	ljmp	00121$
   01D1                     425 00149$:
   01D1 90s00r00r0C         426 	mov	dptr,#_atof_sloc0_1_0
                            427 ;	genAssign: resultIsFar = TRUE
   01D5 75 86 21            428 	mov	dps,#0x21
   01D8 90s00r00r00         429 	mov	dptr,#_atof_s_1_1
   01DC E0                  430 	movx	a,@dptr
   01DD F0                  431 	movx	@dptr,a
   01DE A3                  432 	inc	dptr
   01DF A3                  433 	inc	dptr
   01E0 E0                  434 	movx	a,@dptr
   01E1 F0                  435 	movx	@dptr,a
   01E2 A3                  436 	inc	dptr
   01E3 A3                  437 	inc	dptr
   01E4 E0                  438 	movx	a,@dptr
   01E5 F0                  439 	movx	@dptr,a
   01E6 A3                  440 	inc	dptr
   01E7 A3                  441 	inc	dptr
   01E8 E0                  442 	movx	a,@dptr
   01E9 F0                  443 	movx	@dptr,a
                            444 ;	_atof.c:61: if (*s == '.')
   01EA 75 86 01            445 	mov     dps, #1
   01ED 90s00r00r0C         446 	mov     dptr, #_atof_sloc0_1_0
   01F1 E0                  447 	movx	a,@dptr
   01F2 F5 82               448 	mov	dpl,a
   01F4 A3                  449 	inc	dptr
   01F5 E0                  450 	movx	a,@dptr
   01F6 F5 83               451 	mov	dph,a
   01F8 A3                  452 	inc	dptr
   01F9 E0                  453 	movx	a,@dptr
   01FA F5 93               454 	mov	dpx,a
   01FC A3                  455 	inc	dptr
   01FD E0                  456 	movx	a,@dptr
   01FE F5 F0               457 	mov	b,a
   0200 75 86 00            458 	mov	dps,#0
   0203 12s00r00r00         459 	lcall	__gptrget
   0207 FA                  460 	mov  r2,a
   0208 B4 2E 02            461 	cjne	a,#0x2E,00157$
   020B 80 04               462 	sjmp	00158$
   020D                     463 00157$:
   020D 02s00r03rC6         464 	ljmp	00110$
   0211                     465 00158$:
                            466 ;	_atof.c:63: s++;
   0211 90s00r00r0C         467 	mov	dptr,#_atof_sloc0_1_0
   0215 75 86 01            468 	mov	dps, #1
   0218 90s00r00r00         469 	mov	dptr, #_atof_s_1_1
   021C 15 86               470 	dec	dps
   021E E0                  471 	movx	a,@dptr
   021F 24 01               472 	add	a,#0x01
   0221 05 86               473 	inc	dps
   0223 F0                  474 	movx	@dptr,a
   0224 15 86               475 	dec	dps
   0226 A3                  476 	inc	dptr
   0227 E0                  477 	movx	a,@dptr
   0228 34 00               478 	addc	a,#0x00
   022A 05 86               479 	inc	dps
   022C A3                  480 	inc	dptr
   022D F0                  481 	movx	@dptr,a
   022E 15 86               482 	dec	dps
   0230 A3                  483 	inc	dptr
   0231 E0                  484 	movx	a,@dptr
   0232 34 00               485 	addc	a,#0x00
   0234 05 86               486 	inc	dps
   0236 A3                  487 	inc	dptr
   0237 F0                  488 	movx	@dptr,a
   0238 75 86 00            489 	mov	dps,#0
   023B A3                  490 	inc	dptr
   023C E0                  491 	movx	a,@dptr
   023D 75 86 01            492 	mov	dps,#1
   0240 A3                  493 	inc	dptr
   0241 F0                  494 	movx	@dptr,a
   0242 75 86 00            495 	mov	dps,#0
                            496 ;	_atof.c:64: for (fraction=0.1; isdigit(*s); s++)
                            497 ;	genAssign: resultIsFar = TRUE
   0245 90s00r00r08         498 	mov	dptr,#_atof_fraction_1_1
   0249 74 CD               499 	mov	a,#0xCD
   024B F0                  500 	movx	@dptr,a
   024C A3                  501 	inc	dptr
   024D 74 CC               502 	mov  a,#0xCC
   024F F0                  503 	movx @dptr,a
   0250 A3                  504 	inc  dptr
   0251 F0                  505 	movx @dptr,a
   0252 A3                  506 	inc	dptr
   0253 74 3D               507 	mov	a,#0x3D
   0255 F0                  508 	movx	@dptr,a
   0256 90s00r00r00         509 	mov	dptr,#_atof_s_1_1
                            510 ;	genAssign: resultIsFar = FALSE
   025A E0                  511 	movx	a,@dptr
   025B FA                  512 	mov	r2,a
   025C A3                  513 	inc	dptr
   025D E0                  514 	movx	a,@dptr
   025E FB                  515 	mov	r3,a
   025F A3                  516 	inc	dptr
   0260 E0                  517 	movx	a,@dptr
   0261 FC                  518 	mov	r4,a
   0262 A3                  519 	inc	dptr
   0263 E0                  520 	movx	a,@dptr
   0264 FD                  521 	mov	r5,a
   0265                     522 00125$:
   0265 8A 82               523 	mov	dpl,r2
   0267 8B 83               524 	mov	dph,r3
   0269 8C 93               525 	mov	dpx,r4
   026B 8D F0               526 	mov	b,r5
   026D 12s00r00r00         527 	lcall	__gptrget
   0271 FE                  528 	mov	r6,a
   0272 C0 02               529 	push	ar2
   0274 C0 03               530 	push	ar3
   0276 C0 04               531 	push	ar4
   0278 C0 05               532 	push	ar5
   027A 8E 82               533 	mov	dpl,r6
   027C 12s00r00r00         534 	lcall	_isdigit
   0280 D0 05               535 	pop	ar5
   0282 D0 04               536 	pop	ar4
   0284 D0 03               537 	pop	ar3
   0286 D0 02               538 	pop	ar2
   0288 E5 82               539 	mov	a,dpl
   028A 70 04               540 	jnz	00159$
   028C 02s00r03rB7         541 	ljmp	00150$
   0290                     542 00159$:
                            543 ;	_atof.c:66: value+=(*s-'0')*fraction;
   0290 8A 82               544 	mov	dpl,r2
   0292 8B 83               545 	mov	dph,r3
   0294 8C 93               546 	mov	dpx,r4
   0296 8D F0               547 	mov	b,r5
   0298 12s00r00r00         548 	lcall	__gptrget
   029C FE                  549 	mov	r6,a
   029D A3                  550 	inc	dptr
   029E AA 82               551 	mov	r2,dpl
   02A0 AB 83               552 	mov	r3,dph
   02A2 AC 93               553 	mov	r4,dpx
   02A4 AD F0               554 	mov	r5,b
   02A6 EE                  555 	mov	a,r6
   02A7 33                  556 	rlc	a
   02A8 95 E0               557 	subb	a,acc
   02AA FF                  558 	mov	r7,a
   02AB EE                  559 	mov	a,r6
   02AC 24 D0               560 	add	a,#0xD0
   02AE FE                  561 	mov	r6,a
   02AF EF                  562 	mov	a,r7
   02B0 34 FF               563 	addc	a,#0xFF
   02B2 FF                  564 	mov	r7,a
   02B3 C0 02               565 	push	ar2
   02B5 C0 03               566 	push	ar3
   02B7 C0 04               567 	push	ar4
   02B9 C0 05               568 	push	ar5
   02BB 8E 82               569 	mov	dpl,r6
   02BD 8F 83               570 	mov	dph,r7
   02BF 12s00r00r00         571 	lcall	___sint2fs
   02C3 AE 82               572 	mov	r6,dpl
   02C5 AF 83               573 	mov	r7,dph
   02C7 A8 93               574 	mov	r0,dpx
   02C9 A9 F0               575 	mov	r1,b
   02CB D0 05               576 	pop	ar5
   02CD D0 04               577 	pop	ar4
   02CF D0 03               578 	pop	ar3
   02D1 D0 02               579 	pop	ar2
   02D3 90s00r00r08         580 	mov	dptr,#_atof_fraction_1_1
                            581 ;	genAssign: resultIsFar = TRUE
   02D7 75 86 21            582 	mov	dps,#0x21
   02DA 90s00r00r00         583 	mov	dptr,#___fsmul_PARM_2
   02DE E0                  584 	movx	a,@dptr
   02DF F0                  585 	movx	@dptr,a
   02E0 A3                  586 	inc	dptr
   02E1 A3                  587 	inc	dptr
   02E2 E0                  588 	movx	a,@dptr
   02E3 F0                  589 	movx	@dptr,a
   02E4 A3                  590 	inc	dptr
   02E5 A3                  591 	inc	dptr
   02E6 E0                  592 	movx	a,@dptr
   02E7 F0                  593 	movx	@dptr,a
   02E8 A3                  594 	inc	dptr
   02E9 A3                  595 	inc	dptr
   02EA E0                  596 	movx	a,@dptr
   02EB F0                  597 	movx	@dptr,a
   02EC 75 86 00            598 	mov	dps,#0
   02EF C0 02               599 	push	ar2
   02F1 C0 03               600 	push	ar3
   02F3 C0 04               601 	push	ar4
   02F5 C0 05               602 	push	ar5
   02F7 8E 82               603 	mov	dpl,r6
   02F9 8F 83               604 	mov	dph,r7
   02FB 88 93               605 	mov	dpx,r0
   02FD 89 F0               606 	mov	b,r1
   02FF 12s00r00r00         607 	lcall	___fsmul
   0303 AE 82               608 	mov	r6,dpl
   0305 AF 83               609 	mov	r7,dph
   0307 A8 93               610 	mov	r0,dpx
   0309 A9 F0               611 	mov	r1,b
   030B D0 05               612 	pop	ar5
   030D D0 04               613 	pop	ar4
   030F D0 03               614 	pop	ar3
   0311 D0 02               615 	pop	ar2
                            616 ;	genAssign: resultIsFar = TRUE
   0313 90s00r00r00         617 	mov	dptr,#___fsadd_PARM_2
   0317 EE                  618 	mov	a,r6
   0318 F0                  619 	movx	@dptr,a
   0319 A3                  620 	inc	dptr
   031A EF                  621 	mov	a,r7
   031B F0                  622 	movx	@dptr,a
   031C A3                  623 	inc	dptr
   031D E8                  624 	mov	a,r0
   031E F0                  625 	movx	@dptr,a
   031F A3                  626 	inc	dptr
   0320 E9                  627 	mov	a,r1
   0321 F0                  628 	movx	@dptr,a
   0322 C0 02               629 	push	ar2
   0324 C0 03               630 	push	ar3
   0326 C0 04               631 	push	ar4
   0328 C0 05               632 	push	ar5
   032A 05 86               633 	inc	dps
   032C 90s00r00r04         634 	mov	dptr,#_atof_value_1_1
   0330 E0                  635 	movx	a,@dptr
   0331 F5 82               636 	mov	dpl,a
   0333 A3                  637 	inc	dptr
   0334 E0                  638 	movx	a,@dptr
   0335 F5 83               639 	mov	dph,a
   0337 A3                  640 	inc	dptr
   0338 E0                  641 	movx	a,@dptr
   0339 F5 93               642 	mov	dpx,a
   033B A3                  643 	inc	dptr
   033C E0                  644 	movx	a,@dptr
   033D F5 F0               645 	mov	b,a
   033F 75 86 00            646 	mov	dps,#0
   0342 12s00r00r00         647 	lcall	___fsadd
   0346 AE 82               648 	mov	r6,dpl
   0348 AF 83               649 	mov	r7,dph
   034A A8 93               650 	mov	r0,dpx
   034C A9 F0               651 	mov	r1,b
   034E D0 05               652 	pop	ar5
   0350 D0 04               653 	pop	ar4
   0352 D0 03               654 	pop	ar3
   0354 D0 02               655 	pop	ar2
                            656 ;	genAssign: resultIsFar = TRUE
   0356 90s00r00r04         657 	mov	dptr,#_atof_value_1_1
   035A EE                  658 	mov	a,r6
   035B F0                  659 	movx	@dptr,a
   035C A3                  660 	inc	dptr
   035D EF                  661 	mov	a,r7
   035E F0                  662 	movx	@dptr,a
   035F A3                  663 	inc	dptr
   0360 E8                  664 	mov	a,r0
   0361 F0                  665 	movx	@dptr,a
   0362 A3                  666 	inc	dptr
   0363 E9                  667 	mov	a,r1
   0364 F0                  668 	movx	@dptr,a
                            669 ;	_atof.c:67: fraction*=0.1;
   0365 90s00r00r08         670 	mov	dptr,#_atof_fraction_1_1
                            671 ;	genAssign: resultIsFar = TRUE
   0369 75 86 21            672 	mov	dps,#0x21
   036C 90s00r00r00         673 	mov	dptr,#___fsmul_PARM_2
   0370 E0                  674 	movx	a,@dptr
   0371 F0                  675 	movx	@dptr,a
   0372 A3                  676 	inc	dptr
   0373 A3                  677 	inc	dptr
   0374 E0                  678 	movx	a,@dptr
   0375 F0                  679 	movx	@dptr,a
   0376 A3                  680 	inc	dptr
   0377 A3                  681 	inc	dptr
   0378 E0                  682 	movx	a,@dptr
   0379 F0                  683 	movx	@dptr,a
   037A A3                  684 	inc	dptr
   037B A3                  685 	inc	dptr
   037C E0                  686 	movx	a,@dptr
   037D F0                  687 	movx	@dptr,a
   037E 75 86 00            688 	mov	dps,#0
   0381 C0 02               689 	push	ar2
   0383 C0 03               690 	push	ar3
   0385 C0 04               691 	push	ar4
   0387 C0 05               692 	push	ar5
   0389 90 CC CC CD         693 	mov	dptr,#0xCCCCCD
   038D 75 F0 3D            694 	mov	b,#0x3D
   0390 12s00r00r00         695 	lcall	___fsmul
   0394 AE 82               696 	mov	r6,dpl
   0396 AF 83               697 	mov	r7,dph
   0398 A8 93               698 	mov	r0,dpx
   039A A9 F0               699 	mov	r1,b
   039C D0 05               700 	pop	ar5
   039E D0 04               701 	pop	ar4
   03A0 D0 03               702 	pop	ar3
   03A2 D0 02               703 	pop	ar2
                            704 ;	genAssign: resultIsFar = TRUE
   03A4 90s00r00r08         705 	mov	dptr,#_atof_fraction_1_1
   03A8 EE                  706 	mov	a,r6
   03A9 F0                  707 	movx	@dptr,a
   03AA A3                  708 	inc	dptr
   03AB EF                  709 	mov	a,r7
   03AC F0                  710 	movx	@dptr,a
   03AD A3                  711 	inc	dptr
   03AE E8                  712 	mov	a,r0
   03AF F0                  713 	movx	@dptr,a
   03B0 A3                  714 	inc	dptr
   03B1 E9                  715 	mov	a,r1
   03B2 F0                  716 	movx	@dptr,a
                            717 ;	_atof.c:64: for (fraction=0.1; isdigit(*s); s++)
   03B3 02s00r02r65         718 	ljmp	00125$
   03B7                     719 00150$:
                            720 ;	genAssign: resultIsFar = TRUE
   03B7 90s00r00r00         721 	mov	dptr,#_atof_s_1_1
   03BB EA                  722 	mov	a,r2
   03BC F0                  723 	movx	@dptr,a
   03BD A3                  724 	inc	dptr
   03BE EB                  725 	mov	a,r3
   03BF F0                  726 	movx	@dptr,a
   03C0 A3                  727 	inc	dptr
   03C1 EC                  728 	mov	a,r4
   03C2 F0                  729 	movx	@dptr,a
   03C3 A3                  730 	inc	dptr
   03C4 ED                  731 	mov	a,r5
   03C5 F0                  732 	movx	@dptr,a
   03C6                     733 00110$:
                            734 ;	_atof.c:72: if (toupper(*s)=='E')
   03C6 75 86 01            735 	mov     dps, #1
   03C9 90s00r00r00         736 	mov     dptr, #_atof_s_1_1
   03CD E0                  737 	movx	a,@dptr
   03CE F5 82               738 	mov	dpl,a
   03D0 A3                  739 	inc	dptr
   03D1 E0                  740 	movx	a,@dptr
   03D2 F5 83               741 	mov	dph,a
   03D4 A3                  742 	inc	dptr
   03D5 E0                  743 	movx	a,@dptr
   03D6 F5 93               744 	mov	dpx,a
   03D8 A3                  745 	inc	dptr
   03D9 E0                  746 	movx	a,@dptr
   03DA F5 F0               747 	mov	b,a
   03DC 75 86 00            748 	mov	dps,#0
   03DF 12s00r00r00         749 	lcall	__gptrget
   03E3 FA                  750 	mov	r2,a
   03E4 8A 82               751 	mov	dpl,r2
   03E6 12s00r00r00         752 	lcall	_islower
   03EA E5 82               753 	mov	a,dpl
   03EC 60 23               754 	jz  00131$
   03EE                     755 00160$:
   03EE 75 86 01            756 	mov     dps, #1
   03F1 90s00r00r00         757 	mov     dptr, #_atof_s_1_1
   03F5 E0                  758 	movx	a,@dptr
   03F6 F5 82               759 	mov	dpl,a
   03F8 A3                  760 	inc	dptr
   03F9 E0                  761 	movx	a,@dptr
   03FA F5 83               762 	mov	dph,a
   03FC A3                  763 	inc	dptr
   03FD E0                  764 	movx	a,@dptr
   03FE F5 93               765 	mov	dpx,a
   0400 A3                  766 	inc	dptr
   0401 E0                  767 	movx	a,@dptr
   0402 F5 F0               768 	mov	b,a
   0404 75 86 00            769 	mov	dps,#0
   0407 12s00r00r00         770 	lcall	__gptrget
   040B FA                  771 	mov	r2,a
   040C 53 02 DF            772 	anl	ar2,#0xDF
   040F 80 1E               773 	sjmp 00132$
   0411                     774 00131$:
   0411 75 86 01            775 	mov     dps, #1
   0414 90s00r00r00         776 	mov     dptr, #_atof_s_1_1
   0418 E0                  777 	movx	a,@dptr
   0419 F5 82               778 	mov	dpl,a
   041B A3                  779 	inc	dptr
   041C E0                  780 	movx	a,@dptr
   041D F5 83               781 	mov	dph,a
   041F A3                  782 	inc	dptr
   0420 E0                  783 	movx	a,@dptr
   0421 F5 93               784 	mov	dpx,a
   0423 A3                  785 	inc	dptr
   0424 E0                  786 	movx	a,@dptr
   0425 F5 F0               787 	mov	b,a
   0427 75 86 00            788 	mov	dps,#0
   042A 12s00r00r00         789 	lcall	__gptrget
   042E FA                  790 	mov	r2,a
   042F                     791 00132$:
   042F EA                  792 	mov	a,r2
   0430 B4 45 02            793 	cjne	a,#0x45,00161$
   0433 80 04               794 	sjmp	00162$
   0435                     795 00161$:
   0435 02s00r05r0A         796 	ljmp	00118$
   0439                     797 00162$:
                            798 ;	_atof.c:74: s++;
   0439 90s00r00r00         799 	mov	dptr,#_atof_s_1_1
   043D E0                  800 	movx	a,@dptr
   043E 24 01               801 	add	a,#0x01
   0440 F0                  802 	movx	@dptr,a
   0441 A3                  803 	inc	dptr
   0442 E0                  804 	movx	a,@dptr
   0443 34 00               805 	addc	a,#0x00
   0445 F0                  806 	movx	@dptr,a
   0446 A3                  807 	inc	dptr
   0447 E0                  808 	movx	a,@dptr
   0448 34 00               809 	addc	a,#0x00
   044A F0                  810 	movx	@dptr,a
   044B A3                  811 	inc	dptr
   044C E0                  812 	movx	a,@dptr
   044D F0                  813 	movx	@dptr,a
                            814 ;	_atof.c:75: iexp=(signed char)atoi(s);
   044E 05 86               815 	inc	dps
   0450 90s00r00r00         816 	mov	dptr,#_atof_s_1_1
   0454 E0                  817 	movx	a,@dptr
   0455 F5 82               818 	mov	dpl,a
   0457 A3                  819 	inc	dptr
   0458 E0                  820 	movx	a,@dptr
   0459 F5 83               821 	mov	dph,a
   045B A3                  822 	inc	dptr
   045C E0                  823 	movx	a,@dptr
   045D F5 93               824 	mov	dpx,a
   045F A3                  825 	inc	dptr
   0460 E0                  826 	movx	a,@dptr
   0461 F5 F0               827 	mov	b,a
   0463 75 86 00            828 	mov	dps,#0
   0466 12s00r00r00         829 	lcall	_atoi
   046A AA 82               830 	mov	r2,dpl
   046C AB 83               831 	mov	r3,dph
                            832 ;	_atof.c:77: while(iexp!=0)
   046E                     833 00114$:
   046E EA                  834 	mov	a,r2
   046F 70 04               835 	jnz	00163$
   0471 02s00r05r0A         836 	ljmp	00118$
   0475                     837 00163$:
                            838 ;	_atof.c:79: if(iexp<0)
   0475 EA                  839 	mov	a,r2
   0476 30 E7 45            840 	jnb  acc.7,00112$
   0479                     841 00164$:
                            842 ;	_atof.c:81: value*=0.1;
   0479 90s00r00r04         843 	mov	dptr,#_atof_value_1_1
                            844 ;	genAssign: resultIsFar = TRUE
   047D 75 86 21            845 	mov	dps,#0x21
   0480 90s00r00r00         846 	mov	dptr,#___fsmul_PARM_2
   0484 E0                  847 	movx	a,@dptr
   0485 F0                  848 	movx	@dptr,a
   0486 A3                  849 	inc	dptr
   0487 A3                  850 	inc	dptr
   0488 E0                  851 	movx	a,@dptr
   0489 F0                  852 	movx	@dptr,a
   048A A3                  853 	inc	dptr
   048B A3                  854 	inc	dptr
   048C E0                  855 	movx	a,@dptr
   048D F0                  856 	movx	@dptr,a
   048E A3                  857 	inc	dptr
   048F A3                  858 	inc	dptr
   0490 E0                  859 	movx	a,@dptr
   0491 F0                  860 	movx	@dptr,a
   0492 75 86 00            861 	mov	dps,#0
   0495 C0 02               862 	push	ar2
   0497 90 CC CC CD         863 	mov	dptr,#0xCCCCCD
   049B 75 F0 3D            864 	mov	b,#0x3D
   049E 12s00r00r00         865 	lcall	___fsmul
   04A2 AB 82               866 	mov	r3,dpl
   04A4 AC 83               867 	mov	r4,dph
   04A6 AD 93               868 	mov	r5,dpx
   04A8 AE F0               869 	mov	r6,b
   04AA D0 02               870 	pop	ar2
                            871 ;	genAssign: resultIsFar = TRUE
   04AC 90s00r00r04         872 	mov	dptr,#_atof_value_1_1
   04B0 EB                  873 	mov	a,r3
   04B1 F0                  874 	movx	@dptr,a
   04B2 A3                  875 	inc	dptr
   04B3 EC                  876 	mov	a,r4
   04B4 F0                  877 	movx	@dptr,a
   04B5 A3                  878 	inc	dptr
   04B6 ED                  879 	mov	a,r5
   04B7 F0                  880 	movx	@dptr,a
   04B8 A3                  881 	inc	dptr
   04B9 EE                  882 	mov	a,r6
   04BA F0                  883 	movx	@dptr,a
                            884 ;	_atof.c:82: iexp++;
   04BB 0A                  885 	inc	r2
   04BC 80 B0               886 	sjmp 00114$
   04BE                     887 00112$:
                            888 ;	_atof.c:86: value*=10.0;
   04BE 90s00r00r04         889 	mov	dptr,#_atof_value_1_1
                            890 ;	genAssign: resultIsFar = TRUE
   04C2 75 86 21            891 	mov	dps,#0x21
   04C5 90s00r00r00         892 	mov	dptr,#___fsmul_PARM_2
   04C9 E0                  893 	movx	a,@dptr
   04CA F0                  894 	movx	@dptr,a
   04CB A3                  895 	inc	dptr
   04CC A3                  896 	inc	dptr
   04CD E0                  897 	movx	a,@dptr
   04CE F0                  898 	movx	@dptr,a
   04CF A3                  899 	inc	dptr
   04D0 A3                  900 	inc	dptr
   04D1 E0                  901 	movx	a,@dptr
   04D2 F0                  902 	movx	@dptr,a
   04D3 A3                  903 	inc	dptr
   04D4 A3                  904 	inc	dptr
   04D5 E0                  905 	movx	a,@dptr
   04D6 F0                  906 	movx	@dptr,a
   04D7 75 86 00            907 	mov	dps,#0
   04DA C0 02               908 	push	ar2
   04DC 90 00 00 00         909 	mov  dptr,#0x0000
   04E0 75 93 20            910 	mov	dpx,#0x20
   04E3 75 F0 41            911 	mov	b,#0x41
   04E6 12s00r00r00         912 	lcall	___fsmul
   04EA AB 82               913 	mov	r3,dpl
   04EC AC 83               914 	mov	r4,dph
   04EE AD 93               915 	mov	r5,dpx
   04F0 AE F0               916 	mov	r6,b
   04F2 D0 02               917 	pop	ar2
                            918 ;	genAssign: resultIsFar = TRUE
   04F4 90s00r00r04         919 	mov	dptr,#_atof_value_1_1
   04F8 EB                  920 	mov	a,r3
   04F9 F0                  921 	movx	@dptr,a
   04FA A3                  922 	inc	dptr
   04FB EC                  923 	mov	a,r4
   04FC F0                  924 	movx	@dptr,a
   04FD A3                  925 	inc	dptr
   04FE ED                  926 	mov	a,r5
   04FF F0                  927 	movx	@dptr,a
   0500 A3                  928 	inc	dptr
   0501 EE                  929 	mov	a,r6
   0502 F0                  930 	movx	@dptr,a
                            931 ;	_atof.c:87: iexp--;
   0503 EA                  932 	mov	a,r2
   0504 14                  933 	dec	a
                            934 ;	genAssign: resultIsFar = TRUE
   0505 FA                  935 	mov	r2,a
   0506 02s00r04r6E         936 	ljmp	00114$
   050A                     937 00118$:
                            938 ;	_atof.c:93: if(sign) value*=-1.0;
   050A 30*00 2E            939 	jnb  _atof_sign_1_1,00120$
   050D                     940 00165$:
   050D 90s00r00r04         941 	mov	dptr,#_atof_value_1_1
   0511 75 86 01            942 	mov	dps, #1
   0514 90s00r00r04         943 	mov	dptr, #_atof_value_1_1
   0518 15 86               944 	dec	dps
   051A E0                  945 	movx	a,@dptr
   051B 05 86               946 	inc	dps
   051D F0                  947 	movx	@dptr,a
   051E 15 86               948 	dec	dps
   0520 A3                  949 	inc	dptr
   0521 E0                  950 	movx	a,@dptr
   0522 05 86               951 	inc	dps
   0524 A3                  952 	inc	dptr
   0525 F0                  953 	movx	@dptr,a
   0526 15 86               954 	dec	dps
   0528 A3                  955 	inc	dptr
   0529 E0                  956 	movx	a,@dptr
   052A 05 86               957 	inc	dps
   052C A3                  958 	inc	dptr
   052D F0                  959 	movx	@dptr,a
   052E 15 86               960 	dec	dps
   0530 A3                  961 	inc	dptr
   0531 E0                  962 	movx	a,@dptr
   0532 B2 E7               963 	cpl	acc.7
   0534 05 86               964 	inc	dps
   0536 A3                  965 	inc	dptr
   0537 F0                  966 	movx	@dptr,a
   0538 75 86 00            967 	mov	dps,#0
   053B                     968 00120$:
                            969 ;	_atof.c:94: return (value);
   053B 75 86 01            970 	mov     dps, #1
   053E 90s00r00r04         971 	mov     dptr, #_atof_value_1_1
   0542 E0                  972 	movx	a,@dptr
   0543 F5 82               973 	mov	dpl,a
   0545 A3                  974 	inc	dptr
   0546 E0                  975 	movx	a,@dptr
   0547 F5 83               976 	mov	dph,a
   0549 A3                  977 	inc	dptr
   054A E0                  978 	movx	a,@dptr
   054B F5 93               979 	mov	dpx,a
   054D A3                  980 	inc	dptr
   054E E0                  981 	movx	a,@dptr
   054F F5 F0               982 	mov	b,a
   0551 75 86 00            983 	mov	dps,#0
   0554                     984 00129$:
   0554 22                  985 	ret
                            986 	.area CSEG    (CODE)
                            987 	.area CONST   (CODE)
                            988 	.area XINIT   (CODE)
                            989 	.area CABS    (ABS,CODE)
