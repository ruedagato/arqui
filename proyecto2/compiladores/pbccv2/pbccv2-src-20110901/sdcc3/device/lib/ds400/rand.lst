                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:19 2015
                              5 ;--------------------------------------------------------
                              6 	.module rand
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _rand
                             31 	.globl _srand
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      44 	.ds 8
                             45 ;--------------------------------------------------------
                             46 ; internal ram data
                             47 ;--------------------------------------------------------
                             48 	.area DSEG    (DATA)
                             49 ;--------------------------------------------------------
                             50 ; overlayable items in internal ram 
                             51 ;--------------------------------------------------------
                             52 	.area OSEG    (OVR,DATA)
                             53 ;--------------------------------------------------------
                             54 ; indirectly addressable internal ram data
                             55 ;--------------------------------------------------------
                             56 	.area ISEG    (DATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute internal ram data
                             59 ;--------------------------------------------------------
                             60 	.area IABS    (ABS,DATA)
                             61 	.area IABS    (ABS,DATA)
                             62 ;--------------------------------------------------------
                             63 ; bit data
                             64 ;--------------------------------------------------------
                             65 	.area BSEG    (BIT)
                             66 ;--------------------------------------------------------
                             67 ; paged external ram data
                             68 ;--------------------------------------------------------
                             69 	.area PSEG    (PAG,XDATA)
                             70 ;--------------------------------------------------------
                             71 ; external ram data
                             72 ;--------------------------------------------------------
                             73 	.area XSEG    (XDATA)
                             74 ;--------------------------------------------------------
                             75 ; absolute external ram data
                             76 ;--------------------------------------------------------
                             77 	.area XABS    (ABS,XDATA)
                             78 ;--------------------------------------------------------
                             79 ; external initialized ram data
                             80 ;--------------------------------------------------------
                             81 	.area XISEG   (XDATA)
   0000                      82 _next:
   0000                      83 	.ds 4
                             84 ;--------------------------------------------------------
                             85 ; global & static initialisations
                             86 ;--------------------------------------------------------
                             87 	.area HOME    (CODE)
                             88 	.area GSINIT  (CODE)
                             89 	.area GSFINAL (CODE)
                             90 	.area GSINIT  (CODE)
                             91 ;--------------------------------------------------------
                             92 ; Home
                             93 ;--------------------------------------------------------
                             94 	.area HOME    (CODE)
                             95 	.area HOME    (CODE)
                             96 ;--------------------------------------------------------
                             97 ; code
                             98 ;--------------------------------------------------------
                             99 	.area CSEG    (CODE)
                            100 ;------------------------------------------------------------
                            101 ;Allocation info for local variables in function 'rand'
                            102 ;------------------------------------------------------------
                            103 ;------------------------------------------------------------
                            104 ;	rand.c:33: int rand(void)
                            105 ;	-----------------------------------------
                            106 ;	 function rand
                            107 ;	-----------------------------------------
   0000                     108 _rand:
                    0002    109 	ar2 = 0x02
                    0003    110 	ar3 = 0x03
                    0004    111 	ar4 = 0x04
                    0005    112 	ar5 = 0x05
                    0006    113 	ar6 = 0x06
                    0007    114 	ar7 = 0x07
                    0000    115 	ar0 = 0x00
                    0001    116 	ar1 = 0x01
                            117 ;	rand.c:35: next = next * 1103515245UL + 12345;
   0000 90s00r00r00         118 	mov	dptr,#_next
                            119 ;	genAssign: resultIsFar = TRUE
   0004 75 86 21            120 	mov	dps,#0x21
   0007 90s00r00r00         121 	mov	dptr,#__mullong_PARM_2
   000B E0                  122 	movx	a,@dptr
   000C F0                  123 	movx	@dptr,a
   000D A3                  124 	inc	dptr
   000E A3                  125 	inc	dptr
   000F E0                  126 	movx	a,@dptr
   0010 F0                  127 	movx	@dptr,a
   0011 A3                  128 	inc	dptr
   0012 A3                  129 	inc	dptr
   0013 E0                  130 	movx	a,@dptr
   0014 F0                  131 	movx	@dptr,a
   0015 A3                  132 	inc	dptr
   0016 A3                  133 	inc	dptr
   0017 E0                  134 	movx	a,@dptr
   0018 F0                  135 	movx	@dptr,a
   0019 75 86 00            136 	mov	dps,#0
   001C 90 C6 4E 6D         137 	mov	dptr,#0xC64E6D
   0020 75 F0 41            138 	mov	b,#0x41
   0023 12s00r00r00         139 	lcall	__mullong
   0027 AA 82               140 	mov	r2,dpl
   0029 AB 83               141 	mov	r3,dph
   002B AC 93               142 	mov	r4,dpx
   002D AD F0               143 	mov	r5,b
   002F 90s00r00r00         144 	mov	dptr,#_next
   0033 74 39               145 	mov	a,#0x39
   0035 2A                  146 	add	a,r2
   0036 F0                  147 	movx	@dptr,a
   0037 74 30               148 	mov	a,#0x30
   0039 3B                  149 	addc	a,r3
   003A A3                  150 	inc	dptr
   003B F0                  151 	movx	@dptr,a
   003C E4                  152 	clr  a
   003D 3C                  153 	addc	a,r4
   003E A3                  154 	inc	dptr
   003F F0                  155 	movx	@dptr,a
   0040 E4                  156 	clr  a
   0041 3D                  157 	addc	a,r5
   0042 A3                  158 	inc	dptr
   0043 F0                  159 	movx	@dptr,a
                            160 ;	rand.c:36: return (unsigned int)(next/65536) % (RAND_MAX + 1U);
   0044 90s00r00r00         161 	mov	dptr,#_next
   0048 A3                  162 	inc	dptr
   0049 A3                  163 	inc	dptr
   004A E0                  164 	movx	a,@dptr
   004B FA                  165 	mov	r2,a
   004C A3                  166 	inc	dptr
   004D E0                  167 	movx	a,@dptr
   004E FB                  168 	mov	r3,a
   004F 7C 00               169 	mov	r4,#0
   0051 7D 00               170 	mov	r5,#0
   0053 8A 82               171 	mov	dpl,r2
   0055 74 7F               172 	mov	a,#0x7F
   0057 5B                  173 	anl	a,r3
   0058 F5 83               174 	mov	dph,a
   005A                     175 00101$:
   005A 22                  176 	ret
                            177 ;------------------------------------------------------------
                            178 ;Allocation info for local variables in function 'srand'
                            179 ;------------------------------------------------------------
                            180 ;seed                      Allocated to registers r2 r3 
                            181 ;------------------------------------------------------------
                            182 ;	rand.c:39: void srand(unsigned int seed)
                            183 ;	-----------------------------------------
                            184 ;	 function srand
                            185 ;	-----------------------------------------
   005B                     186 _srand:
   005B 85 82 84            187 	mov	dpl1,dpl
   005E 85 83 85            188 	mov	dph1,dph
                            189 ;	rand.c:41: next = seed;
   0061 90s00r00r00         190 	mov	dptr,#_next
   0065 E5 84               191 	mov	a,dpl1
   0067 F0                  192 	movx	@dptr,a
   0068 A3                  193 	inc	dptr
   0069 E5 85               194 	mov	a,dph1
   006B F0                  195 	movx	@dptr,a
   006C A3                  196 	inc	dptr
   006D E4                  197 	clr	a
   006E F0                  198 	movx	@dptr,a
   006F A3                  199 	inc	dptr
   0070 E4                  200 	clr	a
   0071 F0                  201 	movx	@dptr,a
   0072                     202 00101$:
   0072 22                  203 	ret
                            204 	.area CSEG    (CODE)
                            205 	.area CONST   (CODE)
                            206 	.area XINIT   (CODE)
   0000                     207 __xinit__next:
   0000 01 00 00 00         208 	.byte #0x01,#0x00,#0x00,#0x00	; 1
                            209 	.area CABS    (ABS,CODE)
