                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:21 2015
                              5 ;--------------------------------------------------------
                              6 	.module _free
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG (CODE)
                             14 	.area XINIT
                             15 	.area CONST   (CODE)
                             16 	.area DSEG
                             17 	.area OSEG    (OVR)
                             18 	.area BSEG
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl __sdcc_find_memheader
                             25 	.globl __sdcc_prev_memheader
                             26 	.globl _free
                             27 ;--------------------------------------------------------
                             28 ;  ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG
   0000                      31 _free_sloc0_1_0:
   0000                      32 	.ds 2
   0002                      33 _free_sloc1_1_0:
   0002                      34 	.ds 2
                             35 ;--------------------------------------------------------
                             36 ; overlayable items in  ram 
                             37 ;--------------------------------------------------------
                             38 	.area OSEG    (OVR)
                             39 ;--------------------------------------------------------
                             40 ; absolute external ram data
                             41 ;--------------------------------------------------------
                             42 	.area XABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; external initialized ram data
                             45 ;--------------------------------------------------------
                             46 	.area XISEG
                             47 ;--------------------------------------------------------
                             48 ; extended address mode data
                             49 ;--------------------------------------------------------
                             50 	.area XSEG
   0000                      51 __sdcc_prev_memheader::
   0000                      52 	.ds 2
   0002                      53 __sdcc_find_memheader_p_1_1:
   0002                      54 	.ds 2
   0004                      55 __sdcc_find_memheader_pthis_1_1:
   0004                      56 	.ds 2
   0006                      57 __sdcc_find_memheader_cur_header_1_1:
   0006                      58 	.ds 2
   0008                      59 _free_pthis_1_1:
   0008                      60 	.ds 2
                             61 ;--------------------------------------------------------
                             62 ; global & static initialisations
                             63 ;--------------------------------------------------------
                             64 	.area HOME (CODE)
                             65 	.area GSINIT (CODE)
                             66 	.area GSFINAL (CODE)
                             67 	.area GSINIT (CODE)
                             68 ;--------------------------------------------------------
                             69 ; Home
                             70 ;--------------------------------------------------------
                             71 	.area HOME (CODE)
                             72 	.area HOME (CODE)
                             73 ;--------------------------------------------------------
                             74 ; code
                             75 ;--------------------------------------------------------
                             76 	.area CSEG (CODE)
                             77 ;------------------------------------------------------------
                             78 ;Allocation info for local variables in function '_sdcc_find_memheader'
                             79 ;------------------------------------------------------------
                             80 ;p                         Allocated with name '__sdcc_find_memheader_p_1_1'
                             81 ;pthis                     Allocated with name '__sdcc_find_memheader_pthis_1_1'
                             82 ;cur_header                Allocated with name '__sdcc_find_memheader_cur_header_1_1'
                             83 ;------------------------------------------------------------
                             84 ;../_free.c:129: MEMHEADER __xdata * _sdcc_find_memheader(void __xdata * p)
                             85 ;	-----------------------------------------
                             86 ;	 function _sdcc_find_memheader
                             87 ;	-----------------------------------------
   0000                      88 __sdcc_find_memheader:
   0000 C7s00r03             89 	sta	(__sdcc_find_memheader_p_1_1 + 1)
   0003 CFs00r02             90 	stx	__sdcc_find_memheader_p_1_1
                             91 ;../_free.c:134: if (!p)
   0006 C6s00r03             92 	lda	(__sdcc_find_memheader_p_1_1 + 1)
   0009 CAs00r02             93 	ora	__sdcc_find_memheader_p_1_1
   000C 26 03                94 	bne	00102$
   000E                      95 00113$:
                             96 ;../_free.c:135: return NULL;
   000E 5F                   97 	clrx
   000F 4F                   98 	clra
   0010 81                   99 	rts
   0011                     100 00102$:
                            101 ;../_free.c:137: pthis -= 1; //to start of header
   0011 C6s00r03            102 	lda	(__sdcc_find_memheader_p_1_1 + 1)
   0014 A0 04               103 	sub	#0x04
   0016 C7s00r05            104 	sta	(__sdcc_find_memheader_pthis_1_1 + 1)
   0019 C6s00r02            105 	lda	__sdcc_find_memheader_p_1_1
   001C A2 00               106 	sbc	#0x00
   001E C7s00r04            107 	sta	__sdcc_find_memheader_pthis_1_1
                            108 ;../_free.c:138: cur_header = _sdcc_first_memheader;
   0021 C6s00r00            109 	lda	__sdcc_first_memheader
   0024 C7s00r06            110 	sta	__sdcc_find_memheader_cur_header_1_1
   0027 C6s00r01            111 	lda	(__sdcc_first_memheader + 1)
   002A C7s00r07            112 	sta	(__sdcc_find_memheader_cur_header_1_1 + 1)
                            113 ;../_free.c:139: _sdcc_prev_memheader = NULL;
   002D 4F                  114 	clra
   002E C7s00r00            115 	sta	__sdcc_prev_memheader
   0031 C7s00r01            116 	sta	(__sdcc_prev_memheader + 1)
                            117 ;../_free.c:140: while (cur_header && pthis != cur_header)
   0034                     118 00104$:
   0034 C6s00r07            119 	lda	(__sdcc_find_memheader_cur_header_1_1 + 1)
   0037 CAs00r06            120 	ora	__sdcc_find_memheader_cur_header_1_1
   003A 27 30               121 	beq	00106$
   003C                     122 00114$:
   003C C6s00r05            123 	lda	(__sdcc_find_memheader_pthis_1_1 + 1)
   003F C1s00r07            124 	cmp	(__sdcc_find_memheader_cur_header_1_1 + 1)
   0042 26 08               125 	bne	00115$
   0044 C6s00r04            126 	lda	__sdcc_find_memheader_pthis_1_1
   0047 C1s00r06            127 	cmp	__sdcc_find_memheader_cur_header_1_1
   004A 27 20               128 	beq	00106$
   004C                     129 00115$:
                            130 ;../_free.c:142: _sdcc_prev_memheader = cur_header;
   004C C6s00r06            131 	lda	__sdcc_find_memheader_cur_header_1_1
   004F C7s00r00            132 	sta	__sdcc_prev_memheader
   0052 C6s00r07            133 	lda	(__sdcc_find_memheader_cur_header_1_1 + 1)
   0055 C7s00r01            134 	sta	(__sdcc_prev_memheader + 1)
                            135 ;../_free.c:143: cur_header = cur_header->next;
   0058 C6s00r06            136 	lda	__sdcc_find_memheader_cur_header_1_1
   005B CEs00r07            137 	ldx	(__sdcc_find_memheader_cur_header_1_1 + 1)
   005E 87                  138 	psha
   005F 8A                  139 	pulh
   0060 F6                  140 	lda	,x
   0061 AF 01               141 	aix	#1
   0063 C7s00r06            142 	sta	__sdcc_find_memheader_cur_header_1_1
   0066 F6                  143 	lda	,x
   0067 C7s00r07            144 	sta	(__sdcc_find_memheader_cur_header_1_1 + 1)
   006A 20 C8               145 	bra	00104$
   006C                     146 00106$:
                            147 ;../_free.c:145: return (cur_header);
   006C CEs00r06            148 	ldx	__sdcc_find_memheader_cur_header_1_1
   006F C6s00r07            149 	lda	(__sdcc_find_memheader_cur_header_1_1 + 1)
   0072                     150 00107$:
   0072 81                  151 	rts
                            152 ;------------------------------------------------------------
                            153 ;Allocation info for local variables in function 'free'
                            154 ;------------------------------------------------------------
                            155 ;sloc0                     Allocated with name '_free_sloc0_1_0'
                            156 ;sloc1                     Allocated with name '_free_sloc1_1_0'
                            157 ;p                         Allocated to registers 
                            158 ;pthis                     Allocated with name '_free_pthis_1_1'
                            159 ;------------------------------------------------------------
                            160 ;../_free.c:148: void free (void * p)
                            161 ;	-----------------------------------------
                            162 ;	 function free
                            163 ;	-----------------------------------------
   0073                     164 _free:
                            165 ;../_free.c:154: pthis = _sdcc_find_memheader(p);
   0073 CDs00r00            166 	jsr	__sdcc_find_memheader
   0076 C7s00r09            167 	sta	(_free_pthis_1_1 + 1)
   0079 CFs00r08            168 	stx	_free_pthis_1_1
                            169 ;../_free.c:155: if (pthis) //For allocated pointers only!
   007C C6s00r09            170 	lda	(_free_pthis_1_1 + 1)
   007F CAs00r08            171 	ora	_free_pthis_1_1
   0082 27 43               172 	beq	00106$
   0084                     173 00110$:
                            174 ;../_free.c:157: if (!_sdcc_prev_memheader)
   0084 C6s00r01            175 	lda	(__sdcc_prev_memheader + 1)
   0087 CAs00r00            176 	ora	__sdcc_prev_memheader
   008A 26 17               177 	bne	00102$
   008C                     178 00111$:
                            179 ;../_free.c:159: pthis->len = 0;
   008C C6s00r09            180 	lda	(_free_pthis_1_1 + 1)
   008F AB 02               181 	add	#0x02
   0091 B7*01               182 	sta	*(_free_sloc0_1_0 + 1)
   0093 C6s00r08            183 	lda	_free_pthis_1_1
   0096 A9 00               184 	adc	#0x00
   0098 B7*00               185 	sta	*_free_sloc0_1_0
   009A 55*00               186 	ldhx	*_free_sloc0_1_0
   009C 4F                  187 	clra
   009D F7                  188 	sta	,x
   009E AF 01               189 	aix	#1
   00A0 4F                  190 	clra
   00A1 F7                  191 	sta	,x
   00A2 81                  192 	rts
   00A3                     193 00102$:
                            194 ;../_free.c:163: _sdcc_prev_memheader->next = pthis->next;
   00A3 C6s00r00            195 	lda	__sdcc_prev_memheader
   00A6 B7*00               196 	sta	*_free_sloc0_1_0
   00A8 C6s00r01            197 	lda	(__sdcc_prev_memheader + 1)
   00AB B7*01               198 	sta	*(_free_sloc0_1_0 + 1)
   00AD C6s00r08            199 	lda	_free_pthis_1_1
   00B0 CEs00r09            200 	ldx	(_free_pthis_1_1 + 1)
   00B3 87                  201 	psha
   00B4 8A                  202 	pulh
   00B5 F6                  203 	lda	,x
   00B6 AF 01               204 	aix	#1
   00B8 B7*02               205 	sta	*_free_sloc1_1_0
   00BA F6                  206 	lda	,x
   00BB B7*03               207 	sta	*(_free_sloc1_1_0 + 1)
   00BD 55*00               208 	ldhx	*_free_sloc0_1_0
   00BF B6*02               209 	lda	*_free_sloc1_1_0
   00C1 F7                  210 	sta	,x
   00C2 AF 01               211 	aix	#1
   00C4 B6*03               212 	lda	*(_free_sloc1_1_0 + 1)
   00C6 F7                  213 	sta	,x
   00C7                     214 00106$:
   00C7 81                  215 	rts
                            216 	.area CSEG (CODE)
                            217 	.area CONST   (CODE)
                            218 	.area XINIT
                            219 	.area CABS    (ABS,CODE)
