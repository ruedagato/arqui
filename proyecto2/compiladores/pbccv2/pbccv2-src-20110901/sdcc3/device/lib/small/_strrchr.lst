                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:23 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strrchr
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strrchr_PARM_2
                             13 	.globl _strrchr
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 	.area RSEG    (ABS,DATA)
   0000                      18 	.org 0x0000
                             19 ;--------------------------------------------------------
                             20 ; special function bits
                             21 ;--------------------------------------------------------
                             22 	.area RSEG    (ABS,DATA)
   0000                      23 	.org 0x0000
                             24 ;--------------------------------------------------------
                             25 ; overlayable register banks
                             26 ;--------------------------------------------------------
                             27 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      28 	.ds 8
                             29 ;--------------------------------------------------------
                             30 ; internal ram data
                             31 ;--------------------------------------------------------
                             32 	.area DSEG    (DATA)
                             33 ;--------------------------------------------------------
                             34 ; overlayable items in internal ram 
                             35 ;--------------------------------------------------------
                             36 	.area	OSEG    (OVR,DATA)
   0000                      37 _strrchr_PARM_2::
   0000                      38 	.ds 1
                             39 ;--------------------------------------------------------
                             40 ; indirectly addressable internal ram data
                             41 ;--------------------------------------------------------
                             42 	.area ISEG    (DATA)
                             43 ;--------------------------------------------------------
                             44 ; absolute internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area IABS    (ABS,DATA)
                             47 	.area IABS    (ABS,DATA)
                             48 ;--------------------------------------------------------
                             49 ; bit data
                             50 ;--------------------------------------------------------
                             51 	.area BSEG    (BIT)
                             52 ;--------------------------------------------------------
                             53 ; paged external ram data
                             54 ;--------------------------------------------------------
                             55 	.area PSEG    (PAG,XDATA)
                             56 ;--------------------------------------------------------
                             57 ; external ram data
                             58 ;--------------------------------------------------------
                             59 	.area XSEG    (XDATA)
                             60 ;--------------------------------------------------------
                             61 ; absolute external ram data
                             62 ;--------------------------------------------------------
                             63 	.area XABS    (ABS,XDATA)
                             64 ;--------------------------------------------------------
                             65 ; external initialized ram data
                             66 ;--------------------------------------------------------
                             67 	.area XISEG   (XDATA)
                             68 	.area HOME    (CODE)
                             69 	.area GSINIT0 (CODE)
                             70 	.area GSINIT1 (CODE)
                             71 	.area GSINIT2 (CODE)
                             72 	.area GSINIT3 (CODE)
                             73 	.area GSINIT4 (CODE)
                             74 	.area GSINIT5 (CODE)
                             75 	.area GSINIT  (CODE)
                             76 	.area GSFINAL (CODE)
                             77 	.area CSEG    (CODE)
                             78 ;--------------------------------------------------------
                             79 ; global & static initialisations
                             80 ;--------------------------------------------------------
                             81 	.area HOME    (CODE)
                             82 	.area GSINIT  (CODE)
                             83 	.area GSFINAL (CODE)
                             84 	.area GSINIT  (CODE)
                             85 ;--------------------------------------------------------
                             86 ; Home
                             87 ;--------------------------------------------------------
                             88 	.area HOME    (CODE)
                             89 	.area HOME    (CODE)
                             90 ;--------------------------------------------------------
                             91 ; code
                             92 ;--------------------------------------------------------
                             93 	.area CSEG    (CODE)
                             94 ;------------------------------------------------------------
                             95 ;Allocation info for local variables in function 'strrchr'
                             96 ;------------------------------------------------------------
                             97 ;ch                        Allocated with name '_strrchr_PARM_2'
                             98 ;string                    Allocated to registers r2 r3 r4 
                             99 ;start                     Allocated to registers r5 r6 r7 
                            100 ;------------------------------------------------------------
                            101 ;	_strrchr.c:31: char * strrchr (
                            102 ;	-----------------------------------------
                            103 ;	 function strrchr
                            104 ;	-----------------------------------------
   0000                     105 _strrchr:
                    0002    106 	ar2 = 0x02
                    0003    107 	ar3 = 0x03
                    0004    108 	ar4 = 0x04
                    0005    109 	ar5 = 0x05
                    0006    110 	ar6 = 0x06
                    0007    111 	ar7 = 0x07
                    0000    112 	ar0 = 0x00
                    0001    113 	ar1 = 0x01
   0000 AA 82               114 	mov	r2,dpl
   0002 AB 83               115 	mov	r3,dph
   0004 AC F0               116 	mov	r4,b
                            117 ;	_strrchr.c:36: const char * start = string;
   0006 8A 05               118 	mov	ar5,r2
   0008 8B 06               119 	mov	ar6,r3
   000A 8C 07               120 	mov	ar7,r4
                            121 ;	_strrchr.c:38: while (*string++)                       /* find end of string */
   000C                     122 00101$:
   000C 8A 82               123 	mov	dpl,r2
   000E 8B 83               124 	mov	dph,r3
   0010 8C F0               125 	mov	b,r4
   0012 12s00r00            126 	lcall	__gptrget
   0015 F8                  127 	mov	r0,a
   0016 A3                  128 	inc	dptr
   0017 AA 82               129 	mov	r2,dpl
   0019 AB 83               130 	mov	r3,dph
   001B E8                  131 	mov	a,r0
   001C 70 EE               132 	jnz	00101$
                            133 ;	_strrchr.c:41: while (--string != start && *string != ch)
   001E                     134 00105$:
   001E 1A                  135 	dec	r2
   001F BA FF 01            136 	cjne	r2,#0xff,00119$
   0022 1B                  137 	dec	r3
   0023                     138 00119$:
   0023 EA                  139 	mov	a,r2
   0024 B5 05 0A            140 	cjne	a,ar5,00120$
   0027 EB                  141 	mov	a,r3
   0028 B5 06 06            142 	cjne	a,ar6,00120$
   002B EC                  143 	mov	a,r4
   002C B5 07 02            144 	cjne	a,ar7,00120$
   002F 80 0D               145 	sjmp	00107$
   0031                     146 00120$:
   0031 8A 82               147 	mov	dpl,r2
   0033 8B 83               148 	mov	dph,r3
   0035 8C F0               149 	mov	b,r4
   0037 12s00r00            150 	lcall	__gptrget
   003A F8                  151 	mov	r0,a
   003B B5*00 E0            152 	cjne	a,_strrchr_PARM_2,00105$
   003E                     153 00107$:
                            154 ;	_strrchr.c:44: if (*string == ch)                /* char found ? */
   003E 8A 82               155 	mov	dpl,r2
   0040 8B 83               156 	mov	dph,r3
   0042 8C F0               157 	mov	b,r4
   0044 12s00r00            158 	lcall	__gptrget
   0047 FD                  159 	mov	r5,a
   0048 B5*00 07            160 	cjne	a,_strrchr_PARM_2,00109$
                            161 ;	_strrchr.c:45: return( (char *)string );
   004B 8A 82               162 	mov	dpl,r2
   004D 8B 83               163 	mov	dph,r3
   004F 8C F0               164 	mov	b,r4
   0051 22                  165 	ret
   0052                     166 00109$:
                            167 ;	_strrchr.c:47: return (NULL) ;
   0052 90 00 00            168 	mov	dptr,#0x0000
   0055 75 F0 00            169 	mov	b,#0x00
   0058 22                  170 	ret
                            171 	.area CSEG    (CODE)
                            172 	.area CONST   (CODE)
                            173 	.area XINIT   (CODE)
                            174 	.area CABS    (ABS,CODE)
