                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:31 2015
                              5 ;--------------------------------------------------------
                              6 	.module _calloc
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _calloc
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'calloc'
                             93 ;------------------------------------------------------------
                             94 ;size                      Allocated to stack - offset -4
                             95 ;nmemb                     Allocated to registers r2 r3 
                             96 ;ptr                       Allocated to stack - offset 1
                             97 ;------------------------------------------------------------
                             98 ;	_calloc.c:70: void __xdata * calloc (size_t nmemb, size_t size)
                             99 ;	-----------------------------------------
                            100 ;	 function calloc
                            101 ;	-----------------------------------------
   0000                     102 _calloc:
                    0002    103 	ar2 = 0x02
                    0003    104 	ar3 = 0x03
                    0004    105 	ar4 = 0x04
                    0005    106 	ar5 = 0x05
                    0006    107 	ar6 = 0x06
                    0007    108 	ar7 = 0x07
                    0000    109 	ar0 = 0x00
                    0001    110 	ar1 = 0x01
   0000 C0*00               111 	push	_bp
   0002 85 81*00            112 	mov	_bp,sp
   0005 05 81               113 	inc	sp
   0007 05 81               114 	inc	sp
   0009 AA 82               115 	mov	r2,dpl
   000B AB 83               116 	mov	r3,dph
                            117 ;	_calloc.c:74: ptr = malloc(nmemb * size);
   000D E5*00               118 	mov	a,_bp
   000F 24 FC               119 	add	a,#0xfc
   0011 F8                  120 	mov	r0,a
   0012 E6                  121 	mov	a,@r0
   0013 C0 E0               122 	push	acc
   0015 08                  123 	inc	r0
   0016 E6                  124 	mov	a,@r0
   0017 C0 E0               125 	push	acc
   0019 8A 82               126 	mov	dpl,r2
   001B 8B 83               127 	mov	dph,r3
   001D 12s00r00            128 	lcall	__mulint
   0020 AA 82               129 	mov	r2,dpl
   0022 AB 83               130 	mov	r3,dph
   0024 15 81               131 	dec	sp
   0026 15 81               132 	dec	sp
   0028 8A 82               133 	mov	dpl,r2
   002A 8B 83               134 	mov	dph,r3
   002C C0 02               135 	push	ar2
   002E C0 03               136 	push	ar3
   0030 12s00r00            137 	lcall	_malloc
   0033 AC 82               138 	mov	r4,dpl
   0035 AD 83               139 	mov	r5,dph
   0037 D0 03               140 	pop	ar3
   0039 D0 02               141 	pop	ar2
   003B A8*00               142 	mov	r0,_bp
   003D 08                  143 	inc	r0
   003E A6 04               144 	mov	@r0,ar4
   0040 08                  145 	inc	r0
   0041 A6 05               146 	mov	@r0,ar5
                            147 ;	_calloc.c:75: if (ptr)
   0043 A8*00               148 	mov	r0,_bp
   0045 08                  149 	inc	r0
   0046 E6                  150 	mov	a,@r0
   0047 08                  151 	inc	r0
   0048 46                  152 	orl	a,@r0
   0049 60 20               153 	jz	00102$
                            154 ;	_calloc.c:77: memset(ptr, 0, nmemb * size);
   004B A8*00               155 	mov	r0,_bp
   004D 08                  156 	inc	r0
   004E 86 06               157 	mov	ar6,@r0
   0050 08                  158 	inc	r0
   0051 86 07               159 	mov	ar7,@r0
   0053 7C 00               160 	mov	r4,#0x00
   0055 C0 02               161 	push	ar2
   0057 C0 03               162 	push	ar3
   0059 E4                  163 	clr	a
   005A C0 E0               164 	push	acc
   005C 8E 82               165 	mov	dpl,r6
   005E 8F 83               166 	mov	dph,r7
   0060 8C F0               167 	mov	b,r4
   0062 12s00r00            168 	lcall	_memset
   0065 15 81               169 	dec	sp
   0067 15 81               170 	dec	sp
   0069 15 81               171 	dec	sp
   006B                     172 00102$:
                            173 ;	_calloc.c:79: return ptr;
   006B A8*00               174 	mov	r0,_bp
   006D 08                  175 	inc	r0
   006E 86 82               176 	mov	dpl,@r0
   0070 08                  177 	inc	r0
   0071 86 83               178 	mov	dph,@r0
   0073 85*00 81            179 	mov	sp,_bp
   0076 D0*00               180 	pop	_bp
   0078 22                  181 	ret
                            182 	.area CSEG    (CODE)
                            183 	.area CONST   (CODE)
                            184 	.area XINIT   (CODE)
                            185 	.area CABS    (ABS,CODE)
