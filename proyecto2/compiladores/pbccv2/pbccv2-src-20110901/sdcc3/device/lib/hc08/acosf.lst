                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:21 2015
                              5 ;--------------------------------------------------------
                              6 	.module acosf
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG (CODE)
                             14 	.area XINIT
                             15 	.area CONST   (CODE)
                             16 	.area DSEG
                             17 	.area OSEG    (OVR)
                             18 	.area BSEG
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl _acosf
                             25 ;--------------------------------------------------------
                             26 ;  ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in  ram 
                             31 ;--------------------------------------------------------
                             32 	.area OSEG    (OVR)
                             33 ;--------------------------------------------------------
                             34 ; absolute external ram data
                             35 ;--------------------------------------------------------
                             36 	.area XABS    (ABS)
                             37 ;--------------------------------------------------------
                             38 ; external initialized ram data
                             39 ;--------------------------------------------------------
                             40 	.area XISEG
                             41 ;--------------------------------------------------------
                             42 ; extended address mode data
                             43 ;--------------------------------------------------------
                             44 	.area XSEG
                             45 ;--------------------------------------------------------
                             46 ; global & static initialisations
                             47 ;--------------------------------------------------------
                             48 	.area HOME (CODE)
                             49 	.area GSINIT (CODE)
                             50 	.area GSFINAL (CODE)
                             51 	.area GSINIT (CODE)
                             52 ;--------------------------------------------------------
                             53 ; Home
                             54 ;--------------------------------------------------------
                             55 	.area HOME (CODE)
                             56 	.area HOME (CODE)
                             57 ;--------------------------------------------------------
                             58 ; code
                             59 ;--------------------------------------------------------
                             60 	.area CSEG (CODE)
                             61 ;------------------------------------------------------------
                             62 ;Allocation info for local variables in function 'acosf'
                             63 ;------------------------------------------------------------
                             64 ;x                         Allocated to stack - offset 2
                             65 ;sloc0                     Allocated to stack - offset -1
                             66 ;sloc1                     Allocated to stack - offset -5
                             67 ;------------------------------------------------------------
                             68 ;../acosf.c:36: float acosf(const float x) _FLOAT_FUNC_REENTRANT
                             69 ;	-----------------------------------------
                             70 ;	 function acosf
                             71 ;	-----------------------------------------
   0000                      72 _acosf:
   0000 A7 FB                73 	ais	#-5
                             74 ;../acosf.c:38: if (x == 1.0) return 0.0;
   0002 9E E6 08             75 	lda	8,s
   0005 C7s00r00             76 	sta	___fseq_PARM_1
   0008 9E E6 09             77 	lda	9,s
   000B C7s00r01             78 	sta	(___fseq_PARM_1 + 1)
   000E 9E E6 0A             79 	lda	10,s
   0011 C7s00r02             80 	sta	(___fseq_PARM_1 + 2)
   0014 9E E6 0B             81 	lda	11,s
   0017 C7s00r03             82 	sta	(___fseq_PARM_1 + 3)
   001A A6 3F                83 	lda	#0x3F
   001C C7s00r00             84 	sta	___fseq_PARM_2
   001F A6 80                85 	lda	#0x80
   0021 C7s00r01             86 	sta	(___fseq_PARM_2 + 1)
   0024 4F                   87 	clra
   0025 C7s00r02             88 	sta	(___fseq_PARM_2 + 2)
   0028 C7s00r03             89 	sta	(___fseq_PARM_2 + 3)
   002B CDs00r00             90 	jsr	___fseq
   002E 9E E7 05             91 	sta	5,s
   0031 9E 6D 05             92 	tst	5,s
   0034 27 09                93 	beq	00108$
   0036                      94 00115$:
   0036 3F*00                95 	clr	*__ret3
   0038 3F*00                96 	clr	*__ret2
   003A 5F                   97 	clrx
   003B 4F                   98 	clra
   003C CCs00rD5             99 	jmp	00110$
   003F                     100 00108$:
                            101 ;../acosf.c:39: else if (x ==-1.0) return PI;
   003F 9E E6 08            102 	lda	8,s
   0042 C7s00r00            103 	sta	___fseq_PARM_1
   0045 9E E6 09            104 	lda	9,s
   0048 C7s00r01            105 	sta	(___fseq_PARM_1 + 1)
   004B 9E E6 0A            106 	lda	10,s
   004E C7s00r02            107 	sta	(___fseq_PARM_1 + 2)
   0051 9E E6 0B            108 	lda	11,s
   0054 C7s00r03            109 	sta	(___fseq_PARM_1 + 3)
   0057 A6 BF               110 	lda	#0xBF
   0059 C7s00r00            111 	sta	___fseq_PARM_2
   005C A6 80               112 	lda	#0x80
   005E C7s00r01            113 	sta	(___fseq_PARM_2 + 1)
   0061 4F                  114 	clra
   0062 C7s00r02            115 	sta	(___fseq_PARM_2 + 2)
   0065 C7s00r03            116 	sta	(___fseq_PARM_2 + 3)
   0068 CDs00r00            117 	jsr	___fseq
   006B 9E E7 05            118 	sta	5,s
   006E 9E 6D 05            119 	tst	5,s
   0071 27 0A               120 	beq	00105$
   0073                     121 00116$:
   0073 3F*00               122 	clr	*__ret3
   0075 3F*00               123 	clr	*__ret2
   0077 AE 0F               124 	ldx	#0x0F
   0079 A6 DB               125 	lda	#0xDB
   007B 20 58               126 	bra	00110$
   007D                     127 00105$:
                            128 ;../acosf.c:40: else if (x == 0.0) return HALF_PI;
   007D 9E E6 0B            129 	lda	11,s
   0080 9E EA 0A            130 	ora	10,s
   0083 9E EA 09            131 	ora	9,s
   0086 9E EA 08            132 	ora	8,s
   0089 26 0A               133 	bne	00102$
   008B                     134 00117$:
   008B 3F*00               135 	clr	*__ret3
   008D 3F*00               136 	clr	*__ret2
   008F AE 0F               137 	ldx	#0x0F
   0091 A6 DB               138 	lda	#0xDB
   0093 20 40               139 	bra	00110$
   0095                     140 00102$:
                            141 ;../acosf.c:41: else               return asincosf(x, true);
   0095 9E E6 08            142 	lda	8,s
   0098 C7s00r00            143 	sta	_asincosf_PARM_1
   009B 9E E6 09            144 	lda	9,s
   009E C7s00r01            145 	sta	(_asincosf_PARM_1 + 1)
   00A1 9E E6 0A            146 	lda	10,s
   00A4 C7s00r02            147 	sta	(_asincosf_PARM_1 + 2)
   00A7 9E E6 0B            148 	lda	11,s
   00AA C7s00r03            149 	sta	(_asincosf_PARM_1 + 3)
   00AD A6 01               150 	lda	#0x01
   00AF C7s00r00            151 	sta	_asincosf_PARM_2
   00B2 CDs00r00            152 	jsr	_asincosf
   00B5 9E E7 04            153 	sta	4,s
   00B8 9E EF 03            154 	stx	3,s
   00BB B6*00               155 	lda	*__ret2
   00BD 9E E7 02            156 	sta	2,s
   00C0 B6*00               157 	lda	*__ret3
   00C2 9E E7 01            158 	sta	1,s
   00C5 9E E6 01            159 	lda	1,s
   00C8 B7*00               160 	sta	*__ret3
   00CA 9E E6 02            161 	lda	2,s
   00CD B7*00               162 	sta	*__ret2
   00CF 9E EE 03            163 	ldx	3,s
   00D2 9E E6 04            164 	lda	4,s
   00D5                     165 00110$:
   00D5 A7 05               166 	ais	#5
   00D7 81                  167 	rts
                            168 	.area CSEG (CODE)
                            169 	.area CONST   (CODE)
                            170 	.area XINIT
                            171 	.area CABS    (ABS,CODE)
