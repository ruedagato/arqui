                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:22 2015
                              5 ;--------------------------------------------------------
                              6 	.module vprintf
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG (CODE)
                             14 	.area XINIT
                             15 	.area CONST   (CODE)
                             16 	.area DSEG
                             17 	.area OSEG    (OVR)
                             18 	.area BSEG
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl _vprintf_PARM_2
                             25 	.globl _vprintf
                             26 	.globl _printf
                             27 ;--------------------------------------------------------
                             28 ;  ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG
   0000                      31 _vprintf_sloc0_1_0:
   0000                      32 	.ds 2
                             33 ;--------------------------------------------------------
                             34 ; overlayable items in  ram 
                             35 ;--------------------------------------------------------
                             36 	.area OSEG    (OVR)
                             37 ;--------------------------------------------------------
                             38 ; absolute external ram data
                             39 ;--------------------------------------------------------
                             40 	.area XABS    (ABS)
                             41 ;--------------------------------------------------------
                             42 ; external initialized ram data
                             43 ;--------------------------------------------------------
                             44 	.area XISEG
                             45 ;--------------------------------------------------------
                             46 ; extended address mode data
                             47 ;--------------------------------------------------------
                             48 	.area XSEG
   0000                      49 _vprintf_PARM_2:
   0000                      50 	.ds 2
                             51 ;--------------------------------------------------------
                             52 ; global & static initialisations
                             53 ;--------------------------------------------------------
                             54 	.area HOME (CODE)
                             55 	.area GSINIT (CODE)
                             56 	.area GSFINAL (CODE)
                             57 	.area GSINIT (CODE)
                             58 ;--------------------------------------------------------
                             59 ; Home
                             60 ;--------------------------------------------------------
                             61 	.area HOME (CODE)
                             62 	.area HOME (CODE)
                             63 ;--------------------------------------------------------
                             64 ; code
                             65 ;--------------------------------------------------------
                             66 	.area CSEG (CODE)
                             67 ;------------------------------------------------------------
                             68 ;Allocation info for local variables in function 'put_char_to_stdout'
                             69 ;------------------------------------------------------------
                             70 ;p                         Allocated to stack - offset 2
                             71 ;c                         Allocated to registers 
                             72 ;------------------------------------------------------------
                             73 ;../vprintf.c:34: put_char_to_stdout (char c, void* p) _REENTRANT
                             74 ;	-----------------------------------------
                             75 ;	 function put_char_to_stdout
                             76 ;	-----------------------------------------
   0000                      77 _put_char_to_stdout:
                             78 ;../vprintf.c:37: putchar (c);
   0000 CDs00r00             79 	jsr	_putchar
   0003                      80 00101$:
   0003 81                   81 	rts
                             82 ;------------------------------------------------------------
                             83 ;Allocation info for local variables in function 'vprintf'
                             84 ;------------------------------------------------------------
                             85 ;sloc0                     Allocated with name '_vprintf_sloc0_1_0'
                             86 ;ap                        Allocated with name '_vprintf_PARM_2'
                             87 ;format                    Allocated to registers 
                             88 ;------------------------------------------------------------
                             89 ;../vprintf.c:41: vprintf (const char *format, va_list ap)
                             90 ;	-----------------------------------------
                             91 ;	 function vprintf
                             92 ;	-----------------------------------------
   0004                      93 _vprintf:
   0004 C7s00r01             94 	sta	(__print_format_PARM_3 + 1)
   0007 CFs00r00             95 	stx	__print_format_PARM_3
                             96 ;../vprintf.c:43: return _print_format (put_char_to_stdout, NULL, format, ap);
   000A 4F                   97 	clra
   000B C7s00r00             98 	sta	__print_format_PARM_2
   000E C7s00r01             99 	sta	(__print_format_PARM_2 + 1)
   0011 C6s00r00            100 	lda	_vprintf_PARM_2
   0014 C7s00r00            101 	sta	__print_format_PARM_4
   0017 C6s00r01            102 	lda	(_vprintf_PARM_2 + 1)
   001A C7s00r01            103 	sta	(__print_format_PARM_4 + 1)
   001D AEs00               104 	ldx	#>_put_char_to_stdout
   001F A6r00               105 	lda	#_put_char_to_stdout
   0021 CDs00r00            106 	jsr	__print_format
   0024 B7*01               107 	sta	*(_vprintf_sloc0_1_0 + 1)
   0026 BF*00               108 	stx	*_vprintf_sloc0_1_0
   0028 BE*00               109 	ldx	*_vprintf_sloc0_1_0
   002A B6*01               110 	lda	*(_vprintf_sloc0_1_0 + 1)
   002C                     111 00101$:
   002C 81                  112 	rts
                            113 ;------------------------------------------------------------
                            114 ;Allocation info for local variables in function 'printf'
                            115 ;------------------------------------------------------------
                            116 ;format                    Allocated to stack - offset 2
                            117 ;arg                       Allocated to registers 
                            118 ;i                         Allocated to stack - offset -2
                            119 ;sloc0                     Allocated to stack - offset -4
                            120 ;------------------------------------------------------------
                            121 ;../vprintf.c:47: printf (const char *format, ...)
                            122 ;	-----------------------------------------
                            123 ;	 function printf
                            124 ;	-----------------------------------------
   002D                     125 _printf:
   002D A7 FC               126 	ais	#-4
                            127 ;../vprintf.c:52: va_start (arg, format);
   002F 95                  128 	tsx
   0030 AF 06               129 	aix	#6
   0032 8B                  130 	pshh
   0033 86                  131 	pula
   0034 9E E7 01            132 	sta	1,s
   0037 9E EF 02            133 	stx	2,s
   003A 9E E6 02            134 	lda	2,s
   003D AB 02               135 	add	#0x02
   003F C7s00r01            136 	sta	(__print_format_PARM_4 + 1)
   0042 9E E6 01            137 	lda	1,s
   0045 A9 00               138 	adc	#0x00
   0047 C7s00r00            139 	sta	__print_format_PARM_4
                            140 ;../vprintf.c:53: i = _print_format (put_char_to_stdout, NULL, format, arg);
   004A 4F                  141 	clra
   004B C7s00r00            142 	sta	__print_format_PARM_2
   004E C7s00r01            143 	sta	(__print_format_PARM_2 + 1)
   0051 9E E6 07            144 	lda	7,s
   0054 C7s00r00            145 	sta	__print_format_PARM_3
   0057 9E E6 08            146 	lda	8,s
   005A C7s00r01            147 	sta	(__print_format_PARM_3 + 1)
   005D AEs00               148 	ldx	#>_put_char_to_stdout
   005F A6r00               149 	lda	#_put_char_to_stdout
   0061 CDs00r00            150 	jsr	__print_format
   0064 9E E7 04            151 	sta	4,s
   0067 9E EF 03            152 	stx	3,s
                            153 ;../vprintf.c:56: return i;
   006A 9E EE 03            154 	ldx	3,s
   006D 9E E6 04            155 	lda	4,s
   0070                     156 00101$:
   0070 A7 04               157 	ais	#4
   0072 81                  158 	rts
                            159 	.area CSEG (CODE)
                            160 	.area CONST   (CODE)
                            161 	.area XINIT
                            162 	.area CABS    (ABS,CODE)
