                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:22 2015
                              5 ;--------------------------------------------------------
                              6 	.module _memmove
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG (CODE)
                             14 	.area XINIT
                             15 	.area CONST   (CODE)
                             16 	.area DSEG
                             17 	.area OSEG    (OVR)
                             18 	.area BSEG
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl _memmove_PARM_3
                             25 	.globl _memmove_PARM_2
                             26 	.globl _memmove
                             27 ;--------------------------------------------------------
                             28 ;  ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in  ram 
                             33 ;--------------------------------------------------------
                             34 	.area	OSEG    (OVR)
   0000                      35 _memmove_sloc0_1_0::
   0000                      36 	.ds 2
   0002                      37 _memmove_sloc1_1_0::
   0002                      38 	.ds 2
   0004                      39 _memmove_sloc2_1_0::
   0004                      40 	.ds 2
   0006                      41 _memmove_sloc3_1_0::
   0006                      42 	.ds 2
                             43 ;--------------------------------------------------------
                             44 ; absolute external ram data
                             45 ;--------------------------------------------------------
                             46 	.area XABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; external initialized ram data
                             49 ;--------------------------------------------------------
                             50 	.area XISEG
                             51 ;--------------------------------------------------------
                             52 ; extended address mode data
                             53 ;--------------------------------------------------------
                             54 	.area XSEG
   0000                      55 _memmove_PARM_2:
   0000                      56 	.ds 2
   0002                      57 _memmove_PARM_3:
   0002                      58 	.ds 2
   0004                      59 _memmove_dst_1_1:
   0004                      60 	.ds 2
   0006                      61 _memmove_ret_1_1:
   0006                      62 	.ds 2
   0008                      63 _memmove_d_1_1:
   0008                      64 	.ds 2
   000A                      65 _memmove_s_1_1:
   000A                      66 	.ds 2
                             67 ;--------------------------------------------------------
                             68 ; global & static initialisations
                             69 ;--------------------------------------------------------
                             70 	.area HOME (CODE)
                             71 	.area GSINIT (CODE)
                             72 	.area GSFINAL (CODE)
                             73 	.area GSINIT (CODE)
                             74 ;--------------------------------------------------------
                             75 ; Home
                             76 ;--------------------------------------------------------
                             77 	.area HOME (CODE)
                             78 	.area HOME (CODE)
                             79 ;--------------------------------------------------------
                             80 ; code
                             81 ;--------------------------------------------------------
                             82 	.area CSEG (CODE)
                             83 ;------------------------------------------------------------
                             84 ;Allocation info for local variables in function 'memmove'
                             85 ;------------------------------------------------------------
                             86 ;src                       Allocated with name '_memmove_PARM_2'
                             87 ;acount                    Allocated with name '_memmove_PARM_3'
                             88 ;dst                       Allocated with name '_memmove_dst_1_1'
                             89 ;ret                       Allocated with name '_memmove_ret_1_1'
                             90 ;d                         Allocated with name '_memmove_d_1_1'
                             91 ;s                         Allocated with name '_memmove_s_1_1'
                             92 ;sloc0                     Allocated with name '_memmove_sloc0_1_0'
                             93 ;sloc1                     Allocated with name '_memmove_sloc1_1_0'
                             94 ;sloc2                     Allocated with name '_memmove_sloc2_1_0'
                             95 ;sloc3                     Allocated with name '_memmove_sloc3_1_0'
                             96 ;------------------------------------------------------------
                             97 ;../_memmove.c:39: void * memmove (
                             98 ;	-----------------------------------------
                             99 ;	 function memmove
                            100 ;	-----------------------------------------
   0000                     101 _memmove:
   0000 C7s00r05            102 	sta	(_memmove_dst_1_1 + 1)
   0003 CFs00r04            103 	stx	_memmove_dst_1_1
                            104 ;../_memmove.c:45: void * ret = dst;
   0006 C6s00r04            105 	lda	_memmove_dst_1_1
   0009 C7s00r06            106 	sta	_memmove_ret_1_1
   000C C6s00r05            107 	lda	(_memmove_dst_1_1 + 1)
   000F C7s00r07            108 	sta	(_memmove_ret_1_1 + 1)
                            109 ;../_memmove.c:49: if (((int)src < (int)dst) && ((((int)src)+acount) > (int)dst)) {
   0012 C6s00r01            110 	lda	(_memmove_PARM_2 + 1)
   0015 B7*01               111 	sta	*(_memmove_sloc0_1_0 + 1)
   0017 C6s00r00            112 	lda	_memmove_PARM_2
   001A B7*00               113 	sta	*_memmove_sloc0_1_0
   001C C6s00r05            114 	lda	(_memmove_dst_1_1 + 1)
   001F B7*03               115 	sta	*(_memmove_sloc1_1_0 + 1)
   0021 C6s00r04            116 	lda	_memmove_dst_1_1
   0024 B7*02               117 	sta	*_memmove_sloc1_1_0
   0026 55*00               118 	ldhx	*_memmove_sloc0_1_0
   0028 75*02               119 	cphx	*_memmove_sloc1_1_0
   002A 91 03               120 	blt	00121$
   002C CCs00rF3            121 	jmp	00108$
   002F                     122 00121$:
   002F C6s00r01            123 	lda	(_memmove_PARM_2 + 1)
   0032 B7*03               124 	sta	*(_memmove_sloc1_1_0 + 1)
   0034 C6s00r00            125 	lda	_memmove_PARM_2
   0037 B7*02               126 	sta	*_memmove_sloc1_1_0
   0039 B6*03               127 	lda	*(_memmove_sloc1_1_0 + 1)
   003B CBs00r03            128 	add	(_memmove_PARM_3 + 1)
   003E B7*03               129 	sta	*(_memmove_sloc1_1_0 + 1)
   0040 B6*02               130 	lda	*_memmove_sloc1_1_0
   0042 C9s00r02            131 	adc	_memmove_PARM_3
   0045 B7*02               132 	sta	*_memmove_sloc1_1_0
   0047 C6s00r05            133 	lda	(_memmove_dst_1_1 + 1)
   004A B7*01               134 	sta	*(_memmove_sloc0_1_0 + 1)
   004C C6s00r04            135 	lda	_memmove_dst_1_1
   004F B7*00               136 	sta	*_memmove_sloc0_1_0
   0051 55*02               137 	ldhx	*_memmove_sloc1_1_0
   0053 75*00               138 	cphx	*_memmove_sloc0_1_0
   0055 22 03               139 	bhi	00122$
   0057 CCs00rF3            140 	jmp	00108$
   005A                     141 00122$:
                            142 ;../_memmove.c:53: d = ((char *)dst)+acount-1;
   005A C6s00r05            143 	lda	(_memmove_dst_1_1 + 1)
   005D CBs00r03            144 	add	(_memmove_PARM_3 + 1)
   0060 B7*03               145 	sta	*(_memmove_sloc1_1_0 + 1)
   0062 C6s00r04            146 	lda	_memmove_dst_1_1
   0065 C9s00r02            147 	adc	_memmove_PARM_3
   0068 B7*02               148 	sta	*_memmove_sloc1_1_0
   006A B6*03               149 	lda	*(_memmove_sloc1_1_0 + 1)
   006C A0 01               150 	sub	#0x01
   006E C7s00r09            151 	sta	(_memmove_d_1_1 + 1)
   0071 B6*02               152 	lda	*_memmove_sloc1_1_0
   0073 A2 00               153 	sbc	#0x00
   0075 C7s00r08            154 	sta	_memmove_d_1_1
                            155 ;../_memmove.c:54: s = ((char *)src)+acount-1;
   0078 C6s00r01            156 	lda	(_memmove_PARM_2 + 1)
   007B CBs00r03            157 	add	(_memmove_PARM_3 + 1)
   007E B7*03               158 	sta	*(_memmove_sloc1_1_0 + 1)
   0080 C6s00r00            159 	lda	_memmove_PARM_2
   0083 C9s00r02            160 	adc	_memmove_PARM_3
   0086 B7*02               161 	sta	*_memmove_sloc1_1_0
   0088 B6*03               162 	lda	*(_memmove_sloc1_1_0 + 1)
   008A A0 01               163 	sub	#0x01
   008C C7s00r0B            164 	sta	(_memmove_s_1_1 + 1)
   008F B6*02               165 	lda	*_memmove_sloc1_1_0
   0091 A2 00               166 	sbc	#0x00
   0093 C7s00r0A            167 	sta	_memmove_s_1_1
                            168 ;../_memmove.c:55: while (acount--) {
   0096 C6s00r0A            169 	lda	_memmove_s_1_1
   0099 B7*02               170 	sta	*_memmove_sloc1_1_0
   009B C6s00r0B            171 	lda	(_memmove_s_1_1 + 1)
   009E B7*03               172 	sta	*(_memmove_sloc1_1_0 + 1)
   00A0 C6s00r08            173 	lda	_memmove_d_1_1
   00A3 B7*00               174 	sta	*_memmove_sloc0_1_0
   00A5 C6s00r09            175 	lda	(_memmove_d_1_1 + 1)
   00A8 B7*01               176 	sta	*(_memmove_sloc0_1_0 + 1)
   00AA C6s00r02            177 	lda	_memmove_PARM_3
   00AD B7*04               178 	sta	*_memmove_sloc2_1_0
   00AF C6s00r03            179 	lda	(_memmove_PARM_3 + 1)
   00B2 B7*05               180 	sta	*(_memmove_sloc2_1_0 + 1)
   00B4                     181 00101$:
   00B4 4E*04*06            182 	mov	*_memmove_sloc2_1_0,*_memmove_sloc3_1_0
   00B7 4E*05*07            183 	mov	*(_memmove_sloc2_1_0 + 1),*(_memmove_sloc3_1_0 + 1)
   00BA B6*05               184 	lda	*(_memmove_sloc2_1_0 + 1)
   00BC A0 01               185 	sub	#0x01
   00BE B7*05               186 	sta	*(_memmove_sloc2_1_0 + 1)
   00C0 B6*04               187 	lda	*_memmove_sloc2_1_0
   00C2 A2 00               188 	sbc	#0x00
   00C4 B7*04               189 	sta	*_memmove_sloc2_1_0
   00C6 B6*07               190 	lda	*(_memmove_sloc3_1_0 + 1)
   00C8 BA*06               191 	ora	*_memmove_sloc3_1_0
   00CA 26 03               192 	bne	00123$
   00CC CCs01r3D            193 	jmp	00109$
   00CF                     194 00123$:
                            195 ;../_memmove.c:56: *d-- = *s--;
   00CF 55*02               196 	ldhx	*_memmove_sloc1_1_0
   00D1 F6                  197 	lda	,x
   00D2 B7*06               198 	sta	*_memmove_sloc3_1_0
   00D4 B6*03               199 	lda	*(_memmove_sloc1_1_0 + 1)
   00D6 A0 01               200 	sub	#0x01
   00D8 B7*03               201 	sta	*(_memmove_sloc1_1_0 + 1)
   00DA B6*02               202 	lda	*_memmove_sloc1_1_0
   00DC A2 00               203 	sbc	#0x00
   00DE B7*02               204 	sta	*_memmove_sloc1_1_0
   00E0 55*00               205 	ldhx	*_memmove_sloc0_1_0
   00E2 B6*06               206 	lda	*_memmove_sloc3_1_0
   00E4 F7                  207 	sta	,x
   00E5 B6*01               208 	lda	*(_memmove_sloc0_1_0 + 1)
   00E7 A0 01               209 	sub	#0x01
   00E9 B7*01               210 	sta	*(_memmove_sloc0_1_0 + 1)
   00EB B6*00               211 	lda	*_memmove_sloc0_1_0
   00ED A2 00               212 	sbc	#0x00
   00EF B7*00               213 	sta	*_memmove_sloc0_1_0
   00F1 20 C1               214 	bra	00101$
   00F3                     215 00108$:
                            216 ;../_memmove.c:64: s = src;
                            217 ;../_memmove.c:65: while (acount--) {
   00F3 C6s00r00            218 	lda	_memmove_PARM_2
   00F6 B7*06               219 	sta	*_memmove_sloc3_1_0
   00F8 C6s00r01            220 	lda	(_memmove_PARM_2 + 1)
   00FB B7*07               221 	sta	*(_memmove_sloc3_1_0 + 1)
   00FD C6s00r04            222 	lda	_memmove_dst_1_1
   0100 B7*04               223 	sta	*_memmove_sloc2_1_0
   0102 C6s00r05            224 	lda	(_memmove_dst_1_1 + 1)
   0105 B7*05               225 	sta	*(_memmove_sloc2_1_0 + 1)
   0107 C6s00r02            226 	lda	_memmove_PARM_3
   010A B7*02               227 	sta	*_memmove_sloc1_1_0
   010C C6s00r03            228 	lda	(_memmove_PARM_3 + 1)
   010F B7*03               229 	sta	*(_memmove_sloc1_1_0 + 1)
   0111                     230 00104$:
   0111 4E*02*00            231 	mov	*_memmove_sloc1_1_0,*_memmove_sloc0_1_0
   0114 4E*03*01            232 	mov	*(_memmove_sloc1_1_0 + 1),*(_memmove_sloc0_1_0 + 1)
   0117 B6*03               233 	lda	*(_memmove_sloc1_1_0 + 1)
   0119 A0 01               234 	sub	#0x01
   011B B7*03               235 	sta	*(_memmove_sloc1_1_0 + 1)
   011D B6*02               236 	lda	*_memmove_sloc1_1_0
   011F A2 00               237 	sbc	#0x00
   0121 B7*02               238 	sta	*_memmove_sloc1_1_0
   0123 B6*01               239 	lda	*(_memmove_sloc0_1_0 + 1)
   0125 BA*00               240 	ora	*_memmove_sloc0_1_0
   0127 27 14               241 	beq	00109$
   0129                     242 00124$:
                            243 ;../_memmove.c:66: *d++ = *s++;
   0129 55*06               244 	ldhx	*_memmove_sloc3_1_0
   012B F6                  245 	lda	,x
   012C AF 01               246 	aix	#1
   012E B7*00               247 	sta	*_memmove_sloc0_1_0
   0130 35*06               248 	sthx	*_memmove_sloc3_1_0
   0132 55*04               249 	ldhx	*_memmove_sloc2_1_0
   0134 B6*00               250 	lda	*_memmove_sloc0_1_0
   0136 F7                  251 	sta	,x
   0137 AF 01               252 	aix	#1
   0139 35*04               253 	sthx	*_memmove_sloc2_1_0
   013B 20 D4               254 	bra	00104$
   013D                     255 00109$:
                            256 ;../_memmove.c:70: return(ret);
   013D CEs00r06            257 	ldx	_memmove_ret_1_1
   0140 C6s00r07            258 	lda	(_memmove_ret_1_1 + 1)
   0143                     259 00111$:
   0143 81                  260 	rts
                            261 	.area CSEG (CODE)
                            262 	.area CONST   (CODE)
                            263 	.area XINIT
                            264 	.area CABS    (ABS,CODE)
