                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:29 2015
                              5 ;--------------------------------------------------------
                              6 	.module puts
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _puts
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
   0000                      57 _puts_s_1_1:
   0000                      58 	.ds 3
                             59 ;--------------------------------------------------------
                             60 ; absolute external ram data
                             61 ;--------------------------------------------------------
                             62 	.area XABS    (ABS,XDATA)
                             63 ;--------------------------------------------------------
                             64 ; external initialized ram data
                             65 ;--------------------------------------------------------
                             66 	.area XISEG   (XDATA)
                             67 	.area HOME    (CODE)
                             68 	.area GSINIT0 (CODE)
                             69 	.area GSINIT1 (CODE)
                             70 	.area GSINIT2 (CODE)
                             71 	.area GSINIT3 (CODE)
                             72 	.area GSINIT4 (CODE)
                             73 	.area GSINIT5 (CODE)
                             74 	.area GSINIT  (CODE)
                             75 	.area GSFINAL (CODE)
                             76 	.area CSEG    (CODE)
                             77 ;--------------------------------------------------------
                             78 ; global & static initialisations
                             79 ;--------------------------------------------------------
                             80 	.area HOME    (CODE)
                             81 	.area GSINIT  (CODE)
                             82 	.area GSFINAL (CODE)
                             83 	.area GSINIT  (CODE)
                             84 ;--------------------------------------------------------
                             85 ; Home
                             86 ;--------------------------------------------------------
                             87 	.area HOME    (CODE)
                             88 	.area HOME    (CODE)
                             89 ;--------------------------------------------------------
                             90 ; code
                             91 ;--------------------------------------------------------
                             92 	.area CSEG    (CODE)
                             93 ;------------------------------------------------------------
                             94 ;Allocation info for local variables in function 'puts'
                             95 ;------------------------------------------------------------
                             96 ;s                         Allocated with name '_puts_s_1_1'
                             97 ;i                         Allocated with name '_puts_i_1_1'
                             98 ;------------------------------------------------------------
                             99 ;	puts.c:31: int puts (char *s)
                            100 ;	-----------------------------------------
                            101 ;	 function puts
                            102 ;	-----------------------------------------
   0000                     103 _puts:
                    0002    104 	ar2 = 0x02
                    0003    105 	ar3 = 0x03
                    0004    106 	ar4 = 0x04
                    0005    107 	ar5 = 0x05
                    0006    108 	ar6 = 0x06
                    0007    109 	ar7 = 0x07
                    0000    110 	ar0 = 0x00
                    0001    111 	ar1 = 0x01
   0000 AA F0               112 	mov	r2,b
   0002 AB 83               113 	mov	r3,dph
   0004 E5 82               114 	mov	a,dpl
   0006 90s00r00            115 	mov	dptr,#_puts_s_1_1
   0009 F0                  116 	movx	@dptr,a
   000A A3                  117 	inc	dptr
   000B EB                  118 	mov	a,r3
   000C F0                  119 	movx	@dptr,a
   000D A3                  120 	inc	dptr
   000E EA                  121 	mov	a,r2
   000F F0                  122 	movx	@dptr,a
                            123 ;	puts.c:34: while (*s){
   0010 90s00r00            124 	mov	dptr,#_puts_s_1_1
   0013 E0                  125 	movx	a,@dptr
   0014 FA                  126 	mov	r2,a
   0015 A3                  127 	inc	dptr
   0016 E0                  128 	movx	a,@dptr
   0017 FB                  129 	mov	r3,a
   0018 A3                  130 	inc	dptr
   0019 E0                  131 	movx	a,@dptr
   001A FC                  132 	mov	r4,a
   001B 7D 00               133 	mov	r5,#0x00
   001D 7E 00               134 	mov	r6,#0x00
   001F                     135 00101$:
   001F 8A 82               136 	mov	dpl,r2
   0021 8B 83               137 	mov	dph,r3
   0023 8C F0               138 	mov	b,r4
   0025 12s00r00            139 	lcall	__gptrget
   0028 FF                  140 	mov	r7,a
   0029 60 30               141 	jz	00108$
                            142 ;	puts.c:35: putchar(*s++);
   002B 0A                  143 	inc	r2
   002C BA 00 01            144 	cjne	r2,#0x00,00110$
   002F 0B                  145 	inc	r3
   0030                     146 00110$:
   0030 90s00r00            147 	mov	dptr,#_puts_s_1_1
   0033 EA                  148 	mov	a,r2
   0034 F0                  149 	movx	@dptr,a
   0035 A3                  150 	inc	dptr
   0036 EB                  151 	mov	a,r3
   0037 F0                  152 	movx	@dptr,a
   0038 A3                  153 	inc	dptr
   0039 EC                  154 	mov	a,r4
   003A F0                  155 	movx	@dptr,a
   003B 8F 82               156 	mov	dpl,r7
   003D C0 02               157 	push	ar2
   003F C0 03               158 	push	ar3
   0041 C0 04               159 	push	ar4
   0043 C0 05               160 	push	ar5
   0045 C0 06               161 	push	ar6
   0047 12s00r00            162 	lcall	_putchar
   004A D0 06               163 	pop	ar6
   004C D0 05               164 	pop	ar5
   004E D0 04               165 	pop	ar4
   0050 D0 03               166 	pop	ar3
   0052 D0 02               167 	pop	ar2
                            168 ;	puts.c:36: i++;
   0054 0D                  169 	inc	r5
   0055 BD 00 C7            170 	cjne	r5,#0x00,00101$
   0058 0E                  171 	inc	r6
   0059 80 C4               172 	sjmp	00101$
   005B                     173 00108$:
   005B 90s00r00            174 	mov	dptr,#_puts_s_1_1
   005E EA                  175 	mov	a,r2
   005F F0                  176 	movx	@dptr,a
   0060 A3                  177 	inc	dptr
   0061 EB                  178 	mov	a,r3
   0062 F0                  179 	movx	@dptr,a
   0063 A3                  180 	inc	dptr
   0064 EC                  181 	mov	a,r4
   0065 F0                  182 	movx	@dptr,a
                            183 ;	puts.c:38: putchar('\n');
   0066 75 82 0A            184 	mov	dpl,#0x0A
   0069 C0 05               185 	push	ar5
   006B C0 06               186 	push	ar6
   006D 12s00r00            187 	lcall	_putchar
   0070 D0 06               188 	pop	ar6
   0072 D0 05               189 	pop	ar5
                            190 ;	puts.c:39: return i+1;
   0074 0D                  191 	inc	r5
   0075 BD 00 01            192 	cjne	r5,#0x00,00111$
   0078 0E                  193 	inc	r6
   0079                     194 00111$:
   0079 8D 82               195 	mov	dpl,r5
   007B 8E 83               196 	mov	dph,r6
   007D 22                  197 	ret
                            198 	.area CSEG    (CODE)
                            199 	.area CONST   (CODE)
                            200 	.area XINIT   (CODE)
                            201 	.area CABS    (ABS,CODE)
