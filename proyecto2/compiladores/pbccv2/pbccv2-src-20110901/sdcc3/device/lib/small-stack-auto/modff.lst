                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:31 2015
                              5 ;--------------------------------------------------------
                              6 	.module modff
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _modff
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'modff'
                             93 ;------------------------------------------------------------
                             94 ;y                         Allocated to stack - offset -5
                             95 ;x                         Allocated to stack - offset 1
                             96 ;sloc0                     Allocated to stack - offset 5
                             97 ;------------------------------------------------------------
                             98 ;	modff.c:33: float modff(float x, float * y)
                             99 ;	-----------------------------------------
                            100 ;	 function modff
                            101 ;	-----------------------------------------
   0000                     102 _modff:
                    0002    103 	ar2 = 0x02
                    0003    104 	ar3 = 0x03
                    0004    105 	ar4 = 0x04
                    0005    106 	ar5 = 0x05
                    0006    107 	ar6 = 0x06
                    0007    108 	ar7 = 0x07
                    0000    109 	ar0 = 0x00
                    0001    110 	ar1 = 0x01
   0000 C0*00               111 	push	_bp
   0002 85 81*00            112 	mov	_bp,sp
   0005 C0 82               113 	push	dpl
   0007 C0 83               114 	push	dph
   0009 C0 F0               115 	push	b
   000B C0 E0               116 	push	acc
   000D 05 81               117 	inc	sp
   000F 05 81               118 	inc	sp
   0011 05 81               119 	inc	sp
                            120 ;	modff.c:35: *y=(long)x;
   0013 E5*00               121 	mov	a,_bp
   0015 24 FB               122 	add	a,#0xfb
   0017 F8                  123 	mov	r0,a
   0018 E5*00               124 	mov	a,_bp
   001A 24 05               125 	add	a,#0x05
   001C F9                  126 	mov	r1,a
   001D E6                  127 	mov	a,@r0
   001E F7                  128 	mov	@r1,a
   001F 08                  129 	inc	r0
   0020 09                  130 	inc	r1
   0021 E6                  131 	mov	a,@r0
   0022 F7                  132 	mov	@r1,a
   0023 08                  133 	inc	r0
   0024 09                  134 	inc	r1
   0025 E6                  135 	mov	a,@r0
   0026 F7                  136 	mov	@r1,a
   0027 A8*00               137 	mov	r0,_bp
   0029 08                  138 	inc	r0
   002A 86 82               139 	mov	dpl,@r0
   002C 08                  140 	inc	r0
   002D 86 83               141 	mov	dph,@r0
   002F 08                  142 	inc	r0
   0030 86 F0               143 	mov	b,@r0
   0032 08                  144 	inc	r0
   0033 E6                  145 	mov	a,@r0
   0034 12s00r00            146 	lcall	___fs2slong
   0037 12s00r00            147 	lcall	___slong2fs
   003A AA 82               148 	mov	r2,dpl
   003C AB 83               149 	mov	r3,dph
   003E AC F0               150 	mov	r4,b
   0040 FD                  151 	mov	r5,a
   0041 E5*00               152 	mov	a,_bp
   0043 24 05               153 	add	a,#0x05
   0045 F8                  154 	mov	r0,a
   0046 86 82               155 	mov	dpl,@r0
   0048 08                  156 	inc	r0
   0049 86 83               157 	mov	dph,@r0
   004B 08                  158 	inc	r0
   004C 86 F0               159 	mov	b,@r0
   004E EA                  160 	mov	a,r2
   004F 12s00r00            161 	lcall	__gptrput
   0052 A3                  162 	inc	dptr
   0053 EB                  163 	mov	a,r3
   0054 12s00r00            164 	lcall	__gptrput
   0057 A3                  165 	inc	dptr
   0058 EC                  166 	mov	a,r4
   0059 12s00r00            167 	lcall	__gptrput
   005C A3                  168 	inc	dptr
   005D ED                  169 	mov	a,r5
   005E 12s00r00            170 	lcall	__gptrput
                            171 ;	modff.c:36: return (x-*y);
   0061 C0 02               172 	push	ar2
   0063 C0 03               173 	push	ar3
   0065 C0 04               174 	push	ar4
   0067 C0 05               175 	push	ar5
   0069 A8*00               176 	mov	r0,_bp
   006B 08                  177 	inc	r0
   006C 86 82               178 	mov	dpl,@r0
   006E 08                  179 	inc	r0
   006F 86 83               180 	mov	dph,@r0
   0071 08                  181 	inc	r0
   0072 86 F0               182 	mov	b,@r0
   0074 08                  183 	inc	r0
   0075 E6                  184 	mov	a,@r0
   0076 12s00r00            185 	lcall	___fssub
   0079 AA 82               186 	mov	r2,dpl
   007B AB 83               187 	mov	r3,dph
   007D AC F0               188 	mov	r4,b
   007F FD                  189 	mov	r5,a
   0080 E5 81               190 	mov	a,sp
   0082 24 FC               191 	add	a,#0xfc
   0084 F5 81               192 	mov	sp,a
   0086 8A 82               193 	mov	dpl,r2
   0088 8B 83               194 	mov	dph,r3
   008A 8C F0               195 	mov	b,r4
   008C ED                  196 	mov	a,r5
   008D 85*00 81            197 	mov	sp,_bp
   0090 D0*00               198 	pop	_bp
   0092 22                  199 	ret
                            200 	.area CSEG    (CODE)
                            201 	.area CONST   (CODE)
                            202 	.area XINIT   (CODE)
                            203 	.area CABS    (ABS,CODE)
