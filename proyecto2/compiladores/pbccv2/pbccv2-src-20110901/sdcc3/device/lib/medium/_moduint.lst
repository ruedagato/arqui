                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:25 2015
                              5 ;--------------------------------------------------------
                              6 	.module _moduint
                              7 	.optsdcc -mmcs51 --model-medium
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __moduint_PARM_2
                             13 	.globl __moduint
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 	.area RSEG    (ABS,DATA)
   0000                      18 	.org 0x0000
                             19 ;--------------------------------------------------------
                             20 ; special function bits
                             21 ;--------------------------------------------------------
                             22 	.area RSEG    (ABS,DATA)
   0000                      23 	.org 0x0000
                             24 ;--------------------------------------------------------
                             25 ; overlayable register banks
                             26 ;--------------------------------------------------------
                             27 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      28 	.ds 8
                             29 ;--------------------------------------------------------
                             30 ; internal ram data
                             31 ;--------------------------------------------------------
                             32 	.area DSEG    (DATA)
                             33 ;--------------------------------------------------------
                             34 ; overlayable items in internal ram 
                             35 ;--------------------------------------------------------
                             36 	.area OSEG    (OVR,DATA)
                             37 ;--------------------------------------------------------
                             38 ; indirectly addressable internal ram data
                             39 ;--------------------------------------------------------
                             40 	.area ISEG    (DATA)
                             41 ;--------------------------------------------------------
                             42 ; absolute internal ram data
                             43 ;--------------------------------------------------------
                             44 	.area IABS    (ABS,DATA)
                             45 	.area IABS    (ABS,DATA)
                             46 ;--------------------------------------------------------
                             47 ; bit data
                             48 ;--------------------------------------------------------
                             49 	.area BSEG    (BIT)
                             50 ;--------------------------------------------------------
                             51 ; paged external ram data
                             52 ;--------------------------------------------------------
                             53 	.area PSEG    (PAG,XDATA)
   0000                      54 __moduint_PARM_2:
   0000                      55 	.ds 2
                             56 ;--------------------------------------------------------
                             57 ; external ram data
                             58 ;--------------------------------------------------------
                             59 	.area XSEG    (XDATA)
                             60 ;--------------------------------------------------------
                             61 ; absolute external ram data
                             62 ;--------------------------------------------------------
                             63 	.area XABS    (ABS,XDATA)
                             64 ;--------------------------------------------------------
                             65 ; external initialized ram data
                             66 ;--------------------------------------------------------
                             67 	.area XISEG   (XDATA)
                             68 	.area HOME    (CODE)
                             69 	.area GSINIT0 (CODE)
                             70 	.area GSINIT1 (CODE)
                             71 	.area GSINIT2 (CODE)
                             72 	.area GSINIT3 (CODE)
                             73 	.area GSINIT4 (CODE)
                             74 	.area GSINIT5 (CODE)
                             75 	.area GSINIT  (CODE)
                             76 	.area GSFINAL (CODE)
                             77 	.area CSEG    (CODE)
                             78 ;--------------------------------------------------------
                             79 ; global & static initialisations
                             80 ;--------------------------------------------------------
                             81 	.area HOME    (CODE)
                             82 	.area GSINIT  (CODE)
                             83 	.area GSFINAL (CODE)
                             84 	.area GSINIT  (CODE)
                             85 ;--------------------------------------------------------
                             86 ; Home
                             87 ;--------------------------------------------------------
                             88 	.area HOME    (CODE)
                             89 	.area HOME    (CODE)
                             90 ;--------------------------------------------------------
                             91 ; code
                             92 ;--------------------------------------------------------
                             93 	.area CSEG    (CODE)
                             94 ;------------------------------------------------------------
                             95 ;Allocation info for local variables in function '_moduint'
                             96 ;------------------------------------------------------------
                             97 ;------------------------------------------------------------
                             98 ;	_moduint.c:173: _moduint (unsigned int a, unsigned int b)
                             99 ;	-----------------------------------------
                            100 ;	 function _moduint
                            101 ;	-----------------------------------------
   0000                     102 __moduint:
                    0002    103 	ar2 = 0x02
                    0003    104 	ar3 = 0x03
                    0004    105 	ar4 = 0x04
                    0005    106 	ar5 = 0x05
                    0006    107 	ar6 = 0x06
                    0007    108 	ar7 = 0x07
                    0000    109 	ar0 = 0x00
                    0001    110 	ar1 = 0x01
   0000 AA 82               111 	mov	r2,dpl
   0002 AB 83               112 	mov	r3,dph
                            113 ;	_moduint.c:175: unsigned char count = 0;
   0004 7C 00               114 	mov	r4,#0x00
                            115 ;	_moduint.c:178: while (!MSB_SET(b))
   0006 7D 00               116 	mov	r5,#0x00
   0008                     117 00103$:
   0008 78r01               118 	mov	r0,#(__moduint_PARM_2 + 1)
   000A E2                  119 	movx	a,@r0
   000B 23                  120 	rl	a
   000C 54 01               121 	anl	a,#0x01
   000E FE                  122 	mov	r6,a
   000F 70 3E               123 	jnz	00117$
                            124 ;	_moduint.c:180: b <<= 1;
   0011 78r01               125 	mov	r0,#(__moduint_PARM_2 + 1)
   0013 E2                  126 	movx	a,@r0
   0014 F5 F0               127 	mov	b,a
   0016 18                  128 	dec	r0
   0017 E2                  129 	movx	a,@r0
   0018 25 E0               130 	add	a,acc
   001A C5 F0               131 	xch	a,b
   001C 33                  132 	rlc	a
   001D C5 F0               133 	xch	a,b
   001F F2                  134 	movx	@r0,a
   0020 08                  135 	inc	r0
   0021 E5 F0               136 	mov	a,b
   0023 F2                  137 	movx	@r0,a
                            138 ;	_moduint.c:181: if (b > a)
   0024 78r00               139 	mov	r0,#__moduint_PARM_2
   0026 C3                  140 	clr	c
   0027 E2                  141 	movx	a,@r0
   0028 F5 F0               142 	mov	b,a
   002A EA                  143 	mov	a,r2
   002B 95 F0               144 	subb	a,b
   002D 08                  145 	inc	r0
   002E E2                  146 	movx	a,@r0
   002F F5 F0               147 	mov	b,a
   0031 EB                  148 	mov	a,r3
   0032 95 F0               149 	subb	a,b
   0034 50 14               150 	jnc	00102$
                            151 ;	_moduint.c:183: b >>=1;
   0036 78r00               152 	mov	r0,#__moduint_PARM_2
   0038 E2                  153 	movx	a,@r0
   0039 F5 F0               154 	mov	b,a
   003B 08                  155 	inc	r0
   003C E2                  156 	movx	a,@r0
   003D C3                  157 	clr	c
   003E 13                  158 	rrc	a
   003F C5 F0               159 	xch	a,b
   0041 13                  160 	rrc	a
   0042 18                  161 	dec	r0
   0043 F2                  162 	movx	@r0,a
   0044 C5 F0               163 	xch	a,b
   0046 08                  164 	inc	r0
   0047 F2                  165 	movx	@r0,a
                            166 ;	_moduint.c:184: break;
   0048 80 05               167 	sjmp	00117$
   004A                     168 00102$:
                            169 ;	_moduint.c:186: count++;
   004A 0D                  170 	inc	r5
   004B 8D 04               171 	mov	ar4,r5
                            172 ;	_moduint.c:188: do
   004D 80 B9               173 	sjmp	00103$
   004F                     174 00117$:
   004F                     175 00108$:
                            176 ;	_moduint.c:190: if (a >= b)
   004F 78r00               177 	mov	r0,#__moduint_PARM_2
   0051 C3                  178 	clr	c
   0052 E2                  179 	movx	a,@r0
   0053 F5 F0               180 	mov	b,a
   0055 EA                  181 	mov	a,r2
   0056 95 F0               182 	subb	a,b
   0058 08                  183 	inc	r0
   0059 E2                  184 	movx	a,@r0
   005A F5 F0               185 	mov	b,a
   005C EB                  186 	mov	a,r3
   005D 95 F0               187 	subb	a,b
   005F 40 0E               188 	jc	00107$
                            189 ;	_moduint.c:191: a -= b;
   0061 78r00               190 	mov	r0,#__moduint_PARM_2
   0063 D3                  191 	setb	c
   0064 E2                  192 	movx	a,@r0
   0065 9A                  193 	subb	a,r2
   0066 F4                  194 	cpl	a
   0067 B3                  195 	cpl	c
   0068 FA                  196 	mov	r2,a
   0069 B3                  197 	cpl	c
   006A 08                  198 	inc	r0
   006B E2                  199 	movx	a,@r0
   006C 9B                  200 	subb	a,r3
   006D F4                  201 	cpl	a
   006E FB                  202 	mov	r3,a
   006F                     203 00107$:
                            204 ;	_moduint.c:192: b >>= 1;
   006F 78r00               205 	mov	r0,#__moduint_PARM_2
   0071 E2                  206 	movx	a,@r0
   0072 F5 F0               207 	mov	b,a
   0074 08                  208 	inc	r0
   0075 E2                  209 	movx	a,@r0
   0076 C3                  210 	clr	c
   0077 13                  211 	rrc	a
   0078 C5 F0               212 	xch	a,b
   007A 13                  213 	rrc	a
   007B 18                  214 	dec	r0
   007C F2                  215 	movx	@r0,a
   007D C5 F0               216 	xch	a,b
   007F 08                  217 	inc	r0
   0080 F2                  218 	movx	@r0,a
                            219 ;	_moduint.c:194: while (count--);
   0081 8C 05               220 	mov	ar5,r4
   0083 1C                  221 	dec	r4
   0084 ED                  222 	mov	a,r5
   0085 70 C8               223 	jnz	00108$
                            224 ;	_moduint.c:195: return a;
   0087 8A 82               225 	mov	dpl,r2
   0089 8B 83               226 	mov	dph,r3
   008B 22                  227 	ret
                            228 	.area CSEG    (CODE)
                            229 	.area CONST   (CODE)
                            230 	.area XINIT   (CODE)
                            231 	.area CABS    (ABS,CODE)
