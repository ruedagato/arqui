                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:25 2015
                              5 ;--------------------------------------------------------
                              6 	.module powf
                              7 	.optsdcc -mmcs51 --model-medium
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _powf_PARM_2
                             13 	.globl _powf
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 	.area RSEG    (ABS,DATA)
   0000                      18 	.org 0x0000
                             19 ;--------------------------------------------------------
                             20 ; special function bits
                             21 ;--------------------------------------------------------
                             22 	.area RSEG    (ABS,DATA)
   0000                      23 	.org 0x0000
                             24 ;--------------------------------------------------------
                             25 ; overlayable register banks
                             26 ;--------------------------------------------------------
                             27 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      28 	.ds 8
                             29 ;--------------------------------------------------------
                             30 ; internal ram data
                             31 ;--------------------------------------------------------
                             32 	.area DSEG    (DATA)
                             33 ;--------------------------------------------------------
                             34 ; overlayable items in internal ram 
                             35 ;--------------------------------------------------------
                             36 	.area OSEG    (OVR,DATA)
                             37 ;--------------------------------------------------------
                             38 ; indirectly addressable internal ram data
                             39 ;--------------------------------------------------------
                             40 	.area ISEG    (DATA)
                             41 ;--------------------------------------------------------
                             42 ; absolute internal ram data
                             43 ;--------------------------------------------------------
                             44 	.area IABS    (ABS,DATA)
                             45 	.area IABS    (ABS,DATA)
                             46 ;--------------------------------------------------------
                             47 ; bit data
                             48 ;--------------------------------------------------------
                             49 	.area BSEG    (BIT)
                             50 ;--------------------------------------------------------
                             51 ; paged external ram data
                             52 ;--------------------------------------------------------
                             53 	.area PSEG    (PAG,XDATA)
   0000                      54 _powf_PARM_2:
   0000                      55 	.ds 4
                             56 ;--------------------------------------------------------
                             57 ; external ram data
                             58 ;--------------------------------------------------------
                             59 	.area XSEG    (XDATA)
                             60 ;--------------------------------------------------------
                             61 ; absolute external ram data
                             62 ;--------------------------------------------------------
                             63 	.area XABS    (ABS,XDATA)
                             64 ;--------------------------------------------------------
                             65 ; external initialized ram data
                             66 ;--------------------------------------------------------
                             67 	.area XISEG   (XDATA)
                             68 	.area HOME    (CODE)
                             69 	.area GSINIT0 (CODE)
                             70 	.area GSINIT1 (CODE)
                             71 	.area GSINIT2 (CODE)
                             72 	.area GSINIT3 (CODE)
                             73 	.area GSINIT4 (CODE)
                             74 	.area GSINIT5 (CODE)
                             75 	.area GSINIT  (CODE)
                             76 	.area GSFINAL (CODE)
                             77 	.area CSEG    (CODE)
                             78 ;--------------------------------------------------------
                             79 ; global & static initialisations
                             80 ;--------------------------------------------------------
                             81 	.area HOME    (CODE)
                             82 	.area GSINIT  (CODE)
                             83 	.area GSFINAL (CODE)
                             84 	.area GSINIT  (CODE)
                             85 ;--------------------------------------------------------
                             86 ; Home
                             87 ;--------------------------------------------------------
                             88 	.area HOME    (CODE)
                             89 	.area HOME    (CODE)
                             90 ;--------------------------------------------------------
                             91 ; code
                             92 ;--------------------------------------------------------
                             93 	.area CSEG    (CODE)
                             94 ;------------------------------------------------------------
                             95 ;Allocation info for local variables in function 'powf'
                             96 ;------------------------------------------------------------
                             97 ;------------------------------------------------------------
                             98 ;	powf.c:35: float powf(const float x, const float y)
                             99 ;	-----------------------------------------
                            100 ;	 function powf
                            101 ;	-----------------------------------------
   0000                     102 _powf:
                    0002    103 	ar2 = 0x02
                    0003    104 	ar3 = 0x03
                    0004    105 	ar4 = 0x04
                    0005    106 	ar5 = 0x05
                    0006    107 	ar6 = 0x06
                    0007    108 	ar7 = 0x07
                    0000    109 	ar0 = 0x00
                    0001    110 	ar1 = 0x01
   0000 AA 82               111 	mov	r2,dpl
   0002 AB 83               112 	mov	r3,dph
   0004 AC F0               113 	mov	r4,b
   0006 FD                  114 	mov	r5,a
                            115 ;	powf.c:37: if(y == 0.0) return 1.0;
   0007 78r00               116 	mov	r0,#_powf_PARM_2
   0009 E2                  117 	movx	a,@r0
   000A F5 F0               118 	mov	b,a
   000C 08                  119 	inc	r0
   000D E2                  120 	movx	a,@r0
   000E 42 F0               121 	orl	b,a
   0010 08                  122 	inc	r0
   0011 E2                  123 	movx	a,@r0
   0012 42 F0               124 	orl	b,a
   0014 08                  125 	inc	r0
   0015 E2                  126 	movx	a,@r0
   0016 45 F0               127 	orl	a,b
   0018 70 09               128 	jnz	00102$
   001A 90 00 00            129 	mov	dptr,#0x0000
   001D 75 F0 80            130 	mov	b,#0x80
   0020 74 3F               131 	mov	a,#0x3F
   0022 22                  132 	ret
   0023                     133 00102$:
                            134 ;	powf.c:38: if(y==1.0) return x;
   0023 C0 02               135 	push	ar2
   0025 C0 03               136 	push	ar3
   0027 C0 04               137 	push	ar4
   0029 C0 05               138 	push	ar5
   002B E4                  139 	clr	a
   002C C0 E0               140 	push	acc
   002E C0 E0               141 	push	acc
   0030 74 80               142 	mov	a,#0x80
   0032 C0 E0               143 	push	acc
   0034 74 3F               144 	mov	a,#0x3F
   0036 C0 E0               145 	push	acc
   0038 78r00               146 	mov	r0,#_powf_PARM_2
   003A E2                  147 	movx	a,@r0
   003B F5 82               148 	mov	dpl,a
   003D 08                  149 	inc	r0
   003E E2                  150 	movx	a,@r0
   003F F5 83               151 	mov	dph,a
   0041 08                  152 	inc	r0
   0042 E2                  153 	movx	a,@r0
   0043 F5 F0               154 	mov	b,a
   0045 08                  155 	inc	r0
   0046 E2                  156 	movx	a,@r0
   0047 12s00r00            157 	lcall	___fseq
   004A AE 82               158 	mov	r6,dpl
   004C E5 81               159 	mov	a,sp
   004E 24 FC               160 	add	a,#0xfc
   0050 F5 81               161 	mov	sp,a
   0052 D0 05               162 	pop	ar5
   0054 D0 04               163 	pop	ar4
   0056 D0 03               164 	pop	ar3
   0058 D0 02               165 	pop	ar2
   005A EE                  166 	mov	a,r6
   005B 60 08               167 	jz	00104$
   005D 8A 82               168 	mov	dpl,r2
   005F 8B 83               169 	mov	dph,r3
   0061 8C F0               170 	mov	b,r4
   0063 ED                  171 	mov	a,r5
   0064 22                  172 	ret
   0065                     173 00104$:
                            174 ;	powf.c:39: if(x <= 0.0) return 0.0;
   0065 C0 02               175 	push	ar2
   0067 C0 03               176 	push	ar3
   0069 C0 04               177 	push	ar4
   006B C0 05               178 	push	ar5
   006D E4                  179 	clr	a
   006E C0 E0               180 	push	acc
   0070 C0 E0               181 	push	acc
   0072 C0 E0               182 	push	acc
   0074 C0 E0               183 	push	acc
   0076 8A 82               184 	mov	dpl,r2
   0078 8B 83               185 	mov	dph,r3
   007A 8C F0               186 	mov	b,r4
   007C ED                  187 	mov	a,r5
   007D 12s00r00            188 	lcall	___fsgt
   0080 AE 82               189 	mov	r6,dpl
   0082 E5 81               190 	mov	a,sp
   0084 24 FC               191 	add	a,#0xfc
   0086 F5 81               192 	mov	sp,a
   0088 D0 05               193 	pop	ar5
   008A D0 04               194 	pop	ar4
   008C D0 03               195 	pop	ar3
   008E D0 02               196 	pop	ar2
   0090 EE                  197 	mov	a,r6
   0091 70 07               198 	jnz	00106$
   0093 90 00 00            199 	mov	dptr,#(0x00&0x00ff)
   0096 E4                  200 	clr	a
   0097 F5 F0               201 	mov	b,a
   0099 22                  202 	ret
   009A                     203 00106$:
                            204 ;	powf.c:40: return expf(logf(x) * y);
   009A 8A 82               205 	mov	dpl,r2
   009C 8B 83               206 	mov	dph,r3
   009E 8C F0               207 	mov	b,r4
   00A0 ED                  208 	mov	a,r5
   00A1 12s00r00            209 	lcall	_logf
   00A4 AA 82               210 	mov	r2,dpl
   00A6 AB 83               211 	mov	r3,dph
   00A8 AC F0               212 	mov	r4,b
   00AA FD                  213 	mov	r5,a
   00AB 78r00               214 	mov	r0,#_powf_PARM_2
   00AD E2                  215 	movx	a,@r0
   00AE C0 E0               216 	push	acc
   00B0 08                  217 	inc	r0
   00B1 E2                  218 	movx	a,@r0
   00B2 C0 E0               219 	push	acc
   00B4 08                  220 	inc	r0
   00B5 E2                  221 	movx	a,@r0
   00B6 C0 E0               222 	push	acc
   00B8 08                  223 	inc	r0
   00B9 E2                  224 	movx	a,@r0
   00BA C0 E0               225 	push	acc
   00BC 8A 82               226 	mov	dpl,r2
   00BE 8B 83               227 	mov	dph,r3
   00C0 8C F0               228 	mov	b,r4
   00C2 ED                  229 	mov	a,r5
   00C3 12s00r00            230 	lcall	___fsmul
   00C6 AA 82               231 	mov	r2,dpl
   00C8 AB 83               232 	mov	r3,dph
   00CA AC F0               233 	mov	r4,b
   00CC FD                  234 	mov	r5,a
   00CD E5 81               235 	mov	a,sp
   00CF 24 FC               236 	add	a,#0xfc
   00D1 F5 81               237 	mov	sp,a
   00D3 8A 82               238 	mov	dpl,r2
   00D5 8B 83               239 	mov	dph,r3
   00D7 8C F0               240 	mov	b,r4
   00D9 ED                  241 	mov	a,r5
   00DA 02s00r00            242 	ljmp	_expf
                            243 	.area CSEG    (CODE)
                            244 	.area CONST   (CODE)
                            245 	.area XINIT   (CODE)
                            246 	.area CABS    (ABS,CODE)
