                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:17 2015
                              5 ;--------------------------------------------------------
                              6 	.module _memmove
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _memmove_PARM_3
                             31 	.globl _memmove_PARM_2
                             32 	.globl _memmove
                             33 ;--------------------------------------------------------
                             34 ; special function registers
                             35 ;--------------------------------------------------------
                             36 ;--------------------------------------------------------
                             37 ; special function bits
                             38 ;--------------------------------------------------------
                             39 ;--------------------------------------------------------
                             40 ; overlayable register banks
                             41 ;--------------------------------------------------------
                             42 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      43 	.ds 8
                             44 ;--------------------------------------------------------
                             45 ; internal ram data
                             46 ;--------------------------------------------------------
                             47 	.area DSEG    (DATA)
                             48 ;--------------------------------------------------------
                             49 ; overlayable items in internal ram 
                             50 ;--------------------------------------------------------
                             51 	.area OSEG    (OVR,DATA)
                             52 ;--------------------------------------------------------
                             53 ; indirectly addressable internal ram data
                             54 ;--------------------------------------------------------
                             55 	.area ISEG    (DATA)
                             56 ;--------------------------------------------------------
                             57 ; absolute internal ram data
                             58 ;--------------------------------------------------------
                             59 	.area IABS    (ABS,DATA)
                             60 	.area IABS    (ABS,DATA)
                             61 ;--------------------------------------------------------
                             62 ; bit data
                             63 ;--------------------------------------------------------
                             64 	.area BSEG    (BIT)
                             65 ;--------------------------------------------------------
                             66 ; paged external ram data
                             67 ;--------------------------------------------------------
                             68 	.area PSEG    (PAG,XDATA)
                             69 ;--------------------------------------------------------
                             70 ; external ram data
                             71 ;--------------------------------------------------------
                             72 	.area XSEG    (XDATA)
   0000                      73 _memmove_PARM_2:
   0000                      74 	.ds 4
   0004                      75 _memmove_PARM_3:
   0004                      76 	.ds 2
   0006                      77 _memmove_dst_1_1:
   0006                      78 	.ds 4
   000A                      79 _memmove_ret_1_1:
   000A                      80 	.ds 4
   000E                      81 _memmove_d_1_1:
   000E                      82 	.ds 4
   0012                      83 _memmove_sloc0_1_0:
   0012                      84 	.ds 2
   0014                      85 _memmove_sloc1_1_0:
   0014                      86 	.ds 4
   0018                      87 _memmove_sloc2_1_0:
   0018                      88 	.ds 4
                             89 ;--------------------------------------------------------
                             90 ; absolute external ram data
                             91 ;--------------------------------------------------------
                             92 	.area XABS    (ABS,XDATA)
                             93 ;--------------------------------------------------------
                             94 ; external initialized ram data
                             95 ;--------------------------------------------------------
                             96 	.area XISEG   (XDATA)
                             97 ;--------------------------------------------------------
                             98 ; global & static initialisations
                             99 ;--------------------------------------------------------
                            100 	.area HOME    (CODE)
                            101 	.area GSINIT  (CODE)
                            102 	.area GSFINAL (CODE)
                            103 	.area GSINIT  (CODE)
                            104 ;--------------------------------------------------------
                            105 ; Home
                            106 ;--------------------------------------------------------
                            107 	.area HOME    (CODE)
                            108 	.area HOME    (CODE)
                            109 ;--------------------------------------------------------
                            110 ; code
                            111 ;--------------------------------------------------------
                            112 	.area CSEG    (CODE)
                            113 ;------------------------------------------------------------
                            114 ;Allocation info for local variables in function 'memmove'
                            115 ;------------------------------------------------------------
                            116 ;src                       Allocated with name '_memmove_PARM_2'
                            117 ;acount                    Allocated with name '_memmove_PARM_3'
                            118 ;dst                       Allocated with name '_memmove_dst_1_1'
                            119 ;ret                       Allocated with name '_memmove_ret_1_1'
                            120 ;d                         Allocated with name '_memmove_d_1_1'
                            121 ;s                         Allocated to registers r6 r7 r0 r1 
                            122 ;sloc0                     Allocated with name '_memmove_sloc0_1_0'
                            123 ;sloc1                     Allocated with name '_memmove_sloc1_1_0'
                            124 ;sloc2                     Allocated with name '_memmove_sloc2_1_0'
                            125 ;------------------------------------------------------------
                            126 ;	_memmove.c:39: void * memmove (
                            127 ;	-----------------------------------------
                            128 ;	 function memmove
                            129 ;	-----------------------------------------
   0000                     130 _memmove:
                    0002    131 	ar2 = 0x02
                    0003    132 	ar3 = 0x03
                    0004    133 	ar4 = 0x04
                    0005    134 	ar5 = 0x05
                    0006    135 	ar6 = 0x06
                    0007    136 	ar7 = 0x07
                    0000    137 	ar0 = 0x00
                    0001    138 	ar1 = 0x01
   0000 75 86 01            139 	mov     dps, #1
   0003 90s00r00r06         140 	mov     dptr, #_memmove_dst_1_1
   0007 E5 82               141 	mov	a,dpl
   0009 F0                  142 	movx	@dptr,a
   000A A3                  143 	inc	dptr
   000B E5 83               144 	mov	a,dph
   000D F0                  145 	movx	@dptr,a
   000E A3                  146 	inc	dptr
   000F E5 93               147 	mov	a,dpx
   0011 F0                  148 	movx	@dptr,a
   0012 A3                  149 	inc	dptr
   0013 E5 F0               150 	mov	a,b
   0015 F0                  151 	movx	@dptr,a
   0016 75 86 00            152 	mov	dps,#0
                            153 ;	_memmove.c:45: void * ret = dst;
   0019 90s00r00r06         154 	mov	dptr,#_memmove_dst_1_1
                            155 ;	genAssign: resultIsFar = TRUE
   001D 75 86 21            156 	mov	dps,#0x21
   0020 90s00r00r0A         157 	mov	dptr,#_memmove_ret_1_1
   0024 E0                  158 	movx	a,@dptr
   0025 F0                  159 	movx	@dptr,a
   0026 A3                  160 	inc	dptr
   0027 A3                  161 	inc	dptr
   0028 E0                  162 	movx	a,@dptr
   0029 F0                  163 	movx	@dptr,a
   002A A3                  164 	inc	dptr
   002B A3                  165 	inc	dptr
   002C E0                  166 	movx	a,@dptr
   002D F0                  167 	movx	@dptr,a
   002E A3                  168 	inc	dptr
   002F A3                  169 	inc	dptr
   0030 E0                  170 	movx	a,@dptr
   0031 F0                  171 	movx	@dptr,a
   0032 75 86 00            172 	mov	dps,#0
                            173 ;	_memmove.c:49: if (((int)src < (int)dst) && ((((int)src)+acount) > (int)dst)) {
   0035 90s00r00r00         174 	mov	dptr,#_memmove_PARM_2
                            175 ;	genAssign: resultIsFar = FALSE
   0039 E0                  176 	movx	a,@dptr
   003A FA                  177 	mov	r2,a
   003B A3                  178 	inc	dptr
   003C E0                  179 	movx	a,@dptr
   003D FB                  180 	mov	r3,a
   003E A3                  181 	inc	dptr
   003F E0                  182 	movx	a,@dptr
   0040 FC                  183 	mov	r4,a
   0041 A3                  184 	inc	dptr
   0042 E0                  185 	movx	a,@dptr
   0043 FD                  186 	mov	r5,a
   0044 90s00r00r12         187 	mov	dptr,#_memmove_sloc0_1_0
   0048 EA                  188 	mov	a,r2
   0049 F0                  189 	movx	@dptr,a
   004A A3                  190 	inc	dptr
   004B EB                  191 	mov	a,r3
   004C F0                  192 	movx	@dptr,a
   004D 90s00r00r06         193 	mov	dptr,#_memmove_dst_1_1
                            194 ;	genAssign: resultIsFar = FALSE
   0051 E0                  195 	movx	a,@dptr
   0052 F8                  196 	mov	r0,a
   0053 A3                  197 	inc	dptr
   0054 E0                  198 	movx	a,@dptr
   0055 F9                  199 	mov	r1,a
   0056 A3                  200 	inc	dptr
   0057 E0                  201 	movx	a,@dptr
   0058 FE                  202 	mov	r6,a
   0059 A3                  203 	inc	dptr
   005A E0                  204 	movx	a,@dptr
   005B FF                  205 	mov	r7,a
   005C 90s00r00r12         206 	mov	dptr,#_memmove_sloc0_1_0
   0060 C3                  207 	clr	c
   0061 E0                  208 	movx	a,@dptr
   0062 98                  209 	subb	a,r0
   0063 A3                  210 	inc	dptr
   0064 E0                  211 	movx	a,@dptr
   0065 64 80               212 	xrl	a,#0x80
   0067 89 F0               213 	mov	b,r1
   0069 63 F0 80            214 	xrl	b,#0x80
   006C 95 F0               215 	subb	a,b
   006E 40 04               216 	jc	00121$
   0070 02s00r01r9F         217 	ljmp	00108$
   0074                     218 00121$:
                            219 ;	genAssign: resultIsFar = FALSE
   0074 8A 06               220 	mov	ar6,r2
   0076 8B 07               221 	mov	ar7,r3
   0078 8C 00               222 	mov	ar0,r4
   007A 8D 01               223 	mov	ar1,r5
   007C 90s00r00r04         224 	mov	dptr,#_memmove_PARM_3
   0080 E0                  225 	movx	a,@dptr
   0081 2E                  226 	add	a,r6
   0082 FE                  227 	mov	r6,a
   0083 A3                  228 	inc	dptr
   0084 E0                  229 	movx	a,@dptr
   0085 3F                  230 	addc	a,r7
   0086 FF                  231 	mov	r7,a
   0087 C0 02               232 	push	ar2
   0089 C0 03               233 	push	ar3
   008B C0 04               234 	push	ar4
   008D C0 05               235 	push	ar5
   008F 90s00r00r06         236 	mov	dptr,#_memmove_dst_1_1
                            237 ;	genAssign: resultIsFar = FALSE
   0093 E0                  238 	movx	a,@dptr
   0094 F8                  239 	mov	r0,a
   0095 A3                  240 	inc	dptr
   0096 E0                  241 	movx	a,@dptr
   0097 F9                  242 	mov	r1,a
   0098 A3                  243 	inc	dptr
   0099 E0                  244 	movx	a,@dptr
   009A FA                  245 	mov	r2,a
   009B A3                  246 	inc	dptr
   009C E0                  247 	movx	a,@dptr
   009D FB                  248 	mov	r3,a
   009E C3                  249 	clr	c
   009F E8                  250 	mov	a,r0
   00A0 9E                  251 	subb	a,r6
   00A1 E9                  252 	mov	a,r1
   00A2 9F                  253 	subb	a,r7
   00A3 D0 05               254 	pop	ar5
   00A5 D0 04               255 	pop	ar4
   00A7 D0 03               256 	pop	ar3
   00A9 D0 02               257 	pop	ar2
   00AB 40 04               258 	jc	00122$
   00AD 02s00r01r9F         259 	ljmp	00108$
   00B1                     260 00122$:
                            261 ;	_memmove.c:53: d = ((char *)dst)+acount-1;
   00B1 90s00r00r04         262 	mov	dptr,#_memmove_PARM_3
   00B5 75 86 01            263 	mov	dps, #1
   00B8 90s00r00r06         264 	mov	dptr, #_memmove_dst_1_1
   00BC 15 86               265 	dec	dps
   00BE E0                  266 	movx	a,@dptr
   00BF C5 9C               267 	xch	a, _ap
   00C1 05 86               268 	inc	dps
   00C3 E0                  269 	movx	a,@dptr
   00C4 C5 9C               270 	xch	a, _ap
   00C6 25 9C               271 	add	a,_ap
   00C8 FE                  272 	mov	r6,a
   00C9 15 86               273 	dec	dps
   00CB A3                  274 	inc	dptr
   00CC E0                  275 	movx	a,@dptr
   00CD C5 9C               276 	xch	a, _ap
   00CF 05 86               277 	inc	dps
   00D1 A3                  278 	inc	dptr
   00D2 E0                  279 	movx	a,@dptr
   00D3 C5 9C               280 	xch	a, _ap
   00D5 35 9C               281 	addc	a,_ap
   00D7 FF                  282 	mov	r7,a
   00D8 E4                  283 	clr	a
   00D9 C5 9C               284 	xch	a, _ap
   00DB A3                  285 	inc	dptr
   00DC E0                  286 	movx	a,@dptr
   00DD C5 9C               287 	xch	a, _ap
   00DF 35 9C               288 	addc	a,_ap
   00E1 F8                  289 	mov	r0,a
   00E2 75 86 01            290 	mov     dps, #1
   00E5 A3                  291 	inc	dptr
   00E6 E0                  292 	movx	a,@dptr
   00E7 75 86 00            293 	mov	dps,#0
   00EA F9                  294 	mov	r1,a
   00EB 1E                  295 	dec	r6
   00EC BE FF 05            296 	cjne	r6,#0xFF,00123$
   00EF 1F                  297 	dec	r7
   00F0 BF FF 01            298 	cjne	r7,#0xFF,00123$
   00F3 18                  299 	dec	r0
   00F4                     300 00123$:
                            301 ;	genAssign: resultIsFar = TRUE
   00F4 90s00r00r0E         302 	mov	dptr,#_memmove_d_1_1
   00F8 EE                  303 	mov	a,r6
   00F9 F0                  304 	movx	@dptr,a
   00FA A3                  305 	inc	dptr
   00FB EF                  306 	mov	a,r7
   00FC F0                  307 	movx	@dptr,a
   00FD A3                  308 	inc	dptr
   00FE E8                  309 	mov	a,r0
   00FF F0                  310 	movx	@dptr,a
   0100 A3                  311 	inc	dptr
   0101 E9                  312 	mov	a,r1
   0102 F0                  313 	movx	@dptr,a
                            314 ;	_memmove.c:54: s = ((char *)src)+acount-1;
   0103 90s00r00r04         315 	mov	dptr,#_memmove_PARM_3
   0107 E0                  316 	movx	a,@dptr
   0108 2A                  317 	add	a,r2
   0109 FE                  318 	mov	r6,a
   010A A3                  319 	inc	dptr
   010B E0                  320 	movx	a,@dptr
   010C 3B                  321 	addc	a,r3
   010D FF                  322 	mov	r7,a
   010E E4                  323 	clr	a
   010F 3C                  324 	addc	a,r4
   0110 F8                  325 	mov	r0,a
   0111 8D 01               326 	mov	ar1,r5
   0113 1E                  327 	dec	r6
   0114 BE FF 05            328 	cjne	r6,#0xFF,00124$
   0117 1F                  329 	dec	r7
   0118 BF FF 01            330 	cjne	r7,#0xFF,00124$
   011B 18                  331 	dec	r0
   011C                     332 00124$:
                            333 ;	genAssign: resultIsFar = FALSE
                            334 ;	_memmove.c:55: while (acount--) {
                            335 ;	genAssign: resultIsFar = TRUE
   011C 90s00r00r18         336 	mov	dptr,#_memmove_sloc2_1_0
   0120 EE                  337 	mov	a,r6
   0121 F0                  338 	movx	@dptr,a
   0122 A3                  339 	inc	dptr
   0123 EF                  340 	mov	a,r7
   0124 F0                  341 	movx	@dptr,a
   0125 A3                  342 	inc	dptr
   0126 E8                  343 	mov	a,r0
   0127 F0                  344 	movx	@dptr,a
   0128 A3                  345 	inc	dptr
   0129 E9                  346 	mov	a,r1
   012A F0                  347 	movx	@dptr,a
   012B 90s00r00r0E         348 	mov	dptr,#_memmove_d_1_1
                            349 ;	genAssign: resultIsFar = FALSE
   012F E0                  350 	movx	a,@dptr
   0130 FC                  351 	mov	r4,a
   0131 A3                  352 	inc	dptr
   0132 E0                  353 	movx	a,@dptr
   0133 FD                  354 	mov	r5,a
   0134 A3                  355 	inc	dptr
   0135 E0                  356 	movx	a,@dptr
   0136 F8                  357 	mov	r0,a
   0137 A3                  358 	inc	dptr
   0138 E0                  359 	movx	a,@dptr
   0139 F9                  360 	mov	r1,a
   013A 90s00r00r04         361 	mov	dptr,#_memmove_PARM_3
                            362 ;	genAssign: resultIsFar = FALSE
   013E E0                  363 	movx	a,@dptr
   013F FA                  364 	mov	r2,a
   0140 A3                  365 	inc	dptr
   0141 E0                  366 	movx	a,@dptr
   0142 FB                  367 	mov	r3,a
   0143                     368 00101$:
                            369 ;	genAssign: resultIsFar = FALSE
   0143 8A 06               370 	mov	ar6,r2
   0145 8B 07               371 	mov	ar7,r3
   0147 1A                  372 	dec	r2
   0148 BA FF 01            373 	cjne	r2,#0xFF,00125$
   014B 1B                  374 	dec	r3
   014C                     375 00125$:
   014C EE                  376 	mov	a,r6
   014D 4F                  377 	orl	a,r7
   014E 70 04               378 	jnz	00126$
   0150 02s00r02r32         379 	ljmp	00109$
   0154                     380 00126$:
                            381 ;	_memmove.c:56: *d-- = *s--;
   0154 75 86 01            382 	mov     dps, #1
   0157 90s00r00r18         383 	mov     dptr, #_memmove_sloc2_1_0
   015B E0                  384 	movx	a,@dptr
   015C F5 82               385 	mov	dpl,a
   015E A3                  386 	inc	dptr
   015F E0                  387 	movx	a,@dptr
   0160 F5 83               388 	mov	dph,a
   0162 A3                  389 	inc	dptr
   0163 E0                  390 	movx	a,@dptr
   0164 F5 93               391 	mov	dpx,a
   0166 A3                  392 	inc	dptr
   0167 E0                  393 	movx	a,@dptr
   0168 F5 F0               394 	mov	b,a
   016A 75 86 00            395 	mov	dps,#0
   016D 12s00r00r00         396 	lcall	__gptrget
   0171 FE                  397 	mov	r6,a
   0172 90s00r00r18         398 	mov	dptr,#_memmove_sloc2_1_0
   0176 E0                  399 	movx	a,@dptr
   0177 24 FF               400 	add	a,#0xFF
   0179 F0                  401 	movx	@dptr,a
   017A A3                  402 	inc	dptr
   017B E0                  403 	movx	a,@dptr
   017C 34 FF               404 	addc	a,#0xFF
   017E F0                  405 	movx	@dptr,a
   017F A3                  406 	inc	dptr
   0180 E0                  407 	movx	a,@dptr
   0181 34 FF               408 	addc	a,#0xFF
   0183 F0                  409 	movx	@dptr,a
   0184 A3                  410 	inc	dptr
   0185 E0                  411 	movx	a,@dptr
   0186 F0                  412 	movx	@dptr,a
   0187 8C 82               413 	mov	dpl,r4
   0189 8D 83               414 	mov	dph,r5
   018B 88 93               415 	mov	dpx,r0
   018D 89 F0               416 	mov	b,r1
   018F EE                  417 	mov	a,r6
   0190 12s00r00r00         418 	lcall	__gptrput
   0194 1C                  419 	dec	r4
   0195 BC FF 05            420 	cjne	r4,#0xFF,00127$
   0198 1D                  421 	dec	r5
   0199 BD FF 01            422 	cjne	r5,#0xFF,00127$
   019C 18                  423 	dec	r0
   019D                     424 00127$:
   019D 80 A4               425 	sjmp 00101$
   019F                     426 00108$:
                            427 ;	_memmove.c:64: s = src;
                            428 ;	genAssign: resultIsFar = FALSE
   019F 8A 06               429 	mov	ar6,r2
   01A1 8B 07               430 	mov	ar7,r3
   01A3 8C 00               431 	mov	ar0,r4
   01A5 8D 01               432 	mov	ar1,r5
                            433 ;	_memmove.c:65: while (acount--) {
                            434 ;	genAssign: resultIsFar = TRUE
   01A7 90s00r00r14         435 	mov	dptr,#_memmove_sloc1_1_0
   01AB EE                  436 	mov	a,r6
   01AC F0                  437 	movx	@dptr,a
   01AD A3                  438 	inc	dptr
   01AE EF                  439 	mov	a,r7
   01AF F0                  440 	movx	@dptr,a
   01B0 A3                  441 	inc	dptr
   01B1 E8                  442 	mov	a,r0
   01B2 F0                  443 	movx	@dptr,a
   01B3 A3                  444 	inc	dptr
   01B4 E9                  445 	mov	a,r1
   01B5 F0                  446 	movx	@dptr,a
   01B6 90s00r00r06         447 	mov	dptr,#_memmove_dst_1_1
                            448 ;	genAssign: resultIsFar = FALSE
   01BA E0                  449 	movx	a,@dptr
   01BB FE                  450 	mov	r6,a
   01BC A3                  451 	inc	dptr
   01BD E0                  452 	movx	a,@dptr
   01BE FF                  453 	mov	r7,a
   01BF A3                  454 	inc	dptr
   01C0 E0                  455 	movx	a,@dptr
   01C1 F8                  456 	mov	r0,a
   01C2 A3                  457 	inc	dptr
   01C3 E0                  458 	movx	a,@dptr
   01C4 F9                  459 	mov	r1,a
   01C5 90s00r00r04         460 	mov	dptr,#_memmove_PARM_3
                            461 ;	genAssign: resultIsFar = FALSE
   01C9 E0                  462 	movx	a,@dptr
   01CA FC                  463 	mov	r4,a
   01CB A3                  464 	inc	dptr
   01CC E0                  465 	movx	a,@dptr
   01CD FD                  466 	mov	r5,a
   01CE                     467 00104$:
                            468 ;	genAssign: resultIsFar = FALSE
   01CE 8C 02               469 	mov	ar2,r4
   01D0 8D 03               470 	mov	ar3,r5
   01D2 1C                  471 	dec	r4
   01D3 BC FF 01            472 	cjne	r4,#0xFF,00128$
   01D6 1D                  473 	dec	r5
   01D7                     474 00128$:
   01D7 EA                  475 	mov	a,r2
   01D8 4B                  476 	orl	a,r3
   01D9 60 57               477 	jz  00109$
   01DB                     478 00129$:
                            479 ;	_memmove.c:66: *d++ = *s++;
   01DB 75 86 01            480 	mov     dps, #1
   01DE 90s00r00r14         481 	mov     dptr, #_memmove_sloc1_1_0
   01E2 E0                  482 	movx	a,@dptr
   01E3 F5 82               483 	mov	dpl,a
   01E5 A3                  484 	inc	dptr
   01E6 E0                  485 	movx	a,@dptr
   01E7 F5 83               486 	mov	dph,a
   01E9 A3                  487 	inc	dptr
   01EA E0                  488 	movx	a,@dptr
   01EB F5 93               489 	mov	dpx,a
   01ED A3                  490 	inc	dptr
   01EE E0                  491 	movx	a,@dptr
   01EF F5 F0               492 	mov	b,a
   01F1 75 86 00            493 	mov	dps,#0
   01F4 12s00r00r00         494 	lcall	__gptrget
   01F8 FA                  495 	mov	r2,a
   01F9 A3                  496 	inc	dptr
   01FA 05 86               497 	inc	dps
   01FC 12s00r00r00         498 	lcall	__decdptr
   0200 12s00r00r00         499 	lcall	__decdptr
   0204 12s00r00r00         500 	lcall	__decdptr
   0208 E5 82               501 	mov	a,dpl
   020A F0                  502 	movx	@dptr,a
   020B A3                  503 	inc	dptr
   020C E5 83               504 	mov	a,dph
   020E F0                  505 	movx	@dptr,a
   020F A3                  506 	inc	dptr
   0210 E5 93               507 	mov	a,dpx
   0212 F0                  508 	movx	@dptr,a
   0213 A3                  509 	inc	dptr
   0214 E5 F0               510 	mov	a,b
   0216 F0                  511 	movx	@dptr,a
   0217 75 86 00            512 	mov	dps,#0
   021A 8E 82               513 	mov	dpl,r6
   021C 8F 83               514 	mov	dph,r7
   021E 88 93               515 	mov	dpx,r0
   0220 89 F0               516 	mov	b,r1
   0222 EA                  517 	mov	a,r2
   0223 12s00r00r00         518 	lcall	__gptrput
   0227 A3                  519 	inc	dptr
   0228 AE 82               520 	mov	r6,dpl
   022A AF 83               521 	mov	r7,dph
   022C A8 93               522 	mov	r0,dpx
   022E A9 F0               523 	mov	r1,b
   0230 80 9C               524 	sjmp 00104$
   0232                     525 00109$:
                            526 ;	_memmove.c:70: return(ret);
   0232 75 86 01            527 	mov     dps, #1
   0235 90s00r00r0A         528 	mov     dptr, #_memmove_ret_1_1
   0239 E0                  529 	movx	a,@dptr
   023A F5 82               530 	mov	dpl,a
   023C A3                  531 	inc	dptr
   023D E0                  532 	movx	a,@dptr
   023E F5 83               533 	mov	dph,a
   0240 A3                  534 	inc	dptr
   0241 E0                  535 	movx	a,@dptr
   0242 F5 93               536 	mov	dpx,a
   0244 A3                  537 	inc	dptr
   0245 E0                  538 	movx	a,@dptr
   0246 F5 F0               539 	mov	b,a
   0248 75 86 00            540 	mov	dps,#0
   024B                     541 00111$:
   024B 22                  542 	ret
                            543 	.area CSEG    (CODE)
                            544 	.area CONST   (CODE)
                            545 	.area XINIT   (CODE)
                            546 	.area CABS    (ABS,CODE)
