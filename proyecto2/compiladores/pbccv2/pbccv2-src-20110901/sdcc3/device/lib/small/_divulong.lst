                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:23 2015
                              5 ;--------------------------------------------------------
                              6 	.module _divulong
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 ;--------------------------------------------------------
                             13 ; special function registers
                             14 ;--------------------------------------------------------
                             15 	.area RSEG    (ABS,DATA)
   0000                      16 	.org 0x0000
                             17 ;--------------------------------------------------------
                             18 ; special function bits
                             19 ;--------------------------------------------------------
                             20 	.area RSEG    (ABS,DATA)
   0000                      21 	.org 0x0000
                             22 ;--------------------------------------------------------
                             23 ; overlayable register banks
                             24 ;--------------------------------------------------------
                             25 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      26 	.ds 8
                             27 ;--------------------------------------------------------
                             28 ; internal ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (DATA)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in internal ram 
                             33 ;--------------------------------------------------------
                             34 	.area OSEG    (OVR,DATA)
                             35 ;--------------------------------------------------------
                             36 ; indirectly addressable internal ram data
                             37 ;--------------------------------------------------------
                             38 	.area ISEG    (DATA)
                             39 ;--------------------------------------------------------
                             40 ; absolute internal ram data
                             41 ;--------------------------------------------------------
                             42 	.area IABS    (ABS,DATA)
                             43 	.area IABS    (ABS,DATA)
                             44 ;--------------------------------------------------------
                             45 ; bit data
                             46 ;--------------------------------------------------------
                             47 	.area BSEG    (BIT)
                             48 ;--------------------------------------------------------
                             49 ; paged external ram data
                             50 ;--------------------------------------------------------
                             51 	.area PSEG    (PAG,XDATA)
                             52 ;--------------------------------------------------------
                             53 ; external ram data
                             54 ;--------------------------------------------------------
                             55 	.area XSEG    (XDATA)
                             56 ;--------------------------------------------------------
                             57 ; absolute external ram data
                             58 ;--------------------------------------------------------
                             59 	.area XABS    (ABS,XDATA)
                             60 ;--------------------------------------------------------
                             61 ; external initialized ram data
                             62 ;--------------------------------------------------------
                             63 	.area XISEG   (XDATA)
                             64 	.area HOME    (CODE)
                             65 	.area GSINIT0 (CODE)
                             66 	.area GSINIT1 (CODE)
                             67 	.area GSINIT2 (CODE)
                             68 	.area GSINIT3 (CODE)
                             69 	.area GSINIT4 (CODE)
                             70 	.area GSINIT5 (CODE)
                             71 	.area GSINIT  (CODE)
                             72 	.area GSFINAL (CODE)
                             73 	.area CSEG    (CODE)
                             74 ;--------------------------------------------------------
                             75 ; global & static initialisations
                             76 ;--------------------------------------------------------
                             77 	.area HOME    (CODE)
                             78 	.area GSINIT  (CODE)
                             79 	.area GSFINAL (CODE)
                             80 	.area GSINIT  (CODE)
                             81 ;--------------------------------------------------------
                             82 ; Home
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area HOME    (CODE)
                             86 ;--------------------------------------------------------
                             87 ; code
                             88 ;--------------------------------------------------------
                             89 	.area CSEG    (CODE)
                             90 ;------------------------------------------------------------
                             91 ;Allocation info for local variables in function '_divlong_dummy'
                             92 ;------------------------------------------------------------
                             93 ;------------------------------------------------------------
                             94 ;	_divulong.c:51: _divlong_dummy (void) __naked
                             95 ;	-----------------------------------------
                             96 ;	 function _divlong_dummy
                             97 ;	-----------------------------------------
   0000                      98 __divlong_dummy:
                             99 ;	naked function: no prologue.
                            100 ;	_divulong.c:160: mov	a,reste3
                            101 	
                            102 	
                            103 	 .globl __divulong
                            104 	
   0000                     105 	__divulong:
                            106 ;	# 75 "_divulong.c"
                            107 	 .area OSEG (OVR,DATA)
                            108 	
                            109 	
                            110 	 .globl __divulong_PARM_2
                            111 	 .globl __divslong_PARM_2
                            112 	
   0000                     113 	__divulong_PARM_2:
   0000                     114 	__divslong_PARM_2:
   0000                     115 	 .ds 4
                            116 	
                            117 	 .area CSEG (CODE)
                            118 ;	# 97 "_divulong.c"
                            119     ; parameter x comes in a, b, dph, dpl
   0000 FB                  120 	 mov r3,a ; save parameter r3
                            121 	
   0001 7A 20               122 	 mov r2,#32
   0003 E4                  123 	 clr a
   0004 FC                  124 	 mov r4,a
   0005 FD                  125 	 mov r5,a
   0006 FE                  126 	 mov r6,a
   0007 FF                  127 	 mov r7,a
                            128 	
                            129  ; optimization loop in lp0 until the first bit is shifted into rest
                            130 	
   0008                     131 	lp0:
   0008 E5 82               132 	mov a,dpl ; x <<= 1
   000A 25 82               133 	 add a,dpl
   000C F5 82               134 	 mov dpl,a
   000E E5 83               135 	 mov a,dph
   0010 33                  136 	 rlc a
   0011 F5 83               137 	 mov dph,a
   0013 E5 F0               138 	 mov a,b
   0015 33                  139 	 rlc a
   0016 F5 F0               140 	 mov b,a
   0018 EB                  141 	 mov a,r3
   0019 33                  142 	 rlc a
   001A FB                  143 	 mov r3,a
                            144 	
   001B 40 17               145 	 jc in_lp
   001D DA E9               146 	 djnz r2,lp0
                            147 	
   001F 80 42               148 	 sjmp exit
                            149 	
   0021                     150 	loop:
   0021 E5 82               151 	mov a,dpl ; x <<= 1
   0023 25 82               152 	 add a,dpl
   0025 F5 82               153 	 mov dpl,a
   0027 E5 83               154 	 mov a,dph
   0029 33                  155 	 rlc a
   002A F5 83               156 	 mov dph,a
   002C E5 F0               157 	 mov a,b
   002E 33                  158 	 rlc a
   002F F5 F0               159 	 mov b,a
   0031 EB                  160 	 mov a,r3
   0032 33                  161 	 rlc a
   0033 FB                  162 	 mov r3,a
                            163 	
   0034                     164 	in_lp:
   0034 EC                  165 	mov a,r4 ; reste <<= 1
   0035 33                  166 	 rlc a ; feed in carry
   0036 FC                  167 	 mov r4,a
   0037 ED                  168 	 mov a,r5
   0038 33                  169 	 rlc a
   0039 FD                  170 	 mov r5,a
   003A EE                  171 	 mov a,r6
   003B 33                  172 	 rlc a
   003C FE                  173 	 mov r6,a
   003D EF                  174 	 mov a,r7
   003E 33                  175 	 rlc a
   003F FF                  176 	 mov r7,a
                            177 	
   0040 EC                  178 	 mov a,r4 ; reste - y
   0041 95*00               179 	 subb a,(__divulong_PARM_2) ; carry is always clear here, because
                            180      ; reste <<= 1 never overflows
   0043 ED                  181 	 mov a,r5
   0044 95*01               182 	 subb a,(__divulong_PARM_2 + 1)
   0046 EE                  183 	 mov a,r6
   0047 95*02               184 	 subb a,(__divulong_PARM_2 + 2)
   0049 EF                  185 	 mov a,r7
   004A 95*03               186 	 subb a,(__divulong_PARM_2 + 3)
                            187 	
   004C 40 13               188 	 jc minus ; reste >= y?
                            189 	
                            190     ; -> yes; reste -= y;
   004E EC                  191 	 mov a,r4
   004F 95*00               192 	 subb a,(__divulong_PARM_2) ; carry is always clear here (jc)
   0051 FC                  193 	 mov r4,a
   0052 ED                  194 	 mov a,r5
   0053 95*01               195 	 subb a,(__divulong_PARM_2 + 1)
   0055 FD                  196 	 mov r5,a
   0056 EE                  197 	 mov a,r6
   0057 95*02               198 	 subb a,(__divulong_PARM_2 + 2)
   0059 FE                  199 	 mov r6,a
   005A EF                  200 	 mov a,r7
   005B 95*03               201 	 subb a,(__divulong_PARM_2 + 3)
   005D FF                  202 	 mov r7,a
                            203 	
   005E 43 82 01            204 	 orl dpl,#1
                            205 	
   0061                     206 	minus:
   0061 DA BE               207 	djnz r2,loop ; -> no
                            208 	
   0063                     209 	exit:
   0063 EB                  210 	mov a,r3 ; prepare the return value
   0064 22                  211 	 ret
                            212 	
                            213 	 
                            214 ;	naked function: no epilogue.
                            215 	.area CSEG    (CODE)
                            216 	.area CONST   (CODE)
                            217 	.area XINIT   (CODE)
                            218 	.area CABS    (ABS,CODE)
