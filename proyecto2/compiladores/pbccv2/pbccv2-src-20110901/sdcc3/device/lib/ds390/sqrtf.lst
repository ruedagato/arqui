                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:16 2015
                              5 ;--------------------------------------------------------
                              6 	.module sqrtf
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _sqrtf
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 ;--------------------------------------------------------
                             43 ; internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area DSEG    (DATA)
                             46 ;--------------------------------------------------------
                             47 ; overlayable items in internal ram 
                             48 ;--------------------------------------------------------
                             49 	.area OSEG    (OVR,DATA)
                             50 ;--------------------------------------------------------
                             51 ; indirectly addressable internal ram data
                             52 ;--------------------------------------------------------
                             53 	.area ISEG    (DATA)
                             54 ;--------------------------------------------------------
                             55 ; absolute internal ram data
                             56 ;--------------------------------------------------------
                             57 	.area IABS    (ABS,DATA)
                             58 	.area IABS    (ABS,DATA)
                             59 ;--------------------------------------------------------
                             60 ; bit data
                             61 ;--------------------------------------------------------
                             62 	.area BSEG    (BIT)
                             63 ;--------------------------------------------------------
                             64 ; paged external ram data
                             65 ;--------------------------------------------------------
                             66 	.area PSEG    (PAG,XDATA)
                             67 ;--------------------------------------------------------
                             68 ; external ram data
                             69 ;--------------------------------------------------------
                             70 	.area XSEG    (XDATA)
                             71 ;--------------------------------------------------------
                             72 ; absolute external ram data
                             73 ;--------------------------------------------------------
                             74 	.area XABS    (ABS,XDATA)
                             75 ;--------------------------------------------------------
                             76 ; external initialized ram data
                             77 ;--------------------------------------------------------
                             78 	.area XISEG   (XDATA)
                             79 ;--------------------------------------------------------
                             80 ; global & static initialisations
                             81 ;--------------------------------------------------------
                             82 	.area HOME    (CODE)
                             83 	.area GSINIT  (CODE)
                             84 	.area GSFINAL (CODE)
                             85 	.area GSINIT  (CODE)
                             86 ;--------------------------------------------------------
                             87 ; Home
                             88 ;--------------------------------------------------------
                             89 	.area HOME    (CODE)
                             90 	.area HOME    (CODE)
                             91 ;--------------------------------------------------------
                             92 ; code
                             93 ;--------------------------------------------------------
                             94 	.area CSEG    (CODE)
                             95 ;------------------------------------------------------------
                             96 ;Allocation info for local variables in function 'sqrtf'
                             97 ;------------------------------------------------------------
                             98 ;x                         Allocated to registers r2 r3 r4 r5 
                             99 ;f                         Allocated to stack - offset 1
                            100 ;y                         Allocated to registers r6 r7 r0 r1 
                            101 ;n                         Allocated to stack - offset 5
                            102 ;sloc0                     Allocated to stack - offset 7
                            103 ;------------------------------------------------------------
                            104 ;	sqrtf.c:37: float sqrtf(const float x) _FLOAT_FUNC_REENTRANT
                            105 ;	-----------------------------------------
                            106 ;	 function sqrtf
                            107 ;	-----------------------------------------
   0000                     108 _sqrtf:
                    0002    109 	ar2 = 0x02
                    0003    110 	ar3 = 0x03
                    0004    111 	ar4 = 0x04
                    0005    112 	ar5 = 0x05
                    0006    113 	ar6 = 0x06
                    0007    114 	ar7 = 0x07
                    0000    115 	ar0 = 0x00
                    0001    116 	ar1 = 0x01
   0000 C0*00               117 	push	_bpx
   0002 C0*01               118 	push	_bpx+1
   0004 85 81*00            119 	mov	_bpx,sp
   0007 85 9B*01            120 	mov	_bpx+1,esp
   000A 53*01 03            121 	anl	_bpx+1,#3
   000D E5 81               122 	mov	a,sp
   000F 24 0A               123 	add	a,#0x0A
   0011 F5 81               124 	mov	sp,a
   0013 E5 9B               125 	mov	a,esp
   0015 54 03               126 	anl	a,#3
   0017 34 00               127 	addc	a,#0x00
   0019 F5 9B               128 	mov	esp,a
   001B AA 82               129 	mov	r2,dpl
   001D AB 83               130 	mov	r3,dph
   001F AC 93               131 	mov	r4,dpx
   0021 AD F0               132 	mov	r5,b
                            133 ;	sqrtf.c:42: if (x==0.0) return x;
   0023 EA                  134 	mov	a,r2
   0024 4B                  135 	orl	a,r3
   0025 4C                  136 	orl	a,r4
   0026 4D                  137 	orl	a,r5
   0027 70 0C               138 	jnz  00107$
   0029                     139 00117$:
   0029 8A 82               140 	mov	dpl,r2
   002B 8B 83               141 	mov	dph,r3
   002D 8C 93               142 	mov	dpx,r4
   002F 8D F0               143 	mov	b,r5
   0031 02s00r03r41         144 	ljmp	00111$
   0035                     145 00107$:
                            146 ;	sqrtf.c:43: else if (x==1.0) return 1.0;
                            147 ;	genAssign: resultIsFar = TRUE
   0035 90s00r00r00         148 	mov	dptr,#___fseq_PARM_2
   0039 E4                  149 	clr  a
   003A F0                  150 	movx @dptr,a
   003B A3                  151 	inc  dptr
   003C F0                  152 	movx @dptr,a
   003D A3                  153 	inc	dptr
   003E 74 80               154 	mov	a,#0x80
   0040 F0                  155 	movx	@dptr,a
   0041 A3                  156 	inc	dptr
   0042 74 3F               157 	mov	a,#0x3F
   0044 F0                  158 	movx	@dptr,a
   0045 C0 02               159 	push	ar2
   0047 C0 03               160 	push	ar3
   0049 C0 04               161 	push	ar4
   004B C0 05               162 	push	ar5
   004D 8A 82               163 	mov	dpl,r2
   004F 8B 83               164 	mov	dph,r3
   0051 8C 93               165 	mov	dpx,r4
   0053 8D F0               166 	mov	b,r5
   0055 12s00r00r00         167 	lcall	___fseq
   0059 D0 05               168 	pop	ar5
   005B D0 04               169 	pop	ar4
   005D D0 03               170 	pop	ar3
   005F D0 02               171 	pop	ar2
   0061 E5 82               172 	mov	a,dpl
   0063 60 0E               173 	jz  00104$
   0065                     174 00118$:
   0065 90 00 00 00         175 	mov  dptr,#0x0000
   0069 75 93 80            176 	mov	dpx,#0x80
   006C 75 F0 3F            177 	mov	b,#0x3F
   006F 02s00r03r41         178 	ljmp	00111$
   0073                     179 00104$:
                            180 ;	sqrtf.c:44: else if (x<0.0)
                            181 ;	genAssign: resultIsFar = TRUE
   0073 90s00r00r00         182 	mov	dptr,#___fslt_PARM_2
   0077 E4                  183 	clr	a
   0078 F0                  184 	movx	@dptr,a
   0079 A3                  185 	inc	dptr
   007A F0                  186 	movx	@dptr,a
   007B A3                  187 	inc	dptr
   007C F0                  188 	movx	@dptr,a
   007D A3                  189 	inc	dptr
   007E F0                  190 	movx	@dptr,a
   007F C0 02               191 	push	ar2
   0081 C0 03               192 	push	ar3
   0083 C0 04               193 	push	ar4
   0085 C0 05               194 	push	ar5
   0087 8A 82               195 	mov	dpl,r2
   0089 8B 83               196 	mov	dph,r3
   008B 8C 93               197 	mov	dpx,r4
   008D 8D F0               198 	mov	b,r5
   008F 12s00r00r00         199 	lcall	___fslt
   0093 D0 05               200 	pop	ar5
   0095 D0 04               201 	pop	ar4
   0097 D0 03               202 	pop	ar3
   0099 D0 02               203 	pop	ar2
   009B E5 82               204 	mov	a,dpl
   009D 60 15               205 	jz  00108$
   009F                     206 00119$:
                            207 ;	sqrtf.c:46: errno=EDOM;
                            208 ;	genAssign: resultIsFar = TRUE
   009F 90s00r00r00         209 	mov	dptr,#_errno
   00A3 74 21               210 	mov	a,#0x21
   00A5 F0                  211 	movx	@dptr,a
   00A6 E4                  212 	clr	a
   00A7 A3                  213 	inc	dptr
   00A8 F0                  214 	movx	@dptr,a
                            215 ;	sqrtf.c:47: return 0.0;
   00A9 90 00 00 00         216 	mov  dptr,#0x0000
   00AD 75 F0 00            217 	mov	b,#0x00
   00B0 02s00r03r41         218 	ljmp	00111$
   00B4                     219 00108$:
                            220 ;	sqrtf.c:49: f=frexpf(x, &n);
   00B4 E5*00               221 	mov	a,_bpx
   00B6 24 05               222 	add	a,#0x05
   00B8 F5 F0               223 	mov	b,a
   00BA E4                  224 	clr	a
   00BB 35*01               225 	addc	a,_bpx+1
   00BD AE F0               226 	mov	r6,b
   00BF FF                  227 	mov	r7,a
   00C0 78 40               228 	mov	r0,#0x40
   00C2 90s00r00r00         229 	mov	dptr,#_frexpf_PARM_2
   00C6 EE                  230 	mov	a,r6
   00C7 F0                  231 	movx	@dptr,a
   00C8 A3                  232 	inc	dptr
   00C9 EF                  233 	mov	a,r7
   00CA F0                  234 	movx	@dptr,a
   00CB A3                  235 	inc	dptr
   00CC E8                  236 	mov	a,r0
   00CD F0                  237 	movx	@dptr,a
   00CE A3                  238 	inc	dptr
   00CF E4                  239 	clr  a
   00D0 F0                  240 	movx	@dptr,a
   00D1 8A 82               241 	mov	dpl,r2
   00D3 8B 83               242 	mov	dph,r3
   00D5 8C 93               243 	mov	dpx,r4
   00D7 8D F0               244 	mov	b,r5
   00D9 12s00r00r00         245 	lcall	_frexpf
   00DD AA 82               246 	mov	r2,dpl
   00DF AB 83               247 	mov	r3,dph
   00E1 AC 93               248 	mov	r4,dpx
   00E3 AD F0               249 	mov	r5,b
                            250 ;	genAssign: resultIsFar = TRUE
   00E5 75 93 40            251 	mov	dpx,#0x40
   00E8 85*01 83            252 	mov	dph,_bpx+1
   00EB 85*00 82            253 	mov	dpl,_bpx
   00EE A3                  254 	inc	dptr
   00EF EA                  255 	mov	a,r2
   00F0 F0                  256 	movx	@dptr,a
   00F1 A3                  257 	inc	dptr
   00F2 EB                  258 	mov	a,r3
   00F3 F0                  259 	movx	@dptr,a
   00F4 A3                  260 	inc	dptr
   00F5 EC                  261 	mov	a,r4
   00F6 F0                  262 	movx	@dptr,a
   00F7 A3                  263 	inc	dptr
   00F8 ED                  264 	mov	a,r5
   00F9 F0                  265 	movx	@dptr,a
                            266 ;	sqrtf.c:50: y=0.41731+0.59016*f; /*Educated guess*/
   00FA 75 93 40            267 	mov	dpx,#0x40
   00FD 85*01 83            268 	mov	dph,_bpx+1
   0100 85*00 82            269 	mov	dpl,_bpx
   0103 A3                  270 	inc	dptr
                            271 ;	genAssign: resultIsFar = TRUE
   0104 75 86 21            272 	mov	dps,#0x21
   0107 90s00r00r00         273 	mov	dptr,#___fsmul_PARM_2
   010B E0                  274 	movx	a,@dptr
   010C F0                  275 	movx	@dptr,a
   010D A3                  276 	inc	dptr
   010E A3                  277 	inc	dptr
   010F E0                  278 	movx	a,@dptr
   0110 F0                  279 	movx	@dptr,a
   0111 A3                  280 	inc	dptr
   0112 A3                  281 	inc	dptr
   0113 E0                  282 	movx	a,@dptr
   0114 F0                  283 	movx	@dptr,a
   0115 A3                  284 	inc	dptr
   0116 A3                  285 	inc	dptr
   0117 E0                  286 	movx	a,@dptr
   0118 F0                  287 	movx	@dptr,a
   0119 75 86 00            288 	mov	dps,#0
   011C 90 17 14 BA         289 	mov	dptr,#0x1714BA
   0120 75 F0 3F            290 	mov	b,#0x3F
   0123 12s00r00r00         291 	lcall	___fsmul
   0127 AE 82               292 	mov	r6,dpl
   0129 AF 83               293 	mov	r7,dph
   012B A8 93               294 	mov	r0,dpx
   012D A9 F0               295 	mov	r1,b
                            296 ;	genAssign: resultIsFar = TRUE
   012F 90s00r00r00         297 	mov	dptr,#___fsadd_PARM_2
   0133 74 A8               298 	mov	a,#0xA8
   0135 F0                  299 	movx	@dptr,a
   0136 A3                  300 	inc	dptr
   0137 74 A9               301 	mov	a,#0xA9
   0139 F0                  302 	movx	@dptr,a
   013A A3                  303 	inc	dptr
   013B 74 D5               304 	mov	a,#0xD5
   013D F0                  305 	movx	@dptr,a
   013E A3                  306 	inc	dptr
   013F 74 3E               307 	mov	a,#0x3E
   0141 F0                  308 	movx	@dptr,a
   0142 8E 82               309 	mov	dpl,r6
   0144 8F 83               310 	mov	dph,r7
   0146 88 93               311 	mov	dpx,r0
   0148 89 F0               312 	mov	b,r1
   014A 12s00r00r00         313 	lcall	___fsadd
   014E AE 82               314 	mov	r6,dpl
   0150 AF 83               315 	mov	r7,dph
   0152 A8 93               316 	mov	r0,dpx
   0154 A9 F0               317 	mov	r1,b
                            318 ;	genAssign: resultIsFar = TRUE
                            319 ;	sqrtf.c:52: y+=f/y;
                            320 ;	genAssign: resultIsFar = TRUE
   0156 90s00r00r00         321 	mov	dptr,#___fsdiv_PARM_2
   015A EE                  322 	mov	a,r6
   015B F0                  323 	movx	@dptr,a
   015C A3                  324 	inc	dptr
   015D EF                  325 	mov	a,r7
   015E F0                  326 	movx	@dptr,a
   015F A3                  327 	inc	dptr
   0160 E8                  328 	mov	a,r0
   0161 F0                  329 	movx	@dptr,a
   0162 A3                  330 	inc	dptr
   0163 E9                  331 	mov	a,r1
   0164 F0                  332 	movx	@dptr,a
   0165 C0 06               333 	push	ar6
   0167 C0 07               334 	push	ar7
   0169 C0 00               335 	push	ar0
   016B C0 01               336 	push	ar1
   016D 75 95 40            337 	mov	dpx1,#0x40
   0170 85*01 85            338 	mov	dph1,_bpx+1
   0173 85*00 84            339 	mov	dpl1,_bpx
   0176 75 86 01            340 	mov     dps,#1
   0179 A3                  341 	inc	dptr
   017A E0                  342 	movx	a,@dptr
   017B F5 82               343 	mov	dpl,a
   017D A3                  344 	inc	dptr
   017E E0                  345 	movx	a,@dptr
   017F F5 83               346 	mov	dph,a
   0181 A3                  347 	inc	dptr
   0182 E0                  348 	movx	a,@dptr
   0183 F5 93               349 	mov	dpx,a
   0185 A3                  350 	inc	dptr
   0186 E0                  351 	movx	a,@dptr
   0187 F5 F0               352 	mov	b,a
   0189 75 86 00            353 	mov	dps,#0
   018C 12s00r00r00         354 	lcall	___fsdiv
   0190 AA 82               355 	mov	r2,dpl
   0192 AB 83               356 	mov	r3,dph
   0194 AC 93               357 	mov	r4,dpx
   0196 AD F0               358 	mov	r5,b
   0198 D0 01               359 	pop	ar1
   019A D0 00               360 	pop	ar0
   019C D0 07               361 	pop	ar7
   019E D0 06               362 	pop	ar6
                            363 ;	genAssign: resultIsFar = TRUE
   01A0 90s00r00r00         364 	mov	dptr,#___fsadd_PARM_2
   01A4 EA                  365 	mov	a,r2
   01A5 F0                  366 	movx	@dptr,a
   01A6 A3                  367 	inc	dptr
   01A7 EB                  368 	mov	a,r3
   01A8 F0                  369 	movx	@dptr,a
   01A9 A3                  370 	inc	dptr
   01AA EC                  371 	mov	a,r4
   01AB F0                  372 	movx	@dptr,a
   01AC A3                  373 	inc	dptr
   01AD ED                  374 	mov	a,r5
   01AE F0                  375 	movx	@dptr,a
   01AF 8E 82               376 	mov	dpl,r6
   01B1 8F 83               377 	mov	dph,r7
   01B3 88 93               378 	mov	dpx,r0
   01B5 89 F0               379 	mov	b,r1
   01B7 12s00r00r00         380 	lcall	___fsadd
   01BB AA 82               381 	mov	r2,dpl
   01BD AB 83               382 	mov	r3,dph
   01BF AC 93               383 	mov	r4,dpx
   01C1 AD F0               384 	mov	r5,b
                            385 ;	genAssign: resultIsFar = TRUE
   01C3 8A 06               386 	mov	ar6,r2
   01C5 8B 07               387 	mov	ar7,r3
   01C7 8C 00               388 	mov	ar0,r4
   01C9 8D 01               389 	mov	ar1,r5
                            390 ;	sqrtf.c:53: y=ldexpf(y, -2) + f/y; /*Faster version of 0.25 * y + f/y*/
                            391 ;	genAssign: resultIsFar = TRUE
   01CB 90s00r00r00         392 	mov	dptr,#_ldexpf_PARM_2
   01CF 74 FE               393 	mov	a,#0xFE
   01D1 F0                  394 	movx	@dptr,a
   01D2 A3                  395 	inc	dptr
   01D3 74 FF               396 	mov	a,#0xFF
   01D5 F0                  397 	movx	@dptr,a
   01D6 C0 06               398 	push	ar6
   01D8 C0 07               399 	push	ar7
   01DA C0 00               400 	push	ar0
   01DC C0 01               401 	push	ar1
   01DE 8E 82               402 	mov	dpl,r6
   01E0 8F 83               403 	mov	dph,r7
   01E2 88 93               404 	mov	dpx,r0
   01E4 89 F0               405 	mov	b,r1
   01E6 12s00r00r00         406 	lcall	_ldexpf
   01EA E5*00               407 	mov	a,_bpx
   01EC C3                  408 	clr	c
   01ED 94 F9               409 	subb	a,#0xF9
   01EF F5 84               410 	mov	dpl1,a
   01F1 E5*01               411 	mov	a,_bpx+1
   01F3 94 FF               412 	subb	a,#0xFF
   01F5 F5 85               413 	mov	dph1,a
   01F7 75 95 40            414 	mov	dpx1,#0x40
   01FA 05 86               415 	inc	dps
   01FC E5 82               416 	mov	a,dpl
   01FE F0                  417 	movx	@dptr,a
   01FF A3                  418 	inc	dptr
   0200 E5 83               419 	mov	a,dph
   0202 F0                  420 	movx	@dptr,a
   0203 A3                  421 	inc	dptr
   0204 E5 93               422 	mov	a,dpx
   0206 F0                  423 	movx	@dptr,a
   0207 A3                  424 	inc	dptr
   0208 E5 F0               425 	mov	a,b
   020A F0                  426 	movx	@dptr,a
   020B 75 86 00            427 	mov	dps,#0
   020E D0 01               428 	pop	ar1
   0210 D0 00               429 	pop	ar0
   0212 D0 07               430 	pop	ar7
   0214 D0 06               431 	pop	ar6
                            432 ;	genAssign: resultIsFar = TRUE
   0216 90s00r00r00         433 	mov	dptr,#___fsdiv_PARM_2
   021A EE                  434 	mov	a,r6
   021B F0                  435 	movx	@dptr,a
   021C A3                  436 	inc	dptr
   021D EF                  437 	mov	a,r7
   021E F0                  438 	movx	@dptr,a
   021F A3                  439 	inc	dptr
   0220 E8                  440 	mov	a,r0
   0221 F0                  441 	movx	@dptr,a
   0222 A3                  442 	inc	dptr
   0223 E9                  443 	mov	a,r1
   0224 F0                  444 	movx	@dptr,a
   0225 75 95 40            445 	mov	dpx1,#0x40
   0228 85*01 85            446 	mov	dph1,_bpx+1
   022B 85*00 84            447 	mov	dpl1,_bpx
   022E 75 86 01            448 	mov     dps,#1
   0231 A3                  449 	inc	dptr
   0232 E0                  450 	movx	a,@dptr
   0233 F5 82               451 	mov	dpl,a
   0235 A3                  452 	inc	dptr
   0236 E0                  453 	movx	a,@dptr
   0237 F5 83               454 	mov	dph,a
   0239 A3                  455 	inc	dptr
   023A E0                  456 	movx	a,@dptr
   023B F5 93               457 	mov	dpx,a
   023D A3                  458 	inc	dptr
   023E E0                  459 	movx	a,@dptr
   023F F5 F0               460 	mov	b,a
   0241 75 86 00            461 	mov	dps,#0
   0244 12s00r00r00         462 	lcall	___fsdiv
   0248 AA 82               463 	mov	r2,dpl
   024A AB 83               464 	mov	r3,dph
   024C AC 93               465 	mov	r4,dpx
   024E AD F0               466 	mov	r5,b
                            467 ;	genAssign: resultIsFar = TRUE
   0250 90s00r00r00         468 	mov	dptr,#___fsadd_PARM_2
   0254 EA                  469 	mov	a,r2
   0255 F0                  470 	movx	@dptr,a
   0256 A3                  471 	inc	dptr
   0257 EB                  472 	mov	a,r3
   0258 F0                  473 	movx	@dptr,a
   0259 A3                  474 	inc	dptr
   025A EC                  475 	mov	a,r4
   025B F0                  476 	movx	@dptr,a
   025C A3                  477 	inc	dptr
   025D ED                  478 	mov	a,r5
   025E F0                  479 	movx	@dptr,a
   025F E5*00               480 	mov	a,_bpx
   0261 C3                  481 	clr	c
   0262 94 F9               482 	subb	a,#0xF9
   0264 F5 84               483 	mov	dpl1,a
   0266 E5*01               484 	mov	a,_bpx+1
   0268 94 FF               485 	subb	a,#0xFF
   026A F5 85               486 	mov	dph1,a
   026C 75 95 40            487 	mov	dpx1,#0x40
   026F 05 86               488 	inc	dps
   0271 E0                  489 	movx	a,@dptr
   0272 F5 82               490 	mov	dpl,a
   0274 A3                  491 	inc	dptr
   0275 E0                  492 	movx	a,@dptr
   0276 F5 83               493 	mov	dph,a
   0278 A3                  494 	inc	dptr
   0279 E0                  495 	movx	a,@dptr
   027A F5 93               496 	mov	dpx,a
   027C A3                  497 	inc	dptr
   027D E0                  498 	movx	a,@dptr
   027E F5 F0               499 	mov	b,a
   0280 75 86 00            500 	mov	dps,#0
   0283 12s00r00r00         501 	lcall	___fsadd
   0287 AA 82               502 	mov	r2,dpl
   0289 AB 83               503 	mov	r3,dph
   028B AC 93               504 	mov	r4,dpx
   028D AD F0               505 	mov	r5,b
                            506 ;	genAssign: resultIsFar = TRUE
   028F 8A 06               507 	mov	ar6,r2
   0291 8B 07               508 	mov	ar7,r3
   0293 8C 00               509 	mov	ar0,r4
   0295 8D 01               510 	mov	ar1,r5
                            511 ;	sqrtf.c:55: if (n&1)
   0297 E5*00               512 	mov	a,_bpx
   0299 C3                  513 	clr	c
   029A 94 FB               514 	subb	a,#0xFB
   029C F5 82               515 	mov	dpl,a
   029E E5*01               516 	mov	a,_bpx+1
   02A0 94 FF               517 	subb	a,#0xFF
   02A2 F5 83               518 	mov	dph,a
   02A4 75 93 40            519 	mov	dpx,#0x40
   02A7 E0                  520 	movx	a,@dptr
   02A8 30 E0 43            521 	jnb  acc.0,00110$
   02AB                     522 00120$:
                            523 ;	sqrtf.c:57: y*=0.7071067812;
                            524 ;	genAssign: resultIsFar = TRUE
   02AB 90s00r00r00         525 	mov	dptr,#___fsmul_PARM_2
   02AF EE                  526 	mov	a,r6
   02B0 F0                  527 	movx	@dptr,a
   02B1 A3                  528 	inc	dptr
   02B2 EF                  529 	mov	a,r7
   02B3 F0                  530 	movx	@dptr,a
   02B4 A3                  531 	inc	dptr
   02B5 E8                  532 	mov	a,r0
   02B6 F0                  533 	movx	@dptr,a
   02B7 A3                  534 	inc	dptr
   02B8 E9                  535 	mov	a,r1
   02B9 F0                  536 	movx	@dptr,a
   02BA 90 35 04 F3         537 	mov	dptr,#0x3504F3
   02BE 75 F0 3F            538 	mov	b,#0x3F
   02C1 12s00r00r00         539 	lcall	___fsmul
   02C5 AA 82               540 	mov	r2,dpl
   02C7 AB 83               541 	mov	r3,dph
   02C9 AC 93               542 	mov	r4,dpx
   02CB AD F0               543 	mov	r5,b
                            544 ;	genAssign: resultIsFar = TRUE
   02CD 8A 06               545 	mov	ar6,r2
   02CF 8B 07               546 	mov	ar7,r3
   02D1 8C 00               547 	mov	ar0,r4
   02D3 8D 01               548 	mov	ar1,r5
                            549 ;	sqrtf.c:58: ++n;
   02D5 E5*00               550 	mov	a,_bpx
   02D7 C3                  551 	clr	c
   02D8 94 FB               552 	subb	a,#0xFB
   02DA F5 82               553 	mov	dpl,a
   02DC E5*01               554 	mov	a,_bpx+1
   02DE 94 FF               555 	subb	a,#0xFF
   02E0 F5 83               556 	mov	dph,a
   02E2 75 93 40            557 	mov	dpx,#0x40
   02E5 E0                  558 	movx	a,@dptr
   02E6 24 01               559 	add	a,#0x01
   02E8 F0                  560 	movx	@dptr,a
   02E9 A3                  561 	inc	dptr
   02EA E0                  562 	movx	a,@dptr
   02EB 34 00               563 	addc	a,#0x00
   02ED F0                  564 	movx	@dptr,a
   02EE                     565 00110$:
                            566 ;	sqrtf.c:60: return ldexpf(y, n/2);
                            567 ;	genAssign: resultIsFar = TRUE
   02EE 90s00r00r00         568 	mov	dptr,#__divsint_PARM_2
   02F2 74 02               569 	mov	a,#0x02
   02F4 F0                  570 	movx	@dptr,a
   02F5 E4                  571 	clr	a
   02F6 A3                  572 	inc	dptr
   02F7 F0                  573 	movx	@dptr,a
   02F8 C0 06               574 	push	ar6
   02FA C0 07               575 	push	ar7
   02FC C0 00               576 	push	ar0
   02FE C0 01               577 	push	ar1
   0300 E5*00               578 	mov	a,_bpx
   0302 C3                  579 	clr	c
   0303 94 FB               580 	subb	a,#0xFB
   0305 F5 84               581 	mov	dpl1,a
   0307 E5*01               582 	mov	a,_bpx+1
   0309 94 FF               583 	subb	a,#0xFF
   030B F5 85               584 	mov	dph1,a
   030D 75 95 40            585 	mov	dpx1,#0x40
   0310 05 86               586 	inc	dps
   0312 E0                  587 	movx	a,@dptr
   0313 F5 82               588 	mov	dpl,a
   0315 A3                  589 	inc	dptr
   0316 E0                  590 	movx	a,@dptr
   0317 F5 83               591 	mov	dph,a
   0319 75 86 00            592 	mov	dps,#0
   031C 12s00r00r00         593 	lcall	__divsint
   0320 AA 82               594 	mov	r2,dpl
   0322 AB 83               595 	mov	r3,dph
   0324 D0 01               596 	pop	ar1
   0326 D0 00               597 	pop	ar0
   0328 D0 07               598 	pop	ar7
   032A D0 06               599 	pop	ar6
                            600 ;	genAssign: resultIsFar = TRUE
   032C 90s00r00r00         601 	mov	dptr,#_ldexpf_PARM_2
   0330 EA                  602 	mov	a,r2
   0331 F0                  603 	movx	@dptr,a
   0332 A3                  604 	inc	dptr
   0333 EB                  605 	mov	a,r3
   0334 F0                  606 	movx	@dptr,a
   0335 8E 82               607 	mov	dpl,r6
   0337 8F 83               608 	mov	dph,r7
   0339 88 93               609 	mov	dpx,r0
   033B 89 F0               610 	mov	b,r1
   033D 12s00r00r00         611 	lcall	_ldexpf
   0341                     612 00111$:
   0341 85*00 81            613 	mov	sp,_bpx
   0344 85*01 9B            614 	mov	esp,_bpx+1
   0347 D0*01               615 	pop	_bpx+1
   0349 D0*00               616 	pop	_bpx
   034B 22                  617 	ret
                            618 	.area CSEG    (CODE)
                            619 	.area CONST   (CODE)
                            620 	.area XINIT   (CODE)
                            621 	.area CABS    (ABS,CODE)
