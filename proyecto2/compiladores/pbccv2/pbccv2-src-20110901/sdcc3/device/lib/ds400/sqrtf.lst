                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:18 2015
                              5 ;--------------------------------------------------------
                              6 	.module sqrtf
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _sqrtf
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      43 	.ds 8
                             44 ;--------------------------------------------------------
                             45 ; internal ram data
                             46 ;--------------------------------------------------------
                             47 	.area DSEG    (DATA)
                             48 ;--------------------------------------------------------
                             49 ; overlayable items in internal ram 
                             50 ;--------------------------------------------------------
                             51 	.area OSEG    (OVR,DATA)
                             52 ;--------------------------------------------------------
                             53 ; indirectly addressable internal ram data
                             54 ;--------------------------------------------------------
                             55 	.area ISEG    (DATA)
                             56 ;--------------------------------------------------------
                             57 ; absolute internal ram data
                             58 ;--------------------------------------------------------
                             59 	.area IABS    (ABS,DATA)
                             60 	.area IABS    (ABS,DATA)
                             61 ;--------------------------------------------------------
                             62 ; bit data
                             63 ;--------------------------------------------------------
                             64 	.area BSEG    (BIT)
                             65 ;--------------------------------------------------------
                             66 ; paged external ram data
                             67 ;--------------------------------------------------------
                             68 	.area PSEG    (PAG,XDATA)
                             69 ;--------------------------------------------------------
                             70 ; external ram data
                             71 ;--------------------------------------------------------
                             72 	.area XSEG    (XDATA)
                             73 ;--------------------------------------------------------
                             74 ; absolute external ram data
                             75 ;--------------------------------------------------------
                             76 	.area XABS    (ABS,XDATA)
                             77 ;--------------------------------------------------------
                             78 ; external initialized ram data
                             79 ;--------------------------------------------------------
                             80 	.area XISEG   (XDATA)
                             81 ;--------------------------------------------------------
                             82 ; global & static initialisations
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area GSINIT  (CODE)
                             86 	.area GSFINAL (CODE)
                             87 	.area GSINIT  (CODE)
                             88 ;--------------------------------------------------------
                             89 ; Home
                             90 ;--------------------------------------------------------
                             91 	.area HOME    (CODE)
                             92 	.area HOME    (CODE)
                             93 ;--------------------------------------------------------
                             94 ; code
                             95 ;--------------------------------------------------------
                             96 	.area CSEG    (CODE)
                             97 ;------------------------------------------------------------
                             98 ;Allocation info for local variables in function 'sqrtf'
                             99 ;------------------------------------------------------------
                            100 ;x                         Allocated to registers r2 r3 r4 r5 
                            101 ;f                         Allocated to stack - offset 1
                            102 ;y                         Allocated to registers r6 r7 r0 r1 
                            103 ;n                         Allocated to stack - offset 5
                            104 ;sloc0                     Allocated to stack - offset 7
                            105 ;------------------------------------------------------------
                            106 ;	sqrtf.c:37: float sqrtf(const float x) _FLOAT_FUNC_REENTRANT
                            107 ;	-----------------------------------------
                            108 ;	 function sqrtf
                            109 ;	-----------------------------------------
   0000                     110 _sqrtf:
                    0002    111 	ar2 = 0x02
                    0003    112 	ar3 = 0x03
                    0004    113 	ar4 = 0x04
                    0005    114 	ar5 = 0x05
                    0006    115 	ar6 = 0x06
                    0007    116 	ar7 = 0x07
                    0000    117 	ar0 = 0x00
                    0001    118 	ar1 = 0x01
   0000 C0*00               119 	push	_bpx
   0002 C0*01               120 	push	_bpx+1
   0004 85 81*00            121 	mov	_bpx,sp
   0007 85 9B*01            122 	mov	_bpx+1,esp
   000A 53*01 03            123 	anl	_bpx+1,#3
   000D 43*01 DC            124 	orl	_bpx+1,#0xDC
   0010 E5 81               125 	mov	a,sp
   0012 24 0A               126 	add	a,#0x0A
   0014 F5 81               127 	mov	sp,a
   0016 E5 9B               128 	mov	a,esp
   0018 54 03               129 	anl	a,#3
   001A 44 DC               130 	orl	a,#0xDC
   001C 34 00               131 	addc	a,#0x00
   001E F5 9B               132 	mov	esp,a
   0020 AA 82               133 	mov	r2,dpl
   0022 AB 83               134 	mov	r3,dph
   0024 AC 93               135 	mov	r4,dpx
   0026 AD F0               136 	mov	r5,b
                            137 ;	sqrtf.c:42: if (x==0.0) return x;
   0028 EA                  138 	mov	a,r2
   0029 4B                  139 	orl	a,r3
   002A 4C                  140 	orl	a,r4
   002B 4D                  141 	orl	a,r5
   002C 70 0C               142 	jnz  00107$
   002E                     143 00117$:
   002E 8A 82               144 	mov	dpl,r2
   0030 8B 83               145 	mov	dph,r3
   0032 8C 93               146 	mov	dpx,r4
   0034 8D F0               147 	mov	b,r5
   0036 02s00r03r46         148 	ljmp	00111$
   003A                     149 00107$:
                            150 ;	sqrtf.c:43: else if (x==1.0) return 1.0;
                            151 ;	genAssign: resultIsFar = TRUE
   003A 90s00r00r00         152 	mov	dptr,#___fseq_PARM_2
   003E E4                  153 	clr  a
   003F F0                  154 	movx @dptr,a
   0040 A3                  155 	inc  dptr
   0041 F0                  156 	movx @dptr,a
   0042 A3                  157 	inc	dptr
   0043 74 80               158 	mov	a,#0x80
   0045 F0                  159 	movx	@dptr,a
   0046 A3                  160 	inc	dptr
   0047 74 3F               161 	mov	a,#0x3F
   0049 F0                  162 	movx	@dptr,a
   004A C0 02               163 	push	ar2
   004C C0 03               164 	push	ar3
   004E C0 04               165 	push	ar4
   0050 C0 05               166 	push	ar5
   0052 8A 82               167 	mov	dpl,r2
   0054 8B 83               168 	mov	dph,r3
   0056 8C 93               169 	mov	dpx,r4
   0058 8D F0               170 	mov	b,r5
   005A 12s00r00r00         171 	lcall	___fseq
   005E D0 05               172 	pop	ar5
   0060 D0 04               173 	pop	ar4
   0062 D0 03               174 	pop	ar3
   0064 D0 02               175 	pop	ar2
   0066 E5 82               176 	mov	a,dpl
   0068 60 0E               177 	jz  00104$
   006A                     178 00118$:
   006A 90 00 00 00         179 	mov  dptr,#0x0000
   006E 75 93 80            180 	mov	dpx,#0x80
   0071 75 F0 3F            181 	mov	b,#0x3F
   0074 02s00r03r46         182 	ljmp	00111$
   0078                     183 00104$:
                            184 ;	sqrtf.c:44: else if (x<0.0)
                            185 ;	genAssign: resultIsFar = TRUE
   0078 90s00r00r00         186 	mov	dptr,#___fslt_PARM_2
   007C E4                  187 	clr	a
   007D F0                  188 	movx	@dptr,a
   007E A3                  189 	inc	dptr
   007F F0                  190 	movx	@dptr,a
   0080 A3                  191 	inc	dptr
   0081 F0                  192 	movx	@dptr,a
   0082 A3                  193 	inc	dptr
   0083 F0                  194 	movx	@dptr,a
   0084 C0 02               195 	push	ar2
   0086 C0 03               196 	push	ar3
   0088 C0 04               197 	push	ar4
   008A C0 05               198 	push	ar5
   008C 8A 82               199 	mov	dpl,r2
   008E 8B 83               200 	mov	dph,r3
   0090 8C 93               201 	mov	dpx,r4
   0092 8D F0               202 	mov	b,r5
   0094 12s00r00r00         203 	lcall	___fslt
   0098 D0 05               204 	pop	ar5
   009A D0 04               205 	pop	ar4
   009C D0 03               206 	pop	ar3
   009E D0 02               207 	pop	ar2
   00A0 E5 82               208 	mov	a,dpl
   00A2 60 15               209 	jz  00108$
   00A4                     210 00119$:
                            211 ;	sqrtf.c:46: errno=EDOM;
                            212 ;	genAssign: resultIsFar = TRUE
   00A4 90s00r00r00         213 	mov	dptr,#_errno
   00A8 74 21               214 	mov	a,#0x21
   00AA F0                  215 	movx	@dptr,a
   00AB E4                  216 	clr	a
   00AC A3                  217 	inc	dptr
   00AD F0                  218 	movx	@dptr,a
                            219 ;	sqrtf.c:47: return 0.0;
   00AE 90 00 00 00         220 	mov  dptr,#0x0000
   00B2 75 F0 00            221 	mov	b,#0x00
   00B5 02s00r03r46         222 	ljmp	00111$
   00B9                     223 00108$:
                            224 ;	sqrtf.c:49: f=frexpf(x, &n);
   00B9 E5*00               225 	mov	a,_bpx
   00BB 24 05               226 	add	a,#0x05
   00BD F5 F0               227 	mov	b,a
   00BF E4                  228 	clr	a
   00C0 35*01               229 	addc	a,_bpx+1
   00C2 AE F0               230 	mov	r6,b
   00C4 FF                  231 	mov	r7,a
   00C5 78 FF               232 	mov	r0,#0xFF
   00C7 90s00r00r00         233 	mov	dptr,#_frexpf_PARM_2
   00CB EE                  234 	mov	a,r6
   00CC F0                  235 	movx	@dptr,a
   00CD A3                  236 	inc	dptr
   00CE EF                  237 	mov	a,r7
   00CF F0                  238 	movx	@dptr,a
   00D0 A3                  239 	inc	dptr
   00D1 E8                  240 	mov	a,r0
   00D2 F0                  241 	movx	@dptr,a
   00D3 A3                  242 	inc	dptr
   00D4 E4                  243 	clr  a
   00D5 F0                  244 	movx	@dptr,a
   00D6 8A 82               245 	mov	dpl,r2
   00D8 8B 83               246 	mov	dph,r3
   00DA 8C 93               247 	mov	dpx,r4
   00DC 8D F0               248 	mov	b,r5
   00DE 12s00r00r00         249 	lcall	_frexpf
   00E2 AA 82               250 	mov	r2,dpl
   00E4 AB 83               251 	mov	r3,dph
   00E6 AC 93               252 	mov	r4,dpx
   00E8 AD F0               253 	mov	r5,b
                            254 ;	genAssign: resultIsFar = TRUE
   00EA 75 93 FF            255 	mov	dpx,#0xFF
   00ED 85*01 83            256 	mov	dph,_bpx+1
   00F0 85*00 82            257 	mov	dpl,_bpx
   00F3 A3                  258 	inc	dptr
   00F4 EA                  259 	mov	a,r2
   00F5 F0                  260 	movx	@dptr,a
   00F6 A3                  261 	inc	dptr
   00F7 EB                  262 	mov	a,r3
   00F8 F0                  263 	movx	@dptr,a
   00F9 A3                  264 	inc	dptr
   00FA EC                  265 	mov	a,r4
   00FB F0                  266 	movx	@dptr,a
   00FC A3                  267 	inc	dptr
   00FD ED                  268 	mov	a,r5
   00FE F0                  269 	movx	@dptr,a
                            270 ;	sqrtf.c:50: y=0.41731+0.59016*f; /*Educated guess*/
   00FF 75 93 FF            271 	mov	dpx,#0xFF
   0102 85*01 83            272 	mov	dph,_bpx+1
   0105 85*00 82            273 	mov	dpl,_bpx
   0108 A3                  274 	inc	dptr
                            275 ;	genAssign: resultIsFar = TRUE
   0109 75 86 21            276 	mov	dps,#0x21
   010C 90s00r00r00         277 	mov	dptr,#___fsmul_PARM_2
   0110 E0                  278 	movx	a,@dptr
   0111 F0                  279 	movx	@dptr,a
   0112 A3                  280 	inc	dptr
   0113 A3                  281 	inc	dptr
   0114 E0                  282 	movx	a,@dptr
   0115 F0                  283 	movx	@dptr,a
   0116 A3                  284 	inc	dptr
   0117 A3                  285 	inc	dptr
   0118 E0                  286 	movx	a,@dptr
   0119 F0                  287 	movx	@dptr,a
   011A A3                  288 	inc	dptr
   011B A3                  289 	inc	dptr
   011C E0                  290 	movx	a,@dptr
   011D F0                  291 	movx	@dptr,a
   011E 75 86 00            292 	mov	dps,#0
   0121 90 17 14 BA         293 	mov	dptr,#0x1714BA
   0125 75 F0 3F            294 	mov	b,#0x3F
   0128 12s00r00r00         295 	lcall	___fsmul
   012C AE 82               296 	mov	r6,dpl
   012E AF 83               297 	mov	r7,dph
   0130 A8 93               298 	mov	r0,dpx
   0132 A9 F0               299 	mov	r1,b
                            300 ;	genAssign: resultIsFar = TRUE
   0134 90s00r00r00         301 	mov	dptr,#___fsadd_PARM_2
   0138 74 A8               302 	mov	a,#0xA8
   013A F0                  303 	movx	@dptr,a
   013B A3                  304 	inc	dptr
   013C 74 A9               305 	mov	a,#0xA9
   013E F0                  306 	movx	@dptr,a
   013F A3                  307 	inc	dptr
   0140 74 D5               308 	mov	a,#0xD5
   0142 F0                  309 	movx	@dptr,a
   0143 A3                  310 	inc	dptr
   0144 74 3E               311 	mov	a,#0x3E
   0146 F0                  312 	movx	@dptr,a
   0147 8E 82               313 	mov	dpl,r6
   0149 8F 83               314 	mov	dph,r7
   014B 88 93               315 	mov	dpx,r0
   014D 89 F0               316 	mov	b,r1
   014F 12s00r00r00         317 	lcall	___fsadd
   0153 AE 82               318 	mov	r6,dpl
   0155 AF 83               319 	mov	r7,dph
   0157 A8 93               320 	mov	r0,dpx
   0159 A9 F0               321 	mov	r1,b
                            322 ;	genAssign: resultIsFar = TRUE
                            323 ;	sqrtf.c:52: y+=f/y;
                            324 ;	genAssign: resultIsFar = TRUE
   015B 90s00r00r00         325 	mov	dptr,#___fsdiv_PARM_2
   015F EE                  326 	mov	a,r6
   0160 F0                  327 	movx	@dptr,a
   0161 A3                  328 	inc	dptr
   0162 EF                  329 	mov	a,r7
   0163 F0                  330 	movx	@dptr,a
   0164 A3                  331 	inc	dptr
   0165 E8                  332 	mov	a,r0
   0166 F0                  333 	movx	@dptr,a
   0167 A3                  334 	inc	dptr
   0168 E9                  335 	mov	a,r1
   0169 F0                  336 	movx	@dptr,a
   016A C0 06               337 	push	ar6
   016C C0 07               338 	push	ar7
   016E C0 00               339 	push	ar0
   0170 C0 01               340 	push	ar1
   0172 75 95 FF            341 	mov	dpx1,#0xFF
   0175 85*01 85            342 	mov	dph1,_bpx+1
   0178 85*00 84            343 	mov	dpl1,_bpx
   017B 75 86 01            344 	mov     dps,#1
   017E A3                  345 	inc	dptr
   017F E0                  346 	movx	a,@dptr
   0180 F5 82               347 	mov	dpl,a
   0182 A3                  348 	inc	dptr
   0183 E0                  349 	movx	a,@dptr
   0184 F5 83               350 	mov	dph,a
   0186 A3                  351 	inc	dptr
   0187 E0                  352 	movx	a,@dptr
   0188 F5 93               353 	mov	dpx,a
   018A A3                  354 	inc	dptr
   018B E0                  355 	movx	a,@dptr
   018C F5 F0               356 	mov	b,a
   018E 75 86 00            357 	mov	dps,#0
   0191 12s00r00r00         358 	lcall	___fsdiv
   0195 AA 82               359 	mov	r2,dpl
   0197 AB 83               360 	mov	r3,dph
   0199 AC 93               361 	mov	r4,dpx
   019B AD F0               362 	mov	r5,b
   019D D0 01               363 	pop	ar1
   019F D0 00               364 	pop	ar0
   01A1 D0 07               365 	pop	ar7
   01A3 D0 06               366 	pop	ar6
                            367 ;	genAssign: resultIsFar = TRUE
   01A5 90s00r00r00         368 	mov	dptr,#___fsadd_PARM_2
   01A9 EA                  369 	mov	a,r2
   01AA F0                  370 	movx	@dptr,a
   01AB A3                  371 	inc	dptr
   01AC EB                  372 	mov	a,r3
   01AD F0                  373 	movx	@dptr,a
   01AE A3                  374 	inc	dptr
   01AF EC                  375 	mov	a,r4
   01B0 F0                  376 	movx	@dptr,a
   01B1 A3                  377 	inc	dptr
   01B2 ED                  378 	mov	a,r5
   01B3 F0                  379 	movx	@dptr,a
   01B4 8E 82               380 	mov	dpl,r6
   01B6 8F 83               381 	mov	dph,r7
   01B8 88 93               382 	mov	dpx,r0
   01BA 89 F0               383 	mov	b,r1
   01BC 12s00r00r00         384 	lcall	___fsadd
   01C0 AA 82               385 	mov	r2,dpl
   01C2 AB 83               386 	mov	r3,dph
   01C4 AC 93               387 	mov	r4,dpx
   01C6 AD F0               388 	mov	r5,b
                            389 ;	genAssign: resultIsFar = TRUE
   01C8 8A 06               390 	mov	ar6,r2
   01CA 8B 07               391 	mov	ar7,r3
   01CC 8C 00               392 	mov	ar0,r4
   01CE 8D 01               393 	mov	ar1,r5
                            394 ;	sqrtf.c:53: y=ldexpf(y, -2) + f/y; /*Faster version of 0.25 * y + f/y*/
                            395 ;	genAssign: resultIsFar = TRUE
   01D0 90s00r00r00         396 	mov	dptr,#_ldexpf_PARM_2
   01D4 74 FE               397 	mov	a,#0xFE
   01D6 F0                  398 	movx	@dptr,a
   01D7 A3                  399 	inc	dptr
   01D8 74 FF               400 	mov	a,#0xFF
   01DA F0                  401 	movx	@dptr,a
   01DB C0 06               402 	push	ar6
   01DD C0 07               403 	push	ar7
   01DF C0 00               404 	push	ar0
   01E1 C0 01               405 	push	ar1
   01E3 8E 82               406 	mov	dpl,r6
   01E5 8F 83               407 	mov	dph,r7
   01E7 88 93               408 	mov	dpx,r0
   01E9 89 F0               409 	mov	b,r1
   01EB 12s00r00r00         410 	lcall	_ldexpf
   01EF E5*00               411 	mov	a,_bpx
   01F1 C3                  412 	clr	c
   01F2 94 F9               413 	subb	a,#0xF9
   01F4 F5 84               414 	mov	dpl1,a
   01F6 E5*01               415 	mov	a,_bpx+1
   01F8 94 FF               416 	subb	a,#0xFF
   01FA F5 85               417 	mov	dph1,a
   01FC 75 95 FF            418 	mov	dpx1,#0xFF
   01FF 05 86               419 	inc	dps
   0201 E5 82               420 	mov	a,dpl
   0203 F0                  421 	movx	@dptr,a
   0204 A3                  422 	inc	dptr
   0205 E5 83               423 	mov	a,dph
   0207 F0                  424 	movx	@dptr,a
   0208 A3                  425 	inc	dptr
   0209 E5 93               426 	mov	a,dpx
   020B F0                  427 	movx	@dptr,a
   020C A3                  428 	inc	dptr
   020D E5 F0               429 	mov	a,b
   020F F0                  430 	movx	@dptr,a
   0210 75 86 00            431 	mov	dps,#0
   0213 D0 01               432 	pop	ar1
   0215 D0 00               433 	pop	ar0
   0217 D0 07               434 	pop	ar7
   0219 D0 06               435 	pop	ar6
                            436 ;	genAssign: resultIsFar = TRUE
   021B 90s00r00r00         437 	mov	dptr,#___fsdiv_PARM_2
   021F EE                  438 	mov	a,r6
   0220 F0                  439 	movx	@dptr,a
   0221 A3                  440 	inc	dptr
   0222 EF                  441 	mov	a,r7
   0223 F0                  442 	movx	@dptr,a
   0224 A3                  443 	inc	dptr
   0225 E8                  444 	mov	a,r0
   0226 F0                  445 	movx	@dptr,a
   0227 A3                  446 	inc	dptr
   0228 E9                  447 	mov	a,r1
   0229 F0                  448 	movx	@dptr,a
   022A 75 95 FF            449 	mov	dpx1,#0xFF
   022D 85*01 85            450 	mov	dph1,_bpx+1
   0230 85*00 84            451 	mov	dpl1,_bpx
   0233 75 86 01            452 	mov     dps,#1
   0236 A3                  453 	inc	dptr
   0237 E0                  454 	movx	a,@dptr
   0238 F5 82               455 	mov	dpl,a
   023A A3                  456 	inc	dptr
   023B E0                  457 	movx	a,@dptr
   023C F5 83               458 	mov	dph,a
   023E A3                  459 	inc	dptr
   023F E0                  460 	movx	a,@dptr
   0240 F5 93               461 	mov	dpx,a
   0242 A3                  462 	inc	dptr
   0243 E0                  463 	movx	a,@dptr
   0244 F5 F0               464 	mov	b,a
   0246 75 86 00            465 	mov	dps,#0
   0249 12s00r00r00         466 	lcall	___fsdiv
   024D AA 82               467 	mov	r2,dpl
   024F AB 83               468 	mov	r3,dph
   0251 AC 93               469 	mov	r4,dpx
   0253 AD F0               470 	mov	r5,b
                            471 ;	genAssign: resultIsFar = TRUE
   0255 90s00r00r00         472 	mov	dptr,#___fsadd_PARM_2
   0259 EA                  473 	mov	a,r2
   025A F0                  474 	movx	@dptr,a
   025B A3                  475 	inc	dptr
   025C EB                  476 	mov	a,r3
   025D F0                  477 	movx	@dptr,a
   025E A3                  478 	inc	dptr
   025F EC                  479 	mov	a,r4
   0260 F0                  480 	movx	@dptr,a
   0261 A3                  481 	inc	dptr
   0262 ED                  482 	mov	a,r5
   0263 F0                  483 	movx	@dptr,a
   0264 E5*00               484 	mov	a,_bpx
   0266 C3                  485 	clr	c
   0267 94 F9               486 	subb	a,#0xF9
   0269 F5 84               487 	mov	dpl1,a
   026B E5*01               488 	mov	a,_bpx+1
   026D 94 FF               489 	subb	a,#0xFF
   026F F5 85               490 	mov	dph1,a
   0271 75 95 FF            491 	mov	dpx1,#0xFF
   0274 05 86               492 	inc	dps
   0276 E0                  493 	movx	a,@dptr
   0277 F5 82               494 	mov	dpl,a
   0279 A3                  495 	inc	dptr
   027A E0                  496 	movx	a,@dptr
   027B F5 83               497 	mov	dph,a
   027D A3                  498 	inc	dptr
   027E E0                  499 	movx	a,@dptr
   027F F5 93               500 	mov	dpx,a
   0281 A3                  501 	inc	dptr
   0282 E0                  502 	movx	a,@dptr
   0283 F5 F0               503 	mov	b,a
   0285 75 86 00            504 	mov	dps,#0
   0288 12s00r00r00         505 	lcall	___fsadd
   028C AA 82               506 	mov	r2,dpl
   028E AB 83               507 	mov	r3,dph
   0290 AC 93               508 	mov	r4,dpx
   0292 AD F0               509 	mov	r5,b
                            510 ;	genAssign: resultIsFar = TRUE
   0294 8A 06               511 	mov	ar6,r2
   0296 8B 07               512 	mov	ar7,r3
   0298 8C 00               513 	mov	ar0,r4
   029A 8D 01               514 	mov	ar1,r5
                            515 ;	sqrtf.c:55: if (n&1)
   029C E5*00               516 	mov	a,_bpx
   029E C3                  517 	clr	c
   029F 94 FB               518 	subb	a,#0xFB
   02A1 F5 82               519 	mov	dpl,a
   02A3 E5*01               520 	mov	a,_bpx+1
   02A5 94 FF               521 	subb	a,#0xFF
   02A7 F5 83               522 	mov	dph,a
   02A9 75 93 FF            523 	mov	dpx,#0xFF
   02AC E0                  524 	movx	a,@dptr
   02AD 30 E0 43            525 	jnb  acc.0,00110$
   02B0                     526 00120$:
                            527 ;	sqrtf.c:57: y*=0.7071067812;
                            528 ;	genAssign: resultIsFar = TRUE
   02B0 90s00r00r00         529 	mov	dptr,#___fsmul_PARM_2
   02B4 EE                  530 	mov	a,r6
   02B5 F0                  531 	movx	@dptr,a
   02B6 A3                  532 	inc	dptr
   02B7 EF                  533 	mov	a,r7
   02B8 F0                  534 	movx	@dptr,a
   02B9 A3                  535 	inc	dptr
   02BA E8                  536 	mov	a,r0
   02BB F0                  537 	movx	@dptr,a
   02BC A3                  538 	inc	dptr
   02BD E9                  539 	mov	a,r1
   02BE F0                  540 	movx	@dptr,a
   02BF 90 35 04 F3         541 	mov	dptr,#0x3504F3
   02C3 75 F0 3F            542 	mov	b,#0x3F
   02C6 12s00r00r00         543 	lcall	___fsmul
   02CA AA 82               544 	mov	r2,dpl
   02CC AB 83               545 	mov	r3,dph
   02CE AC 93               546 	mov	r4,dpx
   02D0 AD F0               547 	mov	r5,b
                            548 ;	genAssign: resultIsFar = TRUE
   02D2 8A 06               549 	mov	ar6,r2
   02D4 8B 07               550 	mov	ar7,r3
   02D6 8C 00               551 	mov	ar0,r4
   02D8 8D 01               552 	mov	ar1,r5
                            553 ;	sqrtf.c:58: ++n;
   02DA E5*00               554 	mov	a,_bpx
   02DC C3                  555 	clr	c
   02DD 94 FB               556 	subb	a,#0xFB
   02DF F5 82               557 	mov	dpl,a
   02E1 E5*01               558 	mov	a,_bpx+1
   02E3 94 FF               559 	subb	a,#0xFF
   02E5 F5 83               560 	mov	dph,a
   02E7 75 93 FF            561 	mov	dpx,#0xFF
   02EA E0                  562 	movx	a,@dptr
   02EB 24 01               563 	add	a,#0x01
   02ED F0                  564 	movx	@dptr,a
   02EE A3                  565 	inc	dptr
   02EF E0                  566 	movx	a,@dptr
   02F0 34 00               567 	addc	a,#0x00
   02F2 F0                  568 	movx	@dptr,a
   02F3                     569 00110$:
                            570 ;	sqrtf.c:60: return ldexpf(y, n/2);
                            571 ;	genAssign: resultIsFar = TRUE
   02F3 90s00r00r00         572 	mov	dptr,#__divsint_PARM_2
   02F7 74 02               573 	mov	a,#0x02
   02F9 F0                  574 	movx	@dptr,a
   02FA E4                  575 	clr	a
   02FB A3                  576 	inc	dptr
   02FC F0                  577 	movx	@dptr,a
   02FD C0 06               578 	push	ar6
   02FF C0 07               579 	push	ar7
   0301 C0 00               580 	push	ar0
   0303 C0 01               581 	push	ar1
   0305 E5*00               582 	mov	a,_bpx
   0307 C3                  583 	clr	c
   0308 94 FB               584 	subb	a,#0xFB
   030A F5 84               585 	mov	dpl1,a
   030C E5*01               586 	mov	a,_bpx+1
   030E 94 FF               587 	subb	a,#0xFF
   0310 F5 85               588 	mov	dph1,a
   0312 75 95 FF            589 	mov	dpx1,#0xFF
   0315 05 86               590 	inc	dps
   0317 E0                  591 	movx	a,@dptr
   0318 F5 82               592 	mov	dpl,a
   031A A3                  593 	inc	dptr
   031B E0                  594 	movx	a,@dptr
   031C F5 83               595 	mov	dph,a
   031E 75 86 00            596 	mov	dps,#0
   0321 12s00r00r00         597 	lcall	__divsint
   0325 AA 82               598 	mov	r2,dpl
   0327 AB 83               599 	mov	r3,dph
   0329 D0 01               600 	pop	ar1
   032B D0 00               601 	pop	ar0
   032D D0 07               602 	pop	ar7
   032F D0 06               603 	pop	ar6
                            604 ;	genAssign: resultIsFar = TRUE
   0331 90s00r00r00         605 	mov	dptr,#_ldexpf_PARM_2
   0335 EA                  606 	mov	a,r2
   0336 F0                  607 	movx	@dptr,a
   0337 A3                  608 	inc	dptr
   0338 EB                  609 	mov	a,r3
   0339 F0                  610 	movx	@dptr,a
   033A 8E 82               611 	mov	dpl,r6
   033C 8F 83               612 	mov	dph,r7
   033E 88 93               613 	mov	dpx,r0
   0340 89 F0               614 	mov	b,r1
   0342 12s00r00r00         615 	lcall	_ldexpf
   0346                     616 00111$:
   0346 85*00 81            617 	mov	sp,_bpx
   0349 85*01 9B            618 	mov	esp,_bpx+1
   034C D0*01               619 	pop	_bpx+1
   034E D0*00               620 	pop	_bpx
   0350 22                  621 	ret
                            622 	.area CSEG    (CODE)
                            623 	.area CONST   (CODE)
                            624 	.area XINIT   (CODE)
                            625 	.area CABS    (ABS,CODE)
