                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:19 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strcmp
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _strcmp_PARM_2
                             31 	.globl _strcmp
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      44 	.ds 8
                             45 ;--------------------------------------------------------
                             46 ; internal ram data
                             47 ;--------------------------------------------------------
                             48 	.area DSEG    (DATA)
                             49 ;--------------------------------------------------------
                             50 ; overlayable items in internal ram 
                             51 ;--------------------------------------------------------
                             52 	.area	OSEG    (OVR,DATA)
                             53 ;--------------------------------------------------------
                             54 ; indirectly addressable internal ram data
                             55 ;--------------------------------------------------------
                             56 	.area ISEG    (DATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute internal ram data
                             59 ;--------------------------------------------------------
                             60 	.area IABS    (ABS,DATA)
                             61 	.area IABS    (ABS,DATA)
                             62 ;--------------------------------------------------------
                             63 ; bit data
                             64 ;--------------------------------------------------------
                             65 	.area BSEG    (BIT)
                             66 ;--------------------------------------------------------
                             67 ; paged external ram data
                             68 ;--------------------------------------------------------
                             69 	.area PSEG    (PAG,XDATA)
                             70 ;--------------------------------------------------------
                             71 ; external ram data
                             72 ;--------------------------------------------------------
                             73 	.area XSEG    (XDATA)
   0000                      74 _strcmp_PARM_2:
   0000                      75 	.ds 4
   0004                      76 _strcmp_sloc0_1_0:
   0004                      77 	.ds 4
                             78 ;--------------------------------------------------------
                             79 ; absolute external ram data
                             80 ;--------------------------------------------------------
                             81 	.area XABS    (ABS,XDATA)
                             82 ;--------------------------------------------------------
                             83 ; external initialized ram data
                             84 ;--------------------------------------------------------
                             85 	.area XISEG   (XDATA)
                             86 ;--------------------------------------------------------
                             87 ; global & static initialisations
                             88 ;--------------------------------------------------------
                             89 	.area HOME    (CODE)
                             90 	.area GSINIT  (CODE)
                             91 	.area GSFINAL (CODE)
                             92 	.area GSINIT  (CODE)
                             93 ;--------------------------------------------------------
                             94 ; Home
                             95 ;--------------------------------------------------------
                             96 	.area HOME    (CODE)
                             97 	.area HOME    (CODE)
                             98 ;--------------------------------------------------------
                             99 ; code
                            100 ;--------------------------------------------------------
                            101 	.area CSEG    (CODE)
                            102 ;------------------------------------------------------------
                            103 ;Allocation info for local variables in function 'strcmp'
                            104 ;------------------------------------------------------------
                            105 ;adst                      Allocated with name '_strcmp_PARM_2'
                            106 ;asrc                      Allocated to registers r2 r3 r4 r5 
                            107 ;sloc0                     Allocated with name '_strcmp_sloc0_1_0'
                            108 ;ret                       Allocated to registers r4 r5 
                            109 ;------------------------------------------------------------
                            110 ;	_strcmp.c:34: int strcmp (
                            111 ;	-----------------------------------------
                            112 ;	 function strcmp
                            113 ;	-----------------------------------------
   0000                     114 _strcmp:
                    0002    115 	ar2 = 0x02
                    0003    116 	ar3 = 0x03
                    0004    117 	ar4 = 0x04
                    0005    118 	ar5 = 0x05
                    0006    119 	ar6 = 0x06
                    0007    120 	ar7 = 0x07
                    0000    121 	ar0 = 0x00
                    0001    122 	ar1 = 0x01
   0000 AA 82               123 	mov	r2,dpl
   0002 AB 83               124 	mov	r3,dph
   0004 AC 93               125 	mov	r4,dpx
   0006 AD F0               126 	mov	r5,b
                            127 ;	_strcmp.c:53: while( ! (ret = *(unsigned char *)asrc - *(unsigned char *)adst) && *adst)
                            128 ;	genAssign: resultIsFar = TRUE
   0008 90s00r00r04         129 	mov	dptr,#_strcmp_sloc0_1_0
   000C EA                  130 	mov	a,r2
   000D F0                  131 	movx	@dptr,a
   000E A3                  132 	inc	dptr
   000F EB                  133 	mov	a,r3
   0010 F0                  134 	movx	@dptr,a
   0011 A3                  135 	inc	dptr
   0012 EC                  136 	mov	a,r4
   0013 F0                  137 	movx	@dptr,a
   0014 A3                  138 	inc	dptr
   0015 ED                  139 	mov	a,r5
   0016 F0                  140 	movx	@dptr,a
   0017 90s00r00r00         141 	mov	dptr,#_strcmp_PARM_2
                            142 ;	genAssign: resultIsFar = FALSE
   001B E0                  143 	movx	a,@dptr
   001C FE                  144 	mov	r6,a
   001D A3                  145 	inc	dptr
   001E E0                  146 	movx	a,@dptr
   001F FF                  147 	mov	r7,a
   0020 A3                  148 	inc	dptr
   0021 E0                  149 	movx	a,@dptr
   0022 F8                  150 	mov	r0,a
   0023 A3                  151 	inc	dptr
   0024 E0                  152 	movx	a,@dptr
   0025 F9                  153 	mov	r1,a
   0026                     154 00102$:
   0026 75 86 01            155 	mov     dps, #1
   0029 90s00r00r04         156 	mov     dptr, #_strcmp_sloc0_1_0
   002D E0                  157 	movx	a,@dptr
   002E F5 82               158 	mov	dpl,a
   0030 A3                  159 	inc	dptr
   0031 E0                  160 	movx	a,@dptr
   0032 F5 83               161 	mov	dph,a
   0034 A3                  162 	inc	dptr
   0035 E0                  163 	movx	a,@dptr
   0036 F5 93               164 	mov	dpx,a
   0038 A3                  165 	inc	dptr
   0039 E0                  166 	movx	a,@dptr
   003A F5 F0               167 	mov	b,a
   003C 75 86 00            168 	mov	dps,#0
   003F 12s00r00r00         169 	lcall	__gptrget
   0043 FA                  170 	mov	r2,a
   0044 7B 00               171 	mov	r3,#0
   0046 8E 82               172 	mov	dpl,r6
   0048 8F 83               173 	mov	dph,r7
   004A 88 93               174 	mov	dpx,r0
   004C 89 F0               175 	mov	b,r1
   004E 12s00r00r00         176 	lcall	__gptrget
   0052 FC                  177 	mov	r4,a
   0053 7D 00               178 	mov	r5,#0
   0055 C3                  179 	clr	c
   0056 EA                  180 	mov	a,r2
   0057 9C                  181 	subb	a,r4
   0058 FA                  182 	mov	r2,a
   0059 EB                  183 	mov	a,r3
   005A 9D                  184 	subb	a,r5
   005B FB                  185 	mov	r3,a
                            186 ;	genAssign: resultIsFar = FALSE
   005C 8A 04               187 	mov	ar4,r2
   005E 8B 05               188 	mov	ar5,r3
   0060 EA                  189 	mov	a,r2
   0061 4B                  190 	orl	a,r3
   0062 70 2F               191 	jnz  00104$
   0064                     192 00111$:
   0064 8E 82               193 	mov	dpl,r6
   0066 8F 83               194 	mov	dph,r7
   0068 88 93               195 	mov	dpx,r0
   006A 89 F0               196 	mov	b,r1
   006C 12s00r00r00         197 	lcall	__gptrget
   0070 FA                  198 	mov  r2,a
   0071 60 20               199 	jz  00104$
   0073                     200 00112$:
                            201 ;	_strcmp.c:54: ++asrc, ++adst;
   0073 90s00r00r04         202 	mov	dptr,#_strcmp_sloc0_1_0
   0077 E0                  203 	movx	a,@dptr
   0078 24 01               204 	add	a,#0x01
   007A F0                  205 	movx	@dptr,a
   007B A3                  206 	inc	dptr
   007C E0                  207 	movx	a,@dptr
   007D 34 00               208 	addc	a,#0x00
   007F F0                  209 	movx	@dptr,a
   0080 A3                  210 	inc	dptr
   0081 E0                  211 	movx	a,@dptr
   0082 34 00               212 	addc	a,#0x00
   0084 F0                  213 	movx	@dptr,a
   0085 A3                  214 	inc	dptr
   0086 E0                  215 	movx	a,@dptr
   0087 F0                  216 	movx	@dptr,a
   0088 0E                  217 	inc	r6
   0089 BE 00 05            218 	cjne	r6,#0,00113$
   008C 0F                  219 	inc	r7
   008D BF 00 01            220 	cjne	r7,#0,00113$
   0090 08                  221 	inc	r0
   0091                     222 00113$:
   0091 80 93               223 	sjmp 00102$
   0093                     224 00104$:
                            225 ;	_strcmp.c:56: return( ret );
   0093 8C 82               226 	mov	dpl,r4
   0095 8D 83               227 	mov	dph,r5
   0097                     228 00105$:
   0097 22                  229 	ret
                            230 	.area CSEG    (CODE)
                            231 	.area CONST   (CODE)
                            232 	.area XINIT   (CODE)
                            233 	.area CABS    (ABS,CODE)
