                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:23 2015
                              5 ;--------------------------------------------------------
                              6 	.module rand
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _rand
                             13 	.globl _srand
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 	.area RSEG    (ABS,DATA)
   0000                      18 	.org 0x0000
                             19 ;--------------------------------------------------------
                             20 ; special function bits
                             21 ;--------------------------------------------------------
                             22 	.area RSEG    (ABS,DATA)
   0000                      23 	.org 0x0000
                             24 ;--------------------------------------------------------
                             25 ; overlayable register banks
                             26 ;--------------------------------------------------------
                             27 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      28 	.ds 8
                             29 ;--------------------------------------------------------
                             30 ; internal ram data
                             31 ;--------------------------------------------------------
                             32 	.area DSEG    (DATA)
   0000                      33 _next:
   0000                      34 	.ds 4
                             35 ;--------------------------------------------------------
                             36 ; overlayable items in internal ram 
                             37 ;--------------------------------------------------------
                             38 	.area	OSEG    (OVR,DATA)
                             39 ;--------------------------------------------------------
                             40 ; indirectly addressable internal ram data
                             41 ;--------------------------------------------------------
                             42 	.area ISEG    (DATA)
                             43 ;--------------------------------------------------------
                             44 ; absolute internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area IABS    (ABS,DATA)
                             47 	.area IABS    (ABS,DATA)
                             48 ;--------------------------------------------------------
                             49 ; bit data
                             50 ;--------------------------------------------------------
                             51 	.area BSEG    (BIT)
                             52 ;--------------------------------------------------------
                             53 ; paged external ram data
                             54 ;--------------------------------------------------------
                             55 	.area PSEG    (PAG,XDATA)
                             56 ;--------------------------------------------------------
                             57 ; external ram data
                             58 ;--------------------------------------------------------
                             59 	.area XSEG    (XDATA)
                             60 ;--------------------------------------------------------
                             61 ; absolute external ram data
                             62 ;--------------------------------------------------------
                             63 	.area XABS    (ABS,XDATA)
                             64 ;--------------------------------------------------------
                             65 ; external initialized ram data
                             66 ;--------------------------------------------------------
                             67 	.area XISEG   (XDATA)
                             68 	.area HOME    (CODE)
                             69 	.area GSINIT0 (CODE)
                             70 	.area GSINIT1 (CODE)
                             71 	.area GSINIT2 (CODE)
                             72 	.area GSINIT3 (CODE)
                             73 	.area GSINIT4 (CODE)
                             74 	.area GSINIT5 (CODE)
                             75 	.area GSINIT  (CODE)
                             76 	.area GSFINAL (CODE)
                             77 	.area CSEG    (CODE)
                             78 ;--------------------------------------------------------
                             79 ; global & static initialisations
                             80 ;--------------------------------------------------------
                             81 	.area HOME    (CODE)
                             82 	.area GSINIT  (CODE)
                             83 	.area GSFINAL (CODE)
                             84 	.area GSINIT  (CODE)
                             85 ;	rand.c:31: static unsigned long int next = 1;
   0000 75*00 01             86 	mov	_next,#0x01
   0003 E4                   87 	clr	a
   0004 F5*01                88 	mov	(_next + 1),a
   0006 F5*02                89 	mov	(_next + 2),a
   0008 F5*03                90 	mov	(_next + 3),a
                             91 ;--------------------------------------------------------
                             92 ; Home
                             93 ;--------------------------------------------------------
                             94 	.area HOME    (CODE)
                             95 	.area HOME    (CODE)
                             96 ;--------------------------------------------------------
                             97 ; code
                             98 ;--------------------------------------------------------
                             99 	.area CSEG    (CODE)
                            100 ;------------------------------------------------------------
                            101 ;Allocation info for local variables in function 'rand'
                            102 ;------------------------------------------------------------
                            103 ;------------------------------------------------------------
                            104 ;	rand.c:33: int rand(void)
                            105 ;	-----------------------------------------
                            106 ;	 function rand
                            107 ;	-----------------------------------------
   0000                     108 _rand:
                    0002    109 	ar2 = 0x02
                    0003    110 	ar3 = 0x03
                    0004    111 	ar4 = 0x04
                    0005    112 	ar5 = 0x05
                    0006    113 	ar6 = 0x06
                    0007    114 	ar7 = 0x07
                    0000    115 	ar0 = 0x00
                    0001    116 	ar1 = 0x01
                            117 ;	rand.c:35: next = next * 1103515245UL + 12345;
   0000 85*00*00            118 	mov	__mullong_PARM_2,_next
   0003 85*01*01            119 	mov	(__mullong_PARM_2 + 1),(_next + 1)
   0006 85*02*02            120 	mov	(__mullong_PARM_2 + 2),(_next + 2)
   0009 85*03*03            121 	mov	(__mullong_PARM_2 + 3),(_next + 3)
   000C 90 4E 6D            122 	mov	dptr,#0x4E6D
   000F 75 F0 C6            123 	mov	b,#0xC6
   0012 74 41               124 	mov	a,#0x41
   0014 12s00r00            125 	lcall	__mullong
   0017 AA 82               126 	mov	r2,dpl
   0019 AB 83               127 	mov	r3,dph
   001B AC F0               128 	mov	r4,b
   001D FD                  129 	mov	r5,a
   001E 74 39               130 	mov	a,#0x39
   0020 2A                  131 	add	a,r2
   0021 F5*00               132 	mov	_next,a
   0023 74 30               133 	mov	a,#0x30
   0025 3B                  134 	addc	a,r3
   0026 F5*01               135 	mov	(_next + 1),a
   0028 E4                  136 	clr	a
   0029 3C                  137 	addc	a,r4
   002A F5*02               138 	mov	(_next + 2),a
   002C E4                  139 	clr	a
   002D 3D                  140 	addc	a,r5
   002E F5*03               141 	mov	(_next + 3),a
                            142 ;	rand.c:36: return (unsigned int)(next/65536) % (RAND_MAX + 1U);
   0030 AA*02               143 	mov	r2,(_next + 2)
   0032 AB*03               144 	mov	r3,(_next + 3)
   0034 8A 82               145 	mov	dpl,r2
   0036 74 7F               146 	mov	a,#0x7F
   0038 5B                  147 	anl	a,r3
   0039 F5 83               148 	mov	dph,a
   003B 22                  149 	ret
                            150 ;------------------------------------------------------------
                            151 ;Allocation info for local variables in function 'srand'
                            152 ;------------------------------------------------------------
                            153 ;seed                      Allocated to registers r2 r3 
                            154 ;------------------------------------------------------------
                            155 ;	rand.c:39: void srand(unsigned int seed)
                            156 ;	-----------------------------------------
                            157 ;	 function srand
                            158 ;	-----------------------------------------
   003C                     159 _srand:
   003C AA 82               160 	mov	r2,dpl
   003E AB 83               161 	mov	r3,dph
                            162 ;	rand.c:41: next = seed;
   0040 8A*00               163 	mov	_next,r2
   0042 8B*01               164 	mov	(_next + 1),r3
   0044 75*02 00            165 	mov	(_next + 2),#0x00
   0047 75*03 00            166 	mov	(_next + 3),#0x00
   004A 22                  167 	ret
                            168 	.area CSEG    (CODE)
                            169 	.area CONST   (CODE)
                            170 	.area XINIT   (CODE)
                            171 	.area CABS    (ABS,CODE)
