                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:19 2015
                              5 ;--------------------------------------------------------
                              6 	.module _memset
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _memset_PARM_3
                             31 	.globl _memset_PARM_2
                             32 	.globl _memset
                             33 ;--------------------------------------------------------
                             34 ; special function registers
                             35 ;--------------------------------------------------------
                             36 ;--------------------------------------------------------
                             37 ; special function bits
                             38 ;--------------------------------------------------------
                             39 ;--------------------------------------------------------
                             40 ; overlayable register banks
                             41 ;--------------------------------------------------------
                             42 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      43 	.ds 8
                             44 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      45 	.ds 8
                             46 ;--------------------------------------------------------
                             47 ; internal ram data
                             48 ;--------------------------------------------------------
                             49 	.area DSEG    (DATA)
                             50 ;--------------------------------------------------------
                             51 ; overlayable items in internal ram 
                             52 ;--------------------------------------------------------
                             53 	.area OSEG    (OVR,DATA)
                             54 ;--------------------------------------------------------
                             55 ; indirectly addressable internal ram data
                             56 ;--------------------------------------------------------
                             57 	.area ISEG    (DATA)
                             58 ;--------------------------------------------------------
                             59 ; absolute internal ram data
                             60 ;--------------------------------------------------------
                             61 	.area IABS    (ABS,DATA)
                             62 	.area IABS    (ABS,DATA)
                             63 ;--------------------------------------------------------
                             64 ; bit data
                             65 ;--------------------------------------------------------
                             66 	.area BSEG    (BIT)
                             67 ;--------------------------------------------------------
                             68 ; paged external ram data
                             69 ;--------------------------------------------------------
                             70 	.area PSEG    (PAG,XDATA)
                             71 ;--------------------------------------------------------
                             72 ; external ram data
                             73 ;--------------------------------------------------------
                             74 	.area XSEG    (XDATA)
   0000                      75 _memset_PARM_2:
   0000                      76 	.ds 1
   0001                      77 _memset_PARM_3:
   0001                      78 	.ds 2
   0003                      79 _memset_buf_1_1:
   0003                      80 	.ds 4
                             81 ;--------------------------------------------------------
                             82 ; absolute external ram data
                             83 ;--------------------------------------------------------
                             84 	.area XABS    (ABS,XDATA)
                             85 ;--------------------------------------------------------
                             86 ; external initialized ram data
                             87 ;--------------------------------------------------------
                             88 	.area XISEG   (XDATA)
                             89 ;--------------------------------------------------------
                             90 ; global & static initialisations
                             91 ;--------------------------------------------------------
                             92 	.area HOME    (CODE)
                             93 	.area GSINIT  (CODE)
                             94 	.area GSFINAL (CODE)
                             95 	.area GSINIT  (CODE)
                             96 ;--------------------------------------------------------
                             97 ; Home
                             98 ;--------------------------------------------------------
                             99 	.area HOME    (CODE)
                            100 	.area HOME    (CODE)
                            101 ;--------------------------------------------------------
                            102 ; code
                            103 ;--------------------------------------------------------
                            104 	.area CSEG    (CODE)
                            105 ;------------------------------------------------------------
                            106 ;Allocation info for local variables in function 'memset'
                            107 ;------------------------------------------------------------
                            108 ;ch                        Allocated with name '_memset_PARM_2'
                            109 ;count                     Allocated with name '_memset_PARM_3'
                            110 ;buf                       Allocated with name '_memset_buf_1_1'
                            111 ;ret                       Allocated to registers 
                            112 ;sloc0                     Allocated with name '_memset_sloc0_1_0'
                            113 ;------------------------------------------------------------
                            114 ;	_memset.c:36: void * memset (
                            115 ;	-----------------------------------------
                            116 ;	 function memset
                            117 ;	-----------------------------------------
   0000                     118 _memset:
                    0002    119 	ar2 = 0x02
                    0003    120 	ar3 = 0x03
                    0004    121 	ar4 = 0x04
                    0005    122 	ar5 = 0x05
                    0006    123 	ar6 = 0x06
                    0007    124 	ar7 = 0x07
                    0000    125 	ar0 = 0x00
                    0001    126 	ar1 = 0x01
   0000 75 86 01            127 	mov     dps, #1
   0003 90s00r00r03         128 	mov     dptr, #_memset_buf_1_1
   0007 E5 82               129 	mov	a,dpl
   0009 F0                  130 	movx	@dptr,a
   000A A3                  131 	inc	dptr
   000B E5 83               132 	mov	a,dph
   000D F0                  133 	movx	@dptr,a
   000E A3                  134 	inc	dptr
   000F E5 93               135 	mov	a,dpx
   0011 F0                  136 	movx	@dptr,a
   0012 A3                  137 	inc	dptr
   0013 E5 F0               138 	mov	a,b
   0015 F0                  139 	movx	@dptr,a
   0016 75 86 00            140 	mov	dps,#0
                            141 ;	_memset.c:43: while (count--) {
   0019 90s00r00r03         142 	mov	dptr,#_memset_buf_1_1
                            143 ;	genAssign: resultIsFar = FALSE
   001D E0                  144 	movx	a,@dptr
   001E FE                  145 	mov	r6,a
   001F A3                  146 	inc	dptr
   0020 E0                  147 	movx	a,@dptr
   0021 FF                  148 	mov	r7,a
   0022 A3                  149 	inc	dptr
   0023 E0                  150 	movx	a,@dptr
   0024 F8                  151 	mov	r0,a
   0025 A3                  152 	inc	dptr
   0026 E0                  153 	movx	a,@dptr
   0027 F9                  154 	mov	r1,a
   0028 90s00r00r01         155 	mov	dptr,#_memset_PARM_3
                            156 ;	genAssign: resultIsFar = FALSE
   002C E0                  157 	movx	a,@dptr
   002D FC                  158 	mov	r4,a
   002E A3                  159 	inc	dptr
   002F E0                  160 	movx	a,@dptr
   0030 FD                  161 	mov	r5,a
   0031                     162 00101$:
                            163 ;	genAssign: resultIsFar = FALSE
   0031 8C 02               164 	mov	ar2,r4
   0033 8D 03               165 	mov	ar3,r5
   0035 1C                  166 	dec	r4
   0036 BC FF 01            167 	cjne	r4,#0xFF,00109$
   0039 1D                  168 	dec	r5
   003A                     169 00109$:
   003A EA                  170 	mov	a,r2
   003B 4B                  171 	orl	a,r3
   003C 60 21               172 	jz  00103$
   003E                     173 00110$:
                            174 ;	_memset.c:44: *(unsigned char *) ret = ch;
   003E 8E 82               175 	mov	dpl,r6
   0040 8F 83               176 	mov	dph,r7
   0042 88 93               177 	mov	dpx,r0
   0044 89 F0               178 	mov	b,r1
   0046 75 86 01            179 	mov     dps, #1
   0049 90s00r00r00         180 	mov     dptr, #_memset_PARM_2
   004D E0                  181 	movx	a,@dptr
   004E 15 86               182 	dec	dps
   0050 12s00r00r00         183 	lcall	__gptrput
   0054 A3                  184 	inc	dptr
   0055 AE 82               185 	mov	r6,dpl
   0057 AF 83               186 	mov	r7,dph
   0059 A8 93               187 	mov	r0,dpx
   005B A9 F0               188 	mov	r1,b
                            189 ;	_memset.c:45: ret = ((unsigned char *) ret) + 1;
   005D 80 D2               190 	sjmp 00101$
   005F                     191 00103$:
                            192 ;	_memset.c:48: return buf ;
   005F 75 86 01            193 	mov     dps, #1
   0062 90s00r00r03         194 	mov     dptr, #_memset_buf_1_1
   0066 E0                  195 	movx	a,@dptr
   0067 F5 82               196 	mov	dpl,a
   0069 A3                  197 	inc	dptr
   006A E0                  198 	movx	a,@dptr
   006B F5 83               199 	mov	dph,a
   006D A3                  200 	inc	dptr
   006E E0                  201 	movx	a,@dptr
   006F F5 93               202 	mov	dpx,a
   0071 A3                  203 	inc	dptr
   0072 E0                  204 	movx	a,@dptr
   0073 F5 F0               205 	mov	b,a
   0075 75 86 00            206 	mov	dps,#0
   0078                     207 00104$:
   0078 22                  208 	ret
                            209 	.area CSEG    (CODE)
                            210 	.area CONST   (CODE)
                            211 	.area XINIT   (CODE)
                            212 	.area CABS    (ABS,CODE)
