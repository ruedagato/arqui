                              1 ;--------------------------------------------------------------------------
                              2 ;  crtxinit.asm :- C run-time: copy XINIT to XISEG
                              3 ;
                              4 ;  Copyright (C) 2004, Erik Petrich
                              5 ;
                              6 ;  This library is free software; you can redistribute it and/or modify it
                              7 ;  under the terms of the GNU General Public License as published by the
                              8 ;  Free Software Foundation; either version 2.1, or (at your option) any
                              9 ;  later version.
                             10 ;
                             11 ;  This library is distributed in the hope that it will be useful,
                             12 ;  but WITHOUT ANY WARRANTY; without even the implied warranty of
                             13 ;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
                             14 ;  GNU General Public License for more details.
                             15 ;
                             16 ;  You should have received a copy of the GNU General Public License 
                             17 ;  along with this library; see the file COPYING. If not, write to the
                             18 ;  Free Software Foundation, 51 Franklin Street, Fifth Floor, Boston,
                             19 ;   MA 02110-1301, USA.
                             20 ;
                             21 ;  As a special exception, if you link this library with other files,
                             22 ;  some of which are compiled with SDCC, to produce an executable,
                             23 ;  this library does not by itself cause the resulting executable to
                             24 ;  be covered by the GNU General Public License. This exception does
                             25 ;  not however invalidate any other reasons why the executable file
                             26 ;  might be covered by the GNU General Public License.
                             27 ;--------------------------------------------------------------------------
                             28 
                             29 ; Set DUAL_DPTR to 1 and reassemble if your derivative has dual data pointers
                             30 ; Especially useful if movx @Ri cannot go beyond the first 256 bytes of xdata
                             31 ; due to lack of P2 or _XPAGE
                             32 ; If the derivative has auto-toggle or auto-increment it can be further optimized
                    0000     33 	DUAL_DPTR = 0
                             34 
                             35 	.area CSEG    (CODE)
                             36 	.area GSINIT0 (CODE)
                             37 	.area GSINIT1 (CODE)
                             38 	.area GSINIT2 (CODE)
                             39 	.area GSINIT3 (CODE)
                             40 	.area GSINIT4 (CODE)
                             41 	.area GSINIT5 (CODE)
                             42 	.area GSINIT  (CODE)
                             43 	.area GSFINAL (CODE)
                             44 
                             45 	.area GSINIT3 (CODE)
                             46 
                    0000     47 	.if DUAL_DPTR
                             48 
                             49 	.globl _DPS			; assume DPSEL is in DPS bit0
                             50 
                             51 __mcs51_genXINIT::
                             52 	mov	r1,#l_XINIT
                             53 	mov	a,r1
                             54 	orl	a,#(l_XINIT >> 8)
                             55 	jz	00003$
                             56 	mov	r2,#((l_XINIT+255) >> 8)
                             57 	orl	_DPS,#0x01		; set DPSEL, select DPTR1
                             58 	mov	dptr,#s_XINIT		; DPTR1 for code
                             59 	dec	_DPS			; clear DPSEL, select DPTR0
                             60 	mov	dptr,#s_XISEG		; DPTR0 for xdata
                             61 00001$:	clr	a
                             62 	inc	_DPS			; set DPSEL, select DPTR1
                             63 	movc	a,@a+dptr
                             64 	inc	dptr
                             65 	dec	_DPS			; clear DPSEL, select DPTR0
                             66 	movx	@dptr,a
                             67 	inc	dptr
                             68 	djnz	r1,00001$
                             69 	djnz	r2,00001$
                             70 00003$:
                             71 
                             72 	.else
                             73 
                             74 	.globl __XPAGE
                             75 
   0000                      76 __mcs51_genXINIT::
   0000 79r00                77 	mov	r1,#l_XINIT
   0002 E9                   78 	mov	a,r1
   0003 44s00                79 	orl	a,#(l_XINIT >> 8)
   0005 60 1B                80 	jz	00003$
   0007 7As00                81 	mov	r2,#((l_XINIT+255) >> 8)
   0009 90s00r00             82 	mov	dptr,#s_XINIT
   000C 78r00                83 	mov	r0,#s_XISEG
   000E 75*00s00             84 	mov	__XPAGE,#(s_XISEG >> 8)
   0011 E4                   85 00001$:	clr	a
   0012 93                   86 	movc	a,@a+dptr
   0013 F2                   87 	movx	@r0,a
   0014 A3                   88 	inc	dptr
   0015 08                   89 	inc	r0
   0016 B8 00 02             90 	cjne	r0,#0,00002$
   0019 05*00                91 	inc	__XPAGE
   001B D9 F4                92 00002$:	djnz	r1,00001$
   001D DA F2                93 	djnz	r2,00001$
   001F 75*00 FF             94 	mov	__XPAGE,#0xFF
   0022                      95 00003$:
                             96 
                             97 	.endif
