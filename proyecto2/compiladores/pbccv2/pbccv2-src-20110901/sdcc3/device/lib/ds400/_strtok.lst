                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:19 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strtok
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _strtok_PARM_2
                             31 	.globl _strtok
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      44 	.ds 8
                             45 ;--------------------------------------------------------
                             46 ; internal ram data
                             47 ;--------------------------------------------------------
                             48 	.area DSEG    (DATA)
                             49 ;--------------------------------------------------------
                             50 ; overlayable items in internal ram 
                             51 ;--------------------------------------------------------
                             52 	.area OSEG    (OVR,DATA)
                             53 ;--------------------------------------------------------
                             54 ; indirectly addressable internal ram data
                             55 ;--------------------------------------------------------
                             56 	.area ISEG    (DATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute internal ram data
                             59 ;--------------------------------------------------------
                             60 	.area IABS    (ABS,DATA)
                             61 	.area IABS    (ABS,DATA)
                             62 ;--------------------------------------------------------
                             63 ; bit data
                             64 ;--------------------------------------------------------
                             65 	.area BSEG    (BIT)
                             66 ;--------------------------------------------------------
                             67 ; paged external ram data
                             68 ;--------------------------------------------------------
                             69 	.area PSEG    (PAG,XDATA)
                             70 ;--------------------------------------------------------
                             71 ; external ram data
                             72 ;--------------------------------------------------------
                             73 	.area XSEG    (XDATA)
   0000                      74 _strtok_PARM_2:
   0000                      75 	.ds 4
   0004                      76 _strtok_s_1_1:
   0004                      77 	.ds 4
                             78 ;--------------------------------------------------------
                             79 ; absolute external ram data
                             80 ;--------------------------------------------------------
                             81 	.area XABS    (ABS,XDATA)
                             82 ;--------------------------------------------------------
                             83 ; external initialized ram data
                             84 ;--------------------------------------------------------
                             85 	.area XISEG   (XDATA)
                             86 ;--------------------------------------------------------
                             87 ; global & static initialisations
                             88 ;--------------------------------------------------------
                             89 	.area HOME    (CODE)
                             90 	.area GSINIT  (CODE)
                             91 	.area GSFINAL (CODE)
                             92 	.area GSINIT  (CODE)
                             93 ;--------------------------------------------------------
                             94 ; Home
                             95 ;--------------------------------------------------------
                             96 	.area HOME    (CODE)
                             97 	.area HOME    (CODE)
                             98 ;--------------------------------------------------------
                             99 ; code
                            100 ;--------------------------------------------------------
                            101 	.area CSEG    (CODE)
                            102 ;------------------------------------------------------------
                            103 ;Allocation info for local variables in function 'strtok'
                            104 ;------------------------------------------------------------
                            105 ;control                   Allocated with name '_strtok_PARM_2'
                            106 ;str                       Allocated to registers r2 r3 r4 r5 
                            107 ;s                         Allocated with name '_strtok_s_1_1'
                            108 ;s1                        Allocated to registers r2 r3 r4 r5 
                            109 ;------------------------------------------------------------
                            110 ;	_strtok.c:36: char * strtok (
                            111 ;	-----------------------------------------
                            112 ;	 function strtok
                            113 ;	-----------------------------------------
   0000                     114 _strtok:
                    0002    115 	ar2 = 0x02
                    0003    116 	ar3 = 0x03
                    0004    117 	ar4 = 0x04
                    0005    118 	ar5 = 0x05
                    0006    119 	ar6 = 0x06
                    0007    120 	ar7 = 0x07
                    0000    121 	ar0 = 0x00
                    0001    122 	ar1 = 0x01
   0000 AA 82               123 	mov	r2,dpl
   0002 AB 83               124 	mov	r3,dph
   0004 AC 93               125 	mov	r4,dpx
   0006 AD F0               126 	mov	r5,b
                            127 ;	_strtok.c:43: if ( str )
   0008 EA                  128 	mov	a,r2
   0009 4B                  129 	orl	a,r3
   000A 4C                  130 	orl	a,r4
   000B 60 0F               131 	jz  00102$
   000D                     132 00130$:
                            133 ;	_strtok.c:44: s = str ;
                            134 ;	genAssign: resultIsFar = TRUE
   000D 90s00r00r04         135 	mov	dptr,#_strtok_s_1_1
   0011 EA                  136 	mov	a,r2
   0012 F0                  137 	movx	@dptr,a
   0013 A3                  138 	inc	dptr
   0014 EB                  139 	mov	a,r3
   0015 F0                  140 	movx	@dptr,a
   0016 A3                  141 	inc	dptr
   0017 EC                  142 	mov	a,r4
   0018 F0                  143 	movx	@dptr,a
   0019 A3                  144 	inc	dptr
   001A ED                  145 	mov	a,r5
   001B F0                  146 	movx	@dptr,a
   001C                     147 00102$:
                            148 ;	_strtok.c:45: if ( !s )
   001C 90s00r00r04         149 	mov	dptr,#_strtok_s_1_1
                            150 ;	genAssign: resultIsFar = FALSE
   0020 E0                  151 	movx	a,@dptr
   0021 FA                  152 	mov	r2,a
   0022 A3                  153 	inc	dptr
   0023 E0                  154 	movx	a,@dptr
   0024 FB                  155 	mov	r3,a
   0025 A3                  156 	inc	dptr
   0026 E0                  157 	movx	a,@dptr
   0027 FC                  158 	mov	r4,a
   0028 A3                  159 	inc	dptr
   0029 E0                  160 	movx	a,@dptr
   002A FD                  161 	mov	r5,a
   002B EA                  162 	mov	a,r2
   002C 4B                  163 	orl	a,r3
   002D 4C                  164 	orl	a,r4
   002E 70 0B               165 	jnz  00108$
   0030                     166 00131$:
                            167 ;	_strtok.c:46: return NULL;
   0030 90 00 00 00         168 	mov  dptr,#0x0000
   0034 75 F0 00            169 	mov	b,#0x00
   0037 02s00r01r84         170 	ljmp	00119$
                            171 ;	_strtok.c:48: while (*s) {
   003B                     172 00108$:
   003B 90s00r00r04         173 	mov	dptr,#_strtok_s_1_1
                            174 ;	genAssign: resultIsFar = FALSE
   003F E0                  175 	movx	a,@dptr
   0040 FA                  176 	mov	r2,a
   0041 A3                  177 	inc	dptr
   0042 E0                  178 	movx	a,@dptr
   0043 FB                  179 	mov	r3,a
   0044 A3                  180 	inc	dptr
   0045 E0                  181 	movx	a,@dptr
   0046 FC                  182 	mov	r4,a
   0047 A3                  183 	inc	dptr
   0048 E0                  184 	movx	a,@dptr
   0049 FD                  185 	mov	r5,a
   004A 8A 82               186 	mov	dpl,r2
   004C 8B 83               187 	mov	dph,r3
   004E 8C 93               188 	mov	dpx,r4
   0050 8D F0               189 	mov	b,r5
   0052 12s00r00r00         190 	lcall	__gptrget
   0056 FA                  191 	mov  r2,a
   0057 60 41               192 	jz  00110$
   0059                     193 00132$:
                            194 ;	_strtok.c:49: if (strchr(control,*s))
                            195 ;	genAssign: resultIsFar = TRUE
   0059 90s00r00r00         196 	mov	dptr,#_strchr_PARM_2
   005D EA                  197 	mov	a,r2
   005E F0                  198 	movx	@dptr,a
   005F 05 86               199 	inc	dps
   0061 90s00r00r00         200 	mov	dptr,#_strtok_PARM_2
   0065 E0                  201 	movx	a,@dptr
   0066 F5 82               202 	mov	dpl,a
   0068 A3                  203 	inc	dptr
   0069 E0                  204 	movx	a,@dptr
   006A F5 83               205 	mov	dph,a
   006C A3                  206 	inc	dptr
   006D E0                  207 	movx	a,@dptr
   006E F5 93               208 	mov	dpx,a
   0070 A3                  209 	inc	dptr
   0071 E0                  210 	movx	a,@dptr
   0072 F5 F0               211 	mov	b,a
   0074 75 86 00            212 	mov	dps,#0
   0077 12s00r00r00         213 	lcall	_strchr
   007B E5 82               214 	mov	a,dpl
   007D 45 83               215 	orl	a,dph
   007F 45 93               216 	orl	a,dpx
   0081 60 17               217 	jz  00110$
   0083                     218 00133$:
                            219 ;	_strtok.c:50: s++;
   0083 90s00r00r04         220 	mov	dptr,#_strtok_s_1_1
   0087 E0                  221 	movx	a,@dptr
   0088 24 01               222 	add	a,#0x01
   008A F0                  223 	movx	@dptr,a
   008B A3                  224 	inc	dptr
   008C E0                  225 	movx	a,@dptr
   008D 34 00               226 	addc	a,#0x00
   008F F0                  227 	movx	@dptr,a
   0090 A3                  228 	inc	dptr
   0091 E0                  229 	movx	a,@dptr
   0092 34 00               230 	addc	a,#0x00
   0094 F0                  231 	movx	@dptr,a
   0095 A3                  232 	inc	dptr
   0096 E0                  233 	movx	a,@dptr
   0097 F0                  234 	movx	@dptr,a
                            235 ;	_strtok.c:52: break;
   0098 80 A1               236 	sjmp 00108$
   009A                     237 00110$:
                            238 ;	_strtok.c:55: s1 = s ;
   009A 90s00r00r04         239 	mov	dptr,#_strtok_s_1_1
                            240 ;	genAssign: resultIsFar = FALSE
   009E E0                  241 	movx	a,@dptr
   009F FA                  242 	mov	r2,a
   00A0 A3                  243 	inc	dptr
   00A1 E0                  244 	movx	a,@dptr
   00A2 FB                  245 	mov	r3,a
   00A3 A3                  246 	inc	dptr
   00A4 E0                  247 	movx	a,@dptr
   00A5 FC                  248 	mov	r4,a
   00A6 A3                  249 	inc	dptr
   00A7 E0                  250 	movx	a,@dptr
   00A8 FD                  251 	mov	r5,a
                            252 ;	genAssign: resultIsFar = TRUE
                            253 ;	_strtok.c:57: while (*s) {
   00A9                     254 00113$:
   00A9 90s00r00r04         255 	mov	dptr,#_strtok_s_1_1
                            256 ;	genAssign: resultIsFar = FALSE
   00AD E0                  257 	movx	a,@dptr
   00AE FE                  258 	mov	r6,a
   00AF A3                  259 	inc	dptr
   00B0 E0                  260 	movx	a,@dptr
   00B1 FF                  261 	mov	r7,a
   00B2 A3                  262 	inc	dptr
   00B3 E0                  263 	movx	a,@dptr
   00B4 F8                  264 	mov	r0,a
   00B5 A3                  265 	inc	dptr
   00B6 E0                  266 	movx	a,@dptr
   00B7 F9                  267 	mov	r1,a
   00B8 8E 82               268 	mov	dpl,r6
   00BA 8F 83               269 	mov	dph,r7
   00BC 88 93               270 	mov	dpx,r0
   00BE 89 F0               271 	mov	b,r1
   00C0 12s00r00r00         272 	lcall	__gptrget
   00C4 FE                  273 	mov  r6,a
   00C5 70 04               274 	jnz	00134$
   00C7 02s00r01r57         275 	ljmp	00115$
   00CB                     276 00134$:
                            277 ;	_strtok.c:58: if (strchr(control,*s)) {
                            278 ;	genAssign: resultIsFar = TRUE
   00CB 90s00r00r00         279 	mov	dptr,#_strchr_PARM_2
   00CF EE                  280 	mov	a,r6
   00D0 F0                  281 	movx	@dptr,a
   00D1 C0 02               282 	push	ar2
   00D3 C0 03               283 	push	ar3
   00D5 C0 04               284 	push	ar4
   00D7 C0 05               285 	push	ar5
   00D9 05 86               286 	inc	dps
   00DB 90s00r00r00         287 	mov	dptr,#_strtok_PARM_2
   00DF E0                  288 	movx	a,@dptr
   00E0 F5 82               289 	mov	dpl,a
   00E2 A3                  290 	inc	dptr
   00E3 E0                  291 	movx	a,@dptr
   00E4 F5 83               292 	mov	dph,a
   00E6 A3                  293 	inc	dptr
   00E7 E0                  294 	movx	a,@dptr
   00E8 F5 93               295 	mov	dpx,a
   00EA A3                  296 	inc	dptr
   00EB E0                  297 	movx	a,@dptr
   00EC F5 F0               298 	mov	b,a
   00EE 75 86 00            299 	mov	dps,#0
   00F1 12s00r00r00         300 	lcall	_strchr
   00F5 D0 05               301 	pop	ar5
   00F7 D0 04               302 	pop	ar4
   00F9 D0 03               303 	pop	ar3
   00FB D0 02               304 	pop	ar2
   00FD E5 82               305 	mov	a,dpl
   00FF 45 83               306 	orl	a,dph
   0101 45 93               307 	orl	a,dpx
   0103 60 39               308 	jz  00112$
   0105                     309 00135$:
                            310 ;	_strtok.c:59: *s++ = '\0';
   0105 90s00r00r04         311 	mov	dptr,#_strtok_s_1_1
                            312 ;	genAssign: resultIsFar = FALSE
   0109 E0                  313 	movx	a,@dptr
   010A FE                  314 	mov	r6,a
   010B A3                  315 	inc	dptr
   010C E0                  316 	movx	a,@dptr
   010D FF                  317 	mov	r7,a
   010E A3                  318 	inc	dptr
   010F E0                  319 	movx	a,@dptr
   0110 F8                  320 	mov	r0,a
   0111 A3                  321 	inc	dptr
   0112 E0                  322 	movx	a,@dptr
   0113 F9                  323 	mov	r1,a
   0114 8E 82               324 	mov	dpl,r6
   0116 8F 83               325 	mov	dph,r7
   0118 88 93               326 	mov	dpx,r0
   011A 89 F0               327 	mov	b,r1
   011C E4                  328 	clr  a
   011D 12s00r00r00         329 	lcall	__gptrput
   0121 90s00r00r04         330 	mov	dptr,#_strtok_s_1_1
   0125 74 01               331 	mov	a,#0x01
   0127 2E                  332 	add	a,r6
   0128 F0                  333 	movx	@dptr,a
   0129 E4                  334 	clr  a
   012A 3F                  335 	addc	a,r7
   012B A3                  336 	inc	dptr
   012C F0                  337 	movx	@dptr,a
   012D E4                  338 	clr  a
   012E 38                  339 	addc	a,r0
   012F A3                  340 	inc	dptr
   0130 F0                  341 	movx	@dptr,a
   0131 A3                  342 	inc	dptr
   0132 E9                  343 	mov	a,r1
   0133 F0                  344 	movx	@dptr,a
                            345 ;	_strtok.c:60: return s1 ;
   0134 8A 82               346 	mov	dpl,r2
   0136 8B 83               347 	mov	dph,r3
   0138 8C 93               348 	mov	dpx,r4
   013A 8D F0               349 	mov	b,r5
   013C 80 46               350 	sjmp 00119$
   013E                     351 00112$:
                            352 ;	_strtok.c:62: s++ ;
   013E 90s00r00r04         353 	mov	dptr,#_strtok_s_1_1
   0142 E0                  354 	movx	a,@dptr
   0143 24 01               355 	add	a,#0x01
   0145 F0                  356 	movx	@dptr,a
   0146 A3                  357 	inc	dptr
   0147 E0                  358 	movx	a,@dptr
   0148 34 00               359 	addc	a,#0x00
   014A F0                  360 	movx	@dptr,a
   014B A3                  361 	inc	dptr
   014C E0                  362 	movx	a,@dptr
   014D 34 00               363 	addc	a,#0x00
   014F F0                  364 	movx	@dptr,a
   0150 A3                  365 	inc	dptr
   0151 E0                  366 	movx	a,@dptr
   0152 F0                  367 	movx	@dptr,a
   0153 02s00r00rA9         368 	ljmp	00113$
   0157                     369 00115$:
                            370 ;	_strtok.c:65: s = NULL;
                            371 ;	genAssign: resultIsFar = TRUE
   0157 90s00r00r04         372 	mov	dptr,#_strtok_s_1_1
   015B E4                  373 	clr	a
   015C F0                  374 	movx	@dptr,a
   015D A3                  375 	inc	dptr
   015E F0                  376 	movx	@dptr,a
   015F A3                  377 	inc	dptr
   0160 F0                  378 	movx	@dptr,a
   0161 A3                  379 	inc	dptr
   0162 E4                  380 	clr  a
   0163 F0                  381 	movx	@dptr,a
                            382 ;	_strtok.c:67: if (*s1)
   0164 8A 82               383 	mov	dpl,r2
   0166 8B 83               384 	mov	dph,r3
   0168 8C 93               385 	mov	dpx,r4
   016A 8D F0               386 	mov	b,r5
   016C 12s00r00r00         387 	lcall	__gptrget
   0170 FE                  388 	mov  r6,a
   0171 60 0A               389 	jz  00117$
   0173                     390 00136$:
                            391 ;	_strtok.c:68: return s1;
   0173 8A 82               392 	mov	dpl,r2
   0175 8B 83               393 	mov	dph,r3
   0177 8C 93               394 	mov	dpx,r4
   0179 8D F0               395 	mov	b,r5
   017B 80 07               396 	sjmp 00119$
   017D                     397 00117$:
                            398 ;	_strtok.c:70: return NULL;
   017D 90 00 00 00         399 	mov  dptr,#0x0000
   0181 75 F0 00            400 	mov	b,#0x00
   0184                     401 00119$:
   0184 22                  402 	ret
                            403 	.area CSEG    (CODE)
                            404 	.area CONST   (CODE)
                            405 	.area XINIT   (CODE)
                            406 	.area CABS    (ABS,CODE)
