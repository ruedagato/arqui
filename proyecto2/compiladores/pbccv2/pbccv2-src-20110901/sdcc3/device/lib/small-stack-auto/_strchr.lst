                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:31 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strchr
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strchr
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'strchr'
                             93 ;------------------------------------------------------------
                             94 ;ch                        Allocated to stack - offset -3
                             95 ;string                    Allocated to registers r2 r3 r4 
                             96 ;------------------------------------------------------------
                             97 ;	_strchr.c:31: char * strchr (
                             98 ;	-----------------------------------------
                             99 ;	 function strchr
                            100 ;	-----------------------------------------
   0000                     101 _strchr:
                    0002    102 	ar2 = 0x02
                    0003    103 	ar3 = 0x03
                    0004    104 	ar4 = 0x04
                    0005    105 	ar5 = 0x05
                    0006    106 	ar6 = 0x06
                    0007    107 	ar7 = 0x07
                    0000    108 	ar0 = 0x00
                    0001    109 	ar1 = 0x01
   0000 C0*00               110 	push	_bp
   0002 85 81*00            111 	mov	_bp,sp
   0005 AA 82               112 	mov	r2,dpl
   0007 AB 83               113 	mov	r3,dph
   0009 AC F0               114 	mov	r4,b
                            115 ;	_strchr.c:36: while (*string && *string != ch)
   000B                     116 00102$:
   000B 8A 82               117 	mov	dpl,r2
   000D 8B 83               118 	mov	dph,r3
   000F 8C F0               119 	mov	b,r4
   0011 12s00r00            120 	lcall	__gptrget
   0014 FD                  121 	mov	r5,a
   0015 60 12               122 	jz	00104$
   0017 E5*00               123 	mov	a,_bp
   0019 24 FD               124 	add	a,#0xfd
   001B F8                  125 	mov	r0,a
   001C E6                  126 	mov	a,@r0
   001D B5 05 02            127 	cjne	a,ar5,00115$
   0020 80 07               128 	sjmp	00104$
   0022                     129 00115$:
                            130 ;	_strchr.c:37: string++;
   0022 0A                  131 	inc	r2
   0023 BA 00 E5            132 	cjne	r2,#0x00,00102$
   0026 0B                  133 	inc	r3
   0027 80 E2               134 	sjmp	00102$
   0029                     135 00104$:
                            136 ;	_strchr.c:39: if (*string == ch)
   0029 8A 82               137 	mov	dpl,r2
   002B 8B 83               138 	mov	dph,r3
   002D 8C F0               139 	mov	b,r4
   002F 12s00r00            140 	lcall	__gptrget
   0032 FD                  141 	mov	r5,a
   0033 E5*00               142 	mov	a,_bp
   0035 24 FD               143 	add	a,#0xfd
   0037 F8                  144 	mov	r0,a
   0038 E6                  145 	mov	a,@r0
   0039 B5 05 08            146 	cjne	a,ar5,00106$
                            147 ;	_strchr.c:40: return(string);
   003C 8A 82               148 	mov	dpl,r2
   003E 8B 83               149 	mov	dph,r3
   0040 8C F0               150 	mov	b,r4
   0042 80 06               151 	sjmp	00107$
   0044                     152 00106$:
                            153 ;	_strchr.c:41: return ( NULL );
   0044 90 00 00            154 	mov	dptr,#0x0000
   0047 75 F0 00            155 	mov	b,#0x00
   004A                     156 00107$:
   004A D0*00               157 	pop	_bp
   004C 22                  158 	ret
                            159 	.area CSEG    (CODE)
                            160 	.area CONST   (CODE)
                            161 	.area XINIT   (CODE)
                            162 	.area CABS    (ABS,CODE)
