                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:18 2015
                              5 ;--------------------------------------------------------
                              6 	.module _fs2slong
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl ___fs2slong
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; overlayable register banks
                             39 ;--------------------------------------------------------
                             40 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      41 	.ds 8
                             42 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      43 	.ds 8
                             44 ;--------------------------------------------------------
                             45 ; internal ram data
                             46 ;--------------------------------------------------------
                             47 	.area DSEG    (DATA)
                             48 ;--------------------------------------------------------
                             49 ; overlayable items in internal ram 
                             50 ;--------------------------------------------------------
                             51 	.area OSEG    (OVR,DATA)
                             52 ;--------------------------------------------------------
                             53 ; indirectly addressable internal ram data
                             54 ;--------------------------------------------------------
                             55 	.area ISEG    (DATA)
                             56 ;--------------------------------------------------------
                             57 ; absolute internal ram data
                             58 ;--------------------------------------------------------
                             59 	.area IABS    (ABS,DATA)
                             60 	.area IABS    (ABS,DATA)
                             61 ;--------------------------------------------------------
                             62 ; bit data
                             63 ;--------------------------------------------------------
                             64 	.area BSEG    (BIT)
                             65 ;--------------------------------------------------------
                             66 ; paged external ram data
                             67 ;--------------------------------------------------------
                             68 	.area PSEG    (PAG,XDATA)
                             69 ;--------------------------------------------------------
                             70 ; external ram data
                             71 ;--------------------------------------------------------
                             72 	.area XSEG    (XDATA)
                             73 ;--------------------------------------------------------
                             74 ; absolute external ram data
                             75 ;--------------------------------------------------------
                             76 	.area XABS    (ABS,XDATA)
                             77 ;--------------------------------------------------------
                             78 ; external initialized ram data
                             79 ;--------------------------------------------------------
                             80 	.area XISEG   (XDATA)
                             81 ;--------------------------------------------------------
                             82 ; global & static initialisations
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area GSINIT  (CODE)
                             86 	.area GSFINAL (CODE)
                             87 	.area GSINIT  (CODE)
                             88 ;--------------------------------------------------------
                             89 ; Home
                             90 ;--------------------------------------------------------
                             91 	.area HOME    (CODE)
                             92 	.area HOME    (CODE)
                             93 ;--------------------------------------------------------
                             94 ; code
                             95 ;--------------------------------------------------------
                             96 	.area CSEG    (CODE)
                             97 ;------------------------------------------------------------
                             98 ;Allocation info for local variables in function '__fs2slong'
                             99 ;------------------------------------------------------------
                            100 ;f                         Allocated to registers r2 r3 r4 r5 
                            101 ;------------------------------------------------------------
                            102 ;	_fs2slong.c:108: signed long __fs2slong (float f)
                            103 ;	-----------------------------------------
                            104 ;	 function __fs2slong
                            105 ;	-----------------------------------------
   0000                     106 ___fs2slong:
                    0002    107 	ar2 = 0x02
                    0003    108 	ar3 = 0x03
                    0004    109 	ar4 = 0x04
                    0005    110 	ar5 = 0x05
                    0006    111 	ar6 = 0x06
                    0007    112 	ar7 = 0x07
                    0000    113 	ar0 = 0x00
                    0001    114 	ar1 = 0x01
   0000 AA 82               115 	mov	r2,dpl
   0002 AB 83               116 	mov	r3,dph
   0004 AC 93               117 	mov	r4,dpx
   0006 AD F0               118 	mov	r5,b
                            119 ;	_fs2slong.c:111: if (!f)
   0008 EA                  120 	mov	a,r2
   0009 4B                  121 	orl	a,r3
   000A 4C                  122 	orl	a,r4
   000B 4D                  123 	orl	a,r5
   000C 70 09               124 	jnz  00102$
   000E                     125 00110$:
                            126 ;	_fs2slong.c:112: return 0;
   000E 90 00 00 00         127 	mov  dptr,#0x0000
   0012 75 F0 00            128 	mov	b,#0x00
   0015 80 69               129 	sjmp 00106$
   0017                     130 00102$:
                            131 ;	_fs2slong.c:114: if (f<0) {
                            132 ;	genAssign: resultIsFar = TRUE
   0017 90s00r00r00         133 	mov	dptr,#___fslt_PARM_2
   001B E4                  134 	clr	a
   001C F0                  135 	movx	@dptr,a
   001D A3                  136 	inc	dptr
   001E F0                  137 	movx	@dptr,a
   001F A3                  138 	inc	dptr
   0020 F0                  139 	movx	@dptr,a
   0021 A3                  140 	inc	dptr
   0022 F0                  141 	movx	@dptr,a
   0023 C0 02               142 	push	ar2
   0025 C0 03               143 	push	ar3
   0027 C0 04               144 	push	ar4
   0029 C0 05               145 	push	ar5
   002B 8A 82               146 	mov	dpl,r2
   002D 8B 83               147 	mov	dph,r3
   002F 8C 93               148 	mov	dpx,r4
   0031 8D F0               149 	mov	b,r5
   0033 12s00r00r00         150 	lcall	___fslt
   0037 D0 05               151 	pop	ar5
   0039 D0 04               152 	pop	ar4
   003B D0 03               153 	pop	ar3
   003D D0 02               154 	pop	ar2
   003F E5 82               155 	mov	a,dpl
   0041 60 31               156 	jz  00104$
   0043                     157 00111$:
                            158 ;	_fs2slong.c:115: return -__fs2ulong(-f);
   0043 8A 06               159 	mov	ar6,r2
   0045 8B 07               160 	mov	ar7,r3
   0047 8C 00               161 	mov	ar0,r4
   0049 ED                  162 	mov	a,r5
   004A B2 E7               163 	cpl	acc.7
   004C F9                  164 	mov	r1,a
   004D 8E 82               165 	mov	dpl,r6
   004F 8F 83               166 	mov	dph,r7
   0051 88 93               167 	mov	dpx,r0
   0053 89 F0               168 	mov	b,r1
   0055 12s00r00r00         169 	lcall	___fs2ulong
   0059 C3                  170 	clr	c
   005A E4                  171 	clr	a
   005B 95 82               172 	subb	a,dpl
   005D FE                  173 	mov	r6,a
   005E E4                  174 	clr	a
   005F 95 83               175 	subb	a,dph
   0061 FF                  176 	mov	r7,a
   0062 E4                  177 	clr	a
   0063 95 93               178 	subb	a,dpx
   0065 F8                  179 	mov	r0,a
   0066 E4                  180 	clr	a
   0067 95 F0               181 	subb	a,b
   0069 F9                  182 	mov	r1,a
   006A 8E 82               183 	mov	dpl,r6
   006C 8F 83               184 	mov	dph,r7
   006E 88 93               185 	mov	dpx,r0
   0070 89 F0               186 	mov	b,r1
   0072 80 0C               187 	sjmp 00106$
   0074                     188 00104$:
                            189 ;	_fs2slong.c:117: return __fs2ulong(f);
   0074 8A 82               190 	mov	dpl,r2
   0076 8B 83               191 	mov	dph,r3
   0078 8C 93               192 	mov	dpx,r4
   007A 8D F0               193 	mov	b,r5
   007C 12s00r00r00         194 	lcall	___fs2ulong
   0080                     195 00106$:
   0080 22                  196 	ret
                            197 	.area CSEG    (CODE)
                            198 	.area CONST   (CODE)
                            199 	.area XINIT   (CODE)
                            200 	.area CABS    (ABS,CODE)
