                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:29 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strrchr
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strrchr_PARM_2
                             13 	.globl _strrchr
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 	.area RSEG    (ABS,DATA)
   0000                      18 	.org 0x0000
                             19 ;--------------------------------------------------------
                             20 ; special function bits
                             21 ;--------------------------------------------------------
                             22 	.area RSEG    (ABS,DATA)
   0000                      23 	.org 0x0000
                             24 ;--------------------------------------------------------
                             25 ; overlayable register banks
                             26 ;--------------------------------------------------------
                             27 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      28 	.ds 8
                             29 ;--------------------------------------------------------
                             30 ; internal ram data
                             31 ;--------------------------------------------------------
                             32 	.area DSEG    (DATA)
                             33 ;--------------------------------------------------------
                             34 ; overlayable items in internal ram 
                             35 ;--------------------------------------------------------
                             36 	.area	OSEG    (OVR,DATA)
   0000                      37 _strrchr_sloc0_1_0::
   0000                      38 	.ds 3
                             39 ;--------------------------------------------------------
                             40 ; indirectly addressable internal ram data
                             41 ;--------------------------------------------------------
                             42 	.area ISEG    (DATA)
                             43 ;--------------------------------------------------------
                             44 ; absolute internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area IABS    (ABS,DATA)
                             47 	.area IABS    (ABS,DATA)
                             48 ;--------------------------------------------------------
                             49 ; bit data
                             50 ;--------------------------------------------------------
                             51 	.area BSEG    (BIT)
                             52 ;--------------------------------------------------------
                             53 ; paged external ram data
                             54 ;--------------------------------------------------------
                             55 	.area PSEG    (PAG,XDATA)
                             56 ;--------------------------------------------------------
                             57 ; external ram data
                             58 ;--------------------------------------------------------
                             59 	.area XSEG    (XDATA)
   0000                      60 _strrchr_PARM_2:
   0000                      61 	.ds 1
   0001                      62 _strrchr_string_1_1:
   0001                      63 	.ds 3
   0004                      64 _strrchr_start_1_1:
   0004                      65 	.ds 3
                             66 ;--------------------------------------------------------
                             67 ; absolute external ram data
                             68 ;--------------------------------------------------------
                             69 	.area XABS    (ABS,XDATA)
                             70 ;--------------------------------------------------------
                             71 ; external initialized ram data
                             72 ;--------------------------------------------------------
                             73 	.area XISEG   (XDATA)
                             74 	.area HOME    (CODE)
                             75 	.area GSINIT0 (CODE)
                             76 	.area GSINIT1 (CODE)
                             77 	.area GSINIT2 (CODE)
                             78 	.area GSINIT3 (CODE)
                             79 	.area GSINIT4 (CODE)
                             80 	.area GSINIT5 (CODE)
                             81 	.area GSINIT  (CODE)
                             82 	.area GSFINAL (CODE)
                             83 	.area CSEG    (CODE)
                             84 ;--------------------------------------------------------
                             85 ; global & static initialisations
                             86 ;--------------------------------------------------------
                             87 	.area HOME    (CODE)
                             88 	.area GSINIT  (CODE)
                             89 	.area GSFINAL (CODE)
                             90 	.area GSINIT  (CODE)
                             91 ;--------------------------------------------------------
                             92 ; Home
                             93 ;--------------------------------------------------------
                             94 	.area HOME    (CODE)
                             95 	.area HOME    (CODE)
                             96 ;--------------------------------------------------------
                             97 ; code
                             98 ;--------------------------------------------------------
                             99 	.area CSEG    (CODE)
                            100 ;------------------------------------------------------------
                            101 ;Allocation info for local variables in function 'strrchr'
                            102 ;------------------------------------------------------------
                            103 ;ch                        Allocated with name '_strrchr_PARM_2'
                            104 ;string                    Allocated with name '_strrchr_string_1_1'
                            105 ;start                     Allocated with name '_strrchr_start_1_1'
                            106 ;sloc0                     Allocated with name '_strrchr_sloc0_1_0'
                            107 ;------------------------------------------------------------
                            108 ;	_strrchr.c:31: char * strrchr (
                            109 ;	-----------------------------------------
                            110 ;	 function strrchr
                            111 ;	-----------------------------------------
   0000                     112 _strrchr:
                    0002    113 	ar2 = 0x02
                    0003    114 	ar3 = 0x03
                    0004    115 	ar4 = 0x04
                    0005    116 	ar5 = 0x05
                    0006    117 	ar6 = 0x06
                    0007    118 	ar7 = 0x07
                    0000    119 	ar0 = 0x00
                    0001    120 	ar1 = 0x01
   0000 AA F0               121 	mov	r2,b
   0002 AB 83               122 	mov	r3,dph
   0004 E5 82               123 	mov	a,dpl
   0006 90s00r01            124 	mov	dptr,#_strrchr_string_1_1
   0009 F0                  125 	movx	@dptr,a
   000A A3                  126 	inc	dptr
   000B EB                  127 	mov	a,r3
   000C F0                  128 	movx	@dptr,a
   000D A3                  129 	inc	dptr
   000E EA                  130 	mov	a,r2
   000F F0                  131 	movx	@dptr,a
                            132 ;	_strrchr.c:36: const char * start = string;
   0010 90s00r01            133 	mov	dptr,#_strrchr_string_1_1
   0013 E0                  134 	movx	a,@dptr
   0014 FA                  135 	mov	r2,a
   0015 A3                  136 	inc	dptr
   0016 E0                  137 	movx	a,@dptr
   0017 FB                  138 	mov	r3,a
   0018 A3                  139 	inc	dptr
   0019 E0                  140 	movx	a,@dptr
   001A FC                  141 	mov	r4,a
   001B 90s00r04            142 	mov	dptr,#_strrchr_start_1_1
   001E EA                  143 	mov	a,r2
   001F F0                  144 	movx	@dptr,a
   0020 A3                  145 	inc	dptr
   0021 EB                  146 	mov	a,r3
   0022 F0                  147 	movx	@dptr,a
   0023 A3                  148 	inc	dptr
   0024 EC                  149 	mov	a,r4
   0025 F0                  150 	movx	@dptr,a
                            151 ;	_strrchr.c:38: while (*string++)                       /* find end of string */
   0026                     152 00101$:
   0026 8A 82               153 	mov	dpl,r2
   0028 8B 83               154 	mov	dph,r3
   002A 8C F0               155 	mov	b,r4
   002C 12s00r00            156 	lcall	__gptrget
   002F FD                  157 	mov	r5,a
   0030 A3                  158 	inc	dptr
   0031 AA 82               159 	mov	r2,dpl
   0033 AB 83               160 	mov	r3,dph
   0035 90s00r01            161 	mov	dptr,#_strrchr_string_1_1
   0038 EA                  162 	mov	a,r2
   0039 F0                  163 	movx	@dptr,a
   003A A3                  164 	inc	dptr
   003B EB                  165 	mov	a,r3
   003C F0                  166 	movx	@dptr,a
   003D A3                  167 	inc	dptr
   003E EC                  168 	mov	a,r4
   003F F0                  169 	movx	@dptr,a
   0040 ED                  170 	mov	a,r5
   0041 70 E3               171 	jnz	00101$
                            172 ;	_strrchr.c:41: while (--string != start && *string != ch)
   0043 90s00r01            173 	mov	dptr,#_strrchr_string_1_1
   0046 EA                  174 	mov	a,r2
   0047 F0                  175 	movx	@dptr,a
   0048 A3                  176 	inc	dptr
   0049 EB                  177 	mov	a,r3
   004A F0                  178 	movx	@dptr,a
   004B A3                  179 	inc	dptr
   004C EC                  180 	mov	a,r4
   004D F0                  181 	movx	@dptr,a
   004E 90s00r00            182 	mov	dptr,#_strrchr_PARM_2
   0051 E0                  183 	movx	a,@dptr
   0052 FD                  184 	mov	r5,a
   0053 90s00r04            185 	mov	dptr,#_strrchr_start_1_1
   0056 E0                  186 	movx	a,@dptr
   0057 FE                  187 	mov	r6,a
   0058 A3                  188 	inc	dptr
   0059 E0                  189 	movx	a,@dptr
   005A FF                  190 	mov	r7,a
   005B A3                  191 	inc	dptr
   005C E0                  192 	movx	a,@dptr
   005D F8                  193 	mov	r0,a
   005E                     194 00105$:
   005E 1A                  195 	dec	r2
   005F BA FF 01            196 	cjne	r2,#0xff,00119$
   0062 1B                  197 	dec	r3
   0063                     198 00119$:
   0063 90s00r01            199 	mov	dptr,#_strrchr_string_1_1
   0066 EA                  200 	mov	a,r2
   0067 F0                  201 	movx	@dptr,a
   0068 A3                  202 	inc	dptr
   0069 EB                  203 	mov	a,r3
   006A F0                  204 	movx	@dptr,a
   006B A3                  205 	inc	dptr
   006C EC                  206 	mov	a,r4
   006D F0                  207 	movx	@dptr,a
   006E 8A*00               208 	mov	_strrchr_sloc0_1_0,r2
   0070 8B*01               209 	mov	(_strrchr_sloc0_1_0 + 1),r3
   0072 8C*02               210 	mov	(_strrchr_sloc0_1_0 + 2),r4
   0074 EA                  211 	mov	a,r2
   0075 B5 06 0A            212 	cjne	a,ar6,00120$
   0078 EB                  213 	mov	a,r3
   0079 B5 07 06            214 	cjne	a,ar7,00120$
   007C EC                  215 	mov	a,r4
   007D B5 00 02            216 	cjne	a,ar0,00120$
   0080 80 0D               217 	sjmp	00117$
   0082                     218 00120$:
   0082 8A 82               219 	mov	dpl,r2
   0084 8B 83               220 	mov	dph,r3
   0086 8C F0               221 	mov	b,r4
   0088 12s00r00            222 	lcall	__gptrget
   008B F9                  223 	mov	r1,a
   008C B5 05 CF            224 	cjne	a,ar5,00105$
   008F                     225 00117$:
   008F 90s00r01            226 	mov	dptr,#_strrchr_string_1_1
   0092 EA                  227 	mov	a,r2
   0093 F0                  228 	movx	@dptr,a
   0094 A3                  229 	inc	dptr
   0095 EB                  230 	mov	a,r3
   0096 F0                  231 	movx	@dptr,a
   0097 A3                  232 	inc	dptr
   0098 EC                  233 	mov	a,r4
   0099 F0                  234 	movx	@dptr,a
                            235 ;	_strrchr.c:44: if (*string == ch)                /* char found ? */
   009A 85*00 82            236 	mov	dpl,_strrchr_sloc0_1_0
   009D 85*01 83            237 	mov	dph,(_strrchr_sloc0_1_0 + 1)
   00A0 85*02 F0            238 	mov	b,(_strrchr_sloc0_1_0 + 2)
   00A3 12s00r00            239 	lcall	__gptrget
   00A6 FA                  240 	mov	r2,a
   00A7 B5 05 0A            241 	cjne	a,ar5,00109$
                            242 ;	_strrchr.c:45: return( (char *)string );
   00AA 85*00 82            243 	mov	dpl,_strrchr_sloc0_1_0
   00AD 85*01 83            244 	mov	dph,(_strrchr_sloc0_1_0 + 1)
   00B0 85*02 F0            245 	mov	b,(_strrchr_sloc0_1_0 + 2)
   00B3 22                  246 	ret
   00B4                     247 00109$:
                            248 ;	_strrchr.c:47: return (NULL) ;
   00B4 90 00 00            249 	mov	dptr,#0x0000
   00B7 75 F0 00            250 	mov	b,#0x00
   00BA 22                  251 	ret
                            252 	.area CSEG    (CODE)
                            253 	.area CONST   (CODE)
                            254 	.area XINIT   (CODE)
                            255 	.area CABS    (ABS,CODE)
