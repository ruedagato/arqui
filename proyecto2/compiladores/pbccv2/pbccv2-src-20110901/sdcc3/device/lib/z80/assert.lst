                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:18:18 2015
                              5 ;--------------------------------------------------------
                              6 	.module assert
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __assert
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ;  ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; overlayable items in  ram 
                             22 ;--------------------------------------------------------
                             23 	.area _OVERLAY
                             24 ;--------------------------------------------------------
                             25 ; external initialized ram data
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _HOME
                             39 ;--------------------------------------------------------
                             40 ; code
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 ;../assert.c:32: void _assert(char *expr, const char *filename, unsigned int linenumber)
                             44 ;	---------------------------------
                             45 ; Function _assert
                             46 ; ---------------------------------
   0000                      47 __assert_start::
   0000                      48 __assert:
   0000 DD E5                49 	push	ix
   0002 DD 21 00 00          50 	ld	ix,#0
   0006 DD 39                51 	add	ix,sp
                             52 ;../assert.c:34: printf("Assert(%s) failed at line %u in file %s.\n",
   0008 DD 6E 06             53 	ld	l,6 (ix)
   000B DD 66 07             54 	ld	h,7 (ix)
   000E E5                   55 	push	hl
   000F DD 6E 08             56 	ld	l,8 (ix)
   0012 DD 66 09             57 	ld	h,9 (ix)
   0015 E5                   58 	push	hl
   0016 DD 6E 04             59 	ld	l,4 (ix)
   0019 DD 66 05             60 	ld	h,5 (ix)
   001C E5                   61 	push	hl
   001D 21r2Ds00             62 	ld	hl,#__str_0
   0020 E5                   63 	push	hl
   0021 CDr00s00             64 	call	_printf
   0024 F1                   65 	pop	af
   0025 F1                   66 	pop	af
   0026 F1                   67 	pop	af
   0027 F1                   68 	pop	af
                             69 ;../assert.c:36: while(1);
   0028                      70 00102$:
   0028 18 FE                71 	jr	00102$
   002A DD E1                72 	pop	ix
   002C C9                   73 	ret
   002D                      74 __assert_end::
   002D                      75 __str_0:
   002D 41 73 73 65 72 74    76 	.ascii "Assert(%s) failed at line %u in file %s."
        28 25 73 29 20 66
        61 69 6C 65 64 20
        61 74 20 6C 69 6E
        65 20 25 75 20 69
        6E 20 66 69 6C 65
        20 25 73 2E
   0055 0A                   77 	.db 0x0A
   0056 00                   78 	.db 0x00
                             79 	.area _CODE
                             80 	.area _CABS
