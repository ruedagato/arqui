                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:22 2015
                              5 ;--------------------------------------------------------
                              6 	.module sincosf
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _sincosf
                             13 	.globl _sincosf_PARM_2
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 	.area RSEG    (ABS,DATA)
   0000                      18 	.org 0x0000
                             19 ;--------------------------------------------------------
                             20 ; special function bits
                             21 ;--------------------------------------------------------
                             22 	.area RSEG    (ABS,DATA)
   0000                      23 	.org 0x0000
                             24 ;--------------------------------------------------------
                             25 ; overlayable register banks
                             26 ;--------------------------------------------------------
                             27 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      28 	.ds 8
                             29 ;--------------------------------------------------------
                             30 ; internal ram data
                             31 ;--------------------------------------------------------
                             32 	.area DSEG    (DATA)
   0000                      33 _sincosf_x_1_1:
   0000                      34 	.ds 4
   0004                      35 _sincosf_f_1_1:
   0004                      36 	.ds 4
   0008                      37 _sincosf_r_1_1:
   0008                      38 	.ds 4
   000C                      39 _sincosf_XN_1_1:
   000C                      40 	.ds 4
   0010                      41 _sincosf_sloc0_1_0:
   0010                      42 	.ds 4
                             43 ;--------------------------------------------------------
                             44 ; overlayable items in internal ram 
                             45 ;--------------------------------------------------------
                             46 	.area OSEG    (OVR,DATA)
                             47 ;--------------------------------------------------------
                             48 ; indirectly addressable internal ram data
                             49 ;--------------------------------------------------------
                             50 	.area ISEG    (DATA)
                             51 ;--------------------------------------------------------
                             52 ; absolute internal ram data
                             53 ;--------------------------------------------------------
                             54 	.area IABS    (ABS,DATA)
                             55 	.area IABS    (ABS,DATA)
                             56 ;--------------------------------------------------------
                             57 ; bit data
                             58 ;--------------------------------------------------------
                             59 	.area BSEG    (BIT)
   0000                      60 _sincosf_PARM_2:
   0000                      61 	.ds 1
   0001                      62 _sincosf_sign_1_1:
   0001                      63 	.ds 1
                             64 ;--------------------------------------------------------
                             65 ; paged external ram data
                             66 ;--------------------------------------------------------
                             67 	.area PSEG    (PAG,XDATA)
                             68 ;--------------------------------------------------------
                             69 ; external ram data
                             70 ;--------------------------------------------------------
                             71 	.area XSEG    (XDATA)
                             72 ;--------------------------------------------------------
                             73 ; absolute external ram data
                             74 ;--------------------------------------------------------
                             75 	.area XABS    (ABS,XDATA)
                             76 ;--------------------------------------------------------
                             77 ; external initialized ram data
                             78 ;--------------------------------------------------------
                             79 	.area XISEG   (XDATA)
                             80 	.area HOME    (CODE)
                             81 	.area GSINIT0 (CODE)
                             82 	.area GSINIT1 (CODE)
                             83 	.area GSINIT2 (CODE)
                             84 	.area GSINIT3 (CODE)
                             85 	.area GSINIT4 (CODE)
                             86 	.area GSINIT5 (CODE)
                             87 	.area GSINIT  (CODE)
                             88 	.area GSFINAL (CODE)
                             89 	.area CSEG    (CODE)
                             90 ;--------------------------------------------------------
                             91 ; global & static initialisations
                             92 ;--------------------------------------------------------
                             93 	.area HOME    (CODE)
                             94 	.area GSINIT  (CODE)
                             95 	.area GSFINAL (CODE)
                             96 	.area GSINIT  (CODE)
                             97 ;--------------------------------------------------------
                             98 ; Home
                             99 ;--------------------------------------------------------
                            100 	.area HOME    (CODE)
                            101 	.area HOME    (CODE)
                            102 ;--------------------------------------------------------
                            103 ; code
                            104 ;--------------------------------------------------------
                            105 	.area CSEG    (CODE)
                            106 ;------------------------------------------------------------
                            107 ;Allocation info for local variables in function 'sincosf'
                            108 ;------------------------------------------------------------
                            109 ;x                         Allocated with name '_sincosf_x_1_1'
                            110 ;y                         Allocated to registers r6 r7 r0 r1 
                            111 ;f                         Allocated with name '_sincosf_f_1_1'
                            112 ;r                         Allocated with name '_sincosf_r_1_1'
                            113 ;g                         Allocated to registers r6 r7 r0 r1 
                            114 ;XN                        Allocated with name '_sincosf_XN_1_1'
                            115 ;N                         Allocated to registers r2 r3 
                            116 ;sloc0                     Allocated with name '_sincosf_sloc0_1_0'
                            117 ;------------------------------------------------------------
                            118 ;	sincosf.c:50: float sincosf(const float x, const BOOL iscos)
                            119 ;	-----------------------------------------
                            120 ;	 function sincosf
                            121 ;	-----------------------------------------
   0000                     122 _sincosf:
                    0002    123 	ar2 = 0x02
                    0003    124 	ar3 = 0x03
                    0004    125 	ar4 = 0x04
                    0005    126 	ar5 = 0x05
                    0006    127 	ar6 = 0x06
                    0007    128 	ar7 = 0x07
                    0000    129 	ar0 = 0x00
                    0001    130 	ar1 = 0x01
   0000 85 82*00            131 	mov	_sincosf_x_1_1,dpl
   0003 85 83*01            132 	mov	(_sincosf_x_1_1 + 1),dph
   0006 85 F0*02            133 	mov	(_sincosf_x_1_1 + 2),b
   0009 F5*03               134 	mov	(_sincosf_x_1_1 + 3),a
                            135 ;	sincosf.c:56: if(iscos)
   000B 30*00 40            136 	jnb	_sincosf_PARM_2,00105$
                            137 ;	sincosf.c:58: y=fabsf(x)+HALF_PI;
   000E 85*00 82            138 	mov	dpl,_sincosf_x_1_1
   0011 85*01 83            139 	mov	dph,(_sincosf_x_1_1 + 1)
   0014 85*02 F0            140 	mov	b,(_sincosf_x_1_1 + 2)
   0017 E5*03               141 	mov	a,(_sincosf_x_1_1 + 3)
   0019 12s00r00            142 	lcall	_fabsf
   001C AE 82               143 	mov	r6,dpl
   001E AF 83               144 	mov	r7,dph
   0020 A8 F0               145 	mov	r0,b
   0022 F9                  146 	mov	r1,a
   0023 74 DB               147 	mov	a,#0xDB
   0025 C0 E0               148 	push	acc
   0027 74 0F               149 	mov	a,#0x0F
   0029 C0 E0               150 	push	acc
   002B 74 C9               151 	mov	a,#0xC9
   002D C0 E0               152 	push	acc
   002F 74 3F               153 	mov	a,#0x3F
   0031 C0 E0               154 	push	acc
   0033 8E 82               155 	mov	dpl,r6
   0035 8F 83               156 	mov	dph,r7
   0037 88 F0               157 	mov	b,r0
   0039 E9                  158 	mov	a,r1
   003A 12s00r00            159 	lcall	___fsadd
   003D AE 82               160 	mov	r6,dpl
   003F AF 83               161 	mov	r7,dph
   0041 A8 F0               162 	mov	r0,b
   0043 F9                  163 	mov	r1,a
   0044 E5 81               164 	mov	a,sp
   0046 24 FC               165 	add	a,#0xfc
   0048 F5 81               166 	mov	sp,a
                            167 ;	sincosf.c:59: sign=0;
   004A C2*01               168 	clr	_sincosf_sign_1_1
   004C 80 3B               169 	sjmp	00106$
   004E                     170 00105$:
                            171 ;	sincosf.c:63: if(x<0.0)
   004E E4                  172 	clr	a
   004F C0 E0               173 	push	acc
   0051 C0 E0               174 	push	acc
   0053 C0 E0               175 	push	acc
   0055 C0 E0               176 	push	acc
   0057 85*00 82            177 	mov	dpl,_sincosf_x_1_1
   005A 85*01 83            178 	mov	dph,(_sincosf_x_1_1 + 1)
   005D 85*02 F0            179 	mov	b,(_sincosf_x_1_1 + 2)
   0060 E5*03               180 	mov	a,(_sincosf_x_1_1 + 3)
   0062 12s00r00            181 	lcall	___fslt
   0065 AA 82               182 	mov	r2,dpl
   0067 E5 81               183 	mov	a,sp
   0069 24 FC               184 	add	a,#0xfc
   006B F5 81               185 	mov	sp,a
   006D EA                  186 	mov	a,r2
   006E 60 0F               187 	jz	00102$
                            188 ;	sincosf.c:64: { y=-x; sign=1; }
   0070 AE*00               189 	mov	r6,_sincosf_x_1_1
   0072 AF*01               190 	mov	r7,(_sincosf_x_1_1 + 1)
   0074 A8*02               191 	mov	r0,(_sincosf_x_1_1 + 2)
   0076 E5*03               192 	mov	a,(_sincosf_x_1_1 + 3)
   0078 B2 E7               193 	cpl	acc.7
   007A F9                  194 	mov	r1,a
   007B D2*01               195 	setb	_sincosf_sign_1_1
   007D 80 0A               196 	sjmp	00106$
   007F                     197 00102$:
                            198 ;	sincosf.c:66: { y=x; sign=0; }
   007F AE*00               199 	mov	r6,_sincosf_x_1_1
   0081 AF*01               200 	mov	r7,(_sincosf_x_1_1 + 1)
   0083 A8*02               201 	mov	r0,(_sincosf_x_1_1 + 2)
   0085 A9*03               202 	mov	r1,(_sincosf_x_1_1 + 3)
   0087 C2*01               203 	clr	_sincosf_sign_1_1
   0089                     204 00106$:
                            205 ;	sincosf.c:69: if(y>YMAX)
   0089 C0 06               206 	push	ar6
   008B C0 07               207 	push	ar7
   008D C0 00               208 	push	ar0
   008F C0 01               209 	push	ar1
   0091 E4                  210 	clr	a
   0092 C0 E0               211 	push	acc
   0094 74 0C               212 	mov	a,#0x0C
   0096 C0 E0               213 	push	acc
   0098 74 49               214 	mov	a,#0x49
   009A C0 E0               215 	push	acc
   009C 74 46               216 	mov	a,#0x46
   009E C0 E0               217 	push	acc
   00A0 8E 82               218 	mov	dpl,r6
   00A2 8F 83               219 	mov	dph,r7
   00A4 88 F0               220 	mov	b,r0
   00A6 E9                  221 	mov	a,r1
   00A7 12s00r00            222 	lcall	___fsgt
   00AA AA 82               223 	mov	r2,dpl
   00AC E5 81               224 	mov	a,sp
   00AE 24 FC               225 	add	a,#0xfc
   00B0 F5 81               226 	mov	sp,a
   00B2 D0 01               227 	pop	ar1
   00B4 D0 00               228 	pop	ar0
   00B6 D0 07               229 	pop	ar7
   00B8 D0 06               230 	pop	ar6
   00BA EA                  231 	mov	a,r2
   00BB 60 0D               232 	jz	00108$
                            233 ;	sincosf.c:71: errno=ERANGE;
   00BD 75*00 22            234 	mov	_errno,#0x22
   00C0 75*01 00            235 	mov	(_errno + 1),#0x00
                            236 ;	sincosf.c:72: return 0.0;
   00C3 90 00 00            237 	mov	dptr,#(0x00&0x00ff)
   00C6 E4                  238 	clr	a
   00C7 F5 F0               239 	mov	b,a
   00C9 22                  240 	ret
   00CA                     241 00108$:
                            242 ;	sincosf.c:76: N=((y*iPI)+0.5); /*y is positive*/
   00CA C0 06               243 	push	ar6
   00CC C0 07               244 	push	ar7
   00CE C0 00               245 	push	ar0
   00D0 C0 01               246 	push	ar1
   00D2 90 F9 83            247 	mov	dptr,#0xF983
   00D5 75 F0 A2            248 	mov	b,#0xA2
   00D8 74 3E               249 	mov	a,#0x3E
   00DA 12s00r00            250 	lcall	___fsmul
   00DD AA 82               251 	mov	r2,dpl
   00DF AB 83               252 	mov	r3,dph
   00E1 AC F0               253 	mov	r4,b
   00E3 FD                  254 	mov	r5,a
   00E4 E5 81               255 	mov	a,sp
   00E6 24 FC               256 	add	a,#0xfc
   00E8 F5 81               257 	mov	sp,a
   00EA E4                  258 	clr	a
   00EB C0 E0               259 	push	acc
   00ED C0 E0               260 	push	acc
   00EF C0 E0               261 	push	acc
   00F1 74 3F               262 	mov	a,#0x3F
   00F3 C0 E0               263 	push	acc
   00F5 8A 82               264 	mov	dpl,r2
   00F7 8B 83               265 	mov	dph,r3
   00F9 8C F0               266 	mov	b,r4
   00FB ED                  267 	mov	a,r5
   00FC 12s00r00            268 	lcall	___fsadd
   00FF AA 82               269 	mov	r2,dpl
   0101 AB 83               270 	mov	r3,dph
   0103 AC F0               271 	mov	r4,b
   0105 FD                  272 	mov	r5,a
   0106 E5 81               273 	mov	a,sp
   0108 24 FC               274 	add	a,#0xfc
   010A F5 81               275 	mov	sp,a
   010C 8A 82               276 	mov	dpl,r2
   010E 8B 83               277 	mov	dph,r3
   0110 8C F0               278 	mov	b,r4
   0112 ED                  279 	mov	a,r5
   0113 12s00r00            280 	lcall	___fs2sint
   0116 AA 82               281 	mov	r2,dpl
   0118 AB 83               282 	mov	r3,dph
                            283 ;	sincosf.c:79: if(N&1) sign=!sign;
   011A EA                  284 	mov	a,r2
   011B 30 E0 02            285 	jnb	acc.0,00110$
   011E B2*01               286 	cpl	_sincosf_sign_1_1
   0120                     287 00110$:
                            288 ;	sincosf.c:81: XN=N;
   0120 8A 82               289 	mov	dpl,r2
   0122 8B 83               290 	mov	dph,r3
   0124 12s00r00            291 	lcall	___sint2fs
   0127 85 82*0C            292 	mov	_sincosf_XN_1_1,dpl
   012A 85 83*0D            293 	mov	(_sincosf_XN_1_1 + 1),dph
   012D 85 F0*0E            294 	mov	(_sincosf_XN_1_1 + 2),b
   0130 F5*0F               295 	mov	(_sincosf_XN_1_1 + 3),a
                            296 ;	sincosf.c:83: if(iscos) XN-=0.5;
   0132 30*00 2A            297 	jnb	_sincosf_PARM_2,00112$
   0135 E4                  298 	clr	a
   0136 C0 E0               299 	push	acc
   0138 C0 E0               300 	push	acc
   013A C0 E0               301 	push	acc
   013C 74 3F               302 	mov	a,#0x3F
   013E C0 E0               303 	push	acc
   0140 85*0C 82            304 	mov	dpl,_sincosf_XN_1_1
   0143 85*0D 83            305 	mov	dph,(_sincosf_XN_1_1 + 1)
   0146 85*0E F0            306 	mov	b,(_sincosf_XN_1_1 + 2)
   0149 E5*0F               307 	mov	a,(_sincosf_XN_1_1 + 3)
   014B 12s00r00            308 	lcall	___fssub
   014E 85 82*0C            309 	mov	_sincosf_XN_1_1,dpl
   0151 85 83*0D            310 	mov	(_sincosf_XN_1_1 + 1),dph
   0154 85 F0*0E            311 	mov	(_sincosf_XN_1_1 + 2),b
   0157 F5*0F               312 	mov	(_sincosf_XN_1_1 + 3),a
   0159 E5 81               313 	mov	a,sp
   015B 24 FC               314 	add	a,#0xfc
   015D F5 81               315 	mov	sp,a
   015F                     316 00112$:
                            317 ;	sincosf.c:85: y=fabsf(x);
   015F 85*00 82            318 	mov	dpl,_sincosf_x_1_1
   0162 85*01 83            319 	mov	dph,(_sincosf_x_1_1 + 1)
   0165 85*02 F0            320 	mov	b,(_sincosf_x_1_1 + 2)
   0168 E5*03               321 	mov	a,(_sincosf_x_1_1 + 3)
   016A 12s00r00            322 	lcall	_fabsf
                            323 ;	sincosf.c:86: r=(int)y;
   016D AE 82               324 	mov	r6,dpl
   016F AF 83               325 	mov	r7,dph
   0171 A8 F0               326 	mov	r0,b
   0173 F9                  327 	mov	r1,a
   0174 C0 06               328 	push	ar6
   0176 C0 07               329 	push	ar7
   0178 C0 00               330 	push	ar0
   017A C0 01               331 	push	ar1
   017C 12s00r00            332 	lcall	___fs2sint
   017F 12s00r00            333 	lcall	___sint2fs
   0182 85 82*08            334 	mov	_sincosf_r_1_1,dpl
   0185 85 83*09            335 	mov	(_sincosf_r_1_1 + 1),dph
   0188 85 F0*0A            336 	mov	(_sincosf_r_1_1 + 2),b
   018B F5*0B               337 	mov	(_sincosf_r_1_1 + 3),a
   018D D0 01               338 	pop	ar1
   018F D0 00               339 	pop	ar0
   0191 D0 07               340 	pop	ar7
   0193 D0 06               341 	pop	ar6
                            342 ;	sincosf.c:87: g=y-r;
   0195 C0*08               343 	push	_sincosf_r_1_1
   0197 C0*09               344 	push	(_sincosf_r_1_1 + 1)
   0199 C0*0A               345 	push	(_sincosf_r_1_1 + 2)
   019B C0*0B               346 	push	(_sincosf_r_1_1 + 3)
   019D 8E 82               347 	mov	dpl,r6
   019F 8F 83               348 	mov	dph,r7
   01A1 88 F0               349 	mov	b,r0
   01A3 E9                  350 	mov	a,r1
   01A4 12s00r00            351 	lcall	___fssub
   01A7 AE 82               352 	mov	r6,dpl
   01A9 AF 83               353 	mov	r7,dph
   01AB A8 F0               354 	mov	r0,b
   01AD F9                  355 	mov	r1,a
   01AE E5 81               356 	mov	a,sp
   01B0 24 FC               357 	add	a,#0xfc
   01B2 F5 81               358 	mov	sp,a
                            359 ;	sincosf.c:88: f=((r-XN*C1)+g)-XN*C2;
   01B4 C0 06               360 	push	ar6
   01B6 C0 07               361 	push	ar7
   01B8 C0 00               362 	push	ar0
   01BA C0 01               363 	push	ar1
   01BC C0*0C               364 	push	_sincosf_XN_1_1
   01BE C0*0D               365 	push	(_sincosf_XN_1_1 + 1)
   01C0 C0*0E               366 	push	(_sincosf_XN_1_1 + 2)
   01C2 C0*0F               367 	push	(_sincosf_XN_1_1 + 3)
   01C4 90 00 00            368 	mov	dptr,#0x0000
   01C7 75 F0 49            369 	mov	b,#0x49
   01CA 74 40               370 	mov	a,#0x40
   01CC 12s00r00            371 	lcall	___fsmul
   01CF AA 82               372 	mov	r2,dpl
   01D1 AB 83               373 	mov	r3,dph
   01D3 AC F0               374 	mov	r4,b
   01D5 FD                  375 	mov	r5,a
   01D6 E5 81               376 	mov	a,sp
   01D8 24 FC               377 	add	a,#0xfc
   01DA F5 81               378 	mov	sp,a
   01DC C0 02               379 	push	ar2
   01DE C0 03               380 	push	ar3
   01E0 C0 04               381 	push	ar4
   01E2 C0 05               382 	push	ar5
   01E4 85*08 82            383 	mov	dpl,_sincosf_r_1_1
   01E7 85*09 83            384 	mov	dph,(_sincosf_r_1_1 + 1)
   01EA 85*0A F0            385 	mov	b,(_sincosf_r_1_1 + 2)
   01ED E5*0B               386 	mov	a,(_sincosf_r_1_1 + 3)
   01EF 12s00r00            387 	lcall	___fssub
   01F2 AA 82               388 	mov	r2,dpl
   01F4 AB 83               389 	mov	r3,dph
   01F6 AC F0               390 	mov	r4,b
   01F8 FD                  391 	mov	r5,a
   01F9 E5 81               392 	mov	a,sp
   01FB 24 FC               393 	add	a,#0xfc
   01FD F5 81               394 	mov	sp,a
   01FF 8A 82               395 	mov	dpl,r2
   0201 8B 83               396 	mov	dph,r3
   0203 8C F0               397 	mov	b,r4
   0205 ED                  398 	mov	a,r5
   0206 12s00r00            399 	lcall	___fsadd
   0209 85 82*10            400 	mov	_sincosf_sloc0_1_0,dpl
   020C 85 83*11            401 	mov	(_sincosf_sloc0_1_0 + 1),dph
   020F 85 F0*12            402 	mov	(_sincosf_sloc0_1_0 + 2),b
   0212 F5*13               403 	mov	(_sincosf_sloc0_1_0 + 3),a
   0214 E5 81               404 	mov	a,sp
   0216 24 FC               405 	add	a,#0xfc
   0218 F5 81               406 	mov	sp,a
   021A C0*0C               407 	push	_sincosf_XN_1_1
   021C C0*0D               408 	push	(_sincosf_XN_1_1 + 1)
   021E C0*0E               409 	push	(_sincosf_XN_1_1 + 2)
   0220 C0*0F               410 	push	(_sincosf_XN_1_1 + 3)
   0222 90 AA 22            411 	mov	dptr,#0xAA22
   0225 75 F0 7D            412 	mov	b,#0x7D
   0228 74 3A               413 	mov	a,#0x3A
   022A 12s00r00            414 	lcall	___fsmul
   022D AA 82               415 	mov	r2,dpl
   022F AB 83               416 	mov	r3,dph
   0231 AC F0               417 	mov	r4,b
   0233 FD                  418 	mov	r5,a
   0234 E5 81               419 	mov	a,sp
   0236 24 FC               420 	add	a,#0xfc
   0238 F5 81               421 	mov	sp,a
   023A C0 02               422 	push	ar2
   023C C0 03               423 	push	ar3
   023E C0 04               424 	push	ar4
   0240 C0 05               425 	push	ar5
   0242 85*10 82            426 	mov	dpl,_sincosf_sloc0_1_0
   0245 85*11 83            427 	mov	dph,(_sincosf_sloc0_1_0 + 1)
   0248 85*12 F0            428 	mov	b,(_sincosf_sloc0_1_0 + 2)
   024B E5*13               429 	mov	a,(_sincosf_sloc0_1_0 + 3)
   024D 12s00r00            430 	lcall	___fssub
   0250 85 82*04            431 	mov	_sincosf_f_1_1,dpl
   0253 85 83*05            432 	mov	(_sincosf_f_1_1 + 1),dph
   0256 85 F0*06            433 	mov	(_sincosf_f_1_1 + 2),b
   0259 F5*07               434 	mov	(_sincosf_f_1_1 + 3),a
   025B E5 81               435 	mov	a,sp
   025D 24 FC               436 	add	a,#0xfc
   025F F5 81               437 	mov	sp,a
                            438 ;	sincosf.c:90: g=f*f;
   0261 C0*04               439 	push	_sincosf_f_1_1
   0263 C0*05               440 	push	(_sincosf_f_1_1 + 1)
   0265 C0*06               441 	push	(_sincosf_f_1_1 + 2)
   0267 C0*07               442 	push	(_sincosf_f_1_1 + 3)
   0269 85*04 82            443 	mov	dpl,_sincosf_f_1_1
   026C 85*05 83            444 	mov	dph,(_sincosf_f_1_1 + 1)
   026F 85*06 F0            445 	mov	b,(_sincosf_f_1_1 + 2)
   0272 E5*07               446 	mov	a,(_sincosf_f_1_1 + 3)
   0274 12s00r00            447 	lcall	___fsmul
   0277 AE 82               448 	mov	r6,dpl
   0279 AF 83               449 	mov	r7,dph
   027B A8 F0               450 	mov	r0,b
   027D F9                  451 	mov	r1,a
   027E E5 81               452 	mov	a,sp
   0280 24 FC               453 	add	a,#0xfc
   0282 F5 81               454 	mov	sp,a
                            455 ;	sincosf.c:91: if(g>EPS2) //Used to be if(fabsf(f)>EPS)
   0284 C0 06               456 	push	ar6
   0286 C0 07               457 	push	ar7
   0288 C0 00               458 	push	ar0
   028A C0 01               459 	push	ar1
   028C 74 F3               460 	mov	a,#0xF3
   028E C0 E0               461 	push	acc
   0290 74 FF               462 	mov	a,#0xFF
   0292 C0 E0               463 	push	acc
   0294 74 7F               464 	mov	a,#0x7F
   0296 C0 E0               465 	push	acc
   0298 74 33               466 	mov	a,#0x33
   029A C0 E0               467 	push	acc
   029C 8E 82               468 	mov	dpl,r6
   029E 8F 83               469 	mov	dph,r7
   02A0 88 F0               470 	mov	b,r0
   02A2 E9                  471 	mov	a,r1
   02A3 12s00r00            472 	lcall	___fsgt
   02A6 AA 82               473 	mov	r2,dpl
   02A8 E5 81               474 	mov	a,sp
   02AA 24 FC               475 	add	a,#0xfc
   02AC F5 81               476 	mov	sp,a
   02AE D0 01               477 	pop	ar1
   02B0 D0 00               478 	pop	ar0
   02B2 D0 07               479 	pop	ar7
   02B4 D0 06               480 	pop	ar6
   02B6 EA                  481 	mov	a,r2
   02B7 70 03               482 	jnz	00131$
   02B9 02s04r1C            483 	ljmp	00114$
   02BC                     484 00131$:
                            485 ;	sincosf.c:93: r=(((r4*g+r3)*g+r2)*g+r1)*g;
   02BC C0 06               486 	push	ar6
   02BE C0 07               487 	push	ar7
   02C0 C0 00               488 	push	ar0
   02C2 C0 01               489 	push	ar1
   02C4 C0 06               490 	push	ar6
   02C6 C0 07               491 	push	ar7
   02C8 C0 00               492 	push	ar0
   02CA C0 01               493 	push	ar1
   02CC 90 9C 5B            494 	mov	dptr,#0x9C5B
   02CF 75 F0 2E            495 	mov	b,#0x2E
   02D2 74 36               496 	mov	a,#0x36
   02D4 12s00r00            497 	lcall	___fsmul
   02D7 AA 82               498 	mov	r2,dpl
   02D9 AB 83               499 	mov	r3,dph
   02DB AC F0               500 	mov	r4,b
   02DD FD                  501 	mov	r5,a
   02DE E5 81               502 	mov	a,sp
   02E0 24 FC               503 	add	a,#0xfc
   02E2 F5 81               504 	mov	sp,a
   02E4 74 22               505 	mov	a,#0x22
   02E6 C0 E0               506 	push	acc
   02E8 74 B2               507 	mov	a,#0xB2
   02EA C0 E0               508 	push	acc
   02EC 74 4F               509 	mov	a,#0x4F
   02EE C0 E0               510 	push	acc
   02F0 74 B9               511 	mov	a,#0xB9
   02F2 C0 E0               512 	push	acc
   02F4 8A 82               513 	mov	dpl,r2
   02F6 8B 83               514 	mov	dph,r3
   02F8 8C F0               515 	mov	b,r4
   02FA ED                  516 	mov	a,r5
   02FB 12s00r00            517 	lcall	___fsadd
   02FE AA 82               518 	mov	r2,dpl
   0300 AB 83               519 	mov	r3,dph
   0302 AC F0               520 	mov	r4,b
   0304 FD                  521 	mov	r5,a
   0305 E5 81               522 	mov	a,sp
   0307 24 FC               523 	add	a,#0xfc
   0309 F5 81               524 	mov	sp,a
   030B D0 01               525 	pop	ar1
   030D D0 00               526 	pop	ar0
   030F D0 07               527 	pop	ar7
   0311 D0 06               528 	pop	ar6
   0313 C0 06               529 	push	ar6
   0315 C0 07               530 	push	ar7
   0317 C0 00               531 	push	ar0
   0319 C0 01               532 	push	ar1
   031B C0 06               533 	push	ar6
   031D C0 07               534 	push	ar7
   031F C0 00               535 	push	ar0
   0321 C0 01               536 	push	ar1
   0323 8A 82               537 	mov	dpl,r2
   0325 8B 83               538 	mov	dph,r3
   0327 8C F0               539 	mov	b,r4
   0329 ED                  540 	mov	a,r5
   032A 12s00r00            541 	lcall	___fsmul
   032D AA 82               542 	mov	r2,dpl
   032F AB 83               543 	mov	r3,dph
   0331 AC F0               544 	mov	r4,b
   0333 FD                  545 	mov	r5,a
   0334 E5 81               546 	mov	a,sp
   0336 24 FC               547 	add	a,#0xfc
   0338 F5 81               548 	mov	sp,a
   033A 74 3E               549 	mov	a,#0x3E
   033C C0 E0               550 	push	acc
   033E 74 87               551 	mov	a,#0x87
   0340 C0 E0               552 	push	acc
   0342 74 08               553 	mov	a,#0x08
   0344 C0 E0               554 	push	acc
   0346 74 3C               555 	mov	a,#0x3C
   0348 C0 E0               556 	push	acc
   034A 8A 82               557 	mov	dpl,r2
   034C 8B 83               558 	mov	dph,r3
   034E 8C F0               559 	mov	b,r4
   0350 ED                  560 	mov	a,r5
   0351 12s00r00            561 	lcall	___fsadd
   0354 AA 82               562 	mov	r2,dpl
   0356 AB 83               563 	mov	r3,dph
   0358 AC F0               564 	mov	r4,b
   035A FD                  565 	mov	r5,a
   035B E5 81               566 	mov	a,sp
   035D 24 FC               567 	add	a,#0xfc
   035F F5 81               568 	mov	sp,a
   0361 D0 01               569 	pop	ar1
   0363 D0 00               570 	pop	ar0
   0365 D0 07               571 	pop	ar7
   0367 D0 06               572 	pop	ar6
   0369 C0 06               573 	push	ar6
   036B C0 07               574 	push	ar7
   036D C0 00               575 	push	ar0
   036F C0 01               576 	push	ar1
   0371 C0 06               577 	push	ar6
   0373 C0 07               578 	push	ar7
   0375 C0 00               579 	push	ar0
   0377 C0 01               580 	push	ar1
   0379 8A 82               581 	mov	dpl,r2
   037B 8B 83               582 	mov	dph,r3
   037D 8C F0               583 	mov	b,r4
   037F ED                  584 	mov	a,r5
   0380 12s00r00            585 	lcall	___fsmul
   0383 AA 82               586 	mov	r2,dpl
   0385 AB 83               587 	mov	r3,dph
   0387 AC F0               588 	mov	r4,b
   0389 FD                  589 	mov	r5,a
   038A E5 81               590 	mov	a,sp
   038C 24 FC               591 	add	a,#0xfc
   038E F5 81               592 	mov	sp,a
   0390 74 A4               593 	mov	a,#0xA4
   0392 C0 E0               594 	push	acc
   0394 74 AA               595 	mov	a,#0xAA
   0396 C0 E0               596 	push	acc
   0398 74 2A               597 	mov	a,#0x2A
   039A C0 E0               598 	push	acc
   039C 74 BE               599 	mov	a,#0xBE
   039E C0 E0               600 	push	acc
   03A0 8A 82               601 	mov	dpl,r2
   03A2 8B 83               602 	mov	dph,r3
   03A4 8C F0               603 	mov	b,r4
   03A6 ED                  604 	mov	a,r5
   03A7 12s00r00            605 	lcall	___fsadd
   03AA AA 82               606 	mov	r2,dpl
   03AC AB 83               607 	mov	r3,dph
   03AE AC F0               608 	mov	r4,b
   03B0 FD                  609 	mov	r5,a
   03B1 E5 81               610 	mov	a,sp
   03B3 24 FC               611 	add	a,#0xfc
   03B5 F5 81               612 	mov	sp,a
   03B7 8A 82               613 	mov	dpl,r2
   03B9 8B 83               614 	mov	dph,r3
   03BB 8C F0               615 	mov	b,r4
   03BD ED                  616 	mov	a,r5
   03BE 12s00r00            617 	lcall	___fsmul
   03C1 85 82*08            618 	mov	_sincosf_r_1_1,dpl
   03C4 85 83*09            619 	mov	(_sincosf_r_1_1 + 1),dph
   03C7 85 F0*0A            620 	mov	(_sincosf_r_1_1 + 2),b
   03CA F5*0B               621 	mov	(_sincosf_r_1_1 + 3),a
   03CC E5 81               622 	mov	a,sp
   03CE 24 FC               623 	add	a,#0xfc
   03D0 F5 81               624 	mov	sp,a
                            625 ;	sincosf.c:94: f+=f*r;
   03D2 C0*08               626 	push	_sincosf_r_1_1
   03D4 C0*09               627 	push	(_sincosf_r_1_1 + 1)
   03D6 C0*0A               628 	push	(_sincosf_r_1_1 + 2)
   03D8 C0*0B               629 	push	(_sincosf_r_1_1 + 3)
   03DA 85*04 82            630 	mov	dpl,_sincosf_f_1_1
   03DD 85*05 83            631 	mov	dph,(_sincosf_f_1_1 + 1)
   03E0 85*06 F0            632 	mov	b,(_sincosf_f_1_1 + 2)
   03E3 E5*07               633 	mov	a,(_sincosf_f_1_1 + 3)
   03E5 12s00r00            634 	lcall	___fsmul
   03E8 AA 82               635 	mov	r2,dpl
   03EA AB 83               636 	mov	r3,dph
   03EC AC F0               637 	mov	r4,b
   03EE FD                  638 	mov	r5,a
   03EF E5 81               639 	mov	a,sp
   03F1 24 FC               640 	add	a,#0xfc
   03F3 F5 81               641 	mov	sp,a
   03F5 C0 02               642 	push	ar2
   03F7 C0 03               643 	push	ar3
   03F9 C0 04               644 	push	ar4
   03FB C0 05               645 	push	ar5
   03FD 85*04 82            646 	mov	dpl,_sincosf_f_1_1
   0400 85*05 83            647 	mov	dph,(_sincosf_f_1_1 + 1)
   0403 85*06 F0            648 	mov	b,(_sincosf_f_1_1 + 2)
   0406 E5*07               649 	mov	a,(_sincosf_f_1_1 + 3)
   0408 12s00r00            650 	lcall	___fsadd
   040B 85 82*04            651 	mov	_sincosf_f_1_1,dpl
   040E 85 83*05            652 	mov	(_sincosf_f_1_1 + 1),dph
   0411 85 F0*06            653 	mov	(_sincosf_f_1_1 + 2),b
   0414 F5*07               654 	mov	(_sincosf_f_1_1 + 3),a
   0416 E5 81               655 	mov	a,sp
   0418 24 FC               656 	add	a,#0xfc
   041A F5 81               657 	mov	sp,a
   041C                     658 00114$:
                            659 ;	sincosf.c:96: return (sign?-f:f);
   041C 30*01 0D            660 	jnb	_sincosf_sign_1_1,00117$
   041F AA*04               661 	mov	r2,_sincosf_f_1_1
   0421 AB*05               662 	mov	r3,(_sincosf_f_1_1 + 1)
   0423 AC*06               663 	mov	r4,(_sincosf_f_1_1 + 2)
   0425 E5*07               664 	mov	a,(_sincosf_f_1_1 + 3)
   0427 B2 E7               665 	cpl	acc.7
   0429 FD                  666 	mov	r5,a
   042A 80 08               667 	sjmp	00118$
   042C                     668 00117$:
   042C AA*04               669 	mov	r2,_sincosf_f_1_1
   042E AB*05               670 	mov	r3,(_sincosf_f_1_1 + 1)
   0430 AC*06               671 	mov	r4,(_sincosf_f_1_1 + 2)
   0432 AD*07               672 	mov	r5,(_sincosf_f_1_1 + 3)
   0434                     673 00118$:
   0434 8A 82               674 	mov	dpl,r2
   0436 8B 83               675 	mov	dph,r3
   0438 8C F0               676 	mov	b,r4
   043A ED                  677 	mov	a,r5
   043B 22                  678 	ret
                            679 	.area CSEG    (CODE)
                            680 	.area CONST   (CODE)
                            681 	.area XINIT   (CODE)
                            682 	.area CABS    (ABS,CODE)
