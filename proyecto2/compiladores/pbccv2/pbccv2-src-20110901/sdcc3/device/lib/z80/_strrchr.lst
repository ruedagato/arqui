                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:18:18 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strrchr
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strrchr
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ;  ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; overlayable items in  ram 
                             22 ;--------------------------------------------------------
                             23 	.area _OVERLAY
                             24 ;--------------------------------------------------------
                             25 ; external initialized ram data
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _HOME
                             39 ;--------------------------------------------------------
                             40 ; code
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 ;../_strrchr.c:31: char * strrchr (
                             44 ;	---------------------------------
                             45 ; Function strrchr
                             46 ; ---------------------------------
   0000                      47 _strrchr_start::
   0000                      48 _strrchr:
   0000 DD E5                49 	push	ix
   0002 DD 21 00 00          50 	ld	ix,#0
   0006 DD 39                51 	add	ix,sp
                             52 ;../_strrchr.c:36: const char * start = string;
   0008 DD 4E 04             53 	ld	c,4 (ix)
   000B DD 46 05             54 	ld	b,5 (ix)
                             55 ;../_strrchr.c:38: while (*string++)                       /* find end of string */
   000E 59                   56 	ld	e,c
   000F 50                   57 	ld	d,b
   0010                      58 00101$:
   0010 1A                   59 	ld	a,(de)
   0011 13                   60 	inc	de
   0012 B7                   61 	or	a,a
   0013 20 FB                62 	jr	NZ,00101$
                             63 ;../_strrchr.c:41: while (--string != start && *string != ch)
   0015                      64 00105$:
   0015 1B                   65 	dec	de
   0016 7B                   66 	ld	a,e
   0017 91                   67 	sub	a,c
   0018 20 04                68 	jr	NZ,00118$
   001A 7A                   69 	ld	a,d
   001B 90                   70 	sub	a,b
   001C 28 06                71 	jr	Z,00107$
   001E                      72 00118$:
   001E 1A                   73 	ld	a,(de)
   001F DD 96 06             74 	sub	a,6 (ix)
   0022 20 F1                75 	jr	NZ,00105$
   0024                      76 00107$:
                             77 ;../_strrchr.c:44: if (*string == ch)                /* char found ? */
   0024 1A                   78 	ld	a,(de)
   0025 DD 96 06             79 	sub	a,6 (ix)
   0028 20 03                80 	jr	NZ,00109$
                             81 ;../_strrchr.c:45: return( (char *)string );
   002A EB                   82 	ex	de,hl
   002B 18 03                83 	jr	00110$
   002D                      84 00109$:
                             85 ;../_strrchr.c:47: return (NULL) ;
   002D 21 00 00             86 	ld	hl,#0x0000
   0030                      87 00110$:
   0030 DD E1                88 	pop	ix
   0032 C9                   89 	ret
   0033                      90 _strrchr_end::
                             91 	.area _CODE
                             92 	.area _CABS
