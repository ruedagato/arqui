                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:29 2015
                              5 ;--------------------------------------------------------
                              6 	.module assert
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __assert
                             13 	.globl __assert_PARM_3
                             14 	.globl __assert_PARM_2
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 	.area RSEG    (ABS,DATA)
   0000                      19 	.org 0x0000
                             20 ;--------------------------------------------------------
                             21 ; special function bits
                             22 ;--------------------------------------------------------
                             23 	.area RSEG    (ABS,DATA)
   0000                      24 	.org 0x0000
                             25 ;--------------------------------------------------------
                             26 ; overlayable register banks
                             27 ;--------------------------------------------------------
                             28 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      29 	.ds 8
                             30 ;--------------------------------------------------------
                             31 ; internal ram data
                             32 ;--------------------------------------------------------
                             33 	.area DSEG    (DATA)
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in internal ram 
                             36 ;--------------------------------------------------------
                             37 	.area OSEG    (OVR,DATA)
                             38 ;--------------------------------------------------------
                             39 ; indirectly addressable internal ram data
                             40 ;--------------------------------------------------------
                             41 	.area ISEG    (DATA)
                             42 ;--------------------------------------------------------
                             43 ; absolute internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area IABS    (ABS,DATA)
                             46 	.area IABS    (ABS,DATA)
                             47 ;--------------------------------------------------------
                             48 ; bit data
                             49 ;--------------------------------------------------------
                             50 	.area BSEG    (BIT)
                             51 ;--------------------------------------------------------
                             52 ; paged external ram data
                             53 ;--------------------------------------------------------
                             54 	.area PSEG    (PAG,XDATA)
                             55 ;--------------------------------------------------------
                             56 ; external ram data
                             57 ;--------------------------------------------------------
                             58 	.area XSEG    (XDATA)
   0000                      59 __assert_PARM_2:
   0000                      60 	.ds 3
   0003                      61 __assert_PARM_3:
   0003                      62 	.ds 2
   0005                      63 __assert_expr_1_1:
   0005                      64 	.ds 3
                             65 ;--------------------------------------------------------
                             66 ; absolute external ram data
                             67 ;--------------------------------------------------------
                             68 	.area XABS    (ABS,XDATA)
                             69 ;--------------------------------------------------------
                             70 ; external initialized ram data
                             71 ;--------------------------------------------------------
                             72 	.area XISEG   (XDATA)
                             73 	.area HOME    (CODE)
                             74 	.area GSINIT0 (CODE)
                             75 	.area GSINIT1 (CODE)
                             76 	.area GSINIT2 (CODE)
                             77 	.area GSINIT3 (CODE)
                             78 	.area GSINIT4 (CODE)
                             79 	.area GSINIT5 (CODE)
                             80 	.area GSINIT  (CODE)
                             81 	.area GSFINAL (CODE)
                             82 	.area CSEG    (CODE)
                             83 ;--------------------------------------------------------
                             84 ; global & static initialisations
                             85 ;--------------------------------------------------------
                             86 	.area HOME    (CODE)
                             87 	.area GSINIT  (CODE)
                             88 	.area GSFINAL (CODE)
                             89 	.area GSINIT  (CODE)
                             90 ;--------------------------------------------------------
                             91 ; Home
                             92 ;--------------------------------------------------------
                             93 	.area HOME    (CODE)
                             94 	.area HOME    (CODE)
                             95 ;--------------------------------------------------------
                             96 ; code
                             97 ;--------------------------------------------------------
                             98 	.area CSEG    (CODE)
                             99 ;------------------------------------------------------------
                            100 ;Allocation info for local variables in function '_assert'
                            101 ;------------------------------------------------------------
                            102 ;filename                  Allocated with name '__assert_PARM_2'
                            103 ;linenumber                Allocated with name '__assert_PARM_3'
                            104 ;expr                      Allocated with name '__assert_expr_1_1'
                            105 ;------------------------------------------------------------
                            106 ;	assert.c:32: void _assert(char *expr, const char *filename, unsigned int linenumber)
                            107 ;	-----------------------------------------
                            108 ;	 function _assert
                            109 ;	-----------------------------------------
   0000                     110 __assert:
                    0002    111 	ar2 = 0x02
                    0003    112 	ar3 = 0x03
                    0004    113 	ar4 = 0x04
                    0005    114 	ar5 = 0x05
                    0006    115 	ar6 = 0x06
                    0007    116 	ar7 = 0x07
                    0000    117 	ar0 = 0x00
                    0001    118 	ar1 = 0x01
   0000 AA F0               119 	mov	r2,b
   0002 AB 83               120 	mov	r3,dph
   0004 E5 82               121 	mov	a,dpl
   0006 90s00r05            122 	mov	dptr,#__assert_expr_1_1
   0009 F0                  123 	movx	@dptr,a
   000A A3                  124 	inc	dptr
   000B EB                  125 	mov	a,r3
   000C F0                  126 	movx	@dptr,a
   000D A3                  127 	inc	dptr
   000E EA                  128 	mov	a,r2
   000F F0                  129 	movx	@dptr,a
                            130 ;	assert.c:34: printf("Assert(%s) failed at line %u in file %s.\n",
   0010 90s00r00            131 	mov	dptr,#__assert_PARM_2
   0013 E0                  132 	movx	a,@dptr
   0014 C0 E0               133 	push	acc
   0016 A3                  134 	inc	dptr
   0017 E0                  135 	movx	a,@dptr
   0018 C0 E0               136 	push	acc
   001A A3                  137 	inc	dptr
   001B E0                  138 	movx	a,@dptr
   001C C0 E0               139 	push	acc
   001E 90s00r03            140 	mov	dptr,#__assert_PARM_3
   0021 E0                  141 	movx	a,@dptr
   0022 C0 E0               142 	push	acc
   0024 A3                  143 	inc	dptr
   0025 E0                  144 	movx	a,@dptr
   0026 C0 E0               145 	push	acc
   0028 90s00r05            146 	mov	dptr,#__assert_expr_1_1
   002B E0                  147 	movx	a,@dptr
   002C C0 E0               148 	push	acc
   002E A3                  149 	inc	dptr
   002F E0                  150 	movx	a,@dptr
   0030 C0 E0               151 	push	acc
   0032 A3                  152 	inc	dptr
   0033 E0                  153 	movx	a,@dptr
   0034 C0 E0               154 	push	acc
   0036 74r00               155 	mov	a,#__str_0
   0038 C0 E0               156 	push	acc
   003A 74s00               157 	mov	a,#(__str_0 >> 8)
   003C C0 E0               158 	push	acc
   003E 74 80               159 	mov	a,#0x80
   0040 C0 E0               160 	push	acc
   0042 12s00r00            161 	lcall	_printf
   0045 E5 81               162 	mov	a,sp
   0047 24 F5               163 	add	a,#0xf5
   0049 F5 81               164 	mov	sp,a
                            165 ;	assert.c:36: while(1);
   004B                     166 00102$:
   004B 80 FE               167 	sjmp	00102$
                            168 	.area CSEG    (CODE)
                            169 	.area CONST   (CODE)
   0000                     170 __str_0:
   0000 41 73 73 65 72 74   171 	.ascii "Assert(%s) failed at line %u in file %s."
        28 25 73 29 20 66
        61 69 6C 65 64 20
        61 74 20 6C 69 6E
        65 20 25 75 20 69
        6E 20 66 69 6C 65
        20 25 73 2E
   0028 0A                  172 	.db 0x0A
   0029 00                  173 	.db 0x00
                            174 	.area XINIT   (CODE)
                            175 	.area CABS    (ABS,CODE)
