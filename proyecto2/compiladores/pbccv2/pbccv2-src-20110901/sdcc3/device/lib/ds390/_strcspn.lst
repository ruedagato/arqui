                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:17 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strcspn
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _strcspn_PARM_2
                             31 	.globl _strcspn
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 ;--------------------------------------------------------
                             44 ; internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area DSEG    (DATA)
                             47 ;--------------------------------------------------------
                             48 ; overlayable items in internal ram 
                             49 ;--------------------------------------------------------
                             50 	.area OSEG    (OVR,DATA)
                             51 ;--------------------------------------------------------
                             52 ; indirectly addressable internal ram data
                             53 ;--------------------------------------------------------
                             54 	.area ISEG    (DATA)
                             55 ;--------------------------------------------------------
                             56 ; absolute internal ram data
                             57 ;--------------------------------------------------------
                             58 	.area IABS    (ABS,DATA)
                             59 	.area IABS    (ABS,DATA)
                             60 ;--------------------------------------------------------
                             61 ; bit data
                             62 ;--------------------------------------------------------
                             63 	.area BSEG    (BIT)
                             64 ;--------------------------------------------------------
                             65 ; paged external ram data
                             66 ;--------------------------------------------------------
                             67 	.area PSEG    (PAG,XDATA)
                             68 ;--------------------------------------------------------
                             69 ; external ram data
                             70 ;--------------------------------------------------------
                             71 	.area XSEG    (XDATA)
   0000                      72 _strcspn_PARM_2:
   0000                      73 	.ds 4
                             74 ;--------------------------------------------------------
                             75 ; absolute external ram data
                             76 ;--------------------------------------------------------
                             77 	.area XABS    (ABS,XDATA)
                             78 ;--------------------------------------------------------
                             79 ; external initialized ram data
                             80 ;--------------------------------------------------------
                             81 	.area XISEG   (XDATA)
                             82 ;--------------------------------------------------------
                             83 ; global & static initialisations
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area GSINIT  (CODE)
                             87 	.area GSFINAL (CODE)
                             88 	.area GSINIT  (CODE)
                             89 ;--------------------------------------------------------
                             90 ; Home
                             91 ;--------------------------------------------------------
                             92 	.area HOME    (CODE)
                             93 	.area HOME    (CODE)
                             94 ;--------------------------------------------------------
                             95 ; code
                             96 ;--------------------------------------------------------
                             97 	.area CSEG    (CODE)
                             98 ;------------------------------------------------------------
                             99 ;Allocation info for local variables in function 'strcspn'
                            100 ;------------------------------------------------------------
                            101 ;count                     Allocated to registers r6 r7 
                            102 ;ch                        Allocated to registers r1 
                            103 ;control                   Allocated with name '_strcspn_PARM_2'
                            104 ;string                    Allocated to registers r2 r3 r4 r5 
                            105 ;------------------------------------------------------------
                            106 ;	_strcspn.c:31: size_t strcspn ( 
                            107 ;	-----------------------------------------
                            108 ;	 function strcspn
                            109 ;	-----------------------------------------
   0000                     110 _strcspn:
                    0002    111 	ar2 = 0x02
                    0003    112 	ar3 = 0x03
                    0004    113 	ar4 = 0x04
                    0005    114 	ar5 = 0x05
                    0006    115 	ar6 = 0x06
                    0007    116 	ar7 = 0x07
                    0000    117 	ar0 = 0x00
                    0001    118 	ar1 = 0x01
   0000 AA 82               119 	mov	r2,dpl
   0002 AB 83               120 	mov	r3,dph
   0004 AC 93               121 	mov	r4,dpx
   0006 AD F0               122 	mov	r5,b
                            123 ;	_strcspn.c:39: while (ch = *string) {
                            124 ;	genAssign: resultIsFar = FALSE
   0008 7E 00               125 	mov	r6,#0x00
   000A 7F 00               126 	mov	r7,#0x00
                            127 ;	genAssign: resultIsFar = FALSE
   000C                     128 00104$:
   000C 8A 82               129 	mov	dpl,r2
   000E 8B 83               130 	mov	dph,r3
   0010 8C 93               131 	mov	dpx,r4
   0012 8D F0               132 	mov	b,r5
   0014 12s00r00r00         133 	lcall	__gptrget
                            134 ;	genAssign: resultIsFar = FALSE
   0018 F8                  135 	mov  r0,a
   0019 88 01               136 	mov  ar1,r0 
   001B 60 52               137 	jz  00106$
   001D                     138 00113$:
                            139 ;	_strcspn.c:40: if (strchr(control,ch))
                            140 ;	genAssign: resultIsFar = TRUE
   001D 90s00r00r00         141 	mov	dptr,#_strchr_PARM_2
   0021 E9                  142 	mov	a,r1
   0022 F0                  143 	movx	@dptr,a
   0023 C0 02               144 	push	ar2
   0025 C0 03               145 	push	ar3
   0027 C0 04               146 	push	ar4
   0029 C0 05               147 	push	ar5
   002B C0 06               148 	push	ar6
   002D C0 07               149 	push	ar7
   002F 05 86               150 	inc	dps
   0031 90s00r00r00         151 	mov	dptr,#_strcspn_PARM_2
   0035 E0                  152 	movx	a,@dptr
   0036 F5 82               153 	mov	dpl,a
   0038 A3                  154 	inc	dptr
   0039 E0                  155 	movx	a,@dptr
   003A F5 83               156 	mov	dph,a
   003C A3                  157 	inc	dptr
   003D E0                  158 	movx	a,@dptr
   003E F5 93               159 	mov	dpx,a
   0040 A3                  160 	inc	dptr
   0041 E0                  161 	movx	a,@dptr
   0042 F5 F0               162 	mov	b,a
   0044 75 86 00            163 	mov	dps,#0
   0047 12s00r00r00         164 	lcall	_strchr
   004B D0 07               165 	pop	ar7
   004D D0 06               166 	pop	ar6
   004F D0 05               167 	pop	ar5
   0051 D0 04               168 	pop	ar4
   0053 D0 03               169 	pop	ar3
   0055 D0 02               170 	pop	ar2
   0057 E5 82               171 	mov	a,dpl
   0059 45 83               172 	orl	a,dph
   005B 45 93               173 	orl	a,dpx
   005D 70 10               174 	jnz  00106$
   005F                     175 00114$:
                            176 ;	_strcspn.c:43: count++ ;
   005F 0E                  177 	inc	r6
   0060 BE 00 01            178 	cjne	r6,#0,00115$
   0063 0F                  179 	inc	r7
   0064                     180 00115$:
                            181 ;	_strcspn.c:44: string++ ;
   0064 0A                  182 	inc	r2
   0065 BA 00 05            183 	cjne	r2,#0,00116$
   0068 0B                  184 	inc	r3
   0069 BB 00 01            185 	cjne	r3,#0,00116$
   006C 0C                  186 	inc	r4
   006D                     187 00116$:
   006D 80 9D               188 	sjmp 00104$
   006F                     189 00106$:
                            190 ;	_strcspn.c:47: return count ;
   006F 8E 82               191 	mov	dpl,r6
   0071 8F 83               192 	mov	dph,r7
   0073                     193 00107$:
   0073 22                  194 	ret
                            195 	.area CSEG    (CODE)
                            196 	.area CONST   (CODE)
                            197 	.area XINIT   (CODE)
                            198 	.area CABS    (ABS,CODE)
