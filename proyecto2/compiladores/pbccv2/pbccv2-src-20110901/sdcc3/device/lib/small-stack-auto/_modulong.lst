                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:31 2015
                              5 ;--------------------------------------------------------
                              6 	.module _modulong
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 ;--------------------------------------------------------
                             13 ; special function registers
                             14 ;--------------------------------------------------------
                             15 	.area RSEG    (ABS,DATA)
   0000                      16 	.org 0x0000
                             17 ;--------------------------------------------------------
                             18 ; special function bits
                             19 ;--------------------------------------------------------
                             20 	.area RSEG    (ABS,DATA)
   0000                      21 	.org 0x0000
                             22 ;--------------------------------------------------------
                             23 ; overlayable register banks
                             24 ;--------------------------------------------------------
                             25 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      26 	.ds 8
                             27 ;--------------------------------------------------------
                             28 ; internal ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (DATA)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in internal ram 
                             33 ;--------------------------------------------------------
                             34 	.area OSEG    (OVR,DATA)
                             35 ;--------------------------------------------------------
                             36 ; indirectly addressable internal ram data
                             37 ;--------------------------------------------------------
                             38 	.area ISEG    (DATA)
                             39 ;--------------------------------------------------------
                             40 ; absolute internal ram data
                             41 ;--------------------------------------------------------
                             42 	.area IABS    (ABS,DATA)
                             43 	.area IABS    (ABS,DATA)
                             44 ;--------------------------------------------------------
                             45 ; bit data
                             46 ;--------------------------------------------------------
                             47 	.area BSEG    (BIT)
                             48 ;--------------------------------------------------------
                             49 ; paged external ram data
                             50 ;--------------------------------------------------------
                             51 	.area PSEG    (PAG,XDATA)
                             52 ;--------------------------------------------------------
                             53 ; external ram data
                             54 ;--------------------------------------------------------
                             55 	.area XSEG    (XDATA)
                             56 ;--------------------------------------------------------
                             57 ; absolute external ram data
                             58 ;--------------------------------------------------------
                             59 	.area XABS    (ABS,XDATA)
                             60 ;--------------------------------------------------------
                             61 ; external initialized ram data
                             62 ;--------------------------------------------------------
                             63 	.area XISEG   (XDATA)
                             64 	.area HOME    (CODE)
                             65 	.area GSINIT0 (CODE)
                             66 	.area GSINIT1 (CODE)
                             67 	.area GSINIT2 (CODE)
                             68 	.area GSINIT3 (CODE)
                             69 	.area GSINIT4 (CODE)
                             70 	.area GSINIT5 (CODE)
                             71 	.area GSINIT  (CODE)
                             72 	.area GSFINAL (CODE)
                             73 	.area CSEG    (CODE)
                             74 ;--------------------------------------------------------
                             75 ; global & static initialisations
                             76 ;--------------------------------------------------------
                             77 	.area HOME    (CODE)
                             78 	.area GSINIT  (CODE)
                             79 	.area GSFINAL (CODE)
                             80 	.area GSINIT  (CODE)
                             81 ;--------------------------------------------------------
                             82 ; Home
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area HOME    (CODE)
                             86 ;--------------------------------------------------------
                             87 ; code
                             88 ;--------------------------------------------------------
                             89 	.area CSEG    (CODE)
                             90 ;------------------------------------------------------------
                             91 ;Allocation info for local variables in function '_modlong_dummy'
                             92 ;------------------------------------------------------------
                             93 ;------------------------------------------------------------
                             94 ;	_modulong.c:191: _modlong_dummy (void) __naked
                             95 ;	-----------------------------------------
                             96 ;	 function _modlong_dummy
                             97 ;	-----------------------------------------
   0000                      98 __modlong_dummy:
                             99 ;	naked function: no prologue.
                            100 ;	_modulong.c:320: rrc	a
                            101 	
                            102 	
                            103 	 .globl __modulong
                            104 	
   0000                     105 	__modulong:
                            106 ;	# 211 "_modulong.c"
                    0002    107 	 ar2 = 2 ; BUG register set is not considered
                    0003    108 	 ar3 = 3
                    0004    109 	 ar4 = 4
                    0005    110 	 ar5 = 5
                            111 	
                            112 	 .globl __modlong ; entry point for __modslong
                            113 	
                            114     ; parameter a comes in a, b, dph, dpl
   0000 F9                  115 	 mov r1,a ; save parameter r1
                            116 	
   0001 E5 81               117 	 mov a,sp
   0003 24 FB               118 	 add a,#-2-3 ; 2 bytes return address, 3 bytes param b
   0005 F8                  119 	 mov r0,a ; r1 points to r2
                            120 	
   0006 86 02               121 	 mov ar2,@r0 ; load r2
   0008 08                  122 	 inc r0 ; r0 points to r3
   0009 86 03               123 	 mov ar3,@r0 ; r3
   000B 08                  124 	 inc r0
   000C 86 04               125 	 mov ar4,@r0 ; r4
   000E 08                  126 	 inc r0
   000F 86 05               127 	 mov ar5,@r0 ; r5
                            128 	
   0011                     129 	__modlong:
                            130 ; entry point for __modslong
                            131     ; a in r1, b, dph, dpl
                            132     ; b in r5, r4, r3, r2
                            133 	
   0011 78 00               134 	 mov r0,#0
                            135 	
   0013 EA                  136 	 mov a,r2 ; b == 0? avoid endless loop
   0014 4B                  137 	 orl a,r3
   0015 4C                  138 	 orl a,r4
   0016 4D                  139 	 orl a,r5
   0017 60 58               140 	 jz div_by_0
                            141 	
   0019 78 00               142 	 mov r0,#0
   001B C3                  143 	 clr c ; when loop1 jumps immediately to loop2
                            144 	
   001C                     145 	loop1:
   001C 08                  146 	inc r0
                            147 	
   001D ED                  148 	 mov a,r5 ; if (!MSB_SET(b))
   001E 20 E7 27            149 	 jb acc.7,loop2
                            150 	
   0021 EA                  151 	 mov a,r2 ; b <<= 1
   0022 25 E0               152 	 add a,acc
   0024 FA                  153 	 mov r2,a
   0025 EB                  154 	 mov a,r3
   0026 33                  155 	 rlc a
   0027 FB                  156 	 mov r3,a
   0028 EC                  157 	 mov a,r4
   0029 33                  158 	 rlc a
   002A FC                  159 	 mov r4,a
   002B ED                  160 	 mov a,r5
   002C 33                  161 	 rlc a
   002D FD                  162 	 mov r5,a
                            163 	
   002E E5 82               164 	 mov a,dpl ; a - b
   0030 9A                  165 	 subb a,r2 ; here carry is always clear
   0031 E5 83               166 	 mov a,dph
   0033 9B                  167 	 subb a,r3
   0034 E5 F0               168 	 mov a,b
   0036 9C                  169 	 subb a,r4
   0037 E9                  170 	 mov a,r1
   0038 9D                  171 	 subb a,r5
                            172 	
   0039 50 E1               173 	 jnc loop1
                            174 	
   003B C3                  175 	 clr c
   003C ED                  176 	 mov a,r5 ; b >>= 1;
   003D 13                  177 	 rrc a
   003E FD                  178 	 mov r5,a
   003F EC                  179 	 mov a,r4
   0040 13                  180 	 rrc a
   0041 FC                  181 	 mov r4,a
   0042 EB                  182 	 mov a,r3
   0043 13                  183 	 rrc a
   0044 FB                  184 	 mov r3,a
   0045 EA                  185 	 mov a,r2
   0046 13                  186 	 rrc a
   0047 FA                  187 	 mov r2,a
                            188 	
   0048                     189 	loop2:
                            190 ; clr c never set
   0048 E5 82               191 	 mov a,dpl ; a - b
   004A 9A                  192 	 subb a,r2
   004B E5 83               193 	 mov a,dph
   004D 9B                  194 	 subb a,r3
   004E FE                  195 	 mov r6,a ; d1
   004F E5 F0               196 	 mov a,b
   0051 9C                  197 	 subb a,r4
   0052 FF                  198 	 mov r7,a ; d2
   0053 E9                  199 	 mov a,r1
   0054 9D                  200 	 subb a,r5
                            201 	
   0055 40 0A               202 	 jc smaller ; a >= b?
                            203 	
   0057 F9                  204 	 mov r1,a ; -> yes; a = a - b;
   0058 8F F0               205 	 mov b,r7
   005A 8E 83               206 	 mov dph,r6
   005C E5 82               207 	 mov a,dpl
   005E 9A                  208 	 subb a,r2
   005F F5 82               209 	 mov dpl,a
   0061                     210 	smaller:
                            211 ; -> no
   0061 C3                  212 	 clr c
   0062 ED                  213 	 mov a,r5 ; b >>= 1;
   0063 13                  214 	 rrc a
   0064 FD                  215 	 mov r5,a
   0065 EC                  216 	 mov a,r4
   0066 13                  217 	 rrc a
   0067 FC                  218 	 mov r4,a
   0068 EB                  219 	 mov a,r3
   0069 13                  220 	 rrc a
   006A FB                  221 	 mov r3,a
   006B EA                  222 	 mov a,r2
   006C 13                  223 	 rrc a
   006D FA                  224 	 mov r2,a
                            225 	
   006E D8 D8               226 	 djnz r0,loop2
                            227 	
   0070 E9                  228 	 mov a,r1 ; prepare the return value
   0071                     229 	div_by_0:
   0071 22                  230 	 ret
                            231 	
                            232 	 
                            233 ;	naked function: no epilogue.
                            234 	.area CSEG    (CODE)
                            235 	.area CONST   (CODE)
                            236 	.area XINIT   (CODE)
                            237 	.area CABS    (ABS,CODE)
