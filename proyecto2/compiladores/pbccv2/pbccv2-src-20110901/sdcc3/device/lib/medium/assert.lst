                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:26 2015
                              5 ;--------------------------------------------------------
                              6 	.module assert
                              7 	.optsdcc -mmcs51 --model-medium
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __assert
                             13 	.globl __assert_PARM_3
                             14 	.globl __assert_PARM_2
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 	.area RSEG    (ABS,DATA)
   0000                      19 	.org 0x0000
                             20 ;--------------------------------------------------------
                             21 ; special function bits
                             22 ;--------------------------------------------------------
                             23 	.area RSEG    (ABS,DATA)
   0000                      24 	.org 0x0000
                             25 ;--------------------------------------------------------
                             26 ; overlayable register banks
                             27 ;--------------------------------------------------------
                             28 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      29 	.ds 8
                             30 ;--------------------------------------------------------
                             31 ; internal ram data
                             32 ;--------------------------------------------------------
                             33 	.area DSEG    (DATA)
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in internal ram 
                             36 ;--------------------------------------------------------
                             37 	.area OSEG    (OVR,DATA)
                             38 ;--------------------------------------------------------
                             39 ; indirectly addressable internal ram data
                             40 ;--------------------------------------------------------
                             41 	.area ISEG    (DATA)
                             42 ;--------------------------------------------------------
                             43 ; absolute internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area IABS    (ABS,DATA)
                             46 	.area IABS    (ABS,DATA)
                             47 ;--------------------------------------------------------
                             48 ; bit data
                             49 ;--------------------------------------------------------
                             50 	.area BSEG    (BIT)
                             51 ;--------------------------------------------------------
                             52 ; paged external ram data
                             53 ;--------------------------------------------------------
                             54 	.area PSEG    (PAG,XDATA)
   0000                      55 __assert_PARM_2:
   0000                      56 	.ds 3
   0003                      57 __assert_PARM_3:
   0003                      58 	.ds 2
                             59 ;--------------------------------------------------------
                             60 ; external ram data
                             61 ;--------------------------------------------------------
                             62 	.area XSEG    (XDATA)
                             63 ;--------------------------------------------------------
                             64 ; absolute external ram data
                             65 ;--------------------------------------------------------
                             66 	.area XABS    (ABS,XDATA)
                             67 ;--------------------------------------------------------
                             68 ; external initialized ram data
                             69 ;--------------------------------------------------------
                             70 	.area XISEG   (XDATA)
                             71 	.area HOME    (CODE)
                             72 	.area GSINIT0 (CODE)
                             73 	.area GSINIT1 (CODE)
                             74 	.area GSINIT2 (CODE)
                             75 	.area GSINIT3 (CODE)
                             76 	.area GSINIT4 (CODE)
                             77 	.area GSINIT5 (CODE)
                             78 	.area GSINIT  (CODE)
                             79 	.area GSFINAL (CODE)
                             80 	.area CSEG    (CODE)
                             81 ;--------------------------------------------------------
                             82 ; global & static initialisations
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area GSINIT  (CODE)
                             86 	.area GSFINAL (CODE)
                             87 	.area GSINIT  (CODE)
                             88 ;--------------------------------------------------------
                             89 ; Home
                             90 ;--------------------------------------------------------
                             91 	.area HOME    (CODE)
                             92 	.area HOME    (CODE)
                             93 ;--------------------------------------------------------
                             94 ; code
                             95 ;--------------------------------------------------------
                             96 	.area CSEG    (CODE)
                             97 ;------------------------------------------------------------
                             98 ;Allocation info for local variables in function '_assert'
                             99 ;------------------------------------------------------------
                            100 ;------------------------------------------------------------
                            101 ;	assert.c:32: void _assert(char *expr, const char *filename, unsigned int linenumber)
                            102 ;	-----------------------------------------
                            103 ;	 function _assert
                            104 ;	-----------------------------------------
   0000                     105 __assert:
                    0002    106 	ar2 = 0x02
                    0003    107 	ar3 = 0x03
                    0004    108 	ar4 = 0x04
                    0005    109 	ar5 = 0x05
                    0006    110 	ar6 = 0x06
                    0007    111 	ar7 = 0x07
                    0000    112 	ar0 = 0x00
                    0001    113 	ar1 = 0x01
   0000 AA 82               114 	mov	r2,dpl
   0002 AB 83               115 	mov	r3,dph
   0004 AC F0               116 	mov	r4,b
                            117 ;	assert.c:34: printf("Assert(%s) failed at line %u in file %s.\n",
   0006 78r00               118 	mov	r0,#__assert_PARM_2
   0008 E2                  119 	movx	a,@r0
   0009 C0 E0               120 	push	acc
   000B 08                  121 	inc	r0
   000C E2                  122 	movx	a,@r0
   000D C0 E0               123 	push	acc
   000F 08                  124 	inc	r0
   0010 E2                  125 	movx	a,@r0
   0011 C0 E0               126 	push	acc
   0013 78r03               127 	mov	r0,#__assert_PARM_3
   0015 E2                  128 	movx	a,@r0
   0016 C0 E0               129 	push	acc
   0018 08                  130 	inc	r0
   0019 E2                  131 	movx	a,@r0
   001A C0 E0               132 	push	acc
   001C C0 02               133 	push	ar2
   001E C0 03               134 	push	ar3
   0020 C0 04               135 	push	ar4
   0022 74r00               136 	mov	a,#__str_0
   0024 C0 E0               137 	push	acc
   0026 74s00               138 	mov	a,#(__str_0 >> 8)
   0028 C0 E0               139 	push	acc
   002A 74 80               140 	mov	a,#0x80
   002C C0 E0               141 	push	acc
   002E 12s00r00            142 	lcall	_printf
   0031 E5 81               143 	mov	a,sp
   0033 24 F5               144 	add	a,#0xf5
   0035 F5 81               145 	mov	sp,a
                            146 ;	assert.c:36: while(1);
   0037                     147 00102$:
   0037 80 FE               148 	sjmp	00102$
                            149 	.area CSEG    (CODE)
                            150 	.area CONST   (CODE)
   0000                     151 __str_0:
   0000 41 73 73 65 72 74   152 	.ascii "Assert(%s) failed at line %u in file %s."
        28 25 73 29 20 66
        61 69 6C 65 64 20
        61 74 20 6C 69 6E
        65 20 25 75 20 69
        6E 20 66 69 6C 65
        20 25 73 2E
   0028 0A                  153 	.db 0x0A
   0029 00                  154 	.db 0x00
                            155 	.area XINIT   (CODE)
                            156 	.area CABS    (ABS,CODE)
