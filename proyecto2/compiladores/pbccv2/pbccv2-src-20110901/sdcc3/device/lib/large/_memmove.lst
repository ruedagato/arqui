                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:29 2015
                              5 ;--------------------------------------------------------
                              6 	.module _memmove
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _memmove_PARM_3
                             13 	.globl _memmove_PARM_2
                             14 	.globl _memmove
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 	.area RSEG    (ABS,DATA)
   0000                      19 	.org 0x0000
                             20 ;--------------------------------------------------------
                             21 ; special function bits
                             22 ;--------------------------------------------------------
                             23 	.area RSEG    (ABS,DATA)
   0000                      24 	.org 0x0000
                             25 ;--------------------------------------------------------
                             26 ; overlayable register banks
                             27 ;--------------------------------------------------------
                             28 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      29 	.ds 8
                             30 ;--------------------------------------------------------
                             31 ; internal ram data
                             32 ;--------------------------------------------------------
                             33 	.area DSEG    (DATA)
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in internal ram 
                             36 ;--------------------------------------------------------
                             37 	.area	OSEG    (OVR,DATA)
   0000                      38 _memmove_sloc0_1_0::
   0000                      39 	.ds 2
   0002                      40 _memmove_sloc1_1_0::
   0002                      41 	.ds 3
   0005                      42 _memmove_sloc2_1_0::
   0005                      43 	.ds 3
   0008                      44 _memmove_sloc3_1_0::
   0008                      45 	.ds 3
                             46 ;--------------------------------------------------------
                             47 ; indirectly addressable internal ram data
                             48 ;--------------------------------------------------------
                             49 	.area ISEG    (DATA)
                             50 ;--------------------------------------------------------
                             51 ; absolute internal ram data
                             52 ;--------------------------------------------------------
                             53 	.area IABS    (ABS,DATA)
                             54 	.area IABS    (ABS,DATA)
                             55 ;--------------------------------------------------------
                             56 ; bit data
                             57 ;--------------------------------------------------------
                             58 	.area BSEG    (BIT)
                             59 ;--------------------------------------------------------
                             60 ; paged external ram data
                             61 ;--------------------------------------------------------
                             62 	.area PSEG    (PAG,XDATA)
                             63 ;--------------------------------------------------------
                             64 ; external ram data
                             65 ;--------------------------------------------------------
                             66 	.area XSEG    (XDATA)
   0000                      67 _memmove_PARM_2:
   0000                      68 	.ds 3
   0003                      69 _memmove_PARM_3:
   0003                      70 	.ds 2
   0005                      71 _memmove_dst_1_1:
   0005                      72 	.ds 3
                             73 ;--------------------------------------------------------
                             74 ; absolute external ram data
                             75 ;--------------------------------------------------------
                             76 	.area XABS    (ABS,XDATA)
                             77 ;--------------------------------------------------------
                             78 ; external initialized ram data
                             79 ;--------------------------------------------------------
                             80 	.area XISEG   (XDATA)
                             81 	.area HOME    (CODE)
                             82 	.area GSINIT0 (CODE)
                             83 	.area GSINIT1 (CODE)
                             84 	.area GSINIT2 (CODE)
                             85 	.area GSINIT3 (CODE)
                             86 	.area GSINIT4 (CODE)
                             87 	.area GSINIT5 (CODE)
                             88 	.area GSINIT  (CODE)
                             89 	.area GSFINAL (CODE)
                             90 	.area CSEG    (CODE)
                             91 ;--------------------------------------------------------
                             92 ; global & static initialisations
                             93 ;--------------------------------------------------------
                             94 	.area HOME    (CODE)
                             95 	.area GSINIT  (CODE)
                             96 	.area GSFINAL (CODE)
                             97 	.area GSINIT  (CODE)
                             98 ;--------------------------------------------------------
                             99 ; Home
                            100 ;--------------------------------------------------------
                            101 	.area HOME    (CODE)
                            102 	.area HOME    (CODE)
                            103 ;--------------------------------------------------------
                            104 ; code
                            105 ;--------------------------------------------------------
                            106 	.area CSEG    (CODE)
                            107 ;------------------------------------------------------------
                            108 ;Allocation info for local variables in function 'memmove'
                            109 ;------------------------------------------------------------
                            110 ;src                       Allocated with name '_memmove_PARM_2'
                            111 ;acount                    Allocated with name '_memmove_PARM_3'
                            112 ;dst                       Allocated with name '_memmove_dst_1_1'
                            113 ;ret                       Allocated with name '_memmove_ret_1_1'
                            114 ;d                         Allocated with name '_memmove_d_1_1'
                            115 ;s                         Allocated with name '_memmove_s_1_1'
                            116 ;sloc0                     Allocated with name '_memmove_sloc0_1_0'
                            117 ;sloc1                     Allocated with name '_memmove_sloc1_1_0'
                            118 ;sloc2                     Allocated with name '_memmove_sloc2_1_0'
                            119 ;sloc3                     Allocated with name '_memmove_sloc3_1_0'
                            120 ;------------------------------------------------------------
                            121 ;	_memmove.c:39: void * memmove (
                            122 ;	-----------------------------------------
                            123 ;	 function memmove
                            124 ;	-----------------------------------------
   0000                     125 _memmove:
                    0002    126 	ar2 = 0x02
                    0003    127 	ar3 = 0x03
                    0004    128 	ar4 = 0x04
                    0005    129 	ar5 = 0x05
                    0006    130 	ar6 = 0x06
                    0007    131 	ar7 = 0x07
                    0000    132 	ar0 = 0x00
                    0001    133 	ar1 = 0x01
   0000 AA F0               134 	mov	r2,b
   0002 AB 83               135 	mov	r3,dph
   0004 E5 82               136 	mov	a,dpl
   0006 90s00r05            137 	mov	dptr,#_memmove_dst_1_1
   0009 F0                  138 	movx	@dptr,a
   000A A3                  139 	inc	dptr
   000B EB                  140 	mov	a,r3
   000C F0                  141 	movx	@dptr,a
   000D A3                  142 	inc	dptr
   000E EA                  143 	mov	a,r2
   000F F0                  144 	movx	@dptr,a
                            145 ;	_memmove.c:45: void * ret = dst;
   0010 90s00r05            146 	mov	dptr,#_memmove_dst_1_1
   0013 E0                  147 	movx	a,@dptr
   0014 F5*08               148 	mov	_memmove_sloc3_1_0,a
   0016 A3                  149 	inc	dptr
   0017 E0                  150 	movx	a,@dptr
   0018 F5*09               151 	mov	(_memmove_sloc3_1_0 + 1),a
   001A A3                  152 	inc	dptr
   001B E0                  153 	movx	a,@dptr
   001C F5*0A               154 	mov	(_memmove_sloc3_1_0 + 2),a
                            155 ;	_memmove.c:49: if (((int)src < (int)dst) && ((((int)src)+acount) > (int)dst)) {
   001E 90s00r00            156 	mov	dptr,#_memmove_PARM_2
   0021 E0                  157 	movx	a,@dptr
   0022 F5*02               158 	mov	_memmove_sloc1_1_0,a
   0024 A3                  159 	inc	dptr
   0025 E0                  160 	movx	a,@dptr
   0026 F5*03               161 	mov	(_memmove_sloc1_1_0 + 1),a
   0028 A3                  162 	inc	dptr
   0029 E0                  163 	movx	a,@dptr
   002A F5*04               164 	mov	(_memmove_sloc1_1_0 + 2),a
   002C 85*02*00            165 	mov	_memmove_sloc0_1_0,_memmove_sloc1_1_0
   002F 85*03*01            166 	mov	(_memmove_sloc0_1_0 + 1),(_memmove_sloc1_1_0 + 1)
   0032 A8*08               167 	mov	r0,_memmove_sloc3_1_0
   0034 A9*09               168 	mov	r1,(_memmove_sloc3_1_0 + 1)
   0036 AD*0A               169 	mov	r5,(_memmove_sloc3_1_0 + 2)
   0038 C3                  170 	clr	c
   0039 E5*00               171 	mov	a,_memmove_sloc0_1_0
   003B 98                  172 	subb	a,r0
   003C E5*01               173 	mov	a,(_memmove_sloc0_1_0 + 1)
   003E 64 80               174 	xrl	a,#0x80
   0040 89 F0               175 	mov	b,r1
   0042 63 F0 80            176 	xrl	b,#0x80
   0045 95 F0               177 	subb	a,b
   0047 40 03               178 	jc	00121$
   0049 02s00rC8            179 	ljmp	00118$
   004C                     180 00121$:
   004C AD*02               181 	mov	r5,_memmove_sloc1_1_0
   004E AE*03               182 	mov	r6,(_memmove_sloc1_1_0 + 1)
   0050 90s00r03            183 	mov	dptr,#_memmove_PARM_3
   0053 E0                  184 	movx	a,@dptr
   0054 FF                  185 	mov	r7,a
   0055 A3                  186 	inc	dptr
   0056 E0                  187 	movx	a,@dptr
   0057 F8                  188 	mov	r0,a
   0058 EF                  189 	mov	a,r7
   0059 2D                  190 	add	a,r5
   005A F5*00               191 	mov	_memmove_sloc0_1_0,a
   005C E8                  192 	mov	a,r0
   005D 3E                  193 	addc	a,r6
   005E F5*01               194 	mov	(_memmove_sloc0_1_0 + 1),a
   0060 A9*08               195 	mov	r1,_memmove_sloc3_1_0
   0062 AD*09               196 	mov	r5,(_memmove_sloc3_1_0 + 1)
   0064 AE*0A               197 	mov	r6,(_memmove_sloc3_1_0 + 2)
   0066 C3                  198 	clr	c
   0067 E9                  199 	mov	a,r1
   0068 95*00               200 	subb	a,_memmove_sloc0_1_0
   006A ED                  201 	mov	a,r5
   006B 95*01               202 	subb	a,(_memmove_sloc0_1_0 + 1)
   006D 50 59               203 	jnc	00118$
                            204 ;	_memmove.c:53: d = ((char *)dst)+acount-1;
   006F EF                  205 	mov	a,r7
   0070 25*08               206 	add	a,_memmove_sloc3_1_0
   0072 FD                  207 	mov	r5,a
   0073 E8                  208 	mov	a,r0
   0074 35*09               209 	addc	a,(_memmove_sloc3_1_0 + 1)
   0076 FE                  210 	mov	r6,a
   0077 A9*0A               211 	mov	r1,(_memmove_sloc3_1_0 + 2)
   0079 ED                  212 	mov	a,r5
   007A 24 FF               213 	add	a,#0xff
   007C F5*05               214 	mov	_memmove_sloc2_1_0,a
   007E EE                  215 	mov	a,r6
   007F 34 FF               216 	addc	a,#0xff
   0081 F5*06               217 	mov	(_memmove_sloc2_1_0 + 1),a
   0083 89*07               218 	mov	(_memmove_sloc2_1_0 + 2),r1
                            219 ;	_memmove.c:54: s = ((char *)src)+acount-1;
   0085 EF                  220 	mov	a,r7
   0086 25*02               221 	add	a,_memmove_sloc1_1_0
   0088 FD                  222 	mov	r5,a
   0089 E8                  223 	mov	a,r0
   008A 35*03               224 	addc	a,(_memmove_sloc1_1_0 + 1)
   008C FE                  225 	mov	r6,a
   008D A9*04               226 	mov	r1,(_memmove_sloc1_1_0 + 2)
   008F 1D                  227 	dec	r5
   0090 BD FF 01            228 	cjne	r5,#0xff,00123$
   0093 1E                  229 	dec	r6
   0094                     230 00123$:
                            231 ;	_memmove.c:55: while (acount--) {
   0094                     232 00101$:
   0094 8F 02               233 	mov	ar2,r7
   0096 88 03               234 	mov	ar3,r0
   0098 1F                  235 	dec	r7
   0099 BF FF 01            236 	cjne	r7,#0xff,00124$
   009C 18                  237 	dec	r0
   009D                     238 00124$:
   009D EA                  239 	mov	a,r2
   009E 4B                  240 	orl	a,r3
   009F 60 6E               241 	jz	00109$
                            242 ;	_memmove.c:56: *d-- = *s--;
   00A1 8D 82               243 	mov	dpl,r5
   00A3 8E 83               244 	mov	dph,r6
   00A5 89 F0               245 	mov	b,r1
   00A7 12s00r00            246 	lcall	__gptrget
   00AA FA                  247 	mov	r2,a
   00AB 1D                  248 	dec	r5
   00AC BD FF 01            249 	cjne	r5,#0xff,00126$
   00AF 1E                  250 	dec	r6
   00B0                     251 00126$:
   00B0 85*05 82            252 	mov	dpl,_memmove_sloc2_1_0
   00B3 85*06 83            253 	mov	dph,(_memmove_sloc2_1_0 + 1)
   00B6 85*07 F0            254 	mov	b,(_memmove_sloc2_1_0 + 2)
   00B9 EA                  255 	mov	a,r2
   00BA 12s00r00            256 	lcall	__gptrput
   00BD 15*05               257 	dec	_memmove_sloc2_1_0
   00BF 74 FF               258 	mov	a,#0xff
   00C1 B5*05 D0            259 	cjne	a,_memmove_sloc2_1_0,00101$
   00C4 15*06               260 	dec	(_memmove_sloc2_1_0 + 1)
                            261 ;	_memmove.c:65: while (acount--) {
   00C6 80 CC               262 	sjmp	00101$
   00C8                     263 00118$:
   00C8 AA*02               264 	mov	r2,_memmove_sloc1_1_0
   00CA AB*03               265 	mov	r3,(_memmove_sloc1_1_0 + 1)
   00CC AC*04               266 	mov	r4,(_memmove_sloc1_1_0 + 2)
   00CE AD*08               267 	mov	r5,_memmove_sloc3_1_0
   00D0 AE*09               268 	mov	r6,(_memmove_sloc3_1_0 + 1)
   00D2 AF*0A               269 	mov	r7,(_memmove_sloc3_1_0 + 2)
   00D4 90s00r03            270 	mov	dptr,#_memmove_PARM_3
   00D7 E0                  271 	movx	a,@dptr
   00D8 F5*05               272 	mov	_memmove_sloc2_1_0,a
   00DA A3                  273 	inc	dptr
   00DB E0                  274 	movx	a,@dptr
   00DC F5*06               275 	mov	(_memmove_sloc2_1_0 + 1),a
   00DE                     276 00104$:
   00DE A8*05               277 	mov	r0,_memmove_sloc2_1_0
   00E0 A9*06               278 	mov	r1,(_memmove_sloc2_1_0 + 1)
   00E2 15*05               279 	dec	_memmove_sloc2_1_0
   00E4 74 FF               280 	mov	a,#0xff
   00E6 B5*05 02            281 	cjne	a,_memmove_sloc2_1_0,00127$
   00E9 15*06               282 	dec	(_memmove_sloc2_1_0 + 1)
   00EB                     283 00127$:
   00EB E8                  284 	mov	a,r0
   00EC 49                  285 	orl	a,r1
   00ED 60 20               286 	jz	00109$
                            287 ;	_memmove.c:66: *d++ = *s++;
   00EF 8A 82               288 	mov	dpl,r2
   00F1 8B 83               289 	mov	dph,r3
   00F3 8C F0               290 	mov	b,r4
   00F5 12s00r00            291 	lcall	__gptrget
   00F8 F8                  292 	mov	r0,a
   00F9 A3                  293 	inc	dptr
   00FA AA 82               294 	mov	r2,dpl
   00FC AB 83               295 	mov	r3,dph
   00FE 8D 82               296 	mov	dpl,r5
   0100 8E 83               297 	mov	dph,r6
   0102 8F F0               298 	mov	b,r7
   0104 E8                  299 	mov	a,r0
   0105 12s00r00            300 	lcall	__gptrput
   0108 A3                  301 	inc	dptr
   0109 AD 82               302 	mov	r5,dpl
   010B AE 83               303 	mov	r6,dph
   010D 80 CF               304 	sjmp	00104$
   010F                     305 00109$:
                            306 ;	_memmove.c:70: return(ret);
   010F 85*08 82            307 	mov	dpl,_memmove_sloc3_1_0
   0112 85*09 83            308 	mov	dph,(_memmove_sloc3_1_0 + 1)
   0115 85*0A F0            309 	mov	b,(_memmove_sloc3_1_0 + 2)
   0118 22                  310 	ret
                            311 	.area CSEG    (CODE)
                            312 	.area CONST   (CODE)
                            313 	.area XINIT   (CODE)
                            314 	.area CABS    (ABS,CODE)
