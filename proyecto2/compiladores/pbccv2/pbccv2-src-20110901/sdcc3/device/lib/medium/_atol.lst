                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:25 2015
                              5 ;--------------------------------------------------------
                              6 	.module _atol
                              7 	.optsdcc -mmcs51 --model-medium
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _atol
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
   0000                      32 _atol_rv_1_1:
   0000                      33 	.ds 4
   0004                      34 _atol_sloc0_1_0:
   0004                      35 	.ds 3
   0007                      36 _atol_sloc1_1_0:
   0007                      37 	.ds 4
                             38 ;--------------------------------------------------------
                             39 ; overlayable items in internal ram 
                             40 ;--------------------------------------------------------
                             41 	.area OSEG    (OVR,DATA)
                             42 ;--------------------------------------------------------
                             43 ; indirectly addressable internal ram data
                             44 ;--------------------------------------------------------
                             45 	.area ISEG    (DATA)
                             46 ;--------------------------------------------------------
                             47 ; absolute internal ram data
                             48 ;--------------------------------------------------------
                             49 	.area IABS    (ABS,DATA)
                             50 	.area IABS    (ABS,DATA)
                             51 ;--------------------------------------------------------
                             52 ; bit data
                             53 ;--------------------------------------------------------
                             54 	.area BSEG    (BIT)
                             55 ;--------------------------------------------------------
                             56 ; paged external ram data
                             57 ;--------------------------------------------------------
                             58 	.area PSEG    (PAG,XDATA)
                             59 ;--------------------------------------------------------
                             60 ; external ram data
                             61 ;--------------------------------------------------------
                             62 	.area XSEG    (XDATA)
                             63 ;--------------------------------------------------------
                             64 ; absolute external ram data
                             65 ;--------------------------------------------------------
                             66 	.area XABS    (ABS,XDATA)
                             67 ;--------------------------------------------------------
                             68 ; external initialized ram data
                             69 ;--------------------------------------------------------
                             70 	.area XISEG   (XDATA)
                             71 	.area HOME    (CODE)
                             72 	.area GSINIT0 (CODE)
                             73 	.area GSINIT1 (CODE)
                             74 	.area GSINIT2 (CODE)
                             75 	.area GSINIT3 (CODE)
                             76 	.area GSINIT4 (CODE)
                             77 	.area GSINIT5 (CODE)
                             78 	.area GSINIT  (CODE)
                             79 	.area GSFINAL (CODE)
                             80 	.area CSEG    (CODE)
                             81 ;--------------------------------------------------------
                             82 ; global & static initialisations
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area GSINIT  (CODE)
                             86 	.area GSFINAL (CODE)
                             87 	.area GSINIT  (CODE)
                             88 ;--------------------------------------------------------
                             89 ; Home
                             90 ;--------------------------------------------------------
                             91 	.area HOME    (CODE)
                             92 	.area HOME    (CODE)
                             93 ;--------------------------------------------------------
                             94 ; code
                             95 ;--------------------------------------------------------
                             96 	.area CSEG    (CODE)
                             97 ;------------------------------------------------------------
                             98 ;Allocation info for local variables in function 'atol'
                             99 ;------------------------------------------------------------
                            100 ;rv                        Allocated with name '_atol_rv_1_1'
                            101 ;sign                      Allocated to registers r4 
                            102 ;sloc0                     Allocated with name '_atol_sloc0_1_0'
                            103 ;sloc1                     Allocated with name '_atol_sloc1_1_0'
                            104 ;------------------------------------------------------------
                            105 ;	_atol.c:29: long atol(char * s)
                            106 ;	-----------------------------------------
                            107 ;	 function atol
                            108 ;	-----------------------------------------
   0000                     109 _atol:
                    0002    110 	ar2 = 0x02
                    0003    111 	ar3 = 0x03
                    0004    112 	ar4 = 0x04
                    0005    113 	ar5 = 0x05
                    0006    114 	ar6 = 0x06
                    0007    115 	ar7 = 0x07
                    0000    116 	ar0 = 0x00
                    0001    117 	ar1 = 0x01
   0000 AD 82               118 	mov	r5,dpl
   0002 AE 83               119 	mov	r6,dph
   0004 AF F0               120 	mov	r7,b
                            121 ;	_atol.c:31: register long rv=0; 
   0006 E4                  122 	clr	a
   0007 F5*00               123 	mov	_atol_rv_1_1,a
   0009 F5*01               124 	mov	(_atol_rv_1_1 + 1),a
   000B F5*02               125 	mov	(_atol_rv_1_1 + 2),a
   000D F5*03               126 	mov	(_atol_rv_1_1 + 3),a
                            127 ;	_atol.c:35: while (*s) {
   000F 8D 03               128 	mov	ar3,r5
   0011 8E 04               129 	mov	ar4,r6
   0013 8F 02               130 	mov	ar2,r7
   0015                     131 00107$:
   0015 8B 82               132 	mov	dpl,r3
   0017 8C 83               133 	mov	dph,r4
   0019 8A F0               134 	mov	b,r2
   001B 12s00r00            135 	lcall	__gptrget
   001E FD                  136 	mov	r5,a
   001F 60 2E               137 	jz	00133$
                            138 ;	_atol.c:36: if (*s <= '9' && *s >= '0')
   0021 C3                  139 	clr	c
   0022 74 B9               140 	mov	a,#(0x39 ^ 0x80)
   0024 8D F0               141 	mov	b,r5
   0026 63 F0 80            142 	xrl	b,#0x80
   0029 95 F0               143 	subb	a,b
   002B 40 07               144 	jc	00102$
   002D ED                  145 	mov	a,r5
   002E 64 80               146 	xrl	a,#0x80
   0030 94 B0               147 	subb	a,#0xb0
   0032 50 1B               148 	jnc	00133$
                            149 ;	_atol.c:37: break;
   0034                     150 00102$:
                            151 ;	_atol.c:38: if (*s == '-' || *s == '+') 
   0034 8B 82               152 	mov	dpl,r3
   0036 8C 83               153 	mov	dph,r4
   0038 8A F0               154 	mov	b,r2
   003A 12s00r00            155 	lcall	__gptrget
   003D FD                  156 	mov	r5,a
   003E BD 2D 02            157 	cjne	r5,#0x2D,00138$
   0041 80 0C               158 	sjmp	00133$
   0043                     159 00138$:
   0043 BD 2B 02            160 	cjne	r5,#0x2B,00139$
   0046 80 07               161 	sjmp	00133$
   0048                     162 00139$:
                            163 ;	_atol.c:40: s++;
   0048 0B                  164 	inc	r3
   0049 BB 00 C9            165 	cjne	r3,#0x00,00107$
   004C 0C                  166 	inc	r4
   004D 80 C6               167 	sjmp	00107$
   004F                     168 00133$:
   004F 8B 05               169 	mov	ar5,r3
   0051 8C 06               170 	mov	ar6,r4
   0053 8A 07               171 	mov	ar7,r2
                            172 ;	_atol.c:43: sign = (*s == '-');
   0055 8B 82               173 	mov	dpl,r3
   0057 8C 83               174 	mov	dph,r4
   0059 8A F0               175 	mov	b,r2
   005B 12s00r00            176 	lcall	__gptrget
   005E FA                  177 	mov	r2,a
   005F E4                  178 	clr	a
   0060 BA 2D 01            179 	cjne	r2,#0x2D,00141$
   0063 04                  180 	inc	a
   0064                     181 00141$:
                            182 ;	_atol.c:44: if (*s == '-' || *s == '+') s++;
   0064 FB                  183 	mov	r3,a
   0065 FC                  184 	mov	r4,a
   0066 70 03               185 	jnz	00110$
   0068 BA 2B 05            186 	cjne	r2,#0x2B,00131$
   006B                     187 00110$:
   006B 0D                  188 	inc	r5
   006C BD 00 01            189 	cjne	r5,#0x00,00146$
   006F 0E                  190 	inc	r6
   0070                     191 00146$:
                            192 ;	_atol.c:46: while (*s && *s >= '0' && *s <= '9') {
   0070                     193 00131$:
   0070 8D*04               194 	mov	_atol_sloc0_1_0,r5
   0072 8E*05               195 	mov	(_atol_sloc0_1_0 + 1),r6
   0074 8F*06               196 	mov	(_atol_sloc0_1_0 + 2),r7
   0076                     197 00115$:
   0076 85*04 82            198 	mov	dpl,_atol_sloc0_1_0
   0079 85*05 83            199 	mov	dph,(_atol_sloc0_1_0 + 1)
   007C 85*06 F0            200 	mov	b,(_atol_sloc0_1_0 + 2)
   007F 12s00r00            201 	lcall	__gptrget
   0082 FE                  202 	mov	r6,a
   0083 70 03               203 	jnz	00147$
   0085 02s00rFD            204 	ljmp	00117$
   0088                     205 00147$:
   0088 C3                  206 	clr	c
   0089 EE                  207 	mov	a,r6
   008A 64 80               208 	xrl	a,#0x80
   008C 94 B0               209 	subb	a,#0xb0
   008E 40 6D               210 	jc	00117$
   0090 74 B9               211 	mov	a,#(0x39 ^ 0x80)
   0092 8E F0               212 	mov	b,r6
   0094 63 F0 80            213 	xrl	b,#0x80
   0097 95 F0               214 	subb	a,b
   0099 40 62               215 	jc	00117$
                            216 ;	_atol.c:47: rv = (rv * 10) + (*s - '0');
   009B C0 04               217 	push	ar4
   009D 78r00               218 	mov	r0,#__mullong_PARM_2
   009F E5*00               219 	mov	a,_atol_rv_1_1
   00A1 F2                  220 	movx	@r0,a
   00A2 08                  221 	inc	r0
   00A3 E5*01               222 	mov	a,(_atol_rv_1_1 + 1)
   00A5 F2                  223 	movx	@r0,a
   00A6 08                  224 	inc	r0
   00A7 E5*02               225 	mov	a,(_atol_rv_1_1 + 2)
   00A9 F2                  226 	movx	@r0,a
   00AA 08                  227 	inc	r0
   00AB E5*03               228 	mov	a,(_atol_rv_1_1 + 3)
   00AD F2                  229 	movx	@r0,a
   00AE 90 00 0A            230 	mov	dptr,#(0x0A&0x00ff)
   00B1 E4                  231 	clr	a
   00B2 F5 F0               232 	mov	b,a
   00B4 C0 04               233 	push	ar4
   00B6 C0 06               234 	push	ar6
   00B8 12s00r00            235 	lcall	__mullong
   00BB 85 82*07            236 	mov	_atol_sloc1_1_0,dpl
   00BE 85 83*08            237 	mov	(_atol_sloc1_1_0 + 1),dph
   00C1 85 F0*09            238 	mov	(_atol_sloc1_1_0 + 2),b
   00C4 F5*0A               239 	mov	(_atol_sloc1_1_0 + 3),a
   00C6 D0 06               240 	pop	ar6
   00C8 D0 04               241 	pop	ar4
   00CA EE                  242 	mov	a,r6
   00CB 33                  243 	rlc	a
   00CC 95 E0               244 	subb	a,acc
   00CE FD                  245 	mov	r5,a
   00CF EE                  246 	mov	a,r6
   00D0 24 D0               247 	add	a,#0xd0
   00D2 FE                  248 	mov	r6,a
   00D3 ED                  249 	mov	a,r5
   00D4 34 FF               250 	addc	a,#0xff
   00D6 FD                  251 	mov	r5,a
   00D7 33                  252 	rlc	a
   00D8 95 E0               253 	subb	a,acc
   00DA FA                  254 	mov	r2,a
   00DB FB                  255 	mov	r3,a
   00DC EE                  256 	mov	a,r6
   00DD 25*07               257 	add	a,_atol_sloc1_1_0
   00DF F5*00               258 	mov	_atol_rv_1_1,a
   00E1 ED                  259 	mov	a,r5
   00E2 35*08               260 	addc	a,(_atol_sloc1_1_0 + 1)
   00E4 F5*01               261 	mov	(_atol_rv_1_1 + 1),a
   00E6 EA                  262 	mov	a,r2
   00E7 35*09               263 	addc	a,(_atol_sloc1_1_0 + 2)
   00E9 F5*02               264 	mov	(_atol_rv_1_1 + 2),a
   00EB EB                  265 	mov	a,r3
   00EC 35*0A               266 	addc	a,(_atol_sloc1_1_0 + 3)
   00EE F5*03               267 	mov	(_atol_rv_1_1 + 3),a
                            268 ;	_atol.c:48: s++;
   00F0 05*04               269 	inc	_atol_sloc0_1_0
   00F2 E4                  270 	clr	a
   00F3 B5*04 02            271 	cjne	a,_atol_sloc0_1_0,00150$
   00F6 05*05               272 	inc	(_atol_sloc0_1_0 + 1)
   00F8                     273 00150$:
   00F8 D0 04               274 	pop	ar4
   00FA 02s00r76            275 	ljmp	00115$
   00FD                     276 00117$:
                            277 ;	_atol.c:51: return (sign ? -rv : rv);
   00FD EC                  278 	mov	a,r4
   00FE 60 13               279 	jz	00120$
   0100 C3                  280 	clr	c
   0101 E4                  281 	clr	a
   0102 95*00               282 	subb	a,_atol_rv_1_1
   0104 FA                  283 	mov	r2,a
   0105 E4                  284 	clr	a
   0106 95*01               285 	subb	a,(_atol_rv_1_1 + 1)
   0108 FB                  286 	mov	r3,a
   0109 E4                  287 	clr	a
   010A 95*02               288 	subb	a,(_atol_rv_1_1 + 2)
   010C FC                  289 	mov	r4,a
   010D E4                  290 	clr	a
   010E 95*03               291 	subb	a,(_atol_rv_1_1 + 3)
   0110 FD                  292 	mov	r5,a
   0111 80 08               293 	sjmp	00121$
   0113                     294 00120$:
   0113 AA*00               295 	mov	r2,_atol_rv_1_1
   0115 AB*01               296 	mov	r3,(_atol_rv_1_1 + 1)
   0117 AC*02               297 	mov	r4,(_atol_rv_1_1 + 2)
   0119 AD*03               298 	mov	r5,(_atol_rv_1_1 + 3)
   011B                     299 00121$:
   011B 8A 82               300 	mov	dpl,r2
   011D 8B 83               301 	mov	dph,r3
   011F 8C F0               302 	mov	b,r4
   0121 ED                  303 	mov	a,r5
   0122 22                  304 	ret
                            305 	.area CSEG    (CODE)
                            306 	.area CONST   (CODE)
                            307 	.area XINIT   (CODE)
                            308 	.area CABS    (ABS,CODE)
