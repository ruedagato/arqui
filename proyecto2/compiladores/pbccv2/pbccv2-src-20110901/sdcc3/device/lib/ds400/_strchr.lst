                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:19 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strchr
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _strchr_PARM_2
                             31 	.globl _strchr
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      44 	.ds 8
                             45 ;--------------------------------------------------------
                             46 ; internal ram data
                             47 ;--------------------------------------------------------
                             48 	.area DSEG    (DATA)
                             49 ;--------------------------------------------------------
                             50 ; overlayable items in internal ram 
                             51 ;--------------------------------------------------------
                             52 	.area OSEG    (OVR,DATA)
                             53 ;--------------------------------------------------------
                             54 ; indirectly addressable internal ram data
                             55 ;--------------------------------------------------------
                             56 	.area ISEG    (DATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute internal ram data
                             59 ;--------------------------------------------------------
                             60 	.area IABS    (ABS,DATA)
                             61 	.area IABS    (ABS,DATA)
                             62 ;--------------------------------------------------------
                             63 ; bit data
                             64 ;--------------------------------------------------------
                             65 	.area BSEG    (BIT)
                             66 ;--------------------------------------------------------
                             67 ; paged external ram data
                             68 ;--------------------------------------------------------
                             69 	.area PSEG    (PAG,XDATA)
                             70 ;--------------------------------------------------------
                             71 ; external ram data
                             72 ;--------------------------------------------------------
                             73 	.area XSEG    (XDATA)
   0000                      74 _strchr_PARM_2:
   0000                      75 	.ds 1
                             76 ;--------------------------------------------------------
                             77 ; absolute external ram data
                             78 ;--------------------------------------------------------
                             79 	.area XABS    (ABS,XDATA)
                             80 ;--------------------------------------------------------
                             81 ; external initialized ram data
                             82 ;--------------------------------------------------------
                             83 	.area XISEG   (XDATA)
                             84 ;--------------------------------------------------------
                             85 ; global & static initialisations
                             86 ;--------------------------------------------------------
                             87 	.area HOME    (CODE)
                             88 	.area GSINIT  (CODE)
                             89 	.area GSFINAL (CODE)
                             90 	.area GSINIT  (CODE)
                             91 ;--------------------------------------------------------
                             92 ; Home
                             93 ;--------------------------------------------------------
                             94 	.area HOME    (CODE)
                             95 	.area HOME    (CODE)
                             96 ;--------------------------------------------------------
                             97 ; code
                             98 ;--------------------------------------------------------
                             99 	.area CSEG    (CODE)
                            100 ;------------------------------------------------------------
                            101 ;Allocation info for local variables in function 'strchr'
                            102 ;------------------------------------------------------------
                            103 ;ch                        Allocated with name '_strchr_PARM_2'
                            104 ;string                    Allocated to registers r2 r3 r4 r5 
                            105 ;------------------------------------------------------------
                            106 ;	_strchr.c:31: char * strchr (
                            107 ;	-----------------------------------------
                            108 ;	 function strchr
                            109 ;	-----------------------------------------
   0000                     110 _strchr:
                    0002    111 	ar2 = 0x02
                    0003    112 	ar3 = 0x03
                    0004    113 	ar4 = 0x04
                    0005    114 	ar5 = 0x05
                    0006    115 	ar6 = 0x06
                    0007    116 	ar7 = 0x07
                    0000    117 	ar0 = 0x00
                    0001    118 	ar1 = 0x01
   0000 AA 82               119 	mov	r2,dpl
   0002 AB 83               120 	mov	r3,dph
   0004 AC 93               121 	mov	r4,dpx
   0006 AD F0               122 	mov	r5,b
                            123 ;	_strchr.c:36: while (*string && *string != ch)
                            124 ;	genAssign: resultIsFar = FALSE
   0008                     125 00102$:
   0008 8A 82               126 	mov	dpl,r2
   000A 8B 83               127 	mov	dph,r3
   000C 8C 93               128 	mov	dpx,r4
   000E 8D F0               129 	mov	b,r5
   0010 12s00r00r00         130 	lcall	__gptrget
   0014 FE                  131 	mov  r6,a
   0015 60 17               132 	jz  00104$
   0017                     133 00114$:
   0017 90s00r00r00         134 	mov	dptr,#_strchr_PARM_2
   001B 8E F0               135 	mov	b,r6
   001D E0                  136 	movx	a,@dptr
   001E B5 F0 02            137 	cjne	a,b,00115$
   0021 80 0B               138 	sjmp 00104$
   0023                     139 00115$:
                            140 ;	_strchr.c:37: string++;
   0023 0A                  141 	inc	r2
   0024 BA 00 E1            142 	cjne	r2,#0,00102$
   0027 0B                  143 	inc	r3
   0028 BB 00 DD            144 	cjne	r3,#0,00102$
   002B 0C                  145 	inc	r4
   002C 80 DA               146 	sjmp 00102$
   002E                     147 00104$:
                            148 ;	_strchr.c:39: if (*string == ch)
   002E 8A 82               149 	mov	dpl,r2
   0030 8B 83               150 	mov	dph,r3
   0032 8C 93               151 	mov	dpx,r4
   0034 8D F0               152 	mov	b,r5
   0036 12s00r00r00         153 	lcall	__gptrget
   003A FE                  154 	mov	r6,a
   003B 90s00r00r00         155 	mov	dptr,#_strchr_PARM_2
   003F 8E F0               156 	mov	b,r6
   0041 E0                  157 	movx	a,@dptr
   0042 B5 F0 0A            158 	cjne a,b,00106$
   0045                     159 00117$:
                            160 ;	_strchr.c:40: return(string);
   0045 8A 82               161 	mov	dpl,r2
   0047 8B 83               162 	mov	dph,r3
   0049 8C 93               163 	mov	dpx,r4
   004B 8D F0               164 	mov	b,r5
   004D 80 07               165 	sjmp 00107$
   004F                     166 00106$:
                            167 ;	_strchr.c:41: return ( NULL );
   004F 90 00 00 00         168 	mov  dptr,#0x0000
   0053 75 F0 00            169 	mov	b,#0x00
   0056                     170 00107$:
   0056 22                  171 	ret
                            172 	.area CSEG    (CODE)
                            173 	.area CONST   (CODE)
                            174 	.area XINIT   (CODE)
                            175 	.area CABS    (ABS,CODE)
