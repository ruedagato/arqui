                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:31 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strcat
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strcat
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'strcat'
                             93 ;------------------------------------------------------------
                             94 ;src                       Allocated to stack - offset -5
                             95 ;dst                       Allocated to stack - offset 1
                             96 ;cp                        Allocated to stack - offset 4
                             97 ;------------------------------------------------------------
                             98 ;	_strcat.c:31: char * strcat (
                             99 ;	-----------------------------------------
                            100 ;	 function strcat
                            101 ;	-----------------------------------------
   0000                     102 _strcat:
                    0002    103 	ar2 = 0x02
                    0003    104 	ar3 = 0x03
                    0004    105 	ar4 = 0x04
                    0005    106 	ar5 = 0x05
                    0006    107 	ar6 = 0x06
                    0007    108 	ar7 = 0x07
                    0000    109 	ar0 = 0x00
                    0001    110 	ar1 = 0x01
   0000 C0*00               111 	push	_bp
   0002 85 81*00            112 	mov	_bp,sp
   0005 C0 82               113 	push	dpl
   0007 C0 83               114 	push	dph
   0009 C0 F0               115 	push	b
   000B 05 81               116 	inc	sp
   000D 05 81               117 	inc	sp
   000F 05 81               118 	inc	sp
                            119 ;	_strcat.c:38: while( *cp )
   0011 A8*00               120 	mov	r0,_bp
   0013 08                  121 	inc	r0
   0014 86 05               122 	mov	ar5,@r0
   0016 08                  123 	inc	r0
   0017 86 06               124 	mov	ar6,@r0
   0019 08                  125 	inc	r0
   001A 86 07               126 	mov	ar7,@r0
   001C                     127 00101$:
   001C 8D 82               128 	mov	dpl,r5
   001E 8E 83               129 	mov	dph,r6
   0020 8F F0               130 	mov	b,r7
   0022 12s00r00            131 	lcall	__gptrget
   0025 60 07               132 	jz	00111$
                            133 ;	_strcat.c:39: cp++;                   /* find end of dst */
   0027 0D                  134 	inc	r5
   0028 BD 00 F1            135 	cjne	r5,#0x00,00101$
   002B 0E                  136 	inc	r6
                            137 ;	_strcat.c:41: while( *cp++ = *src++ ) ;       /* Copy src to end of dst */
   002C 80 EE               138 	sjmp	00101$
   002E                     139 00111$:
   002E E5*00               140 	mov	a,_bp
   0030 24 FB               141 	add	a,#0xfb
   0032 F8                  142 	mov	r0,a
   0033 86 02               143 	mov	ar2,@r0
   0035 08                  144 	inc	r0
   0036 86 03               145 	mov	ar3,@r0
   0038 08                  146 	inc	r0
   0039 86 04               147 	mov	ar4,@r0
   003B E5*00               148 	mov	a,_bp
   003D 24 04               149 	add	a,#0x04
   003F F8                  150 	mov	r0,a
   0040 A6 05               151 	mov	@r0,ar5
   0042 08                  152 	inc	r0
   0043 A6 06               153 	mov	@r0,ar6
   0045 08                  154 	inc	r0
   0046 A6 07               155 	mov	@r0,ar7
   0048                     156 00104$:
   0048 8A 82               157 	mov	dpl,r2
   004A 8B 83               158 	mov	dph,r3
   004C 8C F0               159 	mov	b,r4
   004E 12s00r00            160 	lcall	__gptrget
   0051 FD                  161 	mov	r5,a
   0052 A3                  162 	inc	dptr
   0053 AA 82               163 	mov	r2,dpl
   0055 AB 83               164 	mov	r3,dph
   0057 E5*00               165 	mov	a,_bp
   0059 24 04               166 	add	a,#0x04
   005B F8                  167 	mov	r0,a
   005C 86 82               168 	mov	dpl,@r0
   005E 08                  169 	inc	r0
   005F 86 83               170 	mov	dph,@r0
   0061 08                  171 	inc	r0
   0062 86 F0               172 	mov	b,@r0
   0064 ED                  173 	mov	a,r5
   0065 12s00r00            174 	lcall	__gptrput
   0068 A3                  175 	inc	dptr
   0069 18                  176 	dec	r0
   006A 18                  177 	dec	r0
   006B A6 82               178 	mov	@r0,dpl
   006D 08                  179 	inc	r0
   006E A6 83               180 	mov	@r0,dph
   0070 ED                  181 	mov	a,r5
   0071 70 D5               182 	jnz	00104$
                            183 ;	_strcat.c:43: return( dst );                  /* return dst */
   0073 A8*00               184 	mov	r0,_bp
   0075 08                  185 	inc	r0
   0076 86 82               186 	mov	dpl,@r0
   0078 08                  187 	inc	r0
   0079 86 83               188 	mov	dph,@r0
   007B 08                  189 	inc	r0
   007C 86 F0               190 	mov	b,@r0
   007E 85*00 81            191 	mov	sp,_bp
   0081 D0*00               192 	pop	_bp
   0083 22                  193 	ret
                            194 	.area CSEG    (CODE)
                            195 	.area CONST   (CODE)
                            196 	.area XINIT   (CODE)
                            197 	.area CABS    (ABS,CODE)
