                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:18:18 2015
                              5 ;--------------------------------------------------------
                              6 	.module gets
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _gets
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ;  ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; overlayable items in  ram 
                             22 ;--------------------------------------------------------
                             23 	.area _OVERLAY
                             24 ;--------------------------------------------------------
                             25 ; external initialized ram data
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _HOME
                             39 ;--------------------------------------------------------
                             40 ; code
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 ;../gets.c:32: gets (char *s)
                             44 ;	---------------------------------
                             45 ; Function gets
                             46 ; ---------------------------------
   0000                      47 _gets_start::
   0000                      48 _gets:
   0000 DD E5                49 	push	ix
   0002 DD 21 00 00          50 	ld	ix,#0
   0006 DD 39                51 	add	ix,sp
                             52 ;../gets.c:35: unsigned int count = 0;
   0008 01 00 00             53 	ld	bc,#0x0000
                             54 ;../gets.c:37: while (1)
   000B                      55 00109$:
                             56 ;../gets.c:39: c = getchar ();
   000B C5                   57 	push	bc
   000C CDr00s00             58 	call	_getchar
   000F C1                   59 	pop	bc
   0010 5D                   60 	ld	e,l
                             61 ;../gets.c:40: switch(c)
   0011 7B                   62 	ld	a,e
   0012 FE 08                63 	cp	a,#0x08
   0014 28 0A                64 	jr	Z,00101$
   0016 FE 0A                65 	cp	a,##0x0A
   0018 28 34                66 	jr	Z,00105$
   001A D6 0D                67 	sub	a,#0x0D
   001C 28 30                68 	jr	Z,00105$
   001E 18 48                69 	jr	00106$
                             70 ;../gets.c:42: case '\b': /* backspace */
   0020                      71 00101$:
                             72 ;../gets.c:43: if (count)
   0020 79                   73 	ld	a,c
   0021 B0                   74 	or	a,b
   0022 28 E7                75 	jr	Z,00109$
                             76 ;../gets.c:45: putchar ('\b');
   0024 C5                   77 	push	bc
   0025 3E 08                78 	ld	a,#0x08
   0027 F5                   79 	push	af
   0028 33                   80 	inc	sp
   0029 CDr00s00             81 	call	_putchar
   002C 33                   82 	inc	sp
   002D 3E 20                83 	ld	a,#0x20
   002F F5                   84 	push	af
   0030 33                   85 	inc	sp
   0031 CDr00s00             86 	call	_putchar
   0034 33                   87 	inc	sp
   0035 3E 08                88 	ld	a,#0x08
   0037 F5                   89 	push	af
   0038 33                   90 	inc	sp
   0039 CDr00s00             91 	call	_putchar
   003C 33                   92 	inc	sp
   003D C1                   93 	pop	bc
                             94 ;../gets.c:48: --s;
   003E DD 6E 04             95 	ld	l,4 (ix)
   0041 DD 66 05             96 	ld	h,5 (ix)
   0044 2B                   97 	dec	hl
   0045 DD 75 04             98 	ld	4 (ix),l
   0048 DD 74 05             99 	ld	5 (ix),h
                            100 ;../gets.c:49: --count;
   004B 0B                  101 	dec	bc
                            102 ;../gets.c:51: break;
   004C 18 BD               103 	jr	00109$
                            104 ;../gets.c:54: case '\r': /* CR or LF */
   004E                     105 00105$:
                            106 ;../gets.c:55: putchar ('\r');
   004E 3E 0D               107 	ld	a,#0x0D
   0050 F5                  108 	push	af
   0051 33                  109 	inc	sp
   0052 CDr00s00            110 	call	_putchar
   0055 33                  111 	inc	sp
                            112 ;../gets.c:56: putchar ('\n');
   0056 3E 0A               113 	ld	a,#0x0A
   0058 F5                  114 	push	af
   0059 33                  115 	inc	sp
   005A CDr00s00            116 	call	_putchar
   005D 33                  117 	inc	sp
                            118 ;../gets.c:57: *s = 0;
   005E DD 6E 04            119 	ld	l,4 (ix)
   0061 DD 66 05            120 	ld	h,5 (ix)
   0064 36 00               121 	ld	(hl),#0x00
                            122 ;../gets.c:58: return s;
   0066 18 20               123 	jr	00111$
                            124 ;../gets.c:60: default:
   0068                     125 00106$:
                            126 ;../gets.c:61: *s++ = c;
   0068 DD 6E 04            127 	ld	l,4 (ix)
   006B DD 66 05            128 	ld	h,5 (ix)
   006E 73                  129 	ld	(hl),e
   006F 7D                  130 	ld	a,l
   0070 C6 01               131 	add	a,#0x01
   0072 DD 77 04            132 	ld	4 (ix),a
   0075 7C                  133 	ld	a,h
   0076 CE 00               134 	adc	a,#0x00
   0078 DD 77 05            135 	ld	5 (ix),a
                            136 ;../gets.c:62: ++count;
   007B 03                  137 	inc	bc
                            138 ;../gets.c:63: putchar (c);
   007C C5                  139 	push	bc
   007D 7B                  140 	ld	a,e
   007E F5                  141 	push	af
   007F 33                  142 	inc	sp
   0080 CDr00s00            143 	call	_putchar
   0083 33                  144 	inc	sp
   0084 C1                  145 	pop	bc
                            146 ;../gets.c:65: }
   0085 C3r0Bs00            147 	jp	00109$
   0088                     148 00111$:
   0088 DD E1               149 	pop	ix
   008A C9                  150 	ret
   008B                     151 _gets_end::
                            152 	.area _CODE
                            153 	.area _CABS
