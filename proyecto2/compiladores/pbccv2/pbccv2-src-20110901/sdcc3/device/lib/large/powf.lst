                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:27 2015
                              5 ;--------------------------------------------------------
                              6 	.module powf
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _powf_PARM_2
                             13 	.globl _powf
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 	.area RSEG    (ABS,DATA)
   0000                      18 	.org 0x0000
                             19 ;--------------------------------------------------------
                             20 ; special function bits
                             21 ;--------------------------------------------------------
                             22 	.area RSEG    (ABS,DATA)
   0000                      23 	.org 0x0000
                             24 ;--------------------------------------------------------
                             25 ; overlayable register banks
                             26 ;--------------------------------------------------------
                             27 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      28 	.ds 8
                             29 ;--------------------------------------------------------
                             30 ; internal ram data
                             31 ;--------------------------------------------------------
                             32 	.area DSEG    (DATA)
   0000                      33 _powf_sloc0_1_0:
   0000                      34 	.ds 4
                             35 ;--------------------------------------------------------
                             36 ; overlayable items in internal ram 
                             37 ;--------------------------------------------------------
                             38 	.area OSEG    (OVR,DATA)
                             39 ;--------------------------------------------------------
                             40 ; indirectly addressable internal ram data
                             41 ;--------------------------------------------------------
                             42 	.area ISEG    (DATA)
                             43 ;--------------------------------------------------------
                             44 ; absolute internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area IABS    (ABS,DATA)
                             47 	.area IABS    (ABS,DATA)
                             48 ;--------------------------------------------------------
                             49 ; bit data
                             50 ;--------------------------------------------------------
                             51 	.area BSEG    (BIT)
                             52 ;--------------------------------------------------------
                             53 ; paged external ram data
                             54 ;--------------------------------------------------------
                             55 	.area PSEG    (PAG,XDATA)
                             56 ;--------------------------------------------------------
                             57 ; external ram data
                             58 ;--------------------------------------------------------
                             59 	.area XSEG    (XDATA)
   0000                      60 _powf_PARM_2:
   0000                      61 	.ds 4
   0004                      62 _powf_x_1_1:
   0004                      63 	.ds 4
                             64 ;--------------------------------------------------------
                             65 ; absolute external ram data
                             66 ;--------------------------------------------------------
                             67 	.area XABS    (ABS,XDATA)
                             68 ;--------------------------------------------------------
                             69 ; external initialized ram data
                             70 ;--------------------------------------------------------
                             71 	.area XISEG   (XDATA)
                             72 	.area HOME    (CODE)
                             73 	.area GSINIT0 (CODE)
                             74 	.area GSINIT1 (CODE)
                             75 	.area GSINIT2 (CODE)
                             76 	.area GSINIT3 (CODE)
                             77 	.area GSINIT4 (CODE)
                             78 	.area GSINIT5 (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area CSEG    (CODE)
                             82 ;--------------------------------------------------------
                             83 ; global & static initialisations
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area GSINIT  (CODE)
                             87 	.area GSFINAL (CODE)
                             88 	.area GSINIT  (CODE)
                             89 ;--------------------------------------------------------
                             90 ; Home
                             91 ;--------------------------------------------------------
                             92 	.area HOME    (CODE)
                             93 	.area HOME    (CODE)
                             94 ;--------------------------------------------------------
                             95 ; code
                             96 ;--------------------------------------------------------
                             97 	.area CSEG    (CODE)
                             98 ;------------------------------------------------------------
                             99 ;Allocation info for local variables in function 'powf'
                            100 ;------------------------------------------------------------
                            101 ;sloc0                     Allocated with name '_powf_sloc0_1_0'
                            102 ;y                         Allocated with name '_powf_PARM_2'
                            103 ;x                         Allocated with name '_powf_x_1_1'
                            104 ;------------------------------------------------------------
                            105 ;	powf.c:35: float powf(const float x, const float y)
                            106 ;	-----------------------------------------
                            107 ;	 function powf
                            108 ;	-----------------------------------------
   0000                     109 _powf:
                    0002    110 	ar2 = 0x02
                    0003    111 	ar3 = 0x03
                    0004    112 	ar4 = 0x04
                    0005    113 	ar5 = 0x05
                    0006    114 	ar6 = 0x06
                    0007    115 	ar7 = 0x07
                    0000    116 	ar0 = 0x00
                    0001    117 	ar1 = 0x01
   0000 AA 82               118 	mov	r2,dpl
   0002 AB 83               119 	mov	r3,dph
   0004 AC F0               120 	mov	r4,b
   0006 FD                  121 	mov	r5,a
   0007 90s00r04            122 	mov	dptr,#_powf_x_1_1
   000A EA                  123 	mov	a,r2
   000B F0                  124 	movx	@dptr,a
   000C A3                  125 	inc	dptr
   000D EB                  126 	mov	a,r3
   000E F0                  127 	movx	@dptr,a
   000F A3                  128 	inc	dptr
   0010 EC                  129 	mov	a,r4
   0011 F0                  130 	movx	@dptr,a
   0012 A3                  131 	inc	dptr
   0013 ED                  132 	mov	a,r5
   0014 F0                  133 	movx	@dptr,a
                            134 ;	powf.c:37: if(y == 0.0) return 1.0;
   0015 90s00r00            135 	mov	dptr,#_powf_PARM_2
   0018 E0                  136 	movx	a,@dptr
   0019 FA                  137 	mov	r2,a
   001A A3                  138 	inc	dptr
   001B E0                  139 	movx	a,@dptr
   001C FB                  140 	mov	r3,a
   001D A3                  141 	inc	dptr
   001E E0                  142 	movx	a,@dptr
   001F FC                  143 	mov	r4,a
   0020 A3                  144 	inc	dptr
   0021 E0                  145 	movx	a,@dptr
   0022 FD                  146 	mov	r5,a
   0023 EA                  147 	mov	a,r2
   0024 4B                  148 	orl	a,r3
   0025 4C                  149 	orl	a,r4
   0026 4D                  150 	orl	a,r5
   0027 70 09               151 	jnz	00102$
   0029 90 00 00            152 	mov	dptr,#0x0000
   002C 75 F0 80            153 	mov	b,#0x80
   002F 74 3F               154 	mov	a,#0x3F
   0031 22                  155 	ret
   0032                     156 00102$:
                            157 ;	powf.c:38: if(y==1.0) return x;
   0032 C0 02               158 	push	ar2
   0034 C0 03               159 	push	ar3
   0036 C0 04               160 	push	ar4
   0038 C0 05               161 	push	ar5
   003A E4                  162 	clr	a
   003B C0 E0               163 	push	acc
   003D C0 E0               164 	push	acc
   003F 74 80               165 	mov	a,#0x80
   0041 C0 E0               166 	push	acc
   0043 74 3F               167 	mov	a,#0x3F
   0045 C0 E0               168 	push	acc
   0047 8A 82               169 	mov	dpl,r2
   0049 8B 83               170 	mov	dph,r3
   004B 8C F0               171 	mov	b,r4
   004D ED                  172 	mov	a,r5
   004E 12s00r00            173 	lcall	___fseq
   0051 AE 82               174 	mov	r6,dpl
   0053 E5 81               175 	mov	a,sp
   0055 24 FC               176 	add	a,#0xfc
   0057 F5 81               177 	mov	sp,a
   0059 D0 05               178 	pop	ar5
   005B D0 04               179 	pop	ar4
   005D D0 03               180 	pop	ar3
   005F D0 02               181 	pop	ar2
   0061 EE                  182 	mov	a,r6
   0062 60 14               183 	jz	00104$
   0064 90s00r04            184 	mov	dptr,#_powf_x_1_1
   0067 E0                  185 	movx	a,@dptr
   0068 FE                  186 	mov	r6,a
   0069 A3                  187 	inc	dptr
   006A E0                  188 	movx	a,@dptr
   006B FF                  189 	mov	r7,a
   006C A3                  190 	inc	dptr
   006D E0                  191 	movx	a,@dptr
   006E F8                  192 	mov	r0,a
   006F A3                  193 	inc	dptr
   0070 E0                  194 	movx	a,@dptr
   0071 8E 82               195 	mov	dpl,r6
   0073 8F 83               196 	mov	dph,r7
   0075 88 F0               197 	mov	b,r0
   0077 22                  198 	ret
   0078                     199 00104$:
                            200 ;	powf.c:39: if(x <= 0.0) return 0.0;
   0078 90s00r04            201 	mov	dptr,#_powf_x_1_1
   007B E0                  202 	movx	a,@dptr
   007C F5*00               203 	mov	_powf_sloc0_1_0,a
   007E A3                  204 	inc	dptr
   007F E0                  205 	movx	a,@dptr
   0080 F5*01               206 	mov	(_powf_sloc0_1_0 + 1),a
   0082 A3                  207 	inc	dptr
   0083 E0                  208 	movx	a,@dptr
   0084 F5*02               209 	mov	(_powf_sloc0_1_0 + 2),a
   0086 A3                  210 	inc	dptr
   0087 E0                  211 	movx	a,@dptr
   0088 F5*03               212 	mov	(_powf_sloc0_1_0 + 3),a
   008A C0 02               213 	push	ar2
   008C C0 03               214 	push	ar3
   008E C0 04               215 	push	ar4
   0090 C0 05               216 	push	ar5
   0092 E4                  217 	clr	a
   0093 C0 E0               218 	push	acc
   0095 C0 E0               219 	push	acc
   0097 C0 E0               220 	push	acc
   0099 C0 E0               221 	push	acc
   009B 85*00 82            222 	mov	dpl,_powf_sloc0_1_0
   009E 85*01 83            223 	mov	dph,(_powf_sloc0_1_0 + 1)
   00A1 85*02 F0            224 	mov	b,(_powf_sloc0_1_0 + 2)
   00A4 E5*03               225 	mov	a,(_powf_sloc0_1_0 + 3)
   00A6 12s00r00            226 	lcall	___fsgt
   00A9 AE 82               227 	mov	r6,dpl
   00AB E5 81               228 	mov	a,sp
   00AD 24 FC               229 	add	a,#0xfc
   00AF F5 81               230 	mov	sp,a
   00B1 D0 05               231 	pop	ar5
   00B3 D0 04               232 	pop	ar4
   00B5 D0 03               233 	pop	ar3
   00B7 D0 02               234 	pop	ar2
   00B9 EE                  235 	mov	a,r6
   00BA 70 07               236 	jnz	00106$
   00BC 90 00 00            237 	mov	dptr,#(0x00&0x00ff)
   00BF E4                  238 	clr	a
   00C0 F5 F0               239 	mov	b,a
   00C2 22                  240 	ret
   00C3                     241 00106$:
                            242 ;	powf.c:40: return expf(logf(x) * y);
   00C3 85*00 82            243 	mov	dpl,_powf_sloc0_1_0
   00C6 85*01 83            244 	mov	dph,(_powf_sloc0_1_0 + 1)
   00C9 85*02 F0            245 	mov	b,(_powf_sloc0_1_0 + 2)
   00CC E5*03               246 	mov	a,(_powf_sloc0_1_0 + 3)
   00CE C0 02               247 	push	ar2
   00D0 C0 03               248 	push	ar3
   00D2 C0 04               249 	push	ar4
   00D4 C0 05               250 	push	ar5
   00D6 12s00r00            251 	lcall	_logf
   00D9 12s00r00            252 	lcall	___fsmul
   00DC AA 82               253 	mov	r2,dpl
   00DE AB 83               254 	mov	r3,dph
   00E0 AC F0               255 	mov	r4,b
   00E2 FD                  256 	mov	r5,a
   00E3 E5 81               257 	mov	a,sp
   00E5 24 FC               258 	add	a,#0xfc
   00E7 F5 81               259 	mov	sp,a
   00E9 8A 82               260 	mov	dpl,r2
   00EB 8B 83               261 	mov	dph,r3
   00ED 8C F0               262 	mov	b,r4
   00EF ED                  263 	mov	a,r5
   00F0 02s00r00            264 	ljmp	_expf
                            265 	.area CSEG    (CODE)
                            266 	.area CONST   (CODE)
                            267 	.area XINIT   (CODE)
                            268 	.area CABS    (ABS,CODE)
