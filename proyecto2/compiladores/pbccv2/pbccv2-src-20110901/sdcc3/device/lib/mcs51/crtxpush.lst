                              1 ;--------------------------------------------------------------------------
                              2 ;  crtxpush.asm :- C run-time: push registers (not R0) to xstack
                              3 ;
                              4 ;  Copyright (C) 2009, Maarten Brock
                              5 ;
                              6 ;  This library is free software; you can redistribute it and/or modify it
                              7 ;  under the terms of the GNU General Public License as published by the
                              8 ;  Free Software Foundation; either version 2.1, or (at your option) any
                              9 ;  later version.
                             10 ;
                             11 ;  This library is distributed in the hope that it will be useful,
                             12 ;  but WITHOUT ANY WARRANTY; without even the implied warranty of
                             13 ;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
                             14 ;  GNU General Public License for more details.
                             15 ;
                             16 ;  You should have received a copy of the GNU General Public License 
                             17 ;  along with this library; see the file COPYING. If not, write to the
                             18 ;  Free Software Foundation, 51 Franklin Street, Fifth Floor, Boston,
                             19 ;   MA 02110-1301, USA.
                             20 ;
                             21 ;  As a special exception, if you link this library with other files,
                             22 ;  some of which are compiled with SDCC, to produce an executable,
                             23 ;  this library does not by itself cause the resulting executable to
                             24 ;  be covered by the GNU General Public License. This exception does
                             25 ;  not however invalidate any other reasons why the executable file
                             26 ;  might be covered by the GNU General Public License.
                             27 ;--------------------------------------------------------------------------
                             28 
                             29 ;--------------------------------------------------------
                             30 ; overlayable bit register bank
                             31 ;--------------------------------------------------------
                             32 	.area BIT_BANK	(REL,OVR,DATA)
   0000                      33 bits:
   0000                      34 	.ds 1
                             35 
                    0000     36 	ar0 = 0x00
                    0001     37 	ar1 = 0x01
                             38 
                             39 	.area HOME    (CODE)
                             40 
                             41 ; Push registers r1..r7 & bits on xstack
                             42 ; Expect allocation size in ACC and mask in B
   0000                      43 __sdcc_xpush_regs::
   0000 A8*00                44 	mov	r0,_spx
   0002 25*00                45 	add	a,_spx
   0004 F5*00                46 	mov	_spx,a
   0006 C0 01                47 	push	ar1
   0008 10 F0 04             48 	jbc	B.0,00100$	;if B(0)=0 then
   000B E5*00                49 	mov	a,bits		;push bits
   000D F2                   50 	movx	@r0,a
   000E 08                   51 	inc	r0
   000F                      52 00100$:
   000F 10 F1 03             53 	jbc	B.1,00101$	;if B(1)=0 then
   0012 E9                   54 	mov	a,r1		;push R1
   0013 F2                   55 	movx	@r0,a
   0014 08                   56 	inc	r0
   0015                      57 00101$:
   0015 79 01                58 	mov	r1,#0x01
   0017                      59 00102$:
   0017 E5 F0                60 	mov	a,B
   0019                      61 00103$:
   0019 60 0C                62 	jz	00104$		;if B=0 we are done
   001B 09                   63 	inc	r1
   001C 25 E0                64 	add	a,acc		;if B(9-n)=1 then
   001E 50 F9                65 	jnc	00103$
   0020 F5 F0                66 	mov	B,a
   0022 E7                   67 	mov	a,@r1		;push Rn
   0023 F2                   68 	movx	@r0,a
   0024 08                   69 	inc	r0
   0025 80 F0                70 	sjmp	00102$
   0027                      71 00104$:
   0027 D0 01                72 	pop	ar1
   0029 22                   73 	ret
