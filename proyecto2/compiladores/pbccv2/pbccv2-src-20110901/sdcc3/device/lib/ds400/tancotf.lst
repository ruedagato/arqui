                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:19 2015
                              5 ;--------------------------------------------------------
                              6 	.module tancotf
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _tancotf
                             31 	.globl _tancotf_PARM_2
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      44 	.ds 8
                             45 ;--------------------------------------------------------
                             46 ; internal ram data
                             47 ;--------------------------------------------------------
                             48 	.area DSEG    (DATA)
                             49 ;--------------------------------------------------------
                             50 ; overlayable items in internal ram 
                             51 ;--------------------------------------------------------
                             52 	.area OSEG    (OVR,DATA)
                             53 ;--------------------------------------------------------
                             54 ; indirectly addressable internal ram data
                             55 ;--------------------------------------------------------
                             56 	.area ISEG    (DATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute internal ram data
                             59 ;--------------------------------------------------------
                             60 	.area IABS    (ABS,DATA)
                             61 	.area IABS    (ABS,DATA)
                             62 ;--------------------------------------------------------
                             63 ; bit data
                             64 ;--------------------------------------------------------
                             65 	.area BSEG    (BIT)
   0000                      66 _tancotf_PARM_2:
   0000                      67 	.ds 1
                             68 ;--------------------------------------------------------
                             69 ; paged external ram data
                             70 ;--------------------------------------------------------
                             71 	.area PSEG    (PAG,XDATA)
                             72 ;--------------------------------------------------------
                             73 ; external ram data
                             74 ;--------------------------------------------------------
                             75 	.area XSEG    (XDATA)
   0000                      76 _tancotf_f_1_1:
   0000                      77 	.ds 4
   0004                      78 _tancotf_g_1_1:
   0004                      79 	.ds 4
   0008                      80 _tancotf_xn_1_1:
   0008                      81 	.ds 4
   000C                      82 _tancotf_xden_1_1:
   000C                      83 	.ds 4
   0010                      84 _tancotf_n_1_1:
   0010                      85 	.ds 2
   0012                      86 _tancotf_sloc0_1_0:
   0012                      87 	.ds 4
                             88 ;--------------------------------------------------------
                             89 ; absolute external ram data
                             90 ;--------------------------------------------------------
                             91 	.area XABS    (ABS,XDATA)
                             92 ;--------------------------------------------------------
                             93 ; external initialized ram data
                             94 ;--------------------------------------------------------
                             95 	.area XISEG   (XDATA)
                             96 ;--------------------------------------------------------
                             97 ; global & static initialisations
                             98 ;--------------------------------------------------------
                             99 	.area HOME    (CODE)
                            100 	.area GSINIT  (CODE)
                            101 	.area GSFINAL (CODE)
                            102 	.area GSINIT  (CODE)
                            103 ;--------------------------------------------------------
                            104 ; Home
                            105 ;--------------------------------------------------------
                            106 	.area HOME    (CODE)
                            107 	.area HOME    (CODE)
                            108 ;--------------------------------------------------------
                            109 ; code
                            110 ;--------------------------------------------------------
                            111 	.area CSEG    (CODE)
                            112 ;------------------------------------------------------------
                            113 ;Allocation info for local variables in function 'tancotf'
                            114 ;------------------------------------------------------------
                            115 ;x                         Allocated to registers r2 r3 r4 r5 
                            116 ;f                         Allocated with name '_tancotf_f_1_1'
                            117 ;g                         Allocated with name '_tancotf_g_1_1'
                            118 ;xn                        Allocated with name '_tancotf_xn_1_1'
                            119 ;xnum                      Allocated to registers r6 r7 r0 r1 
                            120 ;xden                      Allocated with name '_tancotf_xden_1_1'
                            121 ;n                         Allocated with name '_tancotf_n_1_1'
                            122 ;sloc0                     Allocated with name '_tancotf_sloc0_1_0'
                            123 ;------------------------------------------------------------
                            124 ;	tancotf.c:53: float tancotf(const float x, const BOOL iscotan)
                            125 ;	-----------------------------------------
                            126 ;	 function tancotf
                            127 ;	-----------------------------------------
   0000                     128 _tancotf:
                    0002    129 	ar2 = 0x02
                    0003    130 	ar3 = 0x03
                    0004    131 	ar4 = 0x04
                    0005    132 	ar5 = 0x05
                    0006    133 	ar6 = 0x06
                    0007    134 	ar7 = 0x07
                    0000    135 	ar0 = 0x00
                    0001    136 	ar1 = 0x01
   0000 AA 82               137 	mov	r2,dpl
   0002 AB 83               138 	mov	r3,dph
   0004 AC 93               139 	mov	r4,dpx
   0006 AD F0               140 	mov	r5,b
                            141 ;	tancotf.c:58: if (fabsf(x) > YMAX)
   0008 C0 02               142 	push	ar2
   000A C0 03               143 	push	ar3
   000C C0 04               144 	push	ar4
   000E C0 05               145 	push	ar5
   0010 8A 82               146 	mov	dpl,r2
   0012 8B 83               147 	mov	dph,r3
   0014 8C 93               148 	mov	dpx,r4
   0016 8D F0               149 	mov	b,r5
   0018 12s00r00r00         150 	lcall	_fabsf
   001C AE 82               151 	mov	r6,dpl
   001E AF 83               152 	mov	r7,dph
   0020 A8 93               153 	mov	r0,dpx
   0022 A9 F0               154 	mov	r1,b
   0024 D0 05               155 	pop	ar5
   0026 D0 04               156 	pop	ar4
   0028 D0 03               157 	pop	ar3
   002A D0 02               158 	pop	ar2
                            159 ;	genAssign: resultIsFar = TRUE
   002C 90s00r00r00         160 	mov	dptr,#___fsgt_PARM_2
   0030 E4                  161 	clr  a
   0031 F0                  162 	movx	@dptr,a
   0032 A3                  163 	inc	dptr
   0033 74 08               164 	mov	a,#0x08
   0035 F0                  165 	movx	@dptr,a
   0036 A3                  166 	inc	dptr
   0037 74 C9               167 	mov	a,#0xC9
   0039 F0                  168 	movx	@dptr,a
   003A A3                  169 	inc	dptr
   003B 74 45               170 	mov	a,#0x45
   003D F0                  171 	movx	@dptr,a
   003E C0 02               172 	push	ar2
   0040 C0 03               173 	push	ar3
   0042 C0 04               174 	push	ar4
   0044 C0 05               175 	push	ar5
   0046 8E 82               176 	mov	dpl,r6
   0048 8F 83               177 	mov	dph,r7
   004A 88 93               178 	mov	dpx,r0
   004C 89 F0               179 	mov	b,r1
   004E 12s00r00r00         180 	lcall	___fsgt
   0052 D0 05               181 	pop	ar5
   0054 D0 04               182 	pop	ar4
   0056 D0 03               183 	pop	ar3
   0058 D0 02               184 	pop	ar2
   005A E5 82               185 	mov	a,dpl
   005C 60 15               186 	jz  00102$
   005E                     187 00125$:
                            188 ;	tancotf.c:60: errno = ERANGE;
                            189 ;	genAssign: resultIsFar = TRUE
   005E 90s00r00r00         190 	mov	dptr,#_errno
   0062 74 22               191 	mov	a,#0x22
   0064 F0                  192 	movx	@dptr,a
   0065 E4                  193 	clr	a
   0066 A3                  194 	inc	dptr
   0067 F0                  195 	movx	@dptr,a
                            196 ;	tancotf.c:61: return 0.0;
   0068 90 00 00 00         197 	mov  dptr,#0x0000
   006C 75 F0 00            198 	mov	b,#0x00
   006F 02s00r06r20         199 	ljmp	00115$
   0073                     200 00102$:
                            201 ;	tancotf.c:65: n=(x*TWO_O_PI+(x>0.0?0.5:-0.5)); /*works for +-x*/
                            202 ;	genAssign: resultIsFar = TRUE
   0073 90s00r00r00         203 	mov	dptr,#___fsmul_PARM_2
   0077 EA                  204 	mov	a,r2
   0078 F0                  205 	movx	@dptr,a
   0079 A3                  206 	inc	dptr
   007A EB                  207 	mov	a,r3
   007B F0                  208 	movx	@dptr,a
   007C A3                  209 	inc	dptr
   007D EC                  210 	mov	a,r4
   007E F0                  211 	movx	@dptr,a
   007F A3                  212 	inc	dptr
   0080 ED                  213 	mov	a,r5
   0081 F0                  214 	movx	@dptr,a
   0082 C0 02               215 	push	ar2
   0084 C0 03               216 	push	ar3
   0086 C0 04               217 	push	ar4
   0088 C0 05               218 	push	ar5
   008A 90 22 F9 83         219 	mov	dptr,#0x22F983
   008E 75 F0 3F            220 	mov	b,#0x3F
   0091 12s00r00r00         221 	lcall	___fsmul
   0095 AE 82               222 	mov	r6,dpl
   0097 AF 83               223 	mov	r7,dph
   0099 A8 93               224 	mov	r0,dpx
   009B A9 F0               225 	mov	r1,b
   009D D0 05               226 	pop	ar5
   009F D0 04               227 	pop	ar4
   00A1 D0 03               228 	pop	ar3
   00A3 D0 02               229 	pop	ar2
                            230 ;	genAssign: resultIsFar = TRUE
   00A5 90s00r00r00         231 	mov	dptr,#___fsgt_PARM_2
   00A9 E4                  232 	clr	a
   00AA F0                  233 	movx	@dptr,a
   00AB A3                  234 	inc	dptr
   00AC F0                  235 	movx	@dptr,a
   00AD A3                  236 	inc	dptr
   00AE F0                  237 	movx	@dptr,a
   00AF A3                  238 	inc	dptr
   00B0 F0                  239 	movx	@dptr,a
   00B1 C0 02               240 	push	ar2
   00B3 C0 03               241 	push	ar3
   00B5 C0 04               242 	push	ar4
   00B7 C0 05               243 	push	ar5
   00B9 C0 06               244 	push	ar6
   00BB C0 07               245 	push	ar7
   00BD C0 00               246 	push	ar0
   00BF C0 01               247 	push	ar1
   00C1 8A 82               248 	mov	dpl,r2
   00C3 8B 83               249 	mov	dph,r3
   00C5 8C 93               250 	mov	dpx,r4
   00C7 8D F0               251 	mov	b,r5
   00C9 12s00r00r00         252 	lcall	___fsgt
   00CD D0 01               253 	pop	ar1
   00CF D0 00               254 	pop	ar0
   00D1 D0 07               255 	pop	ar7
   00D3 D0 06               256 	pop	ar6
   00D5 D0 05               257 	pop	ar5
   00D7 D0 04               258 	pop	ar4
   00D9 D0 03               259 	pop	ar3
   00DB D0 02               260 	pop	ar2
   00DD E5 82               261 	mov	a,dpl
   00DF 60 11               262 	jz  00117$
   00E1                     263 00126$:
                            264 ;	genAssign: resultIsFar = TRUE
   00E1 90s00r00r12         265 	mov	dptr,#_tancotf_sloc0_1_0
   00E5 E4                  266 	clr  a
   00E6 F0                  267 	movx @dptr,a
   00E7 A3                  268 	inc  dptr
   00E8 F0                  269 	movx @dptr,a
   00E9 A3                  270 	inc	dptr
   00EA E4                  271 	clr  a
   00EB F0                  272 	movx	@dptr,a
   00EC A3                  273 	inc	dptr
   00ED 74 3F               274 	mov	a,#0x3F
   00EF F0                  275 	movx	@dptr,a
   00F0 80 0F               276 	sjmp 00118$
   00F2                     277 00117$:
                            278 ;	genAssign: resultIsFar = TRUE
   00F2 90s00r00r12         279 	mov	dptr,#_tancotf_sloc0_1_0
   00F6 E4                  280 	clr  a
   00F7 F0                  281 	movx @dptr,a
   00F8 A3                  282 	inc  dptr
   00F9 F0                  283 	movx @dptr,a
   00FA A3                  284 	inc	dptr
   00FB E4                  285 	clr  a
   00FC F0                  286 	movx	@dptr,a
   00FD A3                  287 	inc	dptr
   00FE 74 BF               288 	mov	a,#0xBF
   0100 F0                  289 	movx	@dptr,a
   0101                     290 00118$:
   0101 90s00r00r12         291 	mov	dptr,#_tancotf_sloc0_1_0
                            292 ;	genAssign: resultIsFar = TRUE
   0105 75 86 21            293 	mov	dps,#0x21
   0108 90s00r00r00         294 	mov	dptr,#___fsadd_PARM_2
   010C E0                  295 	movx	a,@dptr
   010D F0                  296 	movx	@dptr,a
   010E A3                  297 	inc	dptr
   010F A3                  298 	inc	dptr
   0110 E0                  299 	movx	a,@dptr
   0111 F0                  300 	movx	@dptr,a
   0112 A3                  301 	inc	dptr
   0113 A3                  302 	inc	dptr
   0114 E0                  303 	movx	a,@dptr
   0115 F0                  304 	movx	@dptr,a
   0116 A3                  305 	inc	dptr
   0117 A3                  306 	inc	dptr
   0118 E0                  307 	movx	a,@dptr
   0119 F0                  308 	movx	@dptr,a
   011A 75 86 00            309 	mov	dps,#0
   011D C0 02               310 	push	ar2
   011F C0 03               311 	push	ar3
   0121 C0 04               312 	push	ar4
   0123 C0 05               313 	push	ar5
   0125 8E 82               314 	mov	dpl,r6
   0127 8F 83               315 	mov	dph,r7
   0129 88 93               316 	mov	dpx,r0
   012B 89 F0               317 	mov	b,r1
   012D 12s00r00r00         318 	lcall	___fsadd
   0131 D0 05               319 	pop	ar5
   0133 D0 04               320 	pop	ar4
   0135 D0 03               321 	pop	ar3
   0137 D0 02               322 	pop	ar2
   0139 C0 02               323 	push	ar2
   013B C0 03               324 	push	ar3
   013D C0 04               325 	push	ar4
   013F C0 05               326 	push	ar5
   0141 12s00r00r00         327 	lcall	___fs2sint
   0145 AE 82               328 	mov	r6,dpl
   0147 AF 83               329 	mov	r7,dph
   0149 D0 05               330 	pop	ar5
   014B D0 04               331 	pop	ar4
   014D D0 03               332 	pop	ar3
   014F D0 02               333 	pop	ar2
                            334 ;	genAssign: resultIsFar = TRUE
   0151 90s00r00r10         335 	mov	dptr,#_tancotf_n_1_1
   0155 EE                  336 	mov	a,r6
   0156 F0                  337 	movx	@dptr,a
   0157 A3                  338 	inc	dptr
   0158 EF                  339 	mov	a,r7
   0159 F0                  340 	movx	@dptr,a
                            341 ;	tancotf.c:66: xn=n;
   015A C0 02               342 	push	ar2
   015C C0 03               343 	push	ar3
   015E C0 04               344 	push	ar4
   0160 C0 05               345 	push	ar5
   0162 05 86               346 	inc	dps
   0164 90s00r00r10         347 	mov	dptr,#_tancotf_n_1_1
   0168 E0                  348 	movx	a,@dptr
   0169 F5 82               349 	mov	dpl,a
   016B A3                  350 	inc	dptr
   016C E0                  351 	movx	a,@dptr
   016D F5 83               352 	mov	dph,a
   016F 75 86 00            353 	mov	dps,#0
   0172 12s00r00r00         354 	lcall	___sint2fs
   0176 A8 82               355 	mov	r0,dpl
   0178 A9 83               356 	mov	r1,dph
   017A AE 93               357 	mov	r6,dpx
   017C AF F0               358 	mov	r7,b
   017E D0 05               359 	pop	ar5
   0180 D0 04               360 	pop	ar4
   0182 D0 03               361 	pop	ar3
   0184 D0 02               362 	pop	ar2
                            363 ;	genAssign: resultIsFar = TRUE
   0186 90s00r00r08         364 	mov	dptr,#_tancotf_xn_1_1
   018A E8                  365 	mov	a,r0
   018B F0                  366 	movx	@dptr,a
   018C A3                  367 	inc	dptr
   018D E9                  368 	mov	a,r1
   018E F0                  369 	movx	@dptr,a
   018F A3                  370 	inc	dptr
   0190 EE                  371 	mov	a,r6
   0191 F0                  372 	movx	@dptr,a
   0192 A3                  373 	inc	dptr
   0193 EF                  374 	mov	a,r7
   0194 F0                  375 	movx	@dptr,a
                            376 ;	tancotf.c:68: xnum=(int)x;
   0195 C0 02               377 	push	ar2
   0197 C0 03               378 	push	ar3
   0199 C0 04               379 	push	ar4
   019B C0 05               380 	push	ar5
   019D 8A 82               381 	mov	dpl,r2
   019F 8B 83               382 	mov	dph,r3
   01A1 8C 93               383 	mov	dpx,r4
   01A3 8D F0               384 	mov	b,r5
   01A5 12s00r00r00         385 	lcall	___fs2sint
   01A9 D0 05               386 	pop	ar5
   01AB D0 04               387 	pop	ar4
   01AD D0 03               388 	pop	ar3
   01AF D0 02               389 	pop	ar2
   01B1 C0 02               390 	push	ar2
   01B3 C0 03               391 	push	ar3
   01B5 C0 04               392 	push	ar4
   01B7 C0 05               393 	push	ar5
   01B9 12s00r00r00         394 	lcall	___sint2fs
   01BD AE 82               395 	mov	r6,dpl
   01BF AF 83               396 	mov	r7,dph
   01C1 A8 93               397 	mov	r0,dpx
   01C3 A9 F0               398 	mov	r1,b
   01C5 D0 05               399 	pop	ar5
   01C7 D0 04               400 	pop	ar4
   01C9 D0 03               401 	pop	ar3
   01CB D0 02               402 	pop	ar2
                            403 ;	genAssign: resultIsFar = TRUE
                            404 ;	tancotf.c:69: xden=x-xnum;
                            405 ;	genAssign: resultIsFar = TRUE
   01CD 90s00r00r00         406 	mov	dptr,#___fssub_PARM_2
   01D1 EE                  407 	mov	a,r6
   01D2 F0                  408 	movx	@dptr,a
   01D3 A3                  409 	inc	dptr
   01D4 EF                  410 	mov	a,r7
   01D5 F0                  411 	movx	@dptr,a
   01D6 A3                  412 	inc	dptr
   01D7 E8                  413 	mov	a,r0
   01D8 F0                  414 	movx	@dptr,a
   01D9 A3                  415 	inc	dptr
   01DA E9                  416 	mov	a,r1
   01DB F0                  417 	movx	@dptr,a
   01DC C0 06               418 	push	ar6
   01DE C0 07               419 	push	ar7
   01E0 C0 00               420 	push	ar0
   01E2 C0 01               421 	push	ar1
   01E4 8A 82               422 	mov	dpl,r2
   01E6 8B 83               423 	mov	dph,r3
   01E8 8C 93               424 	mov	dpx,r4
   01EA 8D F0               425 	mov	b,r5
   01EC 12s00r00r00         426 	lcall	___fssub
   01F0 AA 82               427 	mov	r2,dpl
   01F2 AB 83               428 	mov	r3,dph
   01F4 AC 93               429 	mov	r4,dpx
   01F6 AD F0               430 	mov	r5,b
   01F8 D0 01               431 	pop	ar1
   01FA D0 00               432 	pop	ar0
   01FC D0 07               433 	pop	ar7
   01FE D0 06               434 	pop	ar6
                            435 ;	genAssign: resultIsFar = TRUE
   0200 90s00r00r0C         436 	mov	dptr,#_tancotf_xden_1_1
   0204 EA                  437 	mov	a,r2
   0205 F0                  438 	movx	@dptr,a
   0206 A3                  439 	inc	dptr
   0207 EB                  440 	mov	a,r3
   0208 F0                  441 	movx	@dptr,a
   0209 A3                  442 	inc	dptr
   020A EC                  443 	mov	a,r4
   020B F0                  444 	movx	@dptr,a
   020C A3                  445 	inc	dptr
   020D ED                  446 	mov	a,r5
   020E F0                  447 	movx	@dptr,a
                            448 ;	tancotf.c:70: f=((xnum-xn*C1)+xden)-xn*C2;
   020F 90s00r00r08         449 	mov	dptr,#_tancotf_xn_1_1
                            450 ;	genAssign: resultIsFar = TRUE
   0213 75 86 21            451 	mov	dps,#0x21
   0216 90s00r00r00         452 	mov	dptr,#___fsmul_PARM_2
   021A E0                  453 	movx	a,@dptr
   021B F0                  454 	movx	@dptr,a
   021C A3                  455 	inc	dptr
   021D A3                  456 	inc	dptr
   021E E0                  457 	movx	a,@dptr
   021F F0                  458 	movx	@dptr,a
   0220 A3                  459 	inc	dptr
   0221 A3                  460 	inc	dptr
   0222 E0                  461 	movx	a,@dptr
   0223 F0                  462 	movx	@dptr,a
   0224 A3                  463 	inc	dptr
   0225 A3                  464 	inc	dptr
   0226 E0                  465 	movx	a,@dptr
   0227 F0                  466 	movx	@dptr,a
   0228 75 86 00            467 	mov	dps,#0
   022B C0 06               468 	push	ar6
   022D C0 07               469 	push	ar7
   022F C0 00               470 	push	ar0
   0231 C0 01               471 	push	ar1
   0233 90 00 00 00         472 	mov  dptr,#0x0000
   0237 75 93 C9            473 	mov	dpx,#0xC9
   023A 75 F0 3F            474 	mov	b,#0x3F
   023D 12s00r00r00         475 	lcall	___fsmul
   0241 AA 82               476 	mov	r2,dpl
   0243 AB 83               477 	mov	r3,dph
   0245 AC 93               478 	mov	r4,dpx
   0247 AD F0               479 	mov	r5,b
   0249 D0 01               480 	pop	ar1
   024B D0 00               481 	pop	ar0
   024D D0 07               482 	pop	ar7
   024F D0 06               483 	pop	ar6
                            484 ;	genAssign: resultIsFar = TRUE
   0251 90s00r00r00         485 	mov	dptr,#___fssub_PARM_2
   0255 EA                  486 	mov	a,r2
   0256 F0                  487 	movx	@dptr,a
   0257 A3                  488 	inc	dptr
   0258 EB                  489 	mov	a,r3
   0259 F0                  490 	movx	@dptr,a
   025A A3                  491 	inc	dptr
   025B EC                  492 	mov	a,r4
   025C F0                  493 	movx	@dptr,a
   025D A3                  494 	inc	dptr
   025E ED                  495 	mov	a,r5
   025F F0                  496 	movx	@dptr,a
   0260 8E 82               497 	mov	dpl,r6
   0262 8F 83               498 	mov	dph,r7
   0264 88 93               499 	mov	dpx,r0
   0266 89 F0               500 	mov	b,r1
   0268 12s00r00r00         501 	lcall	___fssub
   026C AA 82               502 	mov	r2,dpl
   026E AB 83               503 	mov	r3,dph
   0270 AC 93               504 	mov	r4,dpx
   0272 AD F0               505 	mov	r5,b
   0274 90s00r00r0C         506 	mov	dptr,#_tancotf_xden_1_1
                            507 ;	genAssign: resultIsFar = TRUE
   0278 75 86 21            508 	mov	dps,#0x21
   027B 90s00r00r00         509 	mov	dptr,#___fsadd_PARM_2
   027F E0                  510 	movx	a,@dptr
   0280 F0                  511 	movx	@dptr,a
   0281 A3                  512 	inc	dptr
   0282 A3                  513 	inc	dptr
   0283 E0                  514 	movx	a,@dptr
   0284 F0                  515 	movx	@dptr,a
   0285 A3                  516 	inc	dptr
   0286 A3                  517 	inc	dptr
   0287 E0                  518 	movx	a,@dptr
   0288 F0                  519 	movx	@dptr,a
   0289 A3                  520 	inc	dptr
   028A A3                  521 	inc	dptr
   028B E0                  522 	movx	a,@dptr
   028C F0                  523 	movx	@dptr,a
   028D 75 86 00            524 	mov	dps,#0
   0290 8A 82               525 	mov	dpl,r2
   0292 8B 83               526 	mov	dph,r3
   0294 8C 93               527 	mov	dpx,r4
   0296 8D F0               528 	mov	b,r5
   0298 12s00r00r00         529 	lcall	___fsadd
   029C AE 82               530 	mov	r6,dpl
   029E AF 83               531 	mov	r7,dph
   02A0 A8 93               532 	mov	r0,dpx
   02A2 A9 F0               533 	mov	r1,b
   02A4 90s00r00r08         534 	mov	dptr,#_tancotf_xn_1_1
                            535 ;	genAssign: resultIsFar = TRUE
   02A8 75 86 21            536 	mov	dps,#0x21
   02AB 90s00r00r00         537 	mov	dptr,#___fsmul_PARM_2
   02AF E0                  538 	movx	a,@dptr
   02B0 F0                  539 	movx	@dptr,a
   02B1 A3                  540 	inc	dptr
   02B2 A3                  541 	inc	dptr
   02B3 E0                  542 	movx	a,@dptr
   02B4 F0                  543 	movx	@dptr,a
   02B5 A3                  544 	inc	dptr
   02B6 A3                  545 	inc	dptr
   02B7 E0                  546 	movx	a,@dptr
   02B8 F0                  547 	movx	@dptr,a
   02B9 A3                  548 	inc	dptr
   02BA A3                  549 	inc	dptr
   02BB E0                  550 	movx	a,@dptr
   02BC F0                  551 	movx	@dptr,a
   02BD 75 86 00            552 	mov	dps,#0
   02C0 C0 06               553 	push	ar6
   02C2 C0 07               554 	push	ar7
   02C4 C0 00               555 	push	ar0
   02C6 C0 01               556 	push	ar1
   02C8 90 FD AA 22         557 	mov	dptr,#0xFDAA22
   02CC 75 F0 39            558 	mov	b,#0x39
   02CF 12s00r00r00         559 	lcall	___fsmul
   02D3 AA 82               560 	mov	r2,dpl
   02D5 AB 83               561 	mov	r3,dph
   02D7 AC 93               562 	mov	r4,dpx
   02D9 AD F0               563 	mov	r5,b
   02DB D0 01               564 	pop	ar1
   02DD D0 00               565 	pop	ar0
   02DF D0 07               566 	pop	ar7
   02E1 D0 06               567 	pop	ar6
                            568 ;	genAssign: resultIsFar = TRUE
   02E3 90s00r00r00         569 	mov	dptr,#___fssub_PARM_2
   02E7 EA                  570 	mov	a,r2
   02E8 F0                  571 	movx	@dptr,a
   02E9 A3                  572 	inc	dptr
   02EA EB                  573 	mov	a,r3
   02EB F0                  574 	movx	@dptr,a
   02EC A3                  575 	inc	dptr
   02ED EC                  576 	mov	a,r4
   02EE F0                  577 	movx	@dptr,a
   02EF A3                  578 	inc	dptr
   02F0 ED                  579 	mov	a,r5
   02F1 F0                  580 	movx	@dptr,a
   02F2 8E 82               581 	mov	dpl,r6
   02F4 8F 83               582 	mov	dph,r7
   02F6 88 93               583 	mov	dpx,r0
   02F8 89 F0               584 	mov	b,r1
   02FA 12s00r00r00         585 	lcall	___fssub
   02FE AA 82               586 	mov	r2,dpl
   0300 AB 83               587 	mov	r3,dph
   0302 AC 93               588 	mov	r4,dpx
   0304 AD F0               589 	mov	r5,b
                            590 ;	genAssign: resultIsFar = TRUE
   0306 90s00r00r00         591 	mov	dptr,#_tancotf_f_1_1
   030A EA                  592 	mov	a,r2
   030B F0                  593 	movx	@dptr,a
   030C A3                  594 	inc	dptr
   030D EB                  595 	mov	a,r3
   030E F0                  596 	movx	@dptr,a
   030F A3                  597 	inc	dptr
   0310 EC                  598 	mov	a,r4
   0311 F0                  599 	movx	@dptr,a
   0312 A3                  600 	inc	dptr
   0313 ED                  601 	mov	a,r5
   0314 F0                  602 	movx	@dptr,a
                            603 ;	tancotf.c:72: if (fabsf(f) < EPS)
   0315 05 86               604 	inc	dps
   0317 90s00r00r00         605 	mov	dptr,#_tancotf_f_1_1
   031B E0                  606 	movx	a,@dptr
   031C F5 82               607 	mov	dpl,a
   031E A3                  608 	inc	dptr
   031F E0                  609 	movx	a,@dptr
   0320 F5 83               610 	mov	dph,a
   0322 A3                  611 	inc	dptr
   0323 E0                  612 	movx	a,@dptr
   0324 F5 93               613 	mov	dpx,a
   0326 A3                  614 	inc	dptr
   0327 E0                  615 	movx	a,@dptr
   0328 F5 F0               616 	mov	b,a
   032A 75 86 00            617 	mov	dps,#0
   032D 12s00r00r00         618 	lcall	_fabsf
   0331 AA 82               619 	mov	r2,dpl
   0333 AB 83               620 	mov	r3,dph
   0335 AC 93               621 	mov	r4,dpx
   0337 AD F0               622 	mov	r5,b
                            623 ;	genAssign: resultIsFar = TRUE
   0339 90s00r00r00         624 	mov	dptr,#___fslt_PARM_2
   033D E4                  625 	clr  a
   033E F0                  626 	movx @dptr,a
   033F A3                  627 	inc  dptr
   0340 F0                  628 	movx @dptr,a
   0341 A3                  629 	inc	dptr
   0342 74 80               630 	mov	a,#0x80
   0344 F0                  631 	movx	@dptr,a
   0345 A3                  632 	inc	dptr
   0346 74 39               633 	mov	a,#0x39
   0348 F0                  634 	movx	@dptr,a
   0349 8A 82               635 	mov	dpl,r2
   034B 8B 83               636 	mov	dph,r3
   034D 8C 93               637 	mov	dpx,r4
   034F 8D F0               638 	mov	b,r5
   0351 12s00r00r00         639 	lcall	___fslt
   0355 E5 82               640 	mov	a,dpl
   0357 60 23               641 	jz  00104$
   0359                     642 00127$:
                            643 ;	tancotf.c:74: xnum = f;
   0359 90s00r00r00         644 	mov	dptr,#_tancotf_f_1_1
                            645 ;	genAssign: resultIsFar = TRUE
   035D E0                  646 	movx	a,@dptr
   035E FE                  647 	mov	r6,a
   035F A3                  648 	inc	dptr
   0360 E0                  649 	movx	a,@dptr
   0361 FF                  650 	mov	r7,a
   0362 A3                  651 	inc	dptr
   0363 E0                  652 	movx	a,@dptr
   0364 F8                  653 	mov	r0,a
   0365 A3                  654 	inc	dptr
   0366 E0                  655 	movx	a,@dptr
   0367 F9                  656 	mov	r1,a
                            657 ;	tancotf.c:75: xden = 1.0;
                            658 ;	genAssign: resultIsFar = TRUE
   0368 90s00r00r0C         659 	mov	dptr,#_tancotf_xden_1_1
   036C E4                  660 	clr  a
   036D F0                  661 	movx @dptr,a
   036E A3                  662 	inc  dptr
   036F F0                  663 	movx @dptr,a
   0370 A3                  664 	inc	dptr
   0371 74 80               665 	mov	a,#0x80
   0373 F0                  666 	movx	@dptr,a
   0374 A3                  667 	inc	dptr
   0375 74 3F               668 	mov	a,#0x3F
   0377 F0                  669 	movx	@dptr,a
   0378 02s00r05r59         670 	ljmp	00105$
   037C                     671 00104$:
                            672 ;	tancotf.c:79: g = f*f;
   037C 90s00r00r00         673 	mov	dptr,#_tancotf_f_1_1
                            674 ;	genAssign: resultIsFar = TRUE
   0380 75 86 21            675 	mov	dps,#0x21
   0383 90s00r00r00         676 	mov	dptr,#___fsmul_PARM_2
   0387 E0                  677 	movx	a,@dptr
   0388 F0                  678 	movx	@dptr,a
   0389 A3                  679 	inc	dptr
   038A A3                  680 	inc	dptr
   038B E0                  681 	movx	a,@dptr
   038C F0                  682 	movx	@dptr,a
   038D A3                  683 	inc	dptr
   038E A3                  684 	inc	dptr
   038F E0                  685 	movx	a,@dptr
   0390 F0                  686 	movx	@dptr,a
   0391 A3                  687 	inc	dptr
   0392 A3                  688 	inc	dptr
   0393 E0                  689 	movx	a,@dptr
   0394 F0                  690 	movx	@dptr,a
   0395 75 86 01            691 	mov	dps, #1
   0398 90s00r00r00         692 	mov	dptr,#_tancotf_f_1_1
   039C E0                  693 	movx	a,@dptr
   039D F5 82               694 	mov	dpl,a
   039F A3                  695 	inc	dptr
   03A0 E0                  696 	movx	a,@dptr
   03A1 F5 83               697 	mov	dph,a
   03A3 A3                  698 	inc	dptr
   03A4 E0                  699 	movx	a,@dptr
   03A5 F5 93               700 	mov	dpx,a
   03A7 A3                  701 	inc	dptr
   03A8 E0                  702 	movx	a,@dptr
   03A9 F5 F0               703 	mov	b,a
   03AB 75 86 00            704 	mov	dps,#0
   03AE 12s00r00r00         705 	lcall	___fsmul
   03B2 AA 82               706 	mov	r2,dpl
   03B4 AB 83               707 	mov	r3,dph
   03B6 AC 93               708 	mov	r4,dpx
   03B8 AD F0               709 	mov	r5,b
                            710 ;	genAssign: resultIsFar = TRUE
   03BA 90s00r00r04         711 	mov	dptr,#_tancotf_g_1_1
   03BE EA                  712 	mov	a,r2
   03BF F0                  713 	movx	@dptr,a
   03C0 A3                  714 	inc	dptr
   03C1 EB                  715 	mov	a,r3
   03C2 F0                  716 	movx	@dptr,a
   03C3 A3                  717 	inc	dptr
   03C4 EC                  718 	mov	a,r4
   03C5 F0                  719 	movx	@dptr,a
   03C6 A3                  720 	inc	dptr
   03C7 ED                  721 	mov	a,r5
   03C8 F0                  722 	movx	@dptr,a
                            723 ;	tancotf.c:80: xnum = P(f,g);
   03C9 90s00r00r04         724 	mov	dptr,#_tancotf_g_1_1
                            725 ;	genAssign: resultIsFar = TRUE
   03CD 75 86 21            726 	mov	dps,#0x21
   03D0 90s00r00r00         727 	mov	dptr,#___fsmul_PARM_2
   03D4 E0                  728 	movx	a,@dptr
   03D5 F0                  729 	movx	@dptr,a
   03D6 A3                  730 	inc	dptr
   03D7 A3                  731 	inc	dptr
   03D8 E0                  732 	movx	a,@dptr
   03D9 F0                  733 	movx	@dptr,a
   03DA A3                  734 	inc	dptr
   03DB A3                  735 	inc	dptr
   03DC E0                  736 	movx	a,@dptr
   03DD F0                  737 	movx	@dptr,a
   03DE A3                  738 	inc	dptr
   03DF A3                  739 	inc	dptr
   03E0 E0                  740 	movx	a,@dptr
   03E1 F0                  741 	movx	@dptr,a
   03E2 75 86 00            742 	mov	dps,#0
   03E5 90 C4 33 B8         743 	mov	dptr,#0xC433B8
   03E9 75 F0 BD            744 	mov	b,#0xBD
   03EC 12s00r00r00         745 	lcall	___fsmul
   03F0 AA 82               746 	mov	r2,dpl
   03F2 AB 83               747 	mov	r3,dph
   03F4 AC 93               748 	mov	r4,dpx
   03F6 AD F0               749 	mov	r5,b
   03F8 90s00r00r00         750 	mov	dptr,#_tancotf_f_1_1
                            751 ;	genAssign: resultIsFar = TRUE
   03FC 75 86 21            752 	mov	dps,#0x21
   03FF 90s00r00r00         753 	mov	dptr,#___fsmul_PARM_2
   0403 E0                  754 	movx	a,@dptr
   0404 F0                  755 	movx	@dptr,a
   0405 A3                  756 	inc	dptr
   0406 A3                  757 	inc	dptr
   0407 E0                  758 	movx	a,@dptr
   0408 F0                  759 	movx	@dptr,a
   0409 A3                  760 	inc	dptr
   040A A3                  761 	inc	dptr
   040B E0                  762 	movx	a,@dptr
   040C F0                  763 	movx	@dptr,a
   040D A3                  764 	inc	dptr
   040E A3                  765 	inc	dptr
   040F E0                  766 	movx	a,@dptr
   0410 F0                  767 	movx	@dptr,a
   0411 75 86 00            768 	mov	dps,#0
   0414 8A 82               769 	mov	dpl,r2
   0416 8B 83               770 	mov	dph,r3
   0418 8C 93               771 	mov	dpx,r4
   041A 8D F0               772 	mov	b,r5
   041C 12s00r00r00         773 	lcall	___fsmul
   0420 AA 82               774 	mov	r2,dpl
   0422 AB 83               775 	mov	r3,dph
   0424 AC 93               776 	mov	r4,dpx
   0426 AD F0               777 	mov	r5,b
   0428 90s00r00r00         778 	mov	dptr,#_tancotf_f_1_1
                            779 ;	genAssign: resultIsFar = TRUE
   042C 75 86 21            780 	mov	dps,#0x21
   042F 90s00r00r00         781 	mov	dptr,#___fsadd_PARM_2
   0433 E0                  782 	movx	a,@dptr
   0434 F0                  783 	movx	@dptr,a
   0435 A3                  784 	inc	dptr
   0436 A3                  785 	inc	dptr
   0437 E0                  786 	movx	a,@dptr
   0438 F0                  787 	movx	@dptr,a
   0439 A3                  788 	inc	dptr
   043A A3                  789 	inc	dptr
   043B E0                  790 	movx	a,@dptr
   043C F0                  791 	movx	@dptr,a
   043D A3                  792 	inc	dptr
   043E A3                  793 	inc	dptr
   043F E0                  794 	movx	a,@dptr
   0440 F0                  795 	movx	@dptr,a
   0441 75 86 00            796 	mov	dps,#0
   0444 8A 82               797 	mov	dpl,r2
   0446 8B 83               798 	mov	dph,r3
   0448 8C 93               799 	mov	dpx,r4
   044A 8D F0               800 	mov	b,r5
   044C 12s00r00r00         801 	lcall	___fsadd
   0450 AA 82               802 	mov	r2,dpl
   0452 AB 83               803 	mov	r3,dph
   0454 AC 93               804 	mov	r4,dpx
   0456 AD F0               805 	mov	r5,b
                            806 ;	genAssign: resultIsFar = TRUE
   0458 8A 06               807 	mov	ar6,r2
   045A 8B 07               808 	mov	ar7,r3
   045C 8C 00               809 	mov	ar0,r4
   045E 8D 01               810 	mov	ar1,r5
                            811 ;	tancotf.c:81: xden = Q(g);
   0460 90s00r00r04         812 	mov	dptr,#_tancotf_g_1_1
                            813 ;	genAssign: resultIsFar = TRUE
   0464 75 86 21            814 	mov	dps,#0x21
   0467 90s00r00r00         815 	mov	dptr,#___fsmul_PARM_2
   046B E0                  816 	movx	a,@dptr
   046C F0                  817 	movx	@dptr,a
   046D A3                  818 	inc	dptr
   046E A3                  819 	inc	dptr
   046F E0                  820 	movx	a,@dptr
   0470 F0                  821 	movx	@dptr,a
   0471 A3                  822 	inc	dptr
   0472 A3                  823 	inc	dptr
   0473 E0                  824 	movx	a,@dptr
   0474 F0                  825 	movx	@dptr,a
   0475 A3                  826 	inc	dptr
   0476 A3                  827 	inc	dptr
   0477 E0                  828 	movx	a,@dptr
   0478 F0                  829 	movx	@dptr,a
   0479 75 86 00            830 	mov	dps,#0
   047C C0 06               831 	push	ar6
   047E C0 07               832 	push	ar7
   0480 C0 00               833 	push	ar0
   0482 C0 01               834 	push	ar1
   0484 90 1F 33 75         835 	mov	dptr,#0x1F3375
   0488 75 F0 3C            836 	mov	b,#0x3C
   048B 12s00r00r00         837 	lcall	___fsmul
   048F AA 82               838 	mov	r2,dpl
   0491 AB 83               839 	mov	r3,dph
   0493 AC 93               840 	mov	r4,dpx
   0495 AD F0               841 	mov	r5,b
   0497 D0 01               842 	pop	ar1
   0499 D0 00               843 	pop	ar0
   049B D0 07               844 	pop	ar7
   049D D0 06               845 	pop	ar6
                            846 ;	genAssign: resultIsFar = TRUE
   049F 90s00r00r00         847 	mov	dptr,#___fsadd_PARM_2
   04A3 74 AF               848 	mov	a,#0xAF
   04A5 F0                  849 	movx	@dptr,a
   04A6 A3                  850 	inc	dptr
   04A7 74 B7               851 	mov	a,#0xB7
   04A9 F0                  852 	movx	@dptr,a
   04AA A3                  853 	inc	dptr
   04AB 74 DB               854 	mov	a,#0xDB
   04AD F0                  855 	movx	@dptr,a
   04AE A3                  856 	inc	dptr
   04AF 74 BE               857 	mov	a,#0xBE
   04B1 F0                  858 	movx	@dptr,a
   04B2 C0 06               859 	push	ar6
   04B4 C0 07               860 	push	ar7
   04B6 C0 00               861 	push	ar0
   04B8 C0 01               862 	push	ar1
   04BA 8A 82               863 	mov	dpl,r2
   04BC 8B 83               864 	mov	dph,r3
   04BE 8C 93               865 	mov	dpx,r4
   04C0 8D F0               866 	mov	b,r5
   04C2 12s00r00r00         867 	lcall	___fsadd
   04C6 AA 82               868 	mov	r2,dpl
   04C8 AB 83               869 	mov	r3,dph
   04CA AC 93               870 	mov	r4,dpx
   04CC AD F0               871 	mov	r5,b
   04CE D0 01               872 	pop	ar1
   04D0 D0 00               873 	pop	ar0
   04D2 D0 07               874 	pop	ar7
   04D4 D0 06               875 	pop	ar6
   04D6 90s00r00r04         876 	mov	dptr,#_tancotf_g_1_1
                            877 ;	genAssign: resultIsFar = TRUE
   04DA 75 86 21            878 	mov	dps,#0x21
   04DD 90s00r00r00         879 	mov	dptr,#___fsmul_PARM_2
   04E1 E0                  880 	movx	a,@dptr
   04E2 F0                  881 	movx	@dptr,a
   04E3 A3                  882 	inc	dptr
   04E4 A3                  883 	inc	dptr
   04E5 E0                  884 	movx	a,@dptr
   04E6 F0                  885 	movx	@dptr,a
   04E7 A3                  886 	inc	dptr
   04E8 A3                  887 	inc	dptr
   04E9 E0                  888 	movx	a,@dptr
   04EA F0                  889 	movx	@dptr,a
   04EB A3                  890 	inc	dptr
   04EC A3                  891 	inc	dptr
   04ED E0                  892 	movx	a,@dptr
   04EE F0                  893 	movx	@dptr,a
   04EF 75 86 00            894 	mov	dps,#0
   04F2 C0 06               895 	push	ar6
   04F4 C0 07               896 	push	ar7
   04F6 C0 00               897 	push	ar0
   04F8 C0 01               898 	push	ar1
   04FA 8A 82               899 	mov	dpl,r2
   04FC 8B 83               900 	mov	dph,r3
   04FE 8C 93               901 	mov	dpx,r4
   0500 8D F0               902 	mov	b,r5
   0502 12s00r00r00         903 	lcall	___fsmul
   0506 AA 82               904 	mov	r2,dpl
   0508 AB 83               905 	mov	r3,dph
   050A AC 93               906 	mov	r4,dpx
   050C AD F0               907 	mov	r5,b
   050E D0 01               908 	pop	ar1
   0510 D0 00               909 	pop	ar0
   0512 D0 07               910 	pop	ar7
   0514 D0 06               911 	pop	ar6
                            912 ;	genAssign: resultIsFar = TRUE
   0516 90s00r00r00         913 	mov	dptr,#___fsadd_PARM_2
   051A E4                  914 	clr  a
   051B F0                  915 	movx @dptr,a
   051C A3                  916 	inc  dptr
   051D F0                  917 	movx @dptr,a
   051E A3                  918 	inc	dptr
   051F 74 80               919 	mov	a,#0x80
   0521 F0                  920 	movx	@dptr,a
   0522 A3                  921 	inc	dptr
   0523 74 3F               922 	mov	a,#0x3F
   0525 F0                  923 	movx	@dptr,a
   0526 C0 06               924 	push	ar6
   0528 C0 07               925 	push	ar7
   052A C0 00               926 	push	ar0
   052C C0 01               927 	push	ar1
   052E 8A 82               928 	mov	dpl,r2
   0530 8B 83               929 	mov	dph,r3
   0532 8C 93               930 	mov	dpx,r4
   0534 8D F0               931 	mov	b,r5
   0536 12s00r00r00         932 	lcall	___fsadd
   053A AA 82               933 	mov	r2,dpl
   053C AB 83               934 	mov	r3,dph
   053E AC 93               935 	mov	r4,dpx
   0540 AD F0               936 	mov	r5,b
   0542 D0 01               937 	pop	ar1
   0544 D0 00               938 	pop	ar0
   0546 D0 07               939 	pop	ar7
   0548 D0 06               940 	pop	ar6
                            941 ;	genAssign: resultIsFar = TRUE
   054A 90s00r00r0C         942 	mov	dptr,#_tancotf_xden_1_1
   054E EA                  943 	mov	a,r2
   054F F0                  944 	movx	@dptr,a
   0550 A3                  945 	inc	dptr
   0551 EB                  946 	mov	a,r3
   0552 F0                  947 	movx	@dptr,a
   0553 A3                  948 	inc	dptr
   0554 EC                  949 	mov	a,r4
   0555 F0                  950 	movx	@dptr,a
   0556 A3                  951 	inc	dptr
   0557 ED                  952 	mov	a,r5
   0558 F0                  953 	movx	@dptr,a
   0559                     954 00105$:
                            955 ;	tancotf.c:84: if(n&1)
   0559 90s00r00r10         956 	mov	dptr,#_tancotf_n_1_1
   055D E0                  957 	movx	a,@dptr
   055E 30 E0 67            958 	jnb  acc.0,00113$
   0561                     959 00128$:
                            960 ;	tancotf.c:87: if(iscotan) return (-xnum/xden);
   0561 30*00 36            961 	jnb  _tancotf_PARM_2,00107$
   0564                     962 00129$:
   0564 8E 02               963 	mov	ar2,r6
   0566 8F 03               964 	mov	ar3,r7
   0568 88 04               965 	mov	ar4,r0
   056A E9                  966 	mov	a,r1
   056B B2 E7               967 	cpl	acc.7
   056D FD                  968 	mov	r5,a
   056E 90s00r00r0C         969 	mov	dptr,#_tancotf_xden_1_1
                            970 ;	genAssign: resultIsFar = TRUE
   0572 75 86 21            971 	mov	dps,#0x21
   0575 90s00r00r00         972 	mov	dptr,#___fsdiv_PARM_2
   0579 E0                  973 	movx	a,@dptr
   057A F0                  974 	movx	@dptr,a
   057B A3                  975 	inc	dptr
   057C A3                  976 	inc	dptr
   057D E0                  977 	movx	a,@dptr
   057E F0                  978 	movx	@dptr,a
   057F A3                  979 	inc	dptr
   0580 A3                  980 	inc	dptr
   0581 E0                  981 	movx	a,@dptr
   0582 F0                  982 	movx	@dptr,a
   0583 A3                  983 	inc	dptr
   0584 A3                  984 	inc	dptr
   0585 E0                  985 	movx	a,@dptr
   0586 F0                  986 	movx	@dptr,a
   0587 75 86 00            987 	mov	dps,#0
   058A 8A 82               988 	mov	dpl,r2
   058C 8B 83               989 	mov	dph,r3
   058E 8C 93               990 	mov	dpx,r4
   0590 8D F0               991 	mov	b,r5
   0592 12s00r00r00         992 	lcall	___fsdiv
   0596 02s00r06r20         993 	ljmp	00115$
   059A                     994 00107$:
                            995 ;	tancotf.c:88: else return (-xden/xnum);
   059A 90s00r00r0C         996 	mov	dptr,#_tancotf_xden_1_1
   059E E0                  997 	movx	a,@dptr
   059F FA                  998 	mov	r2,a
   05A0 A3                  999 	inc	dptr
   05A1 E0                 1000 	movx	a,@dptr
   05A2 FB                 1001 	mov	r3,a
   05A3 A3                 1002 	inc	dptr
   05A4 E0                 1003 	movx	a,@dptr
   05A5 FC                 1004 	mov	r4,a
   05A6 A3                 1005 	inc	dptr
   05A7 E0                 1006 	movx	a,@dptr
   05A8 B2 E7              1007 	cpl	acc.7
   05AA FD                 1008 	mov	r5,a
                           1009 ;	genAssign: resultIsFar = TRUE
   05AB 90s00r00r00        1010 	mov	dptr,#___fsdiv_PARM_2
   05AF EE                 1011 	mov	a,r6
   05B0 F0                 1012 	movx	@dptr,a
   05B1 A3                 1013 	inc	dptr
   05B2 EF                 1014 	mov	a,r7
   05B3 F0                 1015 	movx	@dptr,a
   05B4 A3                 1016 	inc	dptr
   05B5 E8                 1017 	mov	a,r0
   05B6 F0                 1018 	movx	@dptr,a
   05B7 A3                 1019 	inc	dptr
   05B8 E9                 1020 	mov	a,r1
   05B9 F0                 1021 	movx	@dptr,a
   05BA 8A 82              1022 	mov	dpl,r2
   05BC 8B 83              1023 	mov	dph,r3
   05BE 8C 93              1024 	mov	dpx,r4
   05C0 8D F0              1025 	mov	b,r5
   05C2 12s00r00r00        1026 	lcall	___fsdiv
   05C6 80 58              1027 	sjmp 00115$
   05C8                    1028 00113$:
                           1029 ;	tancotf.c:92: if(iscotan) return (xden/xnum);
   05C8 30*00 2D           1030 	jnb  _tancotf_PARM_2,00110$
   05CB                    1031 00130$:
                           1032 ;	genAssign: resultIsFar = TRUE
   05CB 90s00r00r00        1033 	mov	dptr,#___fsdiv_PARM_2
   05CF EE                 1034 	mov	a,r6
   05D0 F0                 1035 	movx	@dptr,a
   05D1 A3                 1036 	inc	dptr
   05D2 EF                 1037 	mov	a,r7
   05D3 F0                 1038 	movx	@dptr,a
   05D4 A3                 1039 	inc	dptr
   05D5 E8                 1040 	mov	a,r0
   05D6 F0                 1041 	movx	@dptr,a
   05D7 A3                 1042 	inc	dptr
   05D8 E9                 1043 	mov	a,r1
   05D9 F0                 1044 	movx	@dptr,a
   05DA 05 86              1045 	inc	dps
   05DC 90s00r00r0C        1046 	mov	dptr,#_tancotf_xden_1_1
   05E0 E0                 1047 	movx	a,@dptr
   05E1 F5 82              1048 	mov	dpl,a
   05E3 A3                 1049 	inc	dptr
   05E4 E0                 1050 	movx	a,@dptr
   05E5 F5 83              1051 	mov	dph,a
   05E7 A3                 1052 	inc	dptr
   05E8 E0                 1053 	movx	a,@dptr
   05E9 F5 93              1054 	mov	dpx,a
   05EB A3                 1055 	inc	dptr
   05EC E0                 1056 	movx	a,@dptr
   05ED F5 F0              1057 	mov	b,a
   05EF 75 86 00           1058 	mov	dps,#0
   05F2 12s00r00r00        1059 	lcall	___fsdiv
   05F6 80 28              1060 	sjmp 00115$
   05F8                    1061 00110$:
                           1062 ;	tancotf.c:93: else return (xnum/xden);
   05F8 90s00r00r0C        1063 	mov	dptr,#_tancotf_xden_1_1
                           1064 ;	genAssign: resultIsFar = TRUE
   05FC 75 86 21           1065 	mov	dps,#0x21
   05FF 90s00r00r00        1066 	mov	dptr,#___fsdiv_PARM_2
   0603 E0                 1067 	movx	a,@dptr
   0604 F0                 1068 	movx	@dptr,a
   0605 A3                 1069 	inc	dptr
   0606 A3                 1070 	inc	dptr
   0607 E0                 1071 	movx	a,@dptr
   0608 F0                 1072 	movx	@dptr,a
   0609 A3                 1073 	inc	dptr
   060A A3                 1074 	inc	dptr
   060B E0                 1075 	movx	a,@dptr
   060C F0                 1076 	movx	@dptr,a
   060D A3                 1077 	inc	dptr
   060E A3                 1078 	inc	dptr
   060F E0                 1079 	movx	a,@dptr
   0610 F0                 1080 	movx	@dptr,a
   0611 75 86 00           1081 	mov	dps,#0
   0614 8E 82              1082 	mov	dpl,r6
   0616 8F 83              1083 	mov	dph,r7
   0618 88 93              1084 	mov	dpx,r0
   061A 89 F0              1085 	mov	b,r1
   061C 12s00r00r00        1086 	lcall	___fsdiv
   0620                    1087 00115$:
   0620 22                 1088 	ret
                           1089 	.area CSEG    (CODE)
                           1090 	.area CONST   (CODE)
                           1091 	.area XINIT   (CODE)
                           1092 	.area CABS    (ABS,CODE)
