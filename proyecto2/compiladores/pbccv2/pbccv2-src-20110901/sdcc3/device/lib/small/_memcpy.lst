                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:23 2015
                              5 ;--------------------------------------------------------
                              6 	.module _memcpy
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _memcpy_PARM_3
                             13 	.globl _memcpy_PARM_2
                             14 	.globl _memcpy
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 	.area RSEG    (ABS,DATA)
   0000                      19 	.org 0x0000
                             20 ;--------------------------------------------------------
                             21 ; special function bits
                             22 ;--------------------------------------------------------
                             23 	.area RSEG    (ABS,DATA)
   0000                      24 	.org 0x0000
                             25 ;--------------------------------------------------------
                             26 ; overlayable register banks
                             27 ;--------------------------------------------------------
                             28 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      29 	.ds 8
                             30 ;--------------------------------------------------------
                             31 ; internal ram data
                             32 ;--------------------------------------------------------
                             33 	.area DSEG    (DATA)
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in internal ram 
                             36 ;--------------------------------------------------------
                             37 	.area	OSEG    (OVR,DATA)
   0000                      38 _memcpy_PARM_2::
   0000                      39 	.ds 3
   0003                      40 _memcpy_PARM_3::
   0003                      41 	.ds 2
   0005                      42 _memcpy_ret_1_1::
   0005                      43 	.ds 3
   0008                      44 _memcpy_s_1_1::
   0008                      45 	.ds 3
                             46 ;--------------------------------------------------------
                             47 ; indirectly addressable internal ram data
                             48 ;--------------------------------------------------------
                             49 	.area ISEG    (DATA)
                             50 ;--------------------------------------------------------
                             51 ; absolute internal ram data
                             52 ;--------------------------------------------------------
                             53 	.area IABS    (ABS,DATA)
                             54 	.area IABS    (ABS,DATA)
                             55 ;--------------------------------------------------------
                             56 ; bit data
                             57 ;--------------------------------------------------------
                             58 	.area BSEG    (BIT)
                             59 ;--------------------------------------------------------
                             60 ; paged external ram data
                             61 ;--------------------------------------------------------
                             62 	.area PSEG    (PAG,XDATA)
                             63 ;--------------------------------------------------------
                             64 ; external ram data
                             65 ;--------------------------------------------------------
                             66 	.area XSEG    (XDATA)
                             67 ;--------------------------------------------------------
                             68 ; absolute external ram data
                             69 ;--------------------------------------------------------
                             70 	.area XABS    (ABS,XDATA)
                             71 ;--------------------------------------------------------
                             72 ; external initialized ram data
                             73 ;--------------------------------------------------------
                             74 	.area XISEG   (XDATA)
                             75 	.area HOME    (CODE)
                             76 	.area GSINIT0 (CODE)
                             77 	.area GSINIT1 (CODE)
                             78 	.area GSINIT2 (CODE)
                             79 	.area GSINIT3 (CODE)
                             80 	.area GSINIT4 (CODE)
                             81 	.area GSINIT5 (CODE)
                             82 	.area GSINIT  (CODE)
                             83 	.area GSFINAL (CODE)
                             84 	.area CSEG    (CODE)
                             85 ;--------------------------------------------------------
                             86 ; global & static initialisations
                             87 ;--------------------------------------------------------
                             88 	.area HOME    (CODE)
                             89 	.area GSINIT  (CODE)
                             90 	.area GSFINAL (CODE)
                             91 	.area GSINIT  (CODE)
                             92 ;--------------------------------------------------------
                             93 ; Home
                             94 ;--------------------------------------------------------
                             95 	.area HOME    (CODE)
                             96 	.area HOME    (CODE)
                             97 ;--------------------------------------------------------
                             98 ; code
                             99 ;--------------------------------------------------------
                            100 	.area CSEG    (CODE)
                            101 ;------------------------------------------------------------
                            102 ;Allocation info for local variables in function 'memcpy'
                            103 ;------------------------------------------------------------
                            104 ;src                       Allocated with name '_memcpy_PARM_2'
                            105 ;acount                    Allocated with name '_memcpy_PARM_3'
                            106 ;dst                       Allocated to registers r2 r3 r4 
                            107 ;ret                       Allocated with name '_memcpy_ret_1_1'
                            108 ;d                         Allocated to registers r2 r3 r4 
                            109 ;s                         Allocated with name '_memcpy_s_1_1'
                            110 ;------------------------------------------------------------
                            111 ;	_memcpy.c:36: void * memcpy (
                            112 ;	-----------------------------------------
                            113 ;	 function memcpy
                            114 ;	-----------------------------------------
   0000                     115 _memcpy:
                    0002    116 	ar2 = 0x02
                    0003    117 	ar3 = 0x03
                    0004    118 	ar4 = 0x04
                    0005    119 	ar5 = 0x05
                    0006    120 	ar6 = 0x06
                    0007    121 	ar7 = 0x07
                    0000    122 	ar0 = 0x00
                    0001    123 	ar1 = 0x01
   0000 AA 82               124 	mov	r2,dpl
   0002 AB 83               125 	mov	r3,dph
   0004 AC F0               126 	mov	r4,b
                            127 ;	_memcpy.c:42: void * ret = dst;
   0006 8A*05               128 	mov	_memcpy_ret_1_1,r2
   0008 8B*06               129 	mov	(_memcpy_ret_1_1 + 1),r3
   000A 8C*07               130 	mov	(_memcpy_ret_1_1 + 2),r4
                            131 ;	_memcpy.c:44: char * s = src;
   000C A8*00               132 	mov	r0,_memcpy_PARM_2
   000E A9*01               133 	mov	r1,(_memcpy_PARM_2 + 1)
   0010 AD*02               134 	mov	r5,(_memcpy_PARM_2 + 2)
                            135 ;	_memcpy.c:49: while (acount--) {
   0012 88*08               136 	mov	_memcpy_s_1_1,r0
   0014 89*09               137 	mov	(_memcpy_s_1_1 + 1),r1
   0016 8D*0A               138 	mov	(_memcpy_s_1_1 + 2),r5
   0018 A8*03               139 	mov	r0,_memcpy_PARM_3
   001A A9*04               140 	mov	r1,(_memcpy_PARM_3 + 1)
   001C                     141 00101$:
   001C 88 05               142 	mov	ar5,r0
   001E 89 06               143 	mov	ar6,r1
   0020 18                  144 	dec	r0
   0021 B8 FF 01            145 	cjne	r0,#0xff,00109$
   0024 19                  146 	dec	r1
   0025                     147 00109$:
   0025 ED                  148 	mov	a,r5
   0026 4E                  149 	orl	a,r6
   0027 60 25               150 	jz	00103$
                            151 ;	_memcpy.c:50: *d++ = *s++;
   0029 85*08 82            152 	mov	dpl,_memcpy_s_1_1
   002C 85*09 83            153 	mov	dph,(_memcpy_s_1_1 + 1)
   002F 85*0A F0            154 	mov	b,(_memcpy_s_1_1 + 2)
   0032 12s00r00            155 	lcall	__gptrget
   0035 FD                  156 	mov	r5,a
   0036 A3                  157 	inc	dptr
   0037 85 82*08            158 	mov	_memcpy_s_1_1,dpl
   003A 85 83*09            159 	mov	(_memcpy_s_1_1 + 1),dph
   003D 8A 82               160 	mov	dpl,r2
   003F 8B 83               161 	mov	dph,r3
   0041 8C F0               162 	mov	b,r4
   0043 ED                  163 	mov	a,r5
   0044 12s00r00            164 	lcall	__gptrput
   0047 A3                  165 	inc	dptr
   0048 AA 82               166 	mov	r2,dpl
   004A AB 83               167 	mov	r3,dph
   004C 80 CE               168 	sjmp	00101$
   004E                     169 00103$:
                            170 ;	_memcpy.c:53: return(ret);
   004E 85*05 82            171 	mov	dpl,_memcpy_ret_1_1
   0051 85*06 83            172 	mov	dph,(_memcpy_ret_1_1 + 1)
   0054 85*07 F0            173 	mov	b,(_memcpy_ret_1_1 + 2)
   0057 22                  174 	ret
                            175 	.area CSEG    (CODE)
                            176 	.area CONST   (CODE)
                            177 	.area XINIT   (CODE)
                            178 	.area CABS    (ABS,CODE)
