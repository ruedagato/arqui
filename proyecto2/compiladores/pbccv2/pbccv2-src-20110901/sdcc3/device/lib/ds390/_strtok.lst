                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:17 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strtok
                              7 	.optsdcc -mds390 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _strtok_PARM_2
                             31 	.globl _strtok
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 ;--------------------------------------------------------
                             44 ; internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area DSEG    (DATA)
                             47 ;--------------------------------------------------------
                             48 ; overlayable items in internal ram 
                             49 ;--------------------------------------------------------
                             50 	.area OSEG    (OVR,DATA)
                             51 ;--------------------------------------------------------
                             52 ; indirectly addressable internal ram data
                             53 ;--------------------------------------------------------
                             54 	.area ISEG    (DATA)
                             55 ;--------------------------------------------------------
                             56 ; absolute internal ram data
                             57 ;--------------------------------------------------------
                             58 	.area IABS    (ABS,DATA)
                             59 	.area IABS    (ABS,DATA)
                             60 ;--------------------------------------------------------
                             61 ; bit data
                             62 ;--------------------------------------------------------
                             63 	.area BSEG    (BIT)
                             64 ;--------------------------------------------------------
                             65 ; paged external ram data
                             66 ;--------------------------------------------------------
                             67 	.area PSEG    (PAG,XDATA)
                             68 ;--------------------------------------------------------
                             69 ; external ram data
                             70 ;--------------------------------------------------------
                             71 	.area XSEG    (XDATA)
   0000                      72 _strtok_PARM_2:
   0000                      73 	.ds 4
   0004                      74 _strtok_s_1_1:
   0004                      75 	.ds 4
                             76 ;--------------------------------------------------------
                             77 ; absolute external ram data
                             78 ;--------------------------------------------------------
                             79 	.area XABS    (ABS,XDATA)
                             80 ;--------------------------------------------------------
                             81 ; external initialized ram data
                             82 ;--------------------------------------------------------
                             83 	.area XISEG   (XDATA)
                             84 ;--------------------------------------------------------
                             85 ; global & static initialisations
                             86 ;--------------------------------------------------------
                             87 	.area HOME    (CODE)
                             88 	.area GSINIT  (CODE)
                             89 	.area GSFINAL (CODE)
                             90 	.area GSINIT  (CODE)
                             91 ;--------------------------------------------------------
                             92 ; Home
                             93 ;--------------------------------------------------------
                             94 	.area HOME    (CODE)
                             95 	.area HOME    (CODE)
                             96 ;--------------------------------------------------------
                             97 ; code
                             98 ;--------------------------------------------------------
                             99 	.area CSEG    (CODE)
                            100 ;------------------------------------------------------------
                            101 ;Allocation info for local variables in function 'strtok'
                            102 ;------------------------------------------------------------
                            103 ;control                   Allocated with name '_strtok_PARM_2'
                            104 ;str                       Allocated to registers r2 r3 r4 r5 
                            105 ;s                         Allocated with name '_strtok_s_1_1'
                            106 ;s1                        Allocated to registers r2 r3 r4 r5 
                            107 ;------------------------------------------------------------
                            108 ;	_strtok.c:36: char * strtok (
                            109 ;	-----------------------------------------
                            110 ;	 function strtok
                            111 ;	-----------------------------------------
   0000                     112 _strtok:
                    0002    113 	ar2 = 0x02
                    0003    114 	ar3 = 0x03
                    0004    115 	ar4 = 0x04
                    0005    116 	ar5 = 0x05
                    0006    117 	ar6 = 0x06
                    0007    118 	ar7 = 0x07
                    0000    119 	ar0 = 0x00
                    0001    120 	ar1 = 0x01
   0000 AA 82               121 	mov	r2,dpl
   0002 AB 83               122 	mov	r3,dph
   0004 AC 93               123 	mov	r4,dpx
   0006 AD F0               124 	mov	r5,b
                            125 ;	_strtok.c:43: if ( str )
   0008 EA                  126 	mov	a,r2
   0009 4B                  127 	orl	a,r3
   000A 4C                  128 	orl	a,r4
   000B 60 0F               129 	jz  00102$
   000D                     130 00130$:
                            131 ;	_strtok.c:44: s = str ;
                            132 ;	genAssign: resultIsFar = TRUE
   000D 90s00r00r04         133 	mov	dptr,#_strtok_s_1_1
   0011 EA                  134 	mov	a,r2
   0012 F0                  135 	movx	@dptr,a
   0013 A3                  136 	inc	dptr
   0014 EB                  137 	mov	a,r3
   0015 F0                  138 	movx	@dptr,a
   0016 A3                  139 	inc	dptr
   0017 EC                  140 	mov	a,r4
   0018 F0                  141 	movx	@dptr,a
   0019 A3                  142 	inc	dptr
   001A ED                  143 	mov	a,r5
   001B F0                  144 	movx	@dptr,a
   001C                     145 00102$:
                            146 ;	_strtok.c:45: if ( !s )
   001C 90s00r00r04         147 	mov	dptr,#_strtok_s_1_1
                            148 ;	genAssign: resultIsFar = FALSE
   0020 E0                  149 	movx	a,@dptr
   0021 FA                  150 	mov	r2,a
   0022 A3                  151 	inc	dptr
   0023 E0                  152 	movx	a,@dptr
   0024 FB                  153 	mov	r3,a
   0025 A3                  154 	inc	dptr
   0026 E0                  155 	movx	a,@dptr
   0027 FC                  156 	mov	r4,a
   0028 A3                  157 	inc	dptr
   0029 E0                  158 	movx	a,@dptr
   002A FD                  159 	mov	r5,a
   002B EA                  160 	mov	a,r2
   002C 4B                  161 	orl	a,r3
   002D 4C                  162 	orl	a,r4
   002E 70 0B               163 	jnz  00108$
   0030                     164 00131$:
                            165 ;	_strtok.c:46: return NULL;
   0030 90 00 00 00         166 	mov  dptr,#0x0000
   0034 75 F0 00            167 	mov	b,#0x00
   0037 02s00r01r84         168 	ljmp	00119$
                            169 ;	_strtok.c:48: while (*s) {
   003B                     170 00108$:
   003B 90s00r00r04         171 	mov	dptr,#_strtok_s_1_1
                            172 ;	genAssign: resultIsFar = FALSE
   003F E0                  173 	movx	a,@dptr
   0040 FA                  174 	mov	r2,a
   0041 A3                  175 	inc	dptr
   0042 E0                  176 	movx	a,@dptr
   0043 FB                  177 	mov	r3,a
   0044 A3                  178 	inc	dptr
   0045 E0                  179 	movx	a,@dptr
   0046 FC                  180 	mov	r4,a
   0047 A3                  181 	inc	dptr
   0048 E0                  182 	movx	a,@dptr
   0049 FD                  183 	mov	r5,a
   004A 8A 82               184 	mov	dpl,r2
   004C 8B 83               185 	mov	dph,r3
   004E 8C 93               186 	mov	dpx,r4
   0050 8D F0               187 	mov	b,r5
   0052 12s00r00r00         188 	lcall	__gptrget
   0056 FA                  189 	mov  r2,a
   0057 60 41               190 	jz  00110$
   0059                     191 00132$:
                            192 ;	_strtok.c:49: if (strchr(control,*s))
                            193 ;	genAssign: resultIsFar = TRUE
   0059 90s00r00r00         194 	mov	dptr,#_strchr_PARM_2
   005D EA                  195 	mov	a,r2
   005E F0                  196 	movx	@dptr,a
   005F 05 86               197 	inc	dps
   0061 90s00r00r00         198 	mov	dptr,#_strtok_PARM_2
   0065 E0                  199 	movx	a,@dptr
   0066 F5 82               200 	mov	dpl,a
   0068 A3                  201 	inc	dptr
   0069 E0                  202 	movx	a,@dptr
   006A F5 83               203 	mov	dph,a
   006C A3                  204 	inc	dptr
   006D E0                  205 	movx	a,@dptr
   006E F5 93               206 	mov	dpx,a
   0070 A3                  207 	inc	dptr
   0071 E0                  208 	movx	a,@dptr
   0072 F5 F0               209 	mov	b,a
   0074 75 86 00            210 	mov	dps,#0
   0077 12s00r00r00         211 	lcall	_strchr
   007B E5 82               212 	mov	a,dpl
   007D 45 83               213 	orl	a,dph
   007F 45 93               214 	orl	a,dpx
   0081 60 17               215 	jz  00110$
   0083                     216 00133$:
                            217 ;	_strtok.c:50: s++;
   0083 90s00r00r04         218 	mov	dptr,#_strtok_s_1_1
   0087 E0                  219 	movx	a,@dptr
   0088 24 01               220 	add	a,#0x01
   008A F0                  221 	movx	@dptr,a
   008B A3                  222 	inc	dptr
   008C E0                  223 	movx	a,@dptr
   008D 34 00               224 	addc	a,#0x00
   008F F0                  225 	movx	@dptr,a
   0090 A3                  226 	inc	dptr
   0091 E0                  227 	movx	a,@dptr
   0092 34 00               228 	addc	a,#0x00
   0094 F0                  229 	movx	@dptr,a
   0095 A3                  230 	inc	dptr
   0096 E0                  231 	movx	a,@dptr
   0097 F0                  232 	movx	@dptr,a
                            233 ;	_strtok.c:52: break;
   0098 80 A1               234 	sjmp 00108$
   009A                     235 00110$:
                            236 ;	_strtok.c:55: s1 = s ;
   009A 90s00r00r04         237 	mov	dptr,#_strtok_s_1_1
                            238 ;	genAssign: resultIsFar = FALSE
   009E E0                  239 	movx	a,@dptr
   009F FA                  240 	mov	r2,a
   00A0 A3                  241 	inc	dptr
   00A1 E0                  242 	movx	a,@dptr
   00A2 FB                  243 	mov	r3,a
   00A3 A3                  244 	inc	dptr
   00A4 E0                  245 	movx	a,@dptr
   00A5 FC                  246 	mov	r4,a
   00A6 A3                  247 	inc	dptr
   00A7 E0                  248 	movx	a,@dptr
   00A8 FD                  249 	mov	r5,a
                            250 ;	genAssign: resultIsFar = TRUE
                            251 ;	_strtok.c:57: while (*s) {
   00A9                     252 00113$:
   00A9 90s00r00r04         253 	mov	dptr,#_strtok_s_1_1
                            254 ;	genAssign: resultIsFar = FALSE
   00AD E0                  255 	movx	a,@dptr
   00AE FE                  256 	mov	r6,a
   00AF A3                  257 	inc	dptr
   00B0 E0                  258 	movx	a,@dptr
   00B1 FF                  259 	mov	r7,a
   00B2 A3                  260 	inc	dptr
   00B3 E0                  261 	movx	a,@dptr
   00B4 F8                  262 	mov	r0,a
   00B5 A3                  263 	inc	dptr
   00B6 E0                  264 	movx	a,@dptr
   00B7 F9                  265 	mov	r1,a
   00B8 8E 82               266 	mov	dpl,r6
   00BA 8F 83               267 	mov	dph,r7
   00BC 88 93               268 	mov	dpx,r0
   00BE 89 F0               269 	mov	b,r1
   00C0 12s00r00r00         270 	lcall	__gptrget
   00C4 FE                  271 	mov  r6,a
   00C5 70 04               272 	jnz	00134$
   00C7 02s00r01r57         273 	ljmp	00115$
   00CB                     274 00134$:
                            275 ;	_strtok.c:58: if (strchr(control,*s)) {
                            276 ;	genAssign: resultIsFar = TRUE
   00CB 90s00r00r00         277 	mov	dptr,#_strchr_PARM_2
   00CF EE                  278 	mov	a,r6
   00D0 F0                  279 	movx	@dptr,a
   00D1 C0 02               280 	push	ar2
   00D3 C0 03               281 	push	ar3
   00D5 C0 04               282 	push	ar4
   00D7 C0 05               283 	push	ar5
   00D9 05 86               284 	inc	dps
   00DB 90s00r00r00         285 	mov	dptr,#_strtok_PARM_2
   00DF E0                  286 	movx	a,@dptr
   00E0 F5 82               287 	mov	dpl,a
   00E2 A3                  288 	inc	dptr
   00E3 E0                  289 	movx	a,@dptr
   00E4 F5 83               290 	mov	dph,a
   00E6 A3                  291 	inc	dptr
   00E7 E0                  292 	movx	a,@dptr
   00E8 F5 93               293 	mov	dpx,a
   00EA A3                  294 	inc	dptr
   00EB E0                  295 	movx	a,@dptr
   00EC F5 F0               296 	mov	b,a
   00EE 75 86 00            297 	mov	dps,#0
   00F1 12s00r00r00         298 	lcall	_strchr
   00F5 D0 05               299 	pop	ar5
   00F7 D0 04               300 	pop	ar4
   00F9 D0 03               301 	pop	ar3
   00FB D0 02               302 	pop	ar2
   00FD E5 82               303 	mov	a,dpl
   00FF 45 83               304 	orl	a,dph
   0101 45 93               305 	orl	a,dpx
   0103 60 39               306 	jz  00112$
   0105                     307 00135$:
                            308 ;	_strtok.c:59: *s++ = '\0';
   0105 90s00r00r04         309 	mov	dptr,#_strtok_s_1_1
                            310 ;	genAssign: resultIsFar = FALSE
   0109 E0                  311 	movx	a,@dptr
   010A FE                  312 	mov	r6,a
   010B A3                  313 	inc	dptr
   010C E0                  314 	movx	a,@dptr
   010D FF                  315 	mov	r7,a
   010E A3                  316 	inc	dptr
   010F E0                  317 	movx	a,@dptr
   0110 F8                  318 	mov	r0,a
   0111 A3                  319 	inc	dptr
   0112 E0                  320 	movx	a,@dptr
   0113 F9                  321 	mov	r1,a
   0114 8E 82               322 	mov	dpl,r6
   0116 8F 83               323 	mov	dph,r7
   0118 88 93               324 	mov	dpx,r0
   011A 89 F0               325 	mov	b,r1
   011C E4                  326 	clr  a
   011D 12s00r00r00         327 	lcall	__gptrput
   0121 90s00r00r04         328 	mov	dptr,#_strtok_s_1_1
   0125 74 01               329 	mov	a,#0x01
   0127 2E                  330 	add	a,r6
   0128 F0                  331 	movx	@dptr,a
   0129 E4                  332 	clr  a
   012A 3F                  333 	addc	a,r7
   012B A3                  334 	inc	dptr
   012C F0                  335 	movx	@dptr,a
   012D E4                  336 	clr  a
   012E 38                  337 	addc	a,r0
   012F A3                  338 	inc	dptr
   0130 F0                  339 	movx	@dptr,a
   0131 A3                  340 	inc	dptr
   0132 E9                  341 	mov	a,r1
   0133 F0                  342 	movx	@dptr,a
                            343 ;	_strtok.c:60: return s1 ;
   0134 8A 82               344 	mov	dpl,r2
   0136 8B 83               345 	mov	dph,r3
   0138 8C 93               346 	mov	dpx,r4
   013A 8D F0               347 	mov	b,r5
   013C 80 46               348 	sjmp 00119$
   013E                     349 00112$:
                            350 ;	_strtok.c:62: s++ ;
   013E 90s00r00r04         351 	mov	dptr,#_strtok_s_1_1
   0142 E0                  352 	movx	a,@dptr
   0143 24 01               353 	add	a,#0x01
   0145 F0                  354 	movx	@dptr,a
   0146 A3                  355 	inc	dptr
   0147 E0                  356 	movx	a,@dptr
   0148 34 00               357 	addc	a,#0x00
   014A F0                  358 	movx	@dptr,a
   014B A3                  359 	inc	dptr
   014C E0                  360 	movx	a,@dptr
   014D 34 00               361 	addc	a,#0x00
   014F F0                  362 	movx	@dptr,a
   0150 A3                  363 	inc	dptr
   0151 E0                  364 	movx	a,@dptr
   0152 F0                  365 	movx	@dptr,a
   0153 02s00r00rA9         366 	ljmp	00113$
   0157                     367 00115$:
                            368 ;	_strtok.c:65: s = NULL;
                            369 ;	genAssign: resultIsFar = TRUE
   0157 90s00r00r04         370 	mov	dptr,#_strtok_s_1_1
   015B E4                  371 	clr	a
   015C F0                  372 	movx	@dptr,a
   015D A3                  373 	inc	dptr
   015E F0                  374 	movx	@dptr,a
   015F A3                  375 	inc	dptr
   0160 F0                  376 	movx	@dptr,a
   0161 A3                  377 	inc	dptr
   0162 E4                  378 	clr  a
   0163 F0                  379 	movx	@dptr,a
                            380 ;	_strtok.c:67: if (*s1)
   0164 8A 82               381 	mov	dpl,r2
   0166 8B 83               382 	mov	dph,r3
   0168 8C 93               383 	mov	dpx,r4
   016A 8D F0               384 	mov	b,r5
   016C 12s00r00r00         385 	lcall	__gptrget
   0170 FE                  386 	mov  r6,a
   0171 60 0A               387 	jz  00117$
   0173                     388 00136$:
                            389 ;	_strtok.c:68: return s1;
   0173 8A 82               390 	mov	dpl,r2
   0175 8B 83               391 	mov	dph,r3
   0177 8C 93               392 	mov	dpx,r4
   0179 8D F0               393 	mov	b,r5
   017B 80 07               394 	sjmp 00119$
   017D                     395 00117$:
                            396 ;	_strtok.c:70: return NULL;
   017D 90 00 00 00         397 	mov  dptr,#0x0000
   0181 75 F0 00            398 	mov	b,#0x00
   0184                     399 00119$:
   0184 22                  400 	ret
                            401 	.area CSEG    (CODE)
                            402 	.area CONST   (CODE)
                            403 	.area XINIT   (CODE)
                            404 	.area CABS    (ABS,CODE)
