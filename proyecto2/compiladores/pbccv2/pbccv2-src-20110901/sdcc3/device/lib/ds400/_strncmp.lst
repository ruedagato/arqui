                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:19 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strncmp
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _strncmp_PARM_3
                             31 	.globl _strncmp_PARM_2
                             32 	.globl _strncmp
                             33 ;--------------------------------------------------------
                             34 ; special function registers
                             35 ;--------------------------------------------------------
                             36 ;--------------------------------------------------------
                             37 ; special function bits
                             38 ;--------------------------------------------------------
                             39 ;--------------------------------------------------------
                             40 ; overlayable register banks
                             41 ;--------------------------------------------------------
                             42 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      43 	.ds 8
                             44 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      45 	.ds 8
                             46 ;--------------------------------------------------------
                             47 ; internal ram data
                             48 ;--------------------------------------------------------
                             49 	.area DSEG    (DATA)
                             50 ;--------------------------------------------------------
                             51 ; overlayable items in internal ram 
                             52 ;--------------------------------------------------------
                             53 	.area OSEG    (OVR,DATA)
                             54 ;--------------------------------------------------------
                             55 ; indirectly addressable internal ram data
                             56 ;--------------------------------------------------------
                             57 	.area ISEG    (DATA)
                             58 ;--------------------------------------------------------
                             59 ; absolute internal ram data
                             60 ;--------------------------------------------------------
                             61 	.area IABS    (ABS,DATA)
                             62 	.area IABS    (ABS,DATA)
                             63 ;--------------------------------------------------------
                             64 ; bit data
                             65 ;--------------------------------------------------------
                             66 	.area BSEG    (BIT)
                             67 ;--------------------------------------------------------
                             68 ; paged external ram data
                             69 ;--------------------------------------------------------
                             70 	.area PSEG    (PAG,XDATA)
                             71 ;--------------------------------------------------------
                             72 ; external ram data
                             73 ;--------------------------------------------------------
                             74 	.area XSEG    (XDATA)
   0000                      75 _strncmp_PARM_2:
   0000                      76 	.ds 4
   0004                      77 _strncmp_PARM_3:
   0004                      78 	.ds 2
   0006                      79 _strncmp_sloc0_1_0:
   0006                      80 	.ds 2
   0008                      81 _strncmp_sloc1_1_0:
   0008                      82 	.ds 1
                             83 ;--------------------------------------------------------
                             84 ; absolute external ram data
                             85 ;--------------------------------------------------------
                             86 	.area XABS    (ABS,XDATA)
                             87 ;--------------------------------------------------------
                             88 ; external initialized ram data
                             89 ;--------------------------------------------------------
                             90 	.area XISEG   (XDATA)
                             91 ;--------------------------------------------------------
                             92 ; global & static initialisations
                             93 ;--------------------------------------------------------
                             94 	.area HOME    (CODE)
                             95 	.area GSINIT  (CODE)
                             96 	.area GSFINAL (CODE)
                             97 	.area GSINIT  (CODE)
                             98 ;--------------------------------------------------------
                             99 ; Home
                            100 ;--------------------------------------------------------
                            101 	.area HOME    (CODE)
                            102 	.area HOME    (CODE)
                            103 ;--------------------------------------------------------
                            104 ; code
                            105 ;--------------------------------------------------------
                            106 	.area CSEG    (CODE)
                            107 ;------------------------------------------------------------
                            108 ;Allocation info for local variables in function 'strncmp'
                            109 ;------------------------------------------------------------
                            110 ;last                      Allocated with name '_strncmp_PARM_2'
                            111 ;count                     Allocated with name '_strncmp_PARM_3'
                            112 ;first                     Allocated to registers r2 r3 r4 r5 
                            113 ;sloc0                     Allocated with name '_strncmp_sloc0_1_0'
                            114 ;sloc1                     Allocated with name '_strncmp_sloc1_1_0'
                            115 ;------------------------------------------------------------
                            116 ;	_strncmp.c:31: int strncmp (
                            117 ;	-----------------------------------------
                            118 ;	 function strncmp
                            119 ;	-----------------------------------------
   0000                     120 _strncmp:
                    0002    121 	ar2 = 0x02
                    0003    122 	ar3 = 0x03
                    0004    123 	ar4 = 0x04
                    0005    124 	ar5 = 0x05
                    0006    125 	ar6 = 0x06
                    0007    126 	ar7 = 0x07
                    0000    127 	ar0 = 0x00
                    0001    128 	ar1 = 0x01
   0000 AA 82               129 	mov	r2,dpl
   0002 AB 83               130 	mov	r3,dph
   0004 AC 93               131 	mov	r4,dpx
   0006 AD F0               132 	mov	r5,b
                            133 ;	_strncmp.c:37: if (!count)
   0008 90s00r00r04         134 	mov	dptr,#_strncmp_PARM_3
   000C E0                  135 	movx	a,@dptr
   000D F5 F0               136 	mov	b,a
   000F A3                  137 	inc	dptr
   0010 E0                  138 	movx	a,@dptr
   0011 45 F0               139 	orl	a,b
   0013 70 08               140 	jnz  00114$
   0015                     141 00116$:
                            142 ;	_strncmp.c:38: return(0);
   0015 90 00 00 00         143 	mov  dptr,#0x0000
   0019 02s00r00rEF         144 	ljmp	00108$
                            145 ;	_strncmp.c:40: while (--count && *first && *first == *last) {
   001D                     146 00114$:
                            147 ;	genAssign: resultIsFar = FALSE
   001D 90s00r00r00         148 	mov	dptr,#_strncmp_PARM_2
                            149 ;	genAssign: resultIsFar = FALSE
   0021 E0                  150 	movx	a,@dptr
   0022 FE                  151 	mov	r6,a
   0023 A3                  152 	inc	dptr
   0024 E0                  153 	movx	a,@dptr
   0025 FF                  154 	mov	r7,a
   0026 A3                  155 	inc	dptr
   0027 E0                  156 	movx	a,@dptr
   0028 F8                  157 	mov	r0,a
   0029 A3                  158 	inc	dptr
   002A E0                  159 	movx	a,@dptr
   002B F9                  160 	mov	r1,a
   002C 90s00r00r04         161 	mov	dptr,#_strncmp_PARM_3
                            162 ;	genAssign: resultIsFar = TRUE
   0030 75 86 21            163 	mov	dps,#0x21
   0033 90s00r00r06         164 	mov	dptr,#_strncmp_sloc0_1_0
   0037 E0                  165 	movx	a,@dptr
   0038 F0                  166 	movx	@dptr,a
   0039 A3                  167 	inc	dptr
   003A A3                  168 	inc	dptr
   003B E0                  169 	movx	a,@dptr
   003C F0                  170 	movx	@dptr,a
   003D 75 86 00            171 	mov	dps,#0
   0040                     172 00105$:
   0040 90s00r00r06         173 	mov	dptr,#_strncmp_sloc0_1_0
   0044 E0                  174 	movx	a,@dptr
   0045 24 FF               175 	add	a,#0xFF
   0047 F0                  176 	movx	@dptr,a
   0048 A3                  177 	inc	dptr
   0049 E0                  178 	movx	a,@dptr
   004A 34 FF               179 	addc	a,#0xFF
   004C F0                  180 	movx	@dptr,a
   004D 90s00r00r06         181 	mov	dptr,#_strncmp_sloc0_1_0
   0051 E0                  182 	movx	a,@dptr
   0052 F5 F0               183 	mov	b,a
   0054 A3                  184 	inc	dptr
   0055 E0                  185 	movx	a,@dptr
   0056 45 F0               186 	orl	a,b
   0058 60 6A               187 	jz  00107$
   005A                     188 00117$:
   005A 8A 82               189 	mov	dpl,r2
   005C 8B 83               190 	mov	dph,r3
   005E 8C 93               191 	mov	dpx,r4
   0060 8D F0               192 	mov	b,r5
   0062 75 86 01            193 	mov	dps, #1
   0065 90s00r00r08         194 	mov	dptr, #_strncmp_sloc1_1_0
   0069 15 86               195 	dec	dps
   006B 12s00r00r00         196 	lcall	__gptrget
   006F 75 86 01            197 	mov	dps,#1
   0072 F0                  198 	movx	@dptr,a
   0073 75 86 00            199 	mov	dps,#0
   0076 90s00r00r08         200 	mov	dptr,#_strncmp_sloc1_1_0
   007A E0                  201 	movx	a,@dptr
   007B 60 47               202 	jz  00107$
   007D                     203 00118$:
   007D C0 02               204 	push	ar2
   007F C0 03               205 	push	ar3
   0081 C0 04               206 	push	ar4
   0083 C0 05               207 	push	ar5
   0085 8E 82               208 	mov	dpl,r6
   0087 8F 83               209 	mov	dph,r7
   0089 88 93               210 	mov	dpx,r0
   008B 89 F0               211 	mov	b,r1
   008D 12s00r00r00         212 	lcall	__gptrget
   0091 FA                  213 	mov	r2,a
   0092 90s00r00r08         214 	mov	dptr,#_strncmp_sloc1_1_0
   0096 E0                  215 	movx	a,@dptr
   0097 B5 02 02            216 	cjne	a,ar2,00119$
   009A 80 0A               217 	sjmp	00120$
   009C                     218 00119$:
   009C D0 05               219 	pop	ar5
   009E D0 04               220 	pop	ar4
   00A0 D0 03               221 	pop	ar3
   00A2 D0 02               222 	pop	ar2
   00A4 80 1E               223 	sjmp 00107$
   00A6                     224 00120$:
   00A6 D0 05               225 	pop	ar5
   00A8 D0 04               226 	pop	ar4
   00AA D0 03               227 	pop	ar3
   00AC D0 02               228 	pop	ar2
                            229 ;	_strncmp.c:41: first++;
   00AE 0A                  230 	inc	r2
   00AF BA 00 05            231 	cjne	r2,#0,00121$
   00B2 0B                  232 	inc	r3
   00B3 BB 00 01            233 	cjne	r3,#0,00121$
   00B6 0C                  234 	inc	r4
   00B7                     235 00121$:
                            236 ;	_strncmp.c:42: last++;
   00B7 0E                  237 	inc	r6
   00B8 BE 00 05            238 	cjne	r6,#0,00122$
   00BB 0F                  239 	inc	r7
   00BC BF 00 01            240 	cjne	r7,#0,00122$
   00BF 08                  241 	inc	r0
   00C0                     242 00122$:
   00C0 02s00r00r40         243 	ljmp	00105$
   00C4                     244 00107$:
                            245 ;	_strncmp.c:45: return( *first - *last );
   00C4 8A 82               246 	mov	dpl,r2
   00C6 8B 83               247 	mov	dph,r3
   00C8 8C 93               248 	mov	dpx,r4
   00CA 8D F0               249 	mov	b,r5
   00CC 12s00r00r00         250 	lcall	__gptrget
   00D0 FA                  251 	mov  r2,a
   00D1 33                  252 	rlc	a
   00D2 95 E0               253 	subb	a,acc
   00D4 FB                  254 	mov	r3,a
   00D5 8E 82               255 	mov	dpl,r6
   00D7 8F 83               256 	mov	dph,r7
   00D9 88 93               257 	mov	dpx,r0
   00DB 89 F0               258 	mov	b,r1
   00DD 12s00r00r00         259 	lcall	__gptrget
   00E1 FE                  260 	mov  r6,a
   00E2 33                  261 	rlc	a
   00E3 95 E0               262 	subb	a,acc
   00E5 FC                  263 	mov	r4,a
   00E6 C3                  264 	clr	c
   00E7 EA                  265 	mov	a,r2
   00E8 9E                  266 	subb	a,r6
   00E9 F5 82               267 	mov	dpl,a
   00EB EB                  268 	mov	a,r3
   00EC 9C                  269 	subb	a,r4
   00ED F5 83               270 	mov	dph,a
   00EF                     271 00108$:
   00EF 22                  272 	ret
                            273 	.area CSEG    (CODE)
                            274 	.area CONST   (CODE)
                            275 	.area XINIT   (CODE)
                            276 	.area CABS    (ABS,CODE)
