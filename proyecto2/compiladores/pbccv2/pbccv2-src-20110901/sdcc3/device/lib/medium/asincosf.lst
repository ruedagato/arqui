                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:25 2015
                              5 ;--------------------------------------------------------
                              6 	.module asincosf
                              7 	.optsdcc -mmcs51 --model-medium
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _asincosf
                             13 	.globl _asincosf_PARM_2
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 	.area RSEG    (ABS,DATA)
   0000                      18 	.org 0x0000
                             19 ;--------------------------------------------------------
                             20 ; special function bits
                             21 ;--------------------------------------------------------
                             22 	.area RSEG    (ABS,DATA)
   0000                      23 	.org 0x0000
                             24 ;--------------------------------------------------------
                             25 ; overlayable register banks
                             26 ;--------------------------------------------------------
                             27 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      28 	.ds 8
                             29 ;--------------------------------------------------------
                             30 ; internal ram data
                             31 ;--------------------------------------------------------
                             32 	.area DSEG    (DATA)
   0000                      33 _asincosf_sloc0_1_0:
   0000                      34 	.ds 4
                             35 ;--------------------------------------------------------
                             36 ; overlayable items in internal ram 
                             37 ;--------------------------------------------------------
                             38 	.area OSEG    (OVR,DATA)
                             39 ;--------------------------------------------------------
                             40 ; indirectly addressable internal ram data
                             41 ;--------------------------------------------------------
                             42 	.area ISEG    (DATA)
                             43 ;--------------------------------------------------------
                             44 ; absolute internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area IABS    (ABS,DATA)
                             47 	.area IABS    (ABS,DATA)
                             48 ;--------------------------------------------------------
                             49 ; bit data
                             50 ;--------------------------------------------------------
                             51 	.area BSEG    (BIT)
   0000                      52 _asincosf_PARM_2:
   0000                      53 	.ds 1
   0001                      54 _asincosf_quartPI_1_1:
   0001                      55 	.ds 1
                             56 ;--------------------------------------------------------
                             57 ; paged external ram data
                             58 ;--------------------------------------------------------
                             59 	.area PSEG    (PAG,XDATA)
   0000                      60 _asincosf_x_1_1:
   0000                      61 	.ds 4
   0004                      62 _asincosf_y_1_1:
   0004                      63 	.ds 4
   0008                      64 _asincosf_g_1_1:
   0008                      65 	.ds 4
   000C                      66 _asincosf_a_1_1:
   000C                      67 	.ds 8
   0014                      68 _asincosf_b_1_1:
   0014                      69 	.ds 8
                             70 ;--------------------------------------------------------
                             71 ; external ram data
                             72 ;--------------------------------------------------------
                             73 	.area XSEG    (XDATA)
                             74 ;--------------------------------------------------------
                             75 ; absolute external ram data
                             76 ;--------------------------------------------------------
                             77 	.area XABS    (ABS,XDATA)
                             78 ;--------------------------------------------------------
                             79 ; external initialized ram data
                             80 ;--------------------------------------------------------
                             81 	.area XISEG   (XDATA)
                             82 	.area HOME    (CODE)
                             83 	.area GSINIT0 (CODE)
                             84 	.area GSINIT1 (CODE)
                             85 	.area GSINIT2 (CODE)
                             86 	.area GSINIT3 (CODE)
                             87 	.area GSINIT4 (CODE)
                             88 	.area GSINIT5 (CODE)
                             89 	.area GSINIT  (CODE)
                             90 	.area GSFINAL (CODE)
                             91 	.area CSEG    (CODE)
                             92 ;--------------------------------------------------------
                             93 ; global & static initialisations
                             94 ;--------------------------------------------------------
                             95 	.area HOME    (CODE)
                             96 	.area GSINIT  (CODE)
                             97 	.area GSFINAL (CODE)
                             98 	.area GSINIT  (CODE)
                             99 ;------------------------------------------------------------
                            100 ;Allocation info for local variables in function 'asincosf'
                            101 ;------------------------------------------------------------
                            102 ;sloc0                     Allocated with name '_asincosf_sloc0_1_0'
                            103 ;------------------------------------------------------------
                            104 ;	asincosf.c:53: static const float a[2] = { 0.0, QUART_PI };
   0000 78r0C               105 	mov	r0,#_asincosf_a_1_1
   0002 E4                  106 	clr	a
   0003 F2                  107 	movx	@r0,a
   0004 08                  108 	inc	r0
   0005 F2                  109 	movx	@r0,a
   0006 08                  110 	inc	r0
   0007 F2                  111 	movx	@r0,a
   0008 08                  112 	inc	r0
   0009 F2                  113 	movx	@r0,a
   000A 78r10               114 	mov	r0,#(_asincosf_a_1_1 + 0x0004)
   000C 74 DB               115 	mov	a,#0xDB
   000E F2                  116 	movx	@r0,a
   000F 08                  117 	inc	r0
   0010 74 0F               118 	mov	a,#0x0F
   0012 F2                  119 	movx	@r0,a
   0013 08                  120 	inc	r0
   0014 74 49               121 	mov	a,#0x49
   0016 F2                  122 	movx	@r0,a
   0017 08                  123 	inc	r0
   0018 74 3F               124 	mov	a,#0x3F
   001A F2                  125 	movx	@r0,a
                            126 ;	asincosf.c:54: static const float b[2] = { HALF_PI, QUART_PI };
   001B 78r14               127 	mov	r0,#_asincosf_b_1_1
   001D 74 DB               128 	mov	a,#0xDB
   001F F2                  129 	movx	@r0,a
   0020 08                  130 	inc	r0
   0021 74 0F               131 	mov	a,#0x0F
   0023 F2                  132 	movx	@r0,a
   0024 08                  133 	inc	r0
   0025 74 C9               134 	mov	a,#0xC9
   0027 F2                  135 	movx	@r0,a
   0028 08                  136 	inc	r0
   0029 74 3F               137 	mov	a,#0x3F
   002B F2                  138 	movx	@r0,a
   002C 78r18               139 	mov	r0,#(_asincosf_b_1_1 + 0x0004)
   002E 74 DB               140 	mov	a,#0xDB
   0030 F2                  141 	movx	@r0,a
   0031 08                  142 	inc	r0
   0032 74 0F               143 	mov	a,#0x0F
   0034 F2                  144 	movx	@r0,a
   0035 08                  145 	inc	r0
   0036 74 49               146 	mov	a,#0x49
   0038 F2                  147 	movx	@r0,a
   0039 08                  148 	inc	r0
   003A 74 3F               149 	mov	a,#0x3F
   003C F2                  150 	movx	@r0,a
                            151 ;--------------------------------------------------------
                            152 ; Home
                            153 ;--------------------------------------------------------
                            154 	.area HOME    (CODE)
                            155 	.area HOME    (CODE)
                            156 ;--------------------------------------------------------
                            157 ; code
                            158 ;--------------------------------------------------------
                            159 	.area CSEG    (CODE)
                            160 ;------------------------------------------------------------
                            161 ;Allocation info for local variables in function 'asincosf'
                            162 ;------------------------------------------------------------
                            163 ;sloc0                     Allocated with name '_asincosf_sloc0_1_0'
                            164 ;------------------------------------------------------------
                            165 ;	asincosf.c:47: float asincosf(const float x, const BOOL isacos)
                            166 ;	-----------------------------------------
                            167 ;	 function asincosf
                            168 ;	-----------------------------------------
   0000                     169 _asincosf:
                    0002    170 	ar2 = 0x02
                    0003    171 	ar3 = 0x03
                    0004    172 	ar4 = 0x04
                    0005    173 	ar5 = 0x05
                    0006    174 	ar6 = 0x06
                    0007    175 	ar7 = 0x07
                    0000    176 	ar0 = 0x00
                    0001    177 	ar1 = 0x01
   0000 AA 82               178 	mov	r2,dpl
   0002 AB 83               179 	mov	r3,dph
   0004 AC F0               180 	mov	r4,b
   0006 FD                  181 	mov	r5,a
   0007 78r00               182 	mov	r0,#_asincosf_x_1_1
   0009 EA                  183 	mov	a,r2
   000A F2                  184 	movx	@r0,a
   000B 08                  185 	inc	r0
   000C EB                  186 	mov	a,r3
   000D F2                  187 	movx	@r0,a
   000E 08                  188 	inc	r0
   000F EC                  189 	mov	a,r4
   0010 F2                  190 	movx	@r0,a
   0011 08                  191 	inc	r0
   0012 ED                  192 	mov	a,r5
   0013 F2                  193 	movx	@r0,a
                            194 ;	asincosf.c:51: BOOL quartPI = isacos;
   0014 A2*00               195 	mov	c,_asincosf_PARM_2
   0016 92*01               196 	mov	_asincosf_quartPI_1_1,c
                            197 ;	asincosf.c:56: y = fabsf(x);
   0018 78r00               198 	mov	r0,#_asincosf_x_1_1
   001A E2                  199 	movx	a,@r0
   001B F5 82               200 	mov	dpl,a
   001D 08                  201 	inc	r0
   001E E2                  202 	movx	a,@r0
   001F F5 83               203 	mov	dph,a
   0021 08                  204 	inc	r0
   0022 E2                  205 	movx	a,@r0
   0023 F5 F0               206 	mov	b,a
   0025 08                  207 	inc	r0
   0026 E2                  208 	movx	a,@r0
   0027 12s00r00            209 	lcall	_fabsf
   002A 78r04               210 	mov	r0,#_asincosf_y_1_1
   002C C0 E0               211 	push	acc
   002E E5 82               212 	mov	a,dpl
   0030 F2                  213 	movx	@r0,a
   0031 08                  214 	inc	r0
   0032 E5 83               215 	mov	a,dph
   0034 F2                  216 	movx	@r0,a
   0035 08                  217 	inc	r0
   0036 E5 F0               218 	mov	a,b
   0038 F2                  219 	movx	@r0,a
   0039 D0 E0               220 	pop	acc
   003B 08                  221 	inc	r0
   003C F2                  222 	movx	@r0,a
                            223 ;	asincosf.c:57: if (y < EPS)
   003D E4                  224 	clr	a
   003E C0 E0               225 	push	acc
   0040 C0 E0               226 	push	acc
   0042 74 80               227 	mov	a,#0x80
   0044 C0 E0               228 	push	acc
   0046 74 39               229 	mov	a,#0x39
   0048 C0 E0               230 	push	acc
   004A 78r04               231 	mov	r0,#_asincosf_y_1_1
   004C E2                  232 	movx	a,@r0
   004D F5 82               233 	mov	dpl,a
   004F 08                  234 	inc	r0
   0050 E2                  235 	movx	a,@r0
   0051 F5 83               236 	mov	dph,a
   0053 08                  237 	inc	r0
   0054 E2                  238 	movx	a,@r0
   0055 F5 F0               239 	mov	b,a
   0057 08                  240 	inc	r0
   0058 E2                  241 	movx	a,@r0
   0059 12s00r00            242 	lcall	___fslt
   005C AC 82               243 	mov	r4,dpl
   005E E5 81               244 	mov	a,sp
   0060 24 FC               245 	add	a,#0xfc
   0062 F5 81               246 	mov	sp,a
   0064 EC                  247 	mov	a,r4
   0065 60 10               248 	jz	00107$
                            249 ;	asincosf.c:59: r = y;
   0067 78r04               250 	mov	r0,#_asincosf_y_1_1
   0069 E2                  251 	movx	a,@r0
   006A FC                  252 	mov	r4,a
   006B 08                  253 	inc	r0
   006C E2                  254 	movx	a,@r0
   006D FD                  255 	mov	r5,a
   006E 08                  256 	inc	r0
   006F E2                  257 	movx	a,@r0
   0070 FE                  258 	mov	r6,a
   0071 08                  259 	inc	r0
   0072 E2                  260 	movx	a,@r0
   0073 FF                  261 	mov	r7,a
   0074 02s03r55            262 	ljmp	00108$
   0077                     263 00107$:
                            264 ;	asincosf.c:63: if (y > 0.5)
   0077 E4                  265 	clr	a
   0078 C0 E0               266 	push	acc
   007A C0 E0               267 	push	acc
   007C C0 E0               268 	push	acc
   007E 74 3F               269 	mov	a,#0x3F
   0080 C0 E0               270 	push	acc
   0082 78r04               271 	mov	r0,#_asincosf_y_1_1
   0084 E2                  272 	movx	a,@r0
   0085 F5 82               273 	mov	dpl,a
   0087 08                  274 	inc	r0
   0088 E2                  275 	movx	a,@r0
   0089 F5 83               276 	mov	dph,a
   008B 08                  277 	inc	r0
   008C E2                  278 	movx	a,@r0
   008D F5 F0               279 	mov	b,a
   008F 08                  280 	inc	r0
   0090 E2                  281 	movx	a,@r0
   0091 12s00r00            282 	lcall	___fsgt
   0094 AC 82               283 	mov	r4,dpl
   0096 E5 81               284 	mov	a,sp
   0098 24 FC               285 	add	a,#0xfc
   009A F5 81               286 	mov	sp,a
   009C EC                  287 	mov	a,r4
   009D 70 03               288 	jnz	00126$
   009F 02s01rAE            289 	ljmp	00104$
   00A2                     290 00126$:
                            291 ;	asincosf.c:65: quartPI = !isacos;
   00A2 B2*01               292 	cpl	_asincosf_quartPI_1_1
                            293 ;	asincosf.c:66: if (y > 1.0)
   00A4 E4                  294 	clr	a
   00A5 C0 E0               295 	push	acc
   00A7 C0 E0               296 	push	acc
   00A9 74 80               297 	mov	a,#0x80
   00AB C0 E0               298 	push	acc
   00AD 74 3F               299 	mov	a,#0x3F
   00AF C0 E0               300 	push	acc
   00B1 78r04               301 	mov	r0,#_asincosf_y_1_1
   00B3 E2                  302 	movx	a,@r0
   00B4 F5 82               303 	mov	dpl,a
   00B6 08                  304 	inc	r0
   00B7 E2                  305 	movx	a,@r0
   00B8 F5 83               306 	mov	dph,a
   00BA 08                  307 	inc	r0
   00BB E2                  308 	movx	a,@r0
   00BC F5 F0               309 	mov	b,a
   00BE 08                  310 	inc	r0
   00BF E2                  311 	movx	a,@r0
   00C0 12s00r00            312 	lcall	___fsgt
   00C3 AC 82               313 	mov	r4,dpl
   00C5 E5 81               314 	mov	a,sp
   00C7 24 FC               315 	add	a,#0xfc
   00C9 F5 81               316 	mov	sp,a
   00CB EC                  317 	mov	a,r4
   00CC 60 0F               318 	jz	00102$
                            319 ;	asincosf.c:68: errno = EDOM;
   00CE 78r00               320 	mov	r0,#_errno
   00D0 74 21               321 	mov	a,#0x21
   00D2 F2                  322 	movx	@r0,a
   00D3 08                  323 	inc	r0
   00D4 E4                  324 	clr	a
   00D5 F2                  325 	movx	@r0,a
                            326 ;	asincosf.c:69: return 0.0;
   00D6 90 00 00            327 	mov	dptr,#(0x00&0x00ff)
   00D9 E4                  328 	clr	a
   00DA F5 F0               329 	mov	b,a
   00DC 22                  330 	ret
   00DD                     331 00102$:
                            332 ;	asincosf.c:71: g = (0.5 - y) + 0.5;
   00DD 78r04               333 	mov	r0,#_asincosf_y_1_1
   00DF E2                  334 	movx	a,@r0
   00E0 C0 E0               335 	push	acc
   00E2 08                  336 	inc	r0
   00E3 E2                  337 	movx	a,@r0
   00E4 C0 E0               338 	push	acc
   00E6 08                  339 	inc	r0
   00E7 E2                  340 	movx	a,@r0
   00E8 C0 E0               341 	push	acc
   00EA 08                  342 	inc	r0
   00EB E2                  343 	movx	a,@r0
   00EC C0 E0               344 	push	acc
   00EE 90 00 00            345 	mov	dptr,#0x0000
   00F1 75 F0 80            346 	mov	b,#0x80
   00F4 74 3F               347 	mov	a,#0x3F
   00F6 12s00r00            348 	lcall	___fssub
   00F9 78r08               349 	mov	r0,#_asincosf_g_1_1
   00FB C0 E0               350 	push	acc
   00FD E5 82               351 	mov	a,dpl
   00FF F2                  352 	movx	@r0,a
   0100 08                  353 	inc	r0
   0101 E5 83               354 	mov	a,dph
   0103 F2                  355 	movx	@r0,a
   0104 08                  356 	inc	r0
   0105 E5 F0               357 	mov	a,b
   0107 F2                  358 	movx	@r0,a
   0108 D0 E0               359 	pop	acc
   010A 08                  360 	inc	r0
   010B F2                  361 	movx	@r0,a
   010C E5 81               362 	mov	a,sp
   010E 24 FC               363 	add	a,#0xfc
   0110 F5 81               364 	mov	sp,a
                            365 ;	asincosf.c:72: g = ldexpf(g, -1);
   0112 78r00               366 	mov	r0,#_ldexpf_PARM_2
   0114 74 FF               367 	mov	a,#0xFF
   0116 F2                  368 	movx	@r0,a
   0117 08                  369 	inc	r0
   0118 74 FF               370 	mov	a,#0xFF
   011A F2                  371 	movx	@r0,a
   011B 78r08               372 	mov	r0,#_asincosf_g_1_1
   011D E2                  373 	movx	a,@r0
   011E F5 82               374 	mov	dpl,a
   0120 08                  375 	inc	r0
   0121 E2                  376 	movx	a,@r0
   0122 F5 83               377 	mov	dph,a
   0124 08                  378 	inc	r0
   0125 E2                  379 	movx	a,@r0
   0126 F5 F0               380 	mov	b,a
   0128 08                  381 	inc	r0
   0129 E2                  382 	movx	a,@r0
   012A 12s00r00            383 	lcall	_ldexpf
   012D 78r08               384 	mov	r0,#_asincosf_g_1_1
   012F C0 E0               385 	push	acc
   0131 E5 82               386 	mov	a,dpl
   0133 F2                  387 	movx	@r0,a
   0134 08                  388 	inc	r0
   0135 E5 83               389 	mov	a,dph
   0137 F2                  390 	movx	@r0,a
   0138 08                  391 	inc	r0
   0139 E5 F0               392 	mov	a,b
   013B F2                  393 	movx	@r0,a
   013C D0 E0               394 	pop	acc
   013E 08                  395 	inc	r0
   013F F2                  396 	movx	@r0,a
                            397 ;	asincosf.c:73: y = sqrtf(g);
   0140 78r08               398 	mov	r0,#_asincosf_g_1_1
   0142 E2                  399 	movx	a,@r0
   0143 F5 82               400 	mov	dpl,a
   0145 08                  401 	inc	r0
   0146 E2                  402 	movx	a,@r0
   0147 F5 83               403 	mov	dph,a
   0149 08                  404 	inc	r0
   014A E2                  405 	movx	a,@r0
   014B F5 F0               406 	mov	b,a
   014D 08                  407 	inc	r0
   014E E2                  408 	movx	a,@r0
   014F 12s00r00            409 	lcall	_sqrtf
   0152 78r04               410 	mov	r0,#_asincosf_y_1_1
   0154 C0 E0               411 	push	acc
   0156 E5 82               412 	mov	a,dpl
   0158 F2                  413 	movx	@r0,a
   0159 08                  414 	inc	r0
   015A E5 83               415 	mov	a,dph
   015C F2                  416 	movx	@r0,a
   015D 08                  417 	inc	r0
   015E E5 F0               418 	mov	a,b
   0160 F2                  419 	movx	@r0,a
   0161 D0 E0               420 	pop	acc
   0163 08                  421 	inc	r0
   0164 F2                  422 	movx	@r0,a
                            423 ;	asincosf.c:74: y = -(y + y);
   0165 78r04               424 	mov	r0,#_asincosf_y_1_1
   0167 E2                  425 	movx	a,@r0
   0168 C0 E0               426 	push	acc
   016A 08                  427 	inc	r0
   016B E2                  428 	movx	a,@r0
   016C C0 E0               429 	push	acc
   016E 08                  430 	inc	r0
   016F E2                  431 	movx	a,@r0
   0170 C0 E0               432 	push	acc
   0172 08                  433 	inc	r0
   0173 E2                  434 	movx	a,@r0
   0174 C0 E0               435 	push	acc
   0176 78r04               436 	mov	r0,#_asincosf_y_1_1
   0178 E2                  437 	movx	a,@r0
   0179 F5 82               438 	mov	dpl,a
   017B 08                  439 	inc	r0
   017C E2                  440 	movx	a,@r0
   017D F5 83               441 	mov	dph,a
   017F 08                  442 	inc	r0
   0180 E2                  443 	movx	a,@r0
   0181 F5 F0               444 	mov	b,a
   0183 08                  445 	inc	r0
   0184 E2                  446 	movx	a,@r0
   0185 12s00r00            447 	lcall	___fsadd
   0188 85 82*00            448 	mov	_asincosf_sloc0_1_0,dpl
   018B 85 83*01            449 	mov	(_asincosf_sloc0_1_0 + 1),dph
   018E 85 F0*02            450 	mov	(_asincosf_sloc0_1_0 + 2),b
   0191 F5*03               451 	mov	(_asincosf_sloc0_1_0 + 3),a
   0193 E5 81               452 	mov	a,sp
   0195 24 FC               453 	add	a,#0xfc
   0197 F5 81               454 	mov	sp,a
   0199 78r04               455 	mov	r0,#_asincosf_y_1_1
   019B E5*00               456 	mov	a,_asincosf_sloc0_1_0
   019D F2                  457 	movx	@r0,a
   019E 08                  458 	inc	r0
   019F E5*01               459 	mov	a,(_asincosf_sloc0_1_0 + 1)
   01A1 F2                  460 	movx	@r0,a
   01A2 08                  461 	inc	r0
   01A3 E5*02               462 	mov	a,(_asincosf_sloc0_1_0 + 2)
   01A5 F2                  463 	movx	@r0,a
   01A6 E5*03               464 	mov	a,(_asincosf_sloc0_1_0 + 3)
   01A8 B2 E7               465 	cpl	acc.7
   01AA 08                  466 	inc	r0
   01AB F2                  467 	movx	@r0,a
   01AC 80 3C               468 	sjmp	00105$
   01AE                     469 00104$:
                            470 ;	asincosf.c:78: g = y * y;
   01AE 78r04               471 	mov	r0,#_asincosf_y_1_1
   01B0 E2                  472 	movx	a,@r0
   01B1 C0 E0               473 	push	acc
   01B3 08                  474 	inc	r0
   01B4 E2                  475 	movx	a,@r0
   01B5 C0 E0               476 	push	acc
   01B7 08                  477 	inc	r0
   01B8 E2                  478 	movx	a,@r0
   01B9 C0 E0               479 	push	acc
   01BB 08                  480 	inc	r0
   01BC E2                  481 	movx	a,@r0
   01BD C0 E0               482 	push	acc
   01BF 78r04               483 	mov	r0,#_asincosf_y_1_1
   01C1 E2                  484 	movx	a,@r0
   01C2 F5 82               485 	mov	dpl,a
   01C4 08                  486 	inc	r0
   01C5 E2                  487 	movx	a,@r0
   01C6 F5 83               488 	mov	dph,a
   01C8 08                  489 	inc	r0
   01C9 E2                  490 	movx	a,@r0
   01CA F5 F0               491 	mov	b,a
   01CC 08                  492 	inc	r0
   01CD E2                  493 	movx	a,@r0
   01CE 12s00r00            494 	lcall	___fsmul
   01D1 78r08               495 	mov	r0,#_asincosf_g_1_1
   01D3 C0 E0               496 	push	acc
   01D5 E5 82               497 	mov	a,dpl
   01D7 F2                  498 	movx	@r0,a
   01D8 08                  499 	inc	r0
   01D9 E5 83               500 	mov	a,dph
   01DB F2                  501 	movx	@r0,a
   01DC 08                  502 	inc	r0
   01DD E5 F0               503 	mov	a,b
   01DF F2                  504 	movx	@r0,a
   01E0 D0 E0               505 	pop	acc
   01E2 08                  506 	inc	r0
   01E3 F2                  507 	movx	@r0,a
   01E4 E5 81               508 	mov	a,sp
   01E6 24 FC               509 	add	a,#0xfc
   01E8 F5 81               510 	mov	sp,a
   01EA                     511 00105$:
                            512 ;	asincosf.c:80: r = y + y * ((P(g) * g) / Q(g));
   01EA 78r08               513 	mov	r0,#_asincosf_g_1_1
   01EC E2                  514 	movx	a,@r0
   01ED C0 E0               515 	push	acc
   01EF 08                  516 	inc	r0
   01F0 E2                  517 	movx	a,@r0
   01F1 C0 E0               518 	push	acc
   01F3 08                  519 	inc	r0
   01F4 E2                  520 	movx	a,@r0
   01F5 C0 E0               521 	push	acc
   01F7 08                  522 	inc	r0
   01F8 E2                  523 	movx	a,@r0
   01F9 C0 E0               524 	push	acc
   01FB 90 20 65            525 	mov	dptr,#0x2065
   01FE 75 F0 01            526 	mov	b,#0x01
   0201 74 BF               527 	mov	a,#0xBF
   0203 12s00r00            528 	lcall	___fsmul
   0206 AC 82               529 	mov	r4,dpl
   0208 AD 83               530 	mov	r5,dph
   020A AA F0               531 	mov	r2,b
   020C FB                  532 	mov	r3,a
   020D E5 81               533 	mov	a,sp
   020F 24 FC               534 	add	a,#0xfc
   0211 F5 81               535 	mov	sp,a
   0213 74 6B               536 	mov	a,#0x6B
   0215 C0 E0               537 	push	acc
   0217 74 16               538 	mov	a,#0x16
   0219 C0 E0               539 	push	acc
   021B 74 6F               540 	mov	a,#0x6F
   021D C0 E0               541 	push	acc
   021F 74 3F               542 	mov	a,#0x3F
   0221 C0 E0               543 	push	acc
   0223 8C 82               544 	mov	dpl,r4
   0225 8D 83               545 	mov	dph,r5
   0227 8A F0               546 	mov	b,r2
   0229 EB                  547 	mov	a,r3
   022A 12s00r00            548 	lcall	___fsadd
   022D AA 82               549 	mov	r2,dpl
   022F AB 83               550 	mov	r3,dph
   0231 AC F0               551 	mov	r4,b
   0233 FD                  552 	mov	r5,a
   0234 E5 81               553 	mov	a,sp
   0236 24 FC               554 	add	a,#0xfc
   0238 F5 81               555 	mov	sp,a
   023A 78r08               556 	mov	r0,#_asincosf_g_1_1
   023C E2                  557 	movx	a,@r0
   023D C0 E0               558 	push	acc
   023F 08                  559 	inc	r0
   0240 E2                  560 	movx	a,@r0
   0241 C0 E0               561 	push	acc
   0243 08                  562 	inc	r0
   0244 E2                  563 	movx	a,@r0
   0245 C0 E0               564 	push	acc
   0247 08                  565 	inc	r0
   0248 E2                  566 	movx	a,@r0
   0249 C0 E0               567 	push	acc
   024B 8A 82               568 	mov	dpl,r2
   024D 8B 83               569 	mov	dph,r3
   024F 8C F0               570 	mov	b,r4
   0251 ED                  571 	mov	a,r5
   0252 12s00r00            572 	lcall	___fsmul
   0255 85 82*00            573 	mov	_asincosf_sloc0_1_0,dpl
   0258 85 83*01            574 	mov	(_asincosf_sloc0_1_0 + 1),dph
   025B 85 F0*02            575 	mov	(_asincosf_sloc0_1_0 + 2),b
   025E F5*03               576 	mov	(_asincosf_sloc0_1_0 + 3),a
   0260 E5 81               577 	mov	a,sp
   0262 24 FC               578 	add	a,#0xfc
   0264 F5 81               579 	mov	sp,a
   0266 74 0B               580 	mov	a,#0x0B
   0268 C0 E0               581 	push	acc
   026A 74 8D               582 	mov	a,#0x8D
   026C C0 E0               583 	push	acc
   026E 74 B1               584 	mov	a,#0xB1
   0270 C0 E0               585 	push	acc
   0272 74 C0               586 	mov	a,#0xC0
   0274 C0 E0               587 	push	acc
   0276 78r08               588 	mov	r0,#_asincosf_g_1_1
   0278 E2                  589 	movx	a,@r0
   0279 F5 82               590 	mov	dpl,a
   027B 08                  591 	inc	r0
   027C E2                  592 	movx	a,@r0
   027D F5 83               593 	mov	dph,a
   027F 08                  594 	inc	r0
   0280 E2                  595 	movx	a,@r0
   0281 F5 F0               596 	mov	b,a
   0283 08                  597 	inc	r0
   0284 E2                  598 	movx	a,@r0
   0285 12s00r00            599 	lcall	___fsadd
   0288 AE 82               600 	mov	r6,dpl
   028A AF 83               601 	mov	r7,dph
   028C AA F0               602 	mov	r2,b
   028E FB                  603 	mov	r3,a
   028F E5 81               604 	mov	a,sp
   0291 24 FC               605 	add	a,#0xfc
   0293 F5 81               606 	mov	sp,a
   0295 78r08               607 	mov	r0,#_asincosf_g_1_1
   0297 E2                  608 	movx	a,@r0
   0298 C0 E0               609 	push	acc
   029A 08                  610 	inc	r0
   029B E2                  611 	movx	a,@r0
   029C C0 E0               612 	push	acc
   029E 08                  613 	inc	r0
   029F E2                  614 	movx	a,@r0
   02A0 C0 E0               615 	push	acc
   02A2 08                  616 	inc	r0
   02A3 E2                  617 	movx	a,@r0
   02A4 C0 E0               618 	push	acc
   02A6 8E 82               619 	mov	dpl,r6
   02A8 8F 83               620 	mov	dph,r7
   02AA 8A F0               621 	mov	b,r2
   02AC EB                  622 	mov	a,r3
   02AD 12s00r00            623 	lcall	___fsmul
   02B0 AA 82               624 	mov	r2,dpl
   02B2 AB 83               625 	mov	r3,dph
   02B4 AC F0               626 	mov	r4,b
   02B6 FD                  627 	mov	r5,a
   02B7 E5 81               628 	mov	a,sp
   02B9 24 FC               629 	add	a,#0xfc
   02BB F5 81               630 	mov	sp,a
   02BD 74 F0               631 	mov	a,#0xF0
   02BF C0 E0               632 	push	acc
   02C1 74 50               633 	mov	a,#0x50
   02C3 C0 E0               634 	push	acc
   02C5 74 B3               635 	mov	a,#0xB3
   02C7 C0 E0               636 	push	acc
   02C9 74 40               637 	mov	a,#0x40
   02CB C0 E0               638 	push	acc
   02CD 8A 82               639 	mov	dpl,r2
   02CF 8B 83               640 	mov	dph,r3
   02D1 8C F0               641 	mov	b,r4
   02D3 ED                  642 	mov	a,r5
   02D4 12s00r00            643 	lcall	___fsadd
   02D7 AA 82               644 	mov	r2,dpl
   02D9 AB 83               645 	mov	r3,dph
   02DB AC F0               646 	mov	r4,b
   02DD FD                  647 	mov	r5,a
   02DE E5 81               648 	mov	a,sp
   02E0 24 FC               649 	add	a,#0xfc
   02E2 F5 81               650 	mov	sp,a
   02E4 C0 02               651 	push	ar2
   02E6 C0 03               652 	push	ar3
   02E8 C0 04               653 	push	ar4
   02EA C0 05               654 	push	ar5
   02EC 85*00 82            655 	mov	dpl,_asincosf_sloc0_1_0
   02EF 85*01 83            656 	mov	dph,(_asincosf_sloc0_1_0 + 1)
   02F2 85*02 F0            657 	mov	b,(_asincosf_sloc0_1_0 + 2)
   02F5 E5*03               658 	mov	a,(_asincosf_sloc0_1_0 + 3)
   02F7 12s00r00            659 	lcall	___fsdiv
   02FA AA 82               660 	mov	r2,dpl
   02FC AB 83               661 	mov	r3,dph
   02FE AC F0               662 	mov	r4,b
   0300 FD                  663 	mov	r5,a
   0301 E5 81               664 	mov	a,sp
   0303 24 FC               665 	add	a,#0xfc
   0305 F5 81               666 	mov	sp,a
   0307 C0 02               667 	push	ar2
   0309 C0 03               668 	push	ar3
   030B C0 04               669 	push	ar4
   030D C0 05               670 	push	ar5
   030F 78r04               671 	mov	r0,#_asincosf_y_1_1
   0311 E2                  672 	movx	a,@r0
   0312 F5 82               673 	mov	dpl,a
   0314 08                  674 	inc	r0
   0315 E2                  675 	movx	a,@r0
   0316 F5 83               676 	mov	dph,a
   0318 08                  677 	inc	r0
   0319 E2                  678 	movx	a,@r0
   031A F5 F0               679 	mov	b,a
   031C 08                  680 	inc	r0
   031D E2                  681 	movx	a,@r0
   031E 12s00r00            682 	lcall	___fsmul
   0321 AA 82               683 	mov	r2,dpl
   0323 AB 83               684 	mov	r3,dph
   0325 AC F0               685 	mov	r4,b
   0327 FD                  686 	mov	r5,a
   0328 E5 81               687 	mov	a,sp
   032A 24 FC               688 	add	a,#0xfc
   032C F5 81               689 	mov	sp,a
   032E C0 02               690 	push	ar2
   0330 C0 03               691 	push	ar3
   0332 C0 04               692 	push	ar4
   0334 C0 05               693 	push	ar5
   0336 78r04               694 	mov	r0,#_asincosf_y_1_1
   0338 E2                  695 	movx	a,@r0
   0339 F5 82               696 	mov	dpl,a
   033B 08                  697 	inc	r0
   033C E2                  698 	movx	a,@r0
   033D F5 83               699 	mov	dph,a
   033F 08                  700 	inc	r0
   0340 E2                  701 	movx	a,@r0
   0341 F5 F0               702 	mov	b,a
   0343 08                  703 	inc	r0
   0344 E2                  704 	movx	a,@r0
   0345 12s00r00            705 	lcall	___fsadd
   0348 AC 82               706 	mov	r4,dpl
   034A AD 83               707 	mov	r5,dph
   034C AE F0               708 	mov	r6,b
   034E FF                  709 	mov	r7,a
   034F E5 81               710 	mov	a,sp
   0351 24 FC               711 	add	a,#0xfc
   0353 F5 81               712 	mov	sp,a
   0355                     713 00108$:
                            714 ;	asincosf.c:82: i = quartPI;
   0355 A2*01               715 	mov	c,_asincosf_quartPI_1_1
   0357 E4                  716 	clr	a
   0358 33                  717 	rlc	a
   0359 FA                  718 	mov	r2,a
                            719 ;	asincosf.c:83: if (isacos)
   035A 20*00 03            720 	jb	_asincosf_PARM_2,00128$
   035D 02s04r50            721 	ljmp	00115$
   0360                     722 00128$:
                            723 ;	asincosf.c:85: if (x < 0.0)
   0360 C0 02               724 	push	ar2
   0362 C0 04               725 	push	ar4
   0364 C0 05               726 	push	ar5
   0366 C0 06               727 	push	ar6
   0368 C0 07               728 	push	ar7
   036A E4                  729 	clr	a
   036B C0 E0               730 	push	acc
   036D C0 E0               731 	push	acc
   036F C0 E0               732 	push	acc
   0371 C0 E0               733 	push	acc
   0373 78r00               734 	mov	r0,#_asincosf_x_1_1
   0375 E2                  735 	movx	a,@r0
   0376 F5 82               736 	mov	dpl,a
   0378 08                  737 	inc	r0
   0379 E2                  738 	movx	a,@r0
   037A F5 83               739 	mov	dph,a
   037C 08                  740 	inc	r0
   037D E2                  741 	movx	a,@r0
   037E F5 F0               742 	mov	b,a
   0380 08                  743 	inc	r0
   0381 E2                  744 	movx	a,@r0
   0382 12s00r00            745 	lcall	___fslt
   0385 AB 82               746 	mov	r3,dpl
   0387 E5 81               747 	mov	a,sp
   0389 24 FC               748 	add	a,#0xfc
   038B F5 81               749 	mov	sp,a
   038D D0 07               750 	pop	ar7
   038F D0 06               751 	pop	ar6
   0391 D0 05               752 	pop	ar5
   0393 D0 04               753 	pop	ar4
   0395 D0 02               754 	pop	ar2
   0397 EB                  755 	mov	a,r3
   0398 60 5B               756 	jz	00110$
                            757 ;	asincosf.c:86: r = (b[i] + r) + b[i];
   039A EA                  758 	mov	a,r2
   039B 2A                  759 	add	a,r2
   039C 25 E0               760 	add	a,acc
   039E 24r14               761 	add	a,#_asincosf_b_1_1
   03A0 F8                  762 	mov	r0,a
   03A1 E2                  763 	movx	a,@r0
   03A2 F5*00               764 	mov	_asincosf_sloc0_1_0,a
   03A4 08                  765 	inc	r0
   03A5 E2                  766 	movx	a,@r0
   03A6 F5*01               767 	mov	(_asincosf_sloc0_1_0 + 1),a
   03A8 08                  768 	inc	r0
   03A9 E2                  769 	movx	a,@r0
   03AA F5*02               770 	mov	(_asincosf_sloc0_1_0 + 2),a
   03AC 08                  771 	inc	r0
   03AD E2                  772 	movx	a,@r0
   03AE F5*03               773 	mov	(_asincosf_sloc0_1_0 + 3),a
   03B0 C0 04               774 	push	ar4
   03B2 C0 05               775 	push	ar5
   03B4 C0 06               776 	push	ar6
   03B6 C0 07               777 	push	ar7
   03B8 85*00 82            778 	mov	dpl,_asincosf_sloc0_1_0
   03BB 85*01 83            779 	mov	dph,(_asincosf_sloc0_1_0 + 1)
   03BE 85*02 F0            780 	mov	b,(_asincosf_sloc0_1_0 + 2)
   03C1 E5*03               781 	mov	a,(_asincosf_sloc0_1_0 + 3)
   03C3 12s00r00            782 	lcall	___fsadd
   03C6 AF 82               783 	mov	r7,dpl
   03C8 AB 83               784 	mov	r3,dph
   03CA AC F0               785 	mov	r4,b
   03CC FD                  786 	mov	r5,a
   03CD E5 81               787 	mov	a,sp
   03CF 24 FC               788 	add	a,#0xfc
   03D1 F5 81               789 	mov	sp,a
   03D3 C0*00               790 	push	_asincosf_sloc0_1_0
   03D5 C0*01               791 	push	(_asincosf_sloc0_1_0 + 1)
   03D7 C0*02               792 	push	(_asincosf_sloc0_1_0 + 2)
   03D9 C0*03               793 	push	(_asincosf_sloc0_1_0 + 3)
   03DB 8F 82               794 	mov	dpl,r7
   03DD 8B 83               795 	mov	dph,r3
   03DF 8C F0               796 	mov	b,r4
   03E1 ED                  797 	mov	a,r5
   03E2 12s00r00            798 	lcall	___fsadd
   03E5 AC 82               799 	mov	r4,dpl
   03E7 AD 83               800 	mov	r5,dph
   03E9 AE F0               801 	mov	r6,b
   03EB FF                  802 	mov	r7,a
   03EC E5 81               803 	mov	a,sp
   03EE 24 FC               804 	add	a,#0xfc
   03F0 F5 81               805 	mov	sp,a
   03F2 02s04rE2            806 	ljmp	00116$
   03F5                     807 00110$:
                            808 ;	asincosf.c:88: r = (a[i] - r) + a[i];
   03F5 EA                  809 	mov	a,r2
   03F6 2A                  810 	add	a,r2
   03F7 25 E0               811 	add	a,acc
   03F9 24r0C               812 	add	a,#_asincosf_a_1_1
   03FB F8                  813 	mov	r0,a
   03FC E2                  814 	movx	a,@r0
   03FD F5*00               815 	mov	_asincosf_sloc0_1_0,a
   03FF 08                  816 	inc	r0
   0400 E2                  817 	movx	a,@r0
   0401 F5*01               818 	mov	(_asincosf_sloc0_1_0 + 1),a
   0403 08                  819 	inc	r0
   0404 E2                  820 	movx	a,@r0
   0405 F5*02               821 	mov	(_asincosf_sloc0_1_0 + 2),a
   0407 08                  822 	inc	r0
   0408 E2                  823 	movx	a,@r0
   0409 F5*03               824 	mov	(_asincosf_sloc0_1_0 + 3),a
   040B C0 04               825 	push	ar4
   040D C0 05               826 	push	ar5
   040F C0 06               827 	push	ar6
   0411 C0 07               828 	push	ar7
   0413 85*00 82            829 	mov	dpl,_asincosf_sloc0_1_0
   0416 85*01 83            830 	mov	dph,(_asincosf_sloc0_1_0 + 1)
   0419 85*02 F0            831 	mov	b,(_asincosf_sloc0_1_0 + 2)
   041C E5*03               832 	mov	a,(_asincosf_sloc0_1_0 + 3)
   041E 12s00r00            833 	lcall	___fssub
   0421 AF 82               834 	mov	r7,dpl
   0423 AB 83               835 	mov	r3,dph
   0425 AC F0               836 	mov	r4,b
   0427 FD                  837 	mov	r5,a
   0428 E5 81               838 	mov	a,sp
   042A 24 FC               839 	add	a,#0xfc
   042C F5 81               840 	mov	sp,a
   042E C0*00               841 	push	_asincosf_sloc0_1_0
   0430 C0*01               842 	push	(_asincosf_sloc0_1_0 + 1)
   0432 C0*02               843 	push	(_asincosf_sloc0_1_0 + 2)
   0434 C0*03               844 	push	(_asincosf_sloc0_1_0 + 3)
   0436 8F 82               845 	mov	dpl,r7
   0438 8B 83               846 	mov	dph,r3
   043A 8C F0               847 	mov	b,r4
   043C ED                  848 	mov	a,r5
   043D 12s00r00            849 	lcall	___fsadd
   0440 AC 82               850 	mov	r4,dpl
   0442 AD 83               851 	mov	r5,dph
   0444 AE F0               852 	mov	r6,b
   0446 FF                  853 	mov	r7,a
   0447 E5 81               854 	mov	a,sp
   0449 24 FC               855 	add	a,#0xfc
   044B F5 81               856 	mov	sp,a
   044D 02s04rE2            857 	ljmp	00116$
   0450                     858 00115$:
                            859 ;	asincosf.c:92: r = (a[i] + r) + a[i];
   0450 EA                  860 	mov	a,r2
   0451 2A                  861 	add	a,r2
   0452 25 E0               862 	add	a,acc
   0454 24r0C               863 	add	a,#_asincosf_a_1_1
   0456 F8                  864 	mov	r0,a
   0457 E2                  865 	movx	a,@r0
   0458 F5*00               866 	mov	_asincosf_sloc0_1_0,a
   045A 08                  867 	inc	r0
   045B E2                  868 	movx	a,@r0
   045C F5*01               869 	mov	(_asincosf_sloc0_1_0 + 1),a
   045E 08                  870 	inc	r0
   045F E2                  871 	movx	a,@r0
   0460 F5*02               872 	mov	(_asincosf_sloc0_1_0 + 2),a
   0462 08                  873 	inc	r0
   0463 E2                  874 	movx	a,@r0
   0464 F5*03               875 	mov	(_asincosf_sloc0_1_0 + 3),a
   0466 C0 04               876 	push	ar4
   0468 C0 05               877 	push	ar5
   046A C0 06               878 	push	ar6
   046C C0 07               879 	push	ar7
   046E 85*00 82            880 	mov	dpl,_asincosf_sloc0_1_0
   0471 85*01 83            881 	mov	dph,(_asincosf_sloc0_1_0 + 1)
   0474 85*02 F0            882 	mov	b,(_asincosf_sloc0_1_0 + 2)
   0477 E5*03               883 	mov	a,(_asincosf_sloc0_1_0 + 3)
   0479 12s00r00            884 	lcall	___fsadd
   047C AE 82               885 	mov	r6,dpl
   047E AF 83               886 	mov	r7,dph
   0480 AA F0               887 	mov	r2,b
   0482 FB                  888 	mov	r3,a
   0483 E5 81               889 	mov	a,sp
   0485 24 FC               890 	add	a,#0xfc
   0487 F5 81               891 	mov	sp,a
   0489 C0*00               892 	push	_asincosf_sloc0_1_0
   048B C0*01               893 	push	(_asincosf_sloc0_1_0 + 1)
   048D C0*02               894 	push	(_asincosf_sloc0_1_0 + 2)
   048F C0*03               895 	push	(_asincosf_sloc0_1_0 + 3)
   0491 8E 82               896 	mov	dpl,r6
   0493 8F 83               897 	mov	dph,r7
   0495 8A F0               898 	mov	b,r2
   0497 EB                  899 	mov	a,r3
   0498 12s00r00            900 	lcall	___fsadd
   049B AC 82               901 	mov	r4,dpl
   049D AD 83               902 	mov	r5,dph
   049F AE F0               903 	mov	r6,b
   04A1 FF                  904 	mov	r7,a
   04A2 E5 81               905 	mov	a,sp
   04A4 24 FC               906 	add	a,#0xfc
   04A6 F5 81               907 	mov	sp,a
                            908 ;	asincosf.c:93: if (x < 0.0)
   04A8 C0 04               909 	push	ar4
   04AA C0 05               910 	push	ar5
   04AC C0 06               911 	push	ar6
   04AE C0 07               912 	push	ar7
   04B0 E4                  913 	clr	a
   04B1 C0 E0               914 	push	acc
   04B3 C0 E0               915 	push	acc
   04B5 C0 E0               916 	push	acc
   04B7 C0 E0               917 	push	acc
   04B9 78r00               918 	mov	r0,#_asincosf_x_1_1
   04BB E2                  919 	movx	a,@r0
   04BC F5 82               920 	mov	dpl,a
   04BE 08                  921 	inc	r0
   04BF E2                  922 	movx	a,@r0
   04C0 F5 83               923 	mov	dph,a
   04C2 08                  924 	inc	r0
   04C3 E2                  925 	movx	a,@r0
   04C4 F5 F0               926 	mov	b,a
   04C6 08                  927 	inc	r0
   04C7 E2                  928 	movx	a,@r0
   04C8 12s00r00            929 	lcall	___fslt
   04CB AA 82               930 	mov	r2,dpl
   04CD E5 81               931 	mov	a,sp
   04CF 24 FC               932 	add	a,#0xfc
   04D1 F5 81               933 	mov	sp,a
   04D3 D0 07               934 	pop	ar7
   04D5 D0 06               935 	pop	ar6
   04D7 D0 05               936 	pop	ar5
   04D9 D0 04               937 	pop	ar4
   04DB EA                  938 	mov	a,r2
   04DC 60 04               939 	jz	00116$
                            940 ;	asincosf.c:94: r = -r;
   04DE EF                  941 	mov	a,r7
   04DF B2 E7               942 	cpl	acc.7
   04E1 FF                  943 	mov	r7,a
   04E2                     944 00116$:
                            945 ;	asincosf.c:96: return r;
   04E2 8C 82               946 	mov	dpl,r4
   04E4 8D 83               947 	mov	dph,r5
   04E6 8E F0               948 	mov	b,r6
   04E8 EF                  949 	mov	a,r7
   04E9 22                  950 	ret
                            951 	.area CSEG    (CODE)
                            952 	.area CONST   (CODE)
                            953 	.area XINIT   (CODE)
                            954 	.area CABS    (ABS,CODE)
