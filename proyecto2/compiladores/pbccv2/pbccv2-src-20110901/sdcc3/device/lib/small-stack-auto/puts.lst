                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:32 2015
                              5 ;--------------------------------------------------------
                              6 	.module puts
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _puts
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'puts'
                             93 ;------------------------------------------------------------
                             94 ;s                         Allocated to registers r2 r3 r4 
                             95 ;i                         Allocated to registers r5 r6 
                             96 ;------------------------------------------------------------
                             97 ;	puts.c:31: int puts (char *s)
                             98 ;	-----------------------------------------
                             99 ;	 function puts
                            100 ;	-----------------------------------------
   0000                     101 _puts:
                    0002    102 	ar2 = 0x02
                    0003    103 	ar3 = 0x03
                    0004    104 	ar4 = 0x04
                    0005    105 	ar5 = 0x05
                    0006    106 	ar6 = 0x06
                    0007    107 	ar7 = 0x07
                    0000    108 	ar0 = 0x00
                    0001    109 	ar1 = 0x01
   0000 AA 82               110 	mov	r2,dpl
   0002 AB 83               111 	mov	r3,dph
   0004 AC F0               112 	mov	r4,b
                            113 ;	puts.c:34: while (*s){
   0006 7D 00               114 	mov	r5,#0x00
   0008 7E 00               115 	mov	r6,#0x00
   000A                     116 00101$:
   000A 8A 82               117 	mov	dpl,r2
   000C 8B 83               118 	mov	dph,r3
   000E 8C F0               119 	mov	b,r4
   0010 12s00r00            120 	lcall	__gptrget
   0013 FF                  121 	mov	r7,a
   0014 60 25               122 	jz	00103$
                            123 ;	puts.c:35: putchar(*s++);
   0016 0A                  124 	inc	r2
   0017 BA 00 01            125 	cjne	r2,#0x00,00110$
   001A 0B                  126 	inc	r3
   001B                     127 00110$:
   001B 8F 82               128 	mov	dpl,r7
   001D C0 02               129 	push	ar2
   001F C0 03               130 	push	ar3
   0021 C0 04               131 	push	ar4
   0023 C0 05               132 	push	ar5
   0025 C0 06               133 	push	ar6
   0027 12s00r00            134 	lcall	_putchar
   002A D0 06               135 	pop	ar6
   002C D0 05               136 	pop	ar5
   002E D0 04               137 	pop	ar4
   0030 D0 03               138 	pop	ar3
   0032 D0 02               139 	pop	ar2
                            140 ;	puts.c:36: i++;
   0034 0D                  141 	inc	r5
   0035 BD 00 D2            142 	cjne	r5,#0x00,00101$
   0038 0E                  143 	inc	r6
   0039 80 CF               144 	sjmp	00101$
   003B                     145 00103$:
                            146 ;	puts.c:38: putchar('\n');
   003B 75 82 0A            147 	mov	dpl,#0x0A
   003E C0 05               148 	push	ar5
   0040 C0 06               149 	push	ar6
   0042 12s00r00            150 	lcall	_putchar
   0045 D0 06               151 	pop	ar6
   0047 D0 05               152 	pop	ar5
                            153 ;	puts.c:39: return i+1;
   0049 8D 82               154 	mov	dpl,r5
   004B 8E 83               155 	mov	dph,r6
   004D A3                  156 	inc	dptr
   004E 22                  157 	ret
                            158 	.area CSEG    (CODE)
                            159 	.area CONST   (CODE)
                            160 	.area XINIT   (CODE)
                            161 	.area CABS    (ABS,CODE)
