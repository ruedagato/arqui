                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:31 2015
                              5 ;--------------------------------------------------------
                              6 	.module rand
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _rand
                             13 	.globl _srand
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 	.area RSEG    (ABS,DATA)
   0000                      18 	.org 0x0000
                             19 ;--------------------------------------------------------
                             20 ; special function bits
                             21 ;--------------------------------------------------------
                             22 	.area RSEG    (ABS,DATA)
   0000                      23 	.org 0x0000
                             24 ;--------------------------------------------------------
                             25 ; overlayable register banks
                             26 ;--------------------------------------------------------
                             27 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      28 	.ds 8
                             29 ;--------------------------------------------------------
                             30 ; internal ram data
                             31 ;--------------------------------------------------------
                             32 	.area DSEG    (DATA)
   0000                      33 _next:
   0000                      34 	.ds 4
                             35 ;--------------------------------------------------------
                             36 ; overlayable items in internal ram 
                             37 ;--------------------------------------------------------
                             38 	.area OSEG    (OVR,DATA)
                             39 ;--------------------------------------------------------
                             40 ; indirectly addressable internal ram data
                             41 ;--------------------------------------------------------
                             42 	.area ISEG    (DATA)
                             43 ;--------------------------------------------------------
                             44 ; absolute internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area IABS    (ABS,DATA)
                             47 	.area IABS    (ABS,DATA)
                             48 ;--------------------------------------------------------
                             49 ; bit data
                             50 ;--------------------------------------------------------
                             51 	.area BSEG    (BIT)
                             52 ;--------------------------------------------------------
                             53 ; paged external ram data
                             54 ;--------------------------------------------------------
                             55 	.area PSEG    (PAG,XDATA)
                             56 ;--------------------------------------------------------
                             57 ; external ram data
                             58 ;--------------------------------------------------------
                             59 	.area XSEG    (XDATA)
                             60 ;--------------------------------------------------------
                             61 ; absolute external ram data
                             62 ;--------------------------------------------------------
                             63 	.area XABS    (ABS,XDATA)
                             64 ;--------------------------------------------------------
                             65 ; external initialized ram data
                             66 ;--------------------------------------------------------
                             67 	.area XISEG   (XDATA)
                             68 	.area HOME    (CODE)
                             69 	.area GSINIT0 (CODE)
                             70 	.area GSINIT1 (CODE)
                             71 	.area GSINIT2 (CODE)
                             72 	.area GSINIT3 (CODE)
                             73 	.area GSINIT4 (CODE)
                             74 	.area GSINIT5 (CODE)
                             75 	.area GSINIT  (CODE)
                             76 	.area GSFINAL (CODE)
                             77 	.area CSEG    (CODE)
                             78 ;--------------------------------------------------------
                             79 ; global & static initialisations
                             80 ;--------------------------------------------------------
                             81 	.area HOME    (CODE)
                             82 	.area GSINIT  (CODE)
                             83 	.area GSFINAL (CODE)
                             84 	.area GSINIT  (CODE)
                             85 ;	rand.c:31: static unsigned long int next = 1;
   0000 75*00 01             86 	mov	_next,#0x01
   0003 E4                   87 	clr	a
   0004 F5*01                88 	mov	(_next + 1),a
   0006 F5*02                89 	mov	(_next + 2),a
   0008 F5*03                90 	mov	(_next + 3),a
                             91 ;--------------------------------------------------------
                             92 ; Home
                             93 ;--------------------------------------------------------
                             94 	.area HOME    (CODE)
                             95 	.area HOME    (CODE)
                             96 ;--------------------------------------------------------
                             97 ; code
                             98 ;--------------------------------------------------------
                             99 	.area CSEG    (CODE)
                            100 ;------------------------------------------------------------
                            101 ;Allocation info for local variables in function 'rand'
                            102 ;------------------------------------------------------------
                            103 ;------------------------------------------------------------
                            104 ;	rand.c:33: int rand(void)
                            105 ;	-----------------------------------------
                            106 ;	 function rand
                            107 ;	-----------------------------------------
   0000                     108 _rand:
                    0002    109 	ar2 = 0x02
                    0003    110 	ar3 = 0x03
                    0004    111 	ar4 = 0x04
                    0005    112 	ar5 = 0x05
                    0006    113 	ar6 = 0x06
                    0007    114 	ar7 = 0x07
                    0000    115 	ar0 = 0x00
                    0001    116 	ar1 = 0x01
                            117 ;	rand.c:35: next = next * 1103515245UL + 12345;
   0000 C0*00               118 	push	_next
   0002 C0*01               119 	push	(_next + 1)
   0004 C0*02               120 	push	(_next + 2)
   0006 C0*03               121 	push	(_next + 3)
   0008 90 4E 6D            122 	mov	dptr,#0x4E6D
   000B 75 F0 C6            123 	mov	b,#0xC6
   000E 74 41               124 	mov	a,#0x41
   0010 12s00r00            125 	lcall	__mullong
   0013 AA 82               126 	mov	r2,dpl
   0015 AB 83               127 	mov	r3,dph
   0017 AC F0               128 	mov	r4,b
   0019 FD                  129 	mov	r5,a
   001A E5 81               130 	mov	a,sp
   001C 24 FC               131 	add	a,#0xfc
   001E F5 81               132 	mov	sp,a
   0020 74 39               133 	mov	a,#0x39
   0022 2A                  134 	add	a,r2
   0023 F5*00               135 	mov	_next,a
   0025 74 30               136 	mov	a,#0x30
   0027 3B                  137 	addc	a,r3
   0028 F5*01               138 	mov	(_next + 1),a
   002A E4                  139 	clr	a
   002B 3C                  140 	addc	a,r4
   002C F5*02               141 	mov	(_next + 2),a
   002E E4                  142 	clr	a
   002F 3D                  143 	addc	a,r5
   0030 F5*03               144 	mov	(_next + 3),a
                            145 ;	rand.c:36: return (unsigned int)(next/65536) % (RAND_MAX + 1U);
   0032 AA*02               146 	mov	r2,(_next + 2)
   0034 AB*03               147 	mov	r3,(_next + 3)
   0036 8A 82               148 	mov	dpl,r2
   0038 74 7F               149 	mov	a,#0x7F
   003A 5B                  150 	anl	a,r3
   003B F5 83               151 	mov	dph,a
   003D 22                  152 	ret
                            153 ;------------------------------------------------------------
                            154 ;Allocation info for local variables in function 'srand'
                            155 ;------------------------------------------------------------
                            156 ;seed                      Allocated to registers r2 r3 
                            157 ;------------------------------------------------------------
                            158 ;	rand.c:39: void srand(unsigned int seed)
                            159 ;	-----------------------------------------
                            160 ;	 function srand
                            161 ;	-----------------------------------------
   003E                     162 _srand:
   003E AA 82               163 	mov	r2,dpl
   0040 AB 83               164 	mov	r3,dph
                            165 ;	rand.c:41: next = seed;
   0042 8A*00               166 	mov	_next,r2
   0044 8B*01               167 	mov	(_next + 1),r3
   0046 75*02 00            168 	mov	(_next + 2),#0x00
   0049 75*03 00            169 	mov	(_next + 3),#0x00
   004C 22                  170 	ret
                            171 	.area CSEG    (CODE)
                            172 	.area CONST   (CODE)
                            173 	.area XINIT   (CODE)
                            174 	.area CABS    (ABS,CODE)
