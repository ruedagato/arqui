                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:31 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strncpy
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strncpy
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'strncpy'
                             93 ;------------------------------------------------------------
                             94 ;s                         Allocated to stack - offset -5
                             95 ;n                         Allocated to stack - offset -7
                             96 ;d                         Allocated to stack - offset 1
                             97 ;d1                        Allocated to stack - offset 4
                             98 ;sloc0                     Allocated to stack - offset 7
                             99 ;------------------------------------------------------------
                            100 ;	_strncpy.c:31: char *strncpy (
                            101 ;	-----------------------------------------
                            102 ;	 function strncpy
                            103 ;	-----------------------------------------
   0000                     104 _strncpy:
                    0002    105 	ar2 = 0x02
                    0003    106 	ar3 = 0x03
                    0004    107 	ar4 = 0x04
                    0005    108 	ar5 = 0x05
                    0006    109 	ar6 = 0x06
                    0007    110 	ar7 = 0x07
                    0000    111 	ar0 = 0x00
                    0001    112 	ar1 = 0x01
   0000 C0*00               113 	push	_bp
   0002 E5 81               114 	mov	a,sp
   0004 F5*00               115 	mov	_bp,a
   0006 24 09               116 	add	a,#0x09
   0008 F5 81               117 	mov	sp,a
   000A AA 82               118 	mov	r2,dpl
   000C AB 83               119 	mov	r3,dph
   000E AC F0               120 	mov	r4,b
                            121 ;	_strncpy.c:36: register char * d1 =  d;
   0010 E5*00               122 	mov	a,_bp
   0012 24 04               123 	add	a,#0x04
   0014 F8                  124 	mov	r0,a
   0015 A6 02               125 	mov	@r0,ar2
   0017 08                  126 	inc	r0
   0018 A6 03               127 	mov	@r0,ar3
   001A 08                  128 	inc	r0
   001B A6 04               129 	mov	@r0,ar4
                            130 ;	_strncpy.c:38: while ( n && *s )
   001D E5*00               131 	mov	a,_bp
   001F 24 F9               132 	add	a,#0xf9
   0021 F8                  133 	mov	r0,a
   0022 86 05               134 	mov	ar5,@r0
   0024 08                  135 	inc	r0
   0025 86 06               136 	mov	ar6,@r0
   0027 E5*00               137 	mov	a,_bp
   0029 24 FB               138 	add	a,#0xfb
   002B F8                  139 	mov	r0,a
   002C E5*00               140 	mov	a,_bp
   002E 24 07               141 	add	a,#0x07
   0030 F9                  142 	mov	r1,a
   0031 E6                  143 	mov	a,@r0
   0032 F7                  144 	mov	@r1,a
   0033 08                  145 	inc	r0
   0034 09                  146 	inc	r1
   0035 E6                  147 	mov	a,@r0
   0036 F7                  148 	mov	@r1,a
   0037 08                  149 	inc	r0
   0038 09                  150 	inc	r1
   0039 E6                  151 	mov	a,@r0
   003A F7                  152 	mov	@r1,a
   003B                     153 00102$:
   003B ED                  154 	mov	a,r5
   003C 4E                  155 	orl	a,r6
   003D 60 34               156 	jz	00114$
   003F E5*00               157 	mov	a,_bp
   0041 24 07               158 	add	a,#0x07
   0043 F8                  159 	mov	r0,a
   0044 86 82               160 	mov	dpl,@r0
   0046 08                  161 	inc	r0
   0047 86 83               162 	mov	dph,@r0
   0049 08                  163 	inc	r0
   004A 86 F0               164 	mov	b,@r0
   004C 12s00r00            165 	lcall	__gptrget
   004F FF                  166 	mov	r7,a
   0050 60 21               167 	jz	00114$
                            168 ;	_strncpy.c:40: n-- ;
   0052 1D                  169 	dec	r5
   0053 BD FF 01            170 	cjne	r5,#0xff,00119$
   0056 1E                  171 	dec	r6
   0057                     172 00119$:
                            173 ;	_strncpy.c:41: *d++ = *s++ ;
   0057 E5*00               174 	mov	a,_bp
   0059 24 07               175 	add	a,#0x07
   005B F8                  176 	mov	r0,a
   005C 06                  177 	inc	@r0
   005D B6 00 02            178 	cjne	@r0,#0x00,00120$
   0060 08                  179 	inc	r0
   0061 06                  180 	inc	@r0
   0062                     181 00120$:
   0062 8A 82               182 	mov	dpl,r2
   0064 8B 83               183 	mov	dph,r3
   0066 8C F0               184 	mov	b,r4
   0068 EF                  185 	mov	a,r7
   0069 12s00r00            186 	lcall	__gptrput
   006C A3                  187 	inc	dptr
   006D AA 82               188 	mov	r2,dpl
   006F AB 83               189 	mov	r3,dph
                            190 ;	_strncpy.c:43: while ( n-- )
   0071 80 C8               191 	sjmp	00102$
   0073                     192 00114$:
   0073 A8*00               193 	mov	r0,_bp
   0075 08                  194 	inc	r0
   0076 A6 02               195 	mov	@r0,ar2
   0078 08                  196 	inc	r0
   0079 A6 03               197 	mov	@r0,ar3
   007B 08                  198 	inc	r0
   007C A6 04               199 	mov	@r0,ar4
   007E                     200 00105$:
   007E 8D 07               201 	mov	ar7,r5
   0080 8E 02               202 	mov	ar2,r6
   0082 1D                  203 	dec	r5
   0083 BD FF 01            204 	cjne	r5,#0xff,00121$
   0086 1E                  205 	dec	r6
   0087                     206 00121$:
   0087 EF                  207 	mov	a,r7
   0088 4A                  208 	orl	a,r2
   0089 60 19               209 	jz	00107$
                            210 ;	_strncpy.c:45: *d++ = '\0' ;
   008B A8*00               211 	mov	r0,_bp
   008D 08                  212 	inc	r0
   008E 86 82               213 	mov	dpl,@r0
   0090 08                  214 	inc	r0
   0091 86 83               215 	mov	dph,@r0
   0093 08                  216 	inc	r0
   0094 86 F0               217 	mov	b,@r0
   0096 E4                  218 	clr	a
   0097 12s00r00            219 	lcall	__gptrput
   009A A3                  220 	inc	dptr
   009B 18                  221 	dec	r0
   009C 18                  222 	dec	r0
   009D A6 82               223 	mov	@r0,dpl
   009F 08                  224 	inc	r0
   00A0 A6 83               225 	mov	@r0,dph
   00A2 80 DA               226 	sjmp	00105$
   00A4                     227 00107$:
                            228 ;	_strncpy.c:47: return d1;
   00A4 E5*00               229 	mov	a,_bp
   00A6 24 04               230 	add	a,#0x04
   00A8 F8                  231 	mov	r0,a
   00A9 86 82               232 	mov	dpl,@r0
   00AB 08                  233 	inc	r0
   00AC 86 83               234 	mov	dph,@r0
   00AE 08                  235 	inc	r0
   00AF 86 F0               236 	mov	b,@r0
   00B1 85*00 81            237 	mov	sp,_bp
   00B4 D0*00               238 	pop	_bp
   00B6 22                  239 	ret
                            240 	.area CSEG    (CODE)
                            241 	.area CONST   (CODE)
                            242 	.area XINIT   (CODE)
                            243 	.area CABS    (ABS,CODE)
