                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:28 2015
                              5 ;--------------------------------------------------------
                              6 	.module tanhf
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _tanhf
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'tanhf'
                             93 ;------------------------------------------------------------
                             94 ;x                         Allocated to stack - offset 1
                             95 ;f                         Allocated to stack - offset 5
                             96 ;g                         Allocated to stack - offset 9
                             97 ;r                         Allocated to stack - offset 13
                             98 ;sloc0                     Allocated to stack - offset 17
                             99 ;------------------------------------------------------------
                            100 ;	tanhf.c:50: float tanhf(const float x) _FLOAT_FUNC_REENTRANT
                            101 ;	-----------------------------------------
                            102 ;	 function tanhf
                            103 ;	-----------------------------------------
   0000                     104 _tanhf:
                    0002    105 	ar2 = 0x02
                    0003    106 	ar3 = 0x03
                    0004    107 	ar4 = 0x04
                    0005    108 	ar5 = 0x05
                    0006    109 	ar6 = 0x06
                    0007    110 	ar7 = 0x07
                    0000    111 	ar0 = 0x00
                    0001    112 	ar1 = 0x01
   0000 C0*00               113 	push	_bp
   0002 85 81*00            114 	mov	_bp,sp
   0005 C0 82               115 	push	dpl
   0007 C0 83               116 	push	dph
   0009 C0 F0               117 	push	b
   000B C0 E0               118 	push	acc
   000D E5 81               119 	mov	a,sp
   000F 24 14               120 	add	a,#0x14
   0011 F5 81               121 	mov	sp,a
                            122 ;	tanhf.c:54: f=fabsf(x);
   0013 A8*00               123 	mov	r0,_bp
   0015 08                  124 	inc	r0
   0016 86 82               125 	mov	dpl,@r0
   0018 08                  126 	inc	r0
   0019 86 83               127 	mov	dph,@r0
   001B 08                  128 	inc	r0
   001C 86 F0               129 	mov	b,@r0
   001E 08                  130 	inc	r0
   001F E6                  131 	mov	a,@r0
   0020 12s00r00            132 	lcall	_fabsf
   0023 AA 82               133 	mov	r2,dpl
   0025 AB 83               134 	mov	r3,dph
   0027 AC F0               135 	mov	r4,b
   0029 FD                  136 	mov	r5,a
   002A E5*00               137 	mov	a,_bp
   002C 24 05               138 	add	a,#0x05
   002E F8                  139 	mov	r0,a
   002F A6 02               140 	mov	@r0,ar2
   0031 08                  141 	inc	r0
   0032 A6 03               142 	mov	@r0,ar3
   0034 08                  143 	inc	r0
   0035 A6 04               144 	mov	@r0,ar4
   0037 08                  145 	inc	r0
   0038 A6 05               146 	mov	@r0,ar5
                            147 ;	tanhf.c:55: if(f>SBIG) r=1.0;
   003A 74 B0               148 	mov	a,#0xB0
   003C C0 E0               149 	push	acc
   003E 74 2C               150 	mov	a,#0x2C
   0040 C0 E0               151 	push	acc
   0042 74 10               152 	mov	a,#0x10
   0044 C0 E0               153 	push	acc
   0046 74 41               154 	mov	a,#0x41
   0048 C0 E0               155 	push	acc
   004A E5*00               156 	mov	a,_bp
   004C 24 05               157 	add	a,#0x05
   004E F8                  158 	mov	r0,a
   004F 86 82               159 	mov	dpl,@r0
   0051 08                  160 	inc	r0
   0052 86 83               161 	mov	dph,@r0
   0054 08                  162 	inc	r0
   0055 86 F0               163 	mov	b,@r0
   0057 08                  164 	inc	r0
   0058 E6                  165 	mov	a,@r0
   0059 12s00r00            166 	lcall	___fsgt
   005C AC 82               167 	mov	r4,dpl
   005E E5 81               168 	mov	a,sp
   0060 24 FC               169 	add	a,#0xfc
   0062 F5 81               170 	mov	sp,a
   0064 EC                  171 	mov	a,r4
   0065 60 12               172 	jz	00108$
   0067 E5*00               173 	mov	a,_bp
   0069 24 0D               174 	add	a,#0x0d
   006B F8                  175 	mov	r0,a
   006C E4                  176 	clr	a
   006D F6                  177 	mov	@r0,a
   006E 08                  178 	inc	r0
   006F F6                  179 	mov	@r0,a
   0070 08                  180 	inc	r0
   0071 76 80               181 	mov	@r0,#0x80
   0073 08                  182 	inc	r0
   0074 76 3F               183 	mov	@r0,#0x3F
   0076 02s03r6A            184 	ljmp	00109$
   0079                     185 00108$:
                            186 ;	tanhf.c:56: else if(f>K1)
   0079 74 54               187 	mov	a,#0x54
   007B C0 E0               188 	push	acc
   007D 74 9F               189 	mov	a,#0x9F
   007F C0 E0               190 	push	acc
   0081 74 0C               191 	mov	a,#0x0C
   0083 C0 E0               192 	push	acc
   0085 74 3F               193 	mov	a,#0x3F
   0087 C0 E0               194 	push	acc
   0089 E5*00               195 	mov	a,_bp
   008B 24 05               196 	add	a,#0x05
   008D F8                  197 	mov	r0,a
   008E 86 82               198 	mov	dpl,@r0
   0090 08                  199 	inc	r0
   0091 86 83               200 	mov	dph,@r0
   0093 08                  201 	inc	r0
   0094 86 F0               202 	mov	b,@r0
   0096 08                  203 	inc	r0
   0097 E6                  204 	mov	a,@r0
   0098 12s00r00            205 	lcall	___fsgt
   009B AC 82               206 	mov	r4,dpl
   009D E5 81               207 	mov	a,sp
   009F 24 FC               208 	add	a,#0xfc
   00A1 F5 81               209 	mov	sp,a
   00A3 EC                  210 	mov	a,r4
   00A4 70 03               211 	jnz	00119$
   00A6 02s01rA7            212 	ljmp	00105$
   00A9                     213 00119$:
                            214 ;	tanhf.c:58: r=0.5-1.0/(expf(f+f)+1.0);
   00A9 E5*00               215 	mov	a,_bp
   00AB 24 05               216 	add	a,#0x05
   00AD F8                  217 	mov	r0,a
   00AE E6                  218 	mov	a,@r0
   00AF C0 E0               219 	push	acc
   00B1 08                  220 	inc	r0
   00B2 E6                  221 	mov	a,@r0
   00B3 C0 E0               222 	push	acc
   00B5 08                  223 	inc	r0
   00B6 E6                  224 	mov	a,@r0
   00B7 C0 E0               225 	push	acc
   00B9 08                  226 	inc	r0
   00BA E6                  227 	mov	a,@r0
   00BB C0 E0               228 	push	acc
   00BD E5*00               229 	mov	a,_bp
   00BF 24 05               230 	add	a,#0x05
   00C1 F8                  231 	mov	r0,a
   00C2 86 82               232 	mov	dpl,@r0
   00C4 08                  233 	inc	r0
   00C5 86 83               234 	mov	dph,@r0
   00C7 08                  235 	inc	r0
   00C8 86 F0               236 	mov	b,@r0
   00CA 08                  237 	inc	r0
   00CB E6                  238 	mov	a,@r0
   00CC 12s00r00            239 	lcall	___fsadd
   00CF AA 82               240 	mov	r2,dpl
   00D1 AB 83               241 	mov	r3,dph
   00D3 AC F0               242 	mov	r4,b
   00D5 FD                  243 	mov	r5,a
   00D6 E5 81               244 	mov	a,sp
   00D8 24 FC               245 	add	a,#0xfc
   00DA F5 81               246 	mov	sp,a
   00DC 8A 82               247 	mov	dpl,r2
   00DE 8B 83               248 	mov	dph,r3
   00E0 8C F0               249 	mov	b,r4
   00E2 ED                  250 	mov	a,r5
   00E3 12s00r00            251 	lcall	_expf
   00E6 AA 82               252 	mov	r2,dpl
   00E8 AB 83               253 	mov	r3,dph
   00EA AC F0               254 	mov	r4,b
   00EC FD                  255 	mov	r5,a
   00ED E4                  256 	clr	a
   00EE C0 E0               257 	push	acc
   00F0 C0 E0               258 	push	acc
   00F2 74 80               259 	mov	a,#0x80
   00F4 C0 E0               260 	push	acc
   00F6 74 3F               261 	mov	a,#0x3F
   00F8 C0 E0               262 	push	acc
   00FA 8A 82               263 	mov	dpl,r2
   00FC 8B 83               264 	mov	dph,r3
   00FE 8C F0               265 	mov	b,r4
   0100 ED                  266 	mov	a,r5
   0101 12s00r00            267 	lcall	___fsadd
   0104 AA 82               268 	mov	r2,dpl
   0106 AB 83               269 	mov	r3,dph
   0108 AC F0               270 	mov	r4,b
   010A FD                  271 	mov	r5,a
   010B E5 81               272 	mov	a,sp
   010D 24 FC               273 	add	a,#0xfc
   010F F5 81               274 	mov	sp,a
   0111 C0 02               275 	push	ar2
   0113 C0 03               276 	push	ar3
   0115 C0 04               277 	push	ar4
   0117 C0 05               278 	push	ar5
   0119 90 00 00            279 	mov	dptr,#0x0000
   011C 75 F0 80            280 	mov	b,#0x80
   011F 74 3F               281 	mov	a,#0x3F
   0121 12s00r00            282 	lcall	___fsdiv
   0124 AA 82               283 	mov	r2,dpl
   0126 AB 83               284 	mov	r3,dph
   0128 AC F0               285 	mov	r4,b
   012A FD                  286 	mov	r5,a
   012B E5 81               287 	mov	a,sp
   012D 24 FC               288 	add	a,#0xfc
   012F F5 81               289 	mov	sp,a
   0131 C0 02               290 	push	ar2
   0133 C0 03               291 	push	ar3
   0135 C0 04               292 	push	ar4
   0137 C0 05               293 	push	ar5
   0139 90 00 00            294 	mov	dptr,#(0x00&0x00ff)
   013C E4                  295 	clr	a
   013D F5 F0               296 	mov	b,a
   013F 74 3F               297 	mov	a,#0x3F
   0141 12s00r00            298 	lcall	___fssub
   0144 AA 82               299 	mov	r2,dpl
   0146 AB 83               300 	mov	r3,dph
   0148 AC F0               301 	mov	r4,b
   014A FD                  302 	mov	r5,a
   014B E5 81               303 	mov	a,sp
   014D 24 FC               304 	add	a,#0xfc
   014F F5 81               305 	mov	sp,a
   0151 E5*00               306 	mov	a,_bp
   0153 24 0D               307 	add	a,#0x0d
   0155 F8                  308 	mov	r0,a
   0156 A6 02               309 	mov	@r0,ar2
   0158 08                  310 	inc	r0
   0159 A6 03               311 	mov	@r0,ar3
   015B 08                  312 	inc	r0
   015C A6 04               313 	mov	@r0,ar4
   015E 08                  314 	inc	r0
   015F A6 05               315 	mov	@r0,ar5
                            316 ;	tanhf.c:59: r+=r;
   0161 E5*00               317 	mov	a,_bp
   0163 24 0D               318 	add	a,#0x0d
   0165 F8                  319 	mov	r0,a
   0166 E6                  320 	mov	a,@r0
   0167 C0 E0               321 	push	acc
   0169 08                  322 	inc	r0
   016A E6                  323 	mov	a,@r0
   016B C0 E0               324 	push	acc
   016D 08                  325 	inc	r0
   016E E6                  326 	mov	a,@r0
   016F C0 E0               327 	push	acc
   0171 08                  328 	inc	r0
   0172 E6                  329 	mov	a,@r0
   0173 C0 E0               330 	push	acc
   0175 E5*00               331 	mov	a,_bp
   0177 24 0D               332 	add	a,#0x0d
   0179 F8                  333 	mov	r0,a
   017A 86 82               334 	mov	dpl,@r0
   017C 08                  335 	inc	r0
   017D 86 83               336 	mov	dph,@r0
   017F 08                  337 	inc	r0
   0180 86 F0               338 	mov	b,@r0
   0182 08                  339 	inc	r0
   0183 E6                  340 	mov	a,@r0
   0184 12s00r00            341 	lcall	___fsadd
   0187 AA 82               342 	mov	r2,dpl
   0189 AB 83               343 	mov	r3,dph
   018B AC F0               344 	mov	r4,b
   018D FD                  345 	mov	r5,a
   018E E5 81               346 	mov	a,sp
   0190 24 FC               347 	add	a,#0xfc
   0192 F5 81               348 	mov	sp,a
   0194 E5*00               349 	mov	a,_bp
   0196 24 0D               350 	add	a,#0x0d
   0198 F8                  351 	mov	r0,a
   0199 A6 02               352 	mov	@r0,ar2
   019B 08                  353 	inc	r0
   019C A6 03               354 	mov	@r0,ar3
   019E 08                  355 	inc	r0
   019F A6 04               356 	mov	@r0,ar4
   01A1 08                  357 	inc	r0
   01A2 A6 05               358 	mov	@r0,ar5
   01A4 02s03r6A            359 	ljmp	00109$
   01A7                     360 00105$:
                            361 ;	tanhf.c:61: else if(f<EPS) r=f;
   01A7 E4                  362 	clr	a
   01A8 C0 E0               363 	push	acc
   01AA C0 E0               364 	push	acc
   01AC 74 80               365 	mov	a,#0x80
   01AE C0 E0               366 	push	acc
   01B0 74 39               367 	mov	a,#0x39
   01B2 C0 E0               368 	push	acc
   01B4 E5*00               369 	mov	a,_bp
   01B6 24 05               370 	add	a,#0x05
   01B8 F8                  371 	mov	r0,a
   01B9 86 82               372 	mov	dpl,@r0
   01BB 08                  373 	inc	r0
   01BC 86 83               374 	mov	dph,@r0
   01BE 08                  375 	inc	r0
   01BF 86 F0               376 	mov	b,@r0
   01C1 08                  377 	inc	r0
   01C2 E6                  378 	mov	a,@r0
   01C3 12s00r00            379 	lcall	___fslt
   01C6 AC 82               380 	mov	r4,dpl
   01C8 E5 81               381 	mov	a,sp
   01CA 24 FC               382 	add	a,#0xfc
   01CC F5 81               383 	mov	sp,a
   01CE EC                  384 	mov	a,r4
   01CF 60 1B               385 	jz	00102$
   01D1 E5*00               386 	mov	a,_bp
   01D3 24 05               387 	add	a,#0x05
   01D5 F8                  388 	mov	r0,a
   01D6 E5*00               389 	mov	a,_bp
   01D8 24 0D               390 	add	a,#0x0d
   01DA F9                  391 	mov	r1,a
   01DB E6                  392 	mov	a,@r0
   01DC F7                  393 	mov	@r1,a
   01DD 08                  394 	inc	r0
   01DE 09                  395 	inc	r1
   01DF E6                  396 	mov	a,@r0
   01E0 F7                  397 	mov	@r1,a
   01E1 08                  398 	inc	r0
   01E2 09                  399 	inc	r1
   01E3 E6                  400 	mov	a,@r0
   01E4 F7                  401 	mov	@r1,a
   01E5 08                  402 	inc	r0
   01E6 09                  403 	inc	r1
   01E7 E6                  404 	mov	a,@r0
   01E8 F7                  405 	mov	@r1,a
   01E9 02s03r6A            406 	ljmp	00109$
   01EC                     407 00102$:
                            408 ;	tanhf.c:64: g=f*f;
   01EC E5*00               409 	mov	a,_bp
   01EE 24 05               410 	add	a,#0x05
   01F0 F8                  411 	mov	r0,a
   01F1 E6                  412 	mov	a,@r0
   01F2 C0 E0               413 	push	acc
   01F4 08                  414 	inc	r0
   01F5 E6                  415 	mov	a,@r0
   01F6 C0 E0               416 	push	acc
   01F8 08                  417 	inc	r0
   01F9 E6                  418 	mov	a,@r0
   01FA C0 E0               419 	push	acc
   01FC 08                  420 	inc	r0
   01FD E6                  421 	mov	a,@r0
   01FE C0 E0               422 	push	acc
   0200 E5*00               423 	mov	a,_bp
   0202 24 05               424 	add	a,#0x05
   0204 F8                  425 	mov	r0,a
   0205 86 82               426 	mov	dpl,@r0
   0207 08                  427 	inc	r0
   0208 86 83               428 	mov	dph,@r0
   020A 08                  429 	inc	r0
   020B 86 F0               430 	mov	b,@r0
   020D 08                  431 	inc	r0
   020E E6                  432 	mov	a,@r0
   020F 12s00r00            433 	lcall	___fsmul
   0212 AA 82               434 	mov	r2,dpl
   0214 AB 83               435 	mov	r3,dph
   0216 AC F0               436 	mov	r4,b
   0218 FD                  437 	mov	r5,a
   0219 E5 81               438 	mov	a,sp
   021B 24 FC               439 	add	a,#0xfc
   021D F5 81               440 	mov	sp,a
   021F E5*00               441 	mov	a,_bp
   0221 24 09               442 	add	a,#0x09
   0223 F8                  443 	mov	r0,a
   0224 A6 02               444 	mov	@r0,ar2
   0226 08                  445 	inc	r0
   0227 A6 03               446 	mov	@r0,ar3
   0229 08                  447 	inc	r0
   022A A6 04               448 	mov	@r0,ar4
   022C 08                  449 	inc	r0
   022D A6 05               450 	mov	@r0,ar5
                            451 ;	tanhf.c:65: r=f+f*(P(g)/Q(g));
   022F E5*00               452 	mov	a,_bp
   0231 24 09               453 	add	a,#0x09
   0233 F8                  454 	mov	r0,a
   0234 E6                  455 	mov	a,@r0
   0235 C0 E0               456 	push	acc
   0237 08                  457 	inc	r0
   0238 E6                  458 	mov	a,@r0
   0239 C0 E0               459 	push	acc
   023B 08                  460 	inc	r0
   023C E6                  461 	mov	a,@r0
   023D C0 E0               462 	push	acc
   023F 08                  463 	inc	r0
   0240 E6                  464 	mov	a,@r0
   0241 C0 E0               465 	push	acc
   0243 90 11 B2            466 	mov	dptr,#0x11B2
   0246 75 F0 7B            467 	mov	b,#0x7B
   0249 74 BB               468 	mov	a,#0xBB
   024B 12s00r00            469 	lcall	___fsmul
   024E AC 82               470 	mov	r4,dpl
   0250 AD 83               471 	mov	r5,dph
   0252 AA F0               472 	mov	r2,b
   0254 FB                  473 	mov	r3,a
   0255 E5 81               474 	mov	a,sp
   0257 24 FC               475 	add	a,#0xfc
   0259 F5 81               476 	mov	sp,a
   025B 74 C6               477 	mov	a,#0xC6
   025D C0 E0               478 	push	acc
   025F 74 E2               479 	mov	a,#0xE2
   0261 C0 E0               480 	push	acc
   0263 74 52               481 	mov	a,#0x52
   0265 C0 E0               482 	push	acc
   0267 74 BF               483 	mov	a,#0xBF
   0269 C0 E0               484 	push	acc
   026B 8C 82               485 	mov	dpl,r4
   026D 8D 83               486 	mov	dph,r5
   026F 8A F0               487 	mov	b,r2
   0271 EB                  488 	mov	a,r3
   0272 12s00r00            489 	lcall	___fsadd
   0275 AA 82               490 	mov	r2,dpl
   0277 AB 83               491 	mov	r3,dph
   0279 AC F0               492 	mov	r4,b
   027B FD                  493 	mov	r5,a
   027C E5 81               494 	mov	a,sp
   027E 24 FC               495 	add	a,#0xfc
   0280 F5 81               496 	mov	sp,a
   0282 E5*00               497 	mov	a,_bp
   0284 24 09               498 	add	a,#0x09
   0286 F8                  499 	mov	r0,a
   0287 E6                  500 	mov	a,@r0
   0288 C0 E0               501 	push	acc
   028A 08                  502 	inc	r0
   028B E6                  503 	mov	a,@r0
   028C C0 E0               504 	push	acc
   028E 08                  505 	inc	r0
   028F E6                  506 	mov	a,@r0
   0290 C0 E0               507 	push	acc
   0292 08                  508 	inc	r0
   0293 E6                  509 	mov	a,@r0
   0294 C0 E0               510 	push	acc
   0296 8A 82               511 	mov	dpl,r2
   0298 8B 83               512 	mov	dph,r3
   029A 8C F0               513 	mov	b,r4
   029C ED                  514 	mov	a,r5
   029D 12s00r00            515 	lcall	___fsmul
   02A0 C8                  516 	xch	a,r0
   02A1 E5*00               517 	mov	a,_bp
   02A3 24 11               518 	add	a,#0x11
   02A5 C8                  519 	xch	a,r0
   02A6 A6 82               520 	mov	@r0,dpl
   02A8 08                  521 	inc	r0
   02A9 A6 83               522 	mov	@r0,dph
   02AB 08                  523 	inc	r0
   02AC A6 F0               524 	mov	@r0,b
   02AE 08                  525 	inc	r0
   02AF F6                  526 	mov	@r0,a
   02B0 E5 81               527 	mov	a,sp
   02B2 24 FC               528 	add	a,#0xfc
   02B4 F5 81               529 	mov	sp,a
   02B6 74 1A               530 	mov	a,#0x1A
   02B8 C0 E0               531 	push	acc
   02BA 74 2A               532 	mov	a,#0x2A
   02BC C0 E0               533 	push	acc
   02BE 74 1E               534 	mov	a,#0x1E
   02C0 C0 E0               535 	push	acc
   02C2 74 40               536 	mov	a,#0x40
   02C4 C0 E0               537 	push	acc
   02C6 E5*00               538 	mov	a,_bp
   02C8 24 09               539 	add	a,#0x09
   02CA F8                  540 	mov	r0,a
   02CB 86 82               541 	mov	dpl,@r0
   02CD 08                  542 	inc	r0
   02CE 86 83               543 	mov	dph,@r0
   02D0 08                  544 	inc	r0
   02D1 86 F0               545 	mov	b,@r0
   02D3 08                  546 	inc	r0
   02D4 E6                  547 	mov	a,@r0
   02D5 12s00r00            548 	lcall	___fsadd
   02D8 AE 82               549 	mov	r6,dpl
   02DA AF 83               550 	mov	r7,dph
   02DC AA F0               551 	mov	r2,b
   02DE FB                  552 	mov	r3,a
   02DF E5 81               553 	mov	a,sp
   02E1 24 FC               554 	add	a,#0xfc
   02E3 F5 81               555 	mov	sp,a
   02E5 C0 06               556 	push	ar6
   02E7 C0 07               557 	push	ar7
   02E9 C0 02               558 	push	ar2
   02EB C0 03               559 	push	ar3
   02ED E5*00               560 	mov	a,_bp
   02EF 24 11               561 	add	a,#0x11
   02F1 F8                  562 	mov	r0,a
   02F2 86 82               563 	mov	dpl,@r0
   02F4 08                  564 	inc	r0
   02F5 86 83               565 	mov	dph,@r0
   02F7 08                  566 	inc	r0
   02F8 86 F0               567 	mov	b,@r0
   02FA 08                  568 	inc	r0
   02FB E6                  569 	mov	a,@r0
   02FC 12s00r00            570 	lcall	___fsdiv
   02FF AA 82               571 	mov	r2,dpl
   0301 AB 83               572 	mov	r3,dph
   0303 AC F0               573 	mov	r4,b
   0305 FD                  574 	mov	r5,a
   0306 E5 81               575 	mov	a,sp
   0308 24 FC               576 	add	a,#0xfc
   030A F5 81               577 	mov	sp,a
   030C C0 02               578 	push	ar2
   030E C0 03               579 	push	ar3
   0310 C0 04               580 	push	ar4
   0312 C0 05               581 	push	ar5
   0314 E5*00               582 	mov	a,_bp
   0316 24 05               583 	add	a,#0x05
   0318 F8                  584 	mov	r0,a
   0319 86 82               585 	mov	dpl,@r0
   031B 08                  586 	inc	r0
   031C 86 83               587 	mov	dph,@r0
   031E 08                  588 	inc	r0
   031F 86 F0               589 	mov	b,@r0
   0321 08                  590 	inc	r0
   0322 E6                  591 	mov	a,@r0
   0323 12s00r00            592 	lcall	___fsmul
   0326 AA 82               593 	mov	r2,dpl
   0328 AB 83               594 	mov	r3,dph
   032A AC F0               595 	mov	r4,b
   032C FD                  596 	mov	r5,a
   032D E5 81               597 	mov	a,sp
   032F 24 FC               598 	add	a,#0xfc
   0331 F5 81               599 	mov	sp,a
   0333 C0 02               600 	push	ar2
   0335 C0 03               601 	push	ar3
   0337 C0 04               602 	push	ar4
   0339 C0 05               603 	push	ar5
   033B E5*00               604 	mov	a,_bp
   033D 24 05               605 	add	a,#0x05
   033F F8                  606 	mov	r0,a
   0340 86 82               607 	mov	dpl,@r0
   0342 08                  608 	inc	r0
   0343 86 83               609 	mov	dph,@r0
   0345 08                  610 	inc	r0
   0346 86 F0               611 	mov	b,@r0
   0348 08                  612 	inc	r0
   0349 E6                  613 	mov	a,@r0
   034A 12s00r00            614 	lcall	___fsadd
   034D AA 82               615 	mov	r2,dpl
   034F AB 83               616 	mov	r3,dph
   0351 AC F0               617 	mov	r4,b
   0353 FD                  618 	mov	r5,a
   0354 E5 81               619 	mov	a,sp
   0356 24 FC               620 	add	a,#0xfc
   0358 F5 81               621 	mov	sp,a
   035A E5*00               622 	mov	a,_bp
   035C 24 0D               623 	add	a,#0x0d
   035E F8                  624 	mov	r0,a
   035F A6 02               625 	mov	@r0,ar2
   0361 08                  626 	inc	r0
   0362 A6 03               627 	mov	@r0,ar3
   0364 08                  628 	inc	r0
   0365 A6 04               629 	mov	@r0,ar4
   0367 08                  630 	inc	r0
   0368 A6 05               631 	mov	@r0,ar5
   036A                     632 00109$:
                            633 ;	tanhf.c:67: if(x<0.0) r=-r;
   036A E4                  634 	clr	a
   036B C0 E0               635 	push	acc
   036D C0 E0               636 	push	acc
   036F C0 E0               637 	push	acc
   0371 C0 E0               638 	push	acc
   0373 A8*00               639 	mov	r0,_bp
   0375 08                  640 	inc	r0
   0376 86 82               641 	mov	dpl,@r0
   0378 08                  642 	inc	r0
   0379 86 83               643 	mov	dph,@r0
   037B 08                  644 	inc	r0
   037C 86 F0               645 	mov	b,@r0
   037E 08                  646 	inc	r0
   037F E6                  647 	mov	a,@r0
   0380 12s00r00            648 	lcall	___fslt
   0383 AA 82               649 	mov	r2,dpl
   0385 E5 81               650 	mov	a,sp
   0387 24 FC               651 	add	a,#0xfc
   0389 F5 81               652 	mov	sp,a
   038B EA                  653 	mov	a,r2
   038C 60 12               654 	jz	00111$
   038E E5*00               655 	mov	a,_bp
   0390 24 0D               656 	add	a,#0x0d
   0392 F8                  657 	mov	r0,a
   0393 E6                  658 	mov	a,@r0
   0394 F6                  659 	mov	@r0,a
   0395 08                  660 	inc	r0
   0396 E6                  661 	mov	a,@r0
   0397 F6                  662 	mov	@r0,a
   0398 08                  663 	inc	r0
   0399 E6                  664 	mov	a,@r0
   039A F6                  665 	mov	@r0,a
   039B 08                  666 	inc	r0
   039C E6                  667 	mov	a,@r0
   039D B2 E7               668 	cpl	acc.7
   039F F6                  669 	mov	@r0,a
   03A0                     670 00111$:
                            671 ;	tanhf.c:68: return r;
   03A0 E5*00               672 	mov	a,_bp
   03A2 24 0D               673 	add	a,#0x0d
   03A4 F8                  674 	mov	r0,a
   03A5 86 82               675 	mov	dpl,@r0
   03A7 08                  676 	inc	r0
   03A8 86 83               677 	mov	dph,@r0
   03AA 08                  678 	inc	r0
   03AB 86 F0               679 	mov	b,@r0
   03AD 08                  680 	inc	r0
   03AE E6                  681 	mov	a,@r0
   03AF 85*00 81            682 	mov	sp,_bp
   03B2 D0*00               683 	pop	_bp
   03B4 22                  684 	ret
                            685 	.area CSEG    (CODE)
                            686 	.area CONST   (CODE)
                            687 	.area XINIT   (CODE)
                            688 	.area CABS    (ABS,CODE)
