                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:19 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strncpy
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _strncpy_PARM_3
                             31 	.globl _strncpy_PARM_2
                             32 	.globl _strncpy
                             33 ;--------------------------------------------------------
                             34 ; special function registers
                             35 ;--------------------------------------------------------
                             36 ;--------------------------------------------------------
                             37 ; special function bits
                             38 ;--------------------------------------------------------
                             39 ;--------------------------------------------------------
                             40 ; overlayable register banks
                             41 ;--------------------------------------------------------
                             42 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      43 	.ds 8
                             44 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      45 	.ds 8
                             46 ;--------------------------------------------------------
                             47 ; internal ram data
                             48 ;--------------------------------------------------------
                             49 	.area DSEG    (DATA)
                             50 ;--------------------------------------------------------
                             51 ; overlayable items in internal ram 
                             52 ;--------------------------------------------------------
                             53 	.area OSEG    (OVR,DATA)
                             54 ;--------------------------------------------------------
                             55 ; indirectly addressable internal ram data
                             56 ;--------------------------------------------------------
                             57 	.area ISEG    (DATA)
                             58 ;--------------------------------------------------------
                             59 ; absolute internal ram data
                             60 ;--------------------------------------------------------
                             61 	.area IABS    (ABS,DATA)
                             62 	.area IABS    (ABS,DATA)
                             63 ;--------------------------------------------------------
                             64 ; bit data
                             65 ;--------------------------------------------------------
                             66 	.area BSEG    (BIT)
                             67 ;--------------------------------------------------------
                             68 ; paged external ram data
                             69 ;--------------------------------------------------------
                             70 	.area PSEG    (PAG,XDATA)
                             71 ;--------------------------------------------------------
                             72 ; external ram data
                             73 ;--------------------------------------------------------
                             74 	.area XSEG    (XDATA)
   0000                      75 _strncpy_PARM_2:
   0000                      76 	.ds 4
   0004                      77 _strncpy_PARM_3:
   0004                      78 	.ds 2
   0006                      79 _strncpy_d_1_1:
   0006                      80 	.ds 4
   000A                      81 _strncpy_sloc0_1_0:
   000A                      82 	.ds 4
   000E                      83 _strncpy_sloc1_1_0:
   000E                      84 	.ds 4
                             85 ;--------------------------------------------------------
                             86 ; absolute external ram data
                             87 ;--------------------------------------------------------
                             88 	.area XABS    (ABS,XDATA)
                             89 ;--------------------------------------------------------
                             90 ; external initialized ram data
                             91 ;--------------------------------------------------------
                             92 	.area XISEG   (XDATA)
                             93 ;--------------------------------------------------------
                             94 ; global & static initialisations
                             95 ;--------------------------------------------------------
                             96 	.area HOME    (CODE)
                             97 	.area GSINIT  (CODE)
                             98 	.area GSFINAL (CODE)
                             99 	.area GSINIT  (CODE)
                            100 ;--------------------------------------------------------
                            101 ; Home
                            102 ;--------------------------------------------------------
                            103 	.area HOME    (CODE)
                            104 	.area HOME    (CODE)
                            105 ;--------------------------------------------------------
                            106 ; code
                            107 ;--------------------------------------------------------
                            108 	.area CSEG    (CODE)
                            109 ;------------------------------------------------------------
                            110 ;Allocation info for local variables in function 'strncpy'
                            111 ;------------------------------------------------------------
                            112 ;s                         Allocated with name '_strncpy_PARM_2'
                            113 ;n                         Allocated with name '_strncpy_PARM_3'
                            114 ;d                         Allocated with name '_strncpy_d_1_1'
                            115 ;d1                        Allocated to registers r6 r7 r0 r1 
                            116 ;sloc0                     Allocated with name '_strncpy_sloc0_1_0'
                            117 ;sloc1                     Allocated with name '_strncpy_sloc1_1_0'
                            118 ;------------------------------------------------------------
                            119 ;	_strncpy.c:31: char *strncpy (
                            120 ;	-----------------------------------------
                            121 ;	 function strncpy
                            122 ;	-----------------------------------------
   0000                     123 _strncpy:
                    0002    124 	ar2 = 0x02
                    0003    125 	ar3 = 0x03
                    0004    126 	ar4 = 0x04
                    0005    127 	ar5 = 0x05
                    0006    128 	ar6 = 0x06
                    0007    129 	ar7 = 0x07
                    0000    130 	ar0 = 0x00
                    0001    131 	ar1 = 0x01
   0000 75 86 01            132 	mov     dps, #1
   0003 90s00r00r06         133 	mov     dptr, #_strncpy_d_1_1
   0007 E5 82               134 	mov	a,dpl
   0009 F0                  135 	movx	@dptr,a
   000A A3                  136 	inc	dptr
   000B E5 83               137 	mov	a,dph
   000D F0                  138 	movx	@dptr,a
   000E A3                  139 	inc	dptr
   000F E5 93               140 	mov	a,dpx
   0011 F0                  141 	movx	@dptr,a
   0012 A3                  142 	inc	dptr
   0013 E5 F0               143 	mov	a,b
   0015 F0                  144 	movx	@dptr,a
   0016 75 86 00            145 	mov	dps,#0
                            146 ;	_strncpy.c:36: register char * d1 =  d;
   0019 90s00r00r06         147 	mov	dptr,#_strncpy_d_1_1
                            148 ;	genAssign: resultIsFar = TRUE
   001D E0                  149 	movx	a,@dptr
   001E FE                  150 	mov	r6,a
   001F A3                  151 	inc	dptr
   0020 E0                  152 	movx	a,@dptr
   0021 FF                  153 	mov	r7,a
   0022 A3                  154 	inc	dptr
   0023 E0                  155 	movx	a,@dptr
   0024 F8                  156 	mov	r0,a
   0025 A3                  157 	inc	dptr
   0026 E0                  158 	movx	a,@dptr
   0027 F9                  159 	mov	r1,a
                            160 ;	_strncpy.c:38: while ( n && *s )
   0028 90s00r00r04         161 	mov	dptr,#_strncpy_PARM_3
                            162 ;	genAssign: resultIsFar = FALSE
   002C E0                  163 	movx	a,@dptr
   002D FA                  164 	mov	r2,a
   002E A3                  165 	inc	dptr
   002F E0                  166 	movx	a,@dptr
   0030 FB                  167 	mov	r3,a
   0031 90s00r00r00         168 	mov	dptr,#_strncpy_PARM_2
                            169 ;	genAssign: resultIsFar = TRUE
   0035 75 86 21            170 	mov	dps,#0x21
   0038 90s00r00r0A         171 	mov	dptr,#_strncpy_sloc0_1_0
   003C E0                  172 	movx	a,@dptr
   003D F0                  173 	movx	@dptr,a
   003E A3                  174 	inc	dptr
   003F A3                  175 	inc	dptr
   0040 E0                  176 	movx	a,@dptr
   0041 F0                  177 	movx	@dptr,a
   0042 A3                  178 	inc	dptr
   0043 A3                  179 	inc	dptr
   0044 E0                  180 	movx	a,@dptr
   0045 F0                  181 	movx	@dptr,a
   0046 A3                  182 	inc	dptr
   0047 A3                  183 	inc	dptr
   0048 E0                  184 	movx	a,@dptr
   0049 F0                  185 	movx	@dptr,a
   004A 75 86 00            186 	mov	dps,#0
   004D 90s00r00r06         187 	mov	dptr,#_strncpy_d_1_1
                            188 ;	genAssign: resultIsFar = TRUE
   0051 75 86 21            189 	mov	dps,#0x21
   0054 90s00r00r0E         190 	mov	dptr,#_strncpy_sloc1_1_0
   0058 E0                  191 	movx	a,@dptr
   0059 F0                  192 	movx	@dptr,a
   005A A3                  193 	inc	dptr
   005B A3                  194 	inc	dptr
   005C E0                  195 	movx	a,@dptr
   005D F0                  196 	movx	@dptr,a
   005E A3                  197 	inc	dptr
   005F A3                  198 	inc	dptr
   0060 E0                  199 	movx	a,@dptr
   0061 F0                  200 	movx	@dptr,a
   0062 A3                  201 	inc	dptr
   0063 A3                  202 	inc	dptr
   0064 E0                  203 	movx	a,@dptr
   0065 F0                  204 	movx	@dptr,a
   0066 75 86 00            205 	mov	dps,#0
   0069                     206 00102$:
   0069 EA                  207 	mov	a,r2
   006A 4B                  208 	orl	a,r3
   006B 70 04               209 	jnz	00117$
   006D 02s00r00rEE         210 	ljmp	00114$
   0071                     211 00117$:
   0071 75 86 01            212 	mov     dps, #1
   0074 90s00r00r0A         213 	mov     dptr, #_strncpy_sloc0_1_0
   0078 E0                  214 	movx	a,@dptr
   0079 F5 82               215 	mov	dpl,a
   007B A3                  216 	inc	dptr
   007C E0                  217 	movx	a,@dptr
   007D F5 83               218 	mov	dph,a
   007F A3                  219 	inc	dptr
   0080 E0                  220 	movx	a,@dptr
   0081 F5 93               221 	mov	dpx,a
   0083 A3                  222 	inc	dptr
   0084 E0                  223 	movx	a,@dptr
   0085 F5 F0               224 	mov	b,a
   0087 75 86 00            225 	mov	dps,#0
   008A 12s00r00r00         226 	lcall	__gptrget
   008E FC                  227 	mov  r4,a
   008F 60 5D               228 	jz  00114$
   0091                     229 00118$:
                            230 ;	_strncpy.c:40: n-- ;
   0091 1A                  231 	dec	r2
   0092 BA FF 01            232 	cjne	r2,#0xFF,00119$
   0095 1B                  233 	dec	r3
   0096                     234 00119$:
                            235 ;	_strncpy.c:41: *d++ = *s++ ;
   0096 90s00r00r0A         236 	mov	dptr,#_strncpy_sloc0_1_0
   009A E0                  237 	movx	a,@dptr
   009B 24 01               238 	add	a,#0x01
   009D F0                  239 	movx	@dptr,a
   009E A3                  240 	inc	dptr
   009F E0                  241 	movx	a,@dptr
   00A0 34 00               242 	addc	a,#0x00
   00A2 F0                  243 	movx	@dptr,a
   00A3 A3                  244 	inc	dptr
   00A4 E0                  245 	movx	a,@dptr
   00A5 34 00               246 	addc	a,#0x00
   00A7 F0                  247 	movx	@dptr,a
   00A8 A3                  248 	inc	dptr
   00A9 E0                  249 	movx	a,@dptr
   00AA F0                  250 	movx	@dptr,a
   00AB 75 86 01            251 	mov     dps, #1
   00AE 90s00r00r0E         252 	mov     dptr, #_strncpy_sloc1_1_0
   00B2 E0                  253 	movx	a,@dptr
   00B3 F5 82               254 	mov	dpl,a
   00B5 A3                  255 	inc	dptr
   00B6 E0                  256 	movx	a,@dptr
   00B7 F5 83               257 	mov	dph,a
   00B9 A3                  258 	inc	dptr
   00BA E0                  259 	movx	a,@dptr
   00BB F5 93               260 	mov	dpx,a
   00BD A3                  261 	inc	dptr
   00BE E0                  262 	movx	a,@dptr
   00BF F5 F0               263 	mov	b,a
   00C1 75 86 00            264 	mov	dps,#0
   00C4 EC                  265 	mov	a,r4
   00C5 12s00r00r00         266 	lcall	__gptrput
   00C9 A3                  267 	inc	dptr
   00CA 05 86               268 	inc	dps
   00CC 12s00r00r00         269 	lcall	__decdptr
   00D0 12s00r00r00         270 	lcall	__decdptr
   00D4 12s00r00r00         271 	lcall	__decdptr
   00D8 E5 82               272 	mov	a,dpl
   00DA F0                  273 	movx	@dptr,a
   00DB A3                  274 	inc	dptr
   00DC E5 83               275 	mov	a,dph
   00DE F0                  276 	movx	@dptr,a
   00DF A3                  277 	inc	dptr
   00E0 E5 93               278 	mov	a,dpx
   00E2 F0                  279 	movx	@dptr,a
   00E3 A3                  280 	inc	dptr
   00E4 E5 F0               281 	mov	a,b
   00E6 F0                  282 	movx	@dptr,a
   00E7 75 86 00            283 	mov	dps,#0
   00EA 02s00r00r69         284 	ljmp	00102$
                            285 ;	_strncpy.c:43: while ( n-- )
   00EE                     286 00114$:
   00EE 90s00r00r0E         287 	mov	dptr,#_strncpy_sloc1_1_0
                            288 ;	genAssign: resultIsFar = FALSE
   00F2 E0                  289 	movx	a,@dptr
   00F3 F5 82               290 	mov	dpl,a
   00F5 A3                  291 	inc	dptr
   00F6 E0                  292 	movx	a,@dptr
   00F7 F5 83               293 	mov	dph,a
   00F9 A3                  294 	inc	dptr
   00FA E0                  295 	movx	a,@dptr
   00FB F5 93               296 	mov	dpx,a
   00FD A3                  297 	inc	dptr
   00FE E0                  298 	movx	a,@dptr
   00FF F5 F0               299 	mov	b,a
                            300 ;	genAssign: resultIsFar = FALSE
   0101                     301 00105$:
                            302 ;	genAssign: resultIsFar = FALSE
   0101 8A 04               303 	mov	ar4,r2
   0103 8B 05               304 	mov	ar5,r3
   0105 1A                  305 	dec	r2
   0106 BA FF 01            306 	cjne	r2,#0xFF,00120$
   0109 1B                  307 	dec	r3
   010A                     308 00120$:
   010A EC                  309 	mov	a,r4
   010B 4D                  310 	orl	a,r5
   010C 60 08               311 	jz  00107$
   010E                     312 00121$:
                            313 ;	_strncpy.c:45: *d++ = '\0' ;
   010E E4                  314 	clr  a
   010F 12s00r00r00         315 	lcall	__gptrput
   0113 A3                  316 	inc	dptr
   0114 80 EB               317 	sjmp 00105$
   0116                     318 00107$:
                            319 ;	_strncpy.c:47: return d1;
   0116 8E 82               320 	mov	dpl,r6
   0118 8F 83               321 	mov	dph,r7
   011A 88 93               322 	mov	dpx,r0
   011C 89 F0               323 	mov	b,r1
   011E                     324 00108$:
   011E 22                  325 	ret
                            326 	.area CSEG    (CODE)
                            327 	.area CONST   (CODE)
                            328 	.area XINIT   (CODE)
                            329 	.area CABS    (ABS,CODE)
