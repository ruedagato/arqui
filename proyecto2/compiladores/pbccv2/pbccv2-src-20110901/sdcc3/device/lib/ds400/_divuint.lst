                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:19 2015
                              5 ;--------------------------------------------------------
                              6 	.module _divuint
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl __divuint_PARM_2
                             31 	.globl __divuint
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      44 	.ds 8
                             45 ;--------------------------------------------------------
                             46 ; internal ram data
                             47 ;--------------------------------------------------------
                             48 	.area DSEG    (DATA)
                             49 ;--------------------------------------------------------
                             50 ; overlayable items in internal ram 
                             51 ;--------------------------------------------------------
                             52 	.area OSEG    (OVR,DATA)
                             53 ;--------------------------------------------------------
                             54 ; indirectly addressable internal ram data
                             55 ;--------------------------------------------------------
                             56 	.area ISEG    (DATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute internal ram data
                             59 ;--------------------------------------------------------
                             60 	.area IABS    (ABS,DATA)
                             61 	.area IABS    (ABS,DATA)
                             62 ;--------------------------------------------------------
                             63 ; bit data
                             64 ;--------------------------------------------------------
                             65 	.area BSEG    (BIT)
   0000                      66 __divuint_c_1_1:
   0000                      67 	.ds 1
                             68 ;--------------------------------------------------------
                             69 ; paged external ram data
                             70 ;--------------------------------------------------------
                             71 	.area PSEG    (PAG,XDATA)
                             72 ;--------------------------------------------------------
                             73 ; external ram data
                             74 ;--------------------------------------------------------
                             75 	.area XSEG    (XDATA)
   0000                      76 __divuint_PARM_2:
   0000                      77 	.ds 2
                             78 ;--------------------------------------------------------
                             79 ; absolute external ram data
                             80 ;--------------------------------------------------------
                             81 	.area XABS    (ABS,XDATA)
                             82 ;--------------------------------------------------------
                             83 ; external initialized ram data
                             84 ;--------------------------------------------------------
                             85 	.area XISEG   (XDATA)
                             86 ;--------------------------------------------------------
                             87 ; global & static initialisations
                             88 ;--------------------------------------------------------
                             89 	.area HOME    (CODE)
                             90 	.area GSINIT  (CODE)
                             91 	.area GSFINAL (CODE)
                             92 	.area GSINIT  (CODE)
                             93 ;--------------------------------------------------------
                             94 ; Home
                             95 ;--------------------------------------------------------
                             96 	.area HOME    (CODE)
                             97 	.area HOME    (CODE)
                             98 ;--------------------------------------------------------
                             99 ; code
                            100 ;--------------------------------------------------------
                            101 	.area CSEG    (CODE)
                            102 ;------------------------------------------------------------
                            103 ;Allocation info for local variables in function '_divuint'
                            104 ;------------------------------------------------------------
                            105 ;y                         Allocated with name '__divuint_PARM_2'
                            106 ;x                         Allocated to registers r2 r3 
                            107 ;reste                     Allocated to registers r4 r5 
                            108 ;count                     Allocated to registers 
                            109 ;------------------------------------------------------------
                            110 ;	_divuint.c:155: _divuint (unsigned int x, unsigned int y)
                            111 ;	-----------------------------------------
                            112 ;	 function _divuint
                            113 ;	-----------------------------------------
   0000                     114 __divuint:
                    0002    115 	ar2 = 0x02
                    0003    116 	ar3 = 0x03
                    0004    117 	ar4 = 0x04
                    0005    118 	ar5 = 0x05
                    0006    119 	ar6 = 0x06
                    0007    120 	ar7 = 0x07
                    0000    121 	ar0 = 0x00
                    0001    122 	ar1 = 0x01
   0000 85 82 84            123 	mov	dpl1,dpl
   0003 85 83 85            124 	mov	dph1,dph
                            125 ;	_divuint.c:157: unsigned int reste = 0;
                            126 ;	genAssign: resultIsFar = TRUE
   0006 7C 00               127 	mov	r4,#0x00
   0008 7D 00               128 	mov	r5,#0x00
                            129 ;	_divuint.c:161: do
                            130 ;	genAssign: resultIsFar = FALSE
   000A 7E 10               131 	mov	r6,#0x10
   000C                     132 00105$:
                            133 ;	_divuint.c:164: c = MSB_SET(x);
   000C E5 85               134 	mov	a,dph1
   000E 33                  135 	rlc	a
   000F 92*00               136 	mov	__divuint_c_1_1,c
                            137 ;	_divuint.c:165: x <<= 1;
   0011 AF 84               138 	mov	r7,dpl1
   0013 E5 85               139 	mov	a,dph1
   0015 CF                  140 	xch	a,r7
   0016 25 E0               141 	add	a,acc
   0018 CF                  142 	xch	a,r7
   0019 33                  143 	rlc	a
   001A F8                  144 	mov	r0,a
                            145 ;	genAssign: resultIsFar = TRUE
   001B 8F 84               146 	mov	dpl1,r7
   001D 88 85               147 	mov	dph1,r0
                            148 ;	_divuint.c:166: reste <<= 1;
   001F 8C 07               149 	mov	ar7,r4
   0021 ED                  150 	mov	a,r5
   0022 CF                  151 	xch	a,r7
   0023 25 E0               152 	add	a,acc
   0025 CF                  153 	xch	a,r7
   0026 33                  154 	rlc	a
   0027 F8                  155 	mov	r0,a
                            156 ;	genAssign: resultIsFar = TRUE
   0028 8F 04               157 	mov	ar4,r7
   002A 88 05               158 	mov	ar5,r0
                            159 ;	_divuint.c:167: if (c)
   002C 30*00 03            160 	jnb  __divuint_c_1_1,00102$
   002F                     161 00115$:
                            162 ;	_divuint.c:168: reste |= 1;
   002F 43 04 01            163 	orl	ar4,#0x01
   0032                     164 00102$:
                            165 ;	_divuint.c:170: if (reste >= y)
   0032 90s00r00r00         166 	mov	dptr,#__divuint_PARM_2
   0036 C3                  167 	clr	c
   0037 EC                  168 	mov	a,r4
   0038 C5 F0               169 	xch	a, b
   003A E0                  170 	movx	a,@dptr
   003B C5 F0               171 	xch	a, b
   003D 95 F0               172 	subb	a,b
   003F ED                  173 	mov	a,r5
   0040 C5 F0               174 	xch	a, b
   0042 A3                  175 	inc	dptr
   0043 E0                  176 	movx	a,@dptr
   0044 C5 F0               177 	xch	a, b
   0046 95 F0               178 	subb	a,b
   0048 40 1B               179 	jc   00106$
   004A                     180 00116$:
                            181 ;	_divuint.c:172: reste -= y;
   004A 90s00r00r00         182 	mov	dptr,#__divuint_PARM_2
   004E C3                  183 	clr	c
   004F E0                  184 	movx	a,@dptr
   0050 F5 F0               185 	mov	b,a
   0052 EC                  186 	mov	a,r4
   0053 95 F0               187 	subb	a,b
   0055 FF                  188 	mov	r7,a
   0056 A3                  189 	inc	dptr
   0057 E0                  190 	movx	a,@dptr
   0058 F5 F0               191 	mov	b,a
   005A ED                  192 	mov	a,r5
   005B 95 F0               193 	subb	a,b
   005D F8                  194 	mov	r0,a
                            195 ;	genAssign: resultIsFar = TRUE
   005E 8F 04               196 	mov	ar4,r7
   0060 88 05               197 	mov	ar5,r0
                            198 ;	_divuint.c:174: x |= 1;
   0062 43 84 01            199 	orl	dpl1,#0x01
   0065                     200 00106$:
                            201 ;	_divuint.c:177: while (--count);
   0065 DE A5               202 	djnz  r6,00105$
   0067                     203 00117$:
   0067                     204 00118$:
                            205 ;	_divuint.c:178: return x;
   0067 85 84 82            206 	mov	dpl,dpl1
   006A 85 85 83            207 	mov	dph,dph1
   006D                     208 00108$:
   006D 22                  209 	ret
                            210 	.area CSEG    (CODE)
                            211 	.area CONST   (CODE)
                            212 	.area XINIT   (CODE)
                            213 	.area CABS    (ABS,CODE)
