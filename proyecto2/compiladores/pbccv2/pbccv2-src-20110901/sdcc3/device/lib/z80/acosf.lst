                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:18:17 2015
                              5 ;--------------------------------------------------------
                              6 	.module acosf
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _acosf
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ;  ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; overlayable items in  ram 
                             22 ;--------------------------------------------------------
                             23 	.area _OVERLAY
                             24 ;--------------------------------------------------------
                             25 ; external initialized ram data
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _HOME
                             39 ;--------------------------------------------------------
                             40 ; code
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 ;../acosf.c:36: float acosf(const float x) _FLOAT_FUNC_REENTRANT
                             44 ;	---------------------------------
                             45 ; Function acosf
                             46 ; ---------------------------------
   0000                      47 _acosf_start::
   0000                      48 _acosf:
   0000 DD E5                49 	push	ix
   0002 DD 21 00 00          50 	ld	ix,#0
   0006 DD 39                51 	add	ix,sp
                             52 ;../acosf.c:38: if (x == 1.0) return 0.0;
   0008 21 80 3F             53 	ld	hl,#0x3F80
   000B E5                   54 	push	hl
   000C 21 00 00             55 	ld	hl,#0x0000
   000F E5                   56 	push	hl
   0010 DD 6E 06             57 	ld	l,6 (ix)
   0013 DD 66 07             58 	ld	h,7 (ix)
   0016 E5                   59 	push	hl
   0017 DD 6E 04             60 	ld	l,4 (ix)
   001A DD 66 05             61 	ld	h,5 (ix)
   001D E5                   62 	push	hl
   001E CDr00s00             63 	call	___fseq
   0021 F1                   64 	pop	af
   0022 F1                   65 	pop	af
   0023 F1                   66 	pop	af
   0024 F1                   67 	pop	af
   0025 AF                   68 	xor	a,a
   0026 B5                   69 	or	a,l
   0027 28 07                70 	jr	Z,00108$
   0029 21 00 00             71 	ld	hl,#0x0000
   002C 5D                   72 	ld	e,l
   002D 54                   73 	ld	d,h
   002E 18 57                74 	jr	00110$
   0030                      75 00108$:
                             76 ;../acosf.c:39: else if (x ==-1.0) return PI;
   0030 21 80 BF             77 	ld	hl,#0xBF80
   0033 E5                   78 	push	hl
   0034 21 00 00             79 	ld	hl,#0x0000
   0037 E5                   80 	push	hl
   0038 DD 6E 06             81 	ld	l,6 (ix)
   003B DD 66 07             82 	ld	h,7 (ix)
   003E E5                   83 	push	hl
   003F DD 6E 04             84 	ld	l,4 (ix)
   0042 DD 66 05             85 	ld	h,5 (ix)
   0045 E5                   86 	push	hl
   0046 CDr00s00             87 	call	___fseq
   0049 F1                   88 	pop	af
   004A F1                   89 	pop	af
   004B F1                   90 	pop	af
   004C F1                   91 	pop	af
   004D AF                   92 	xor	a,a
   004E B5                   93 	or	a,l
   004F 28 08                94 	jr	Z,00105$
   0051 21 DB 0F             95 	ld	hl,#0x0FDB
   0054 11 49 40             96 	ld	de,#0x4049
   0057 18 2E                97 	jr	00110$
   0059                      98 00105$:
                             99 ;../acosf.c:40: else if (x == 0.0) return HALF_PI;
   0059 DD 7E 04            100 	ld	a,4 (ix)
   005C DD B6 05            101 	or	a,5 (ix)
   005F DD B6 06            102 	or	a,6 (ix)
   0062 DD B6 07            103 	or	a,7 (ix)
   0065 20 08               104 	jr	NZ,00102$
   0067 21 DB 0F            105 	ld	hl,#0x0FDB
   006A 11 C9 3F            106 	ld	de,#0x3FC9
   006D 18 18               107 	jr	00110$
   006F                     108 00102$:
                            109 ;../acosf.c:41: else               return asincosf(x, true);
   006F 3E 01               110 	ld	a,#0x01
   0071 F5                  111 	push	af
   0072 33                  112 	inc	sp
   0073 DD 6E 06            113 	ld	l,6 (ix)
   0076 DD 66 07            114 	ld	h,7 (ix)
   0079 E5                  115 	push	hl
   007A DD 6E 04            116 	ld	l,4 (ix)
   007D DD 66 05            117 	ld	h,5 (ix)
   0080 E5                  118 	push	hl
   0081 CDr00s00            119 	call	_asincosf
   0084 F1                  120 	pop	af
   0085 F1                  121 	pop	af
   0086 33                  122 	inc	sp
   0087                     123 00110$:
   0087 DD E1               124 	pop	ix
   0089 C9                  125 	ret
   008A                     126 _acosf_end::
                            127 	.area _CODE
                            128 	.area _CABS
