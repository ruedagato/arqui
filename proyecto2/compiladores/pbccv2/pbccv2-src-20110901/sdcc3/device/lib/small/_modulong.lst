                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:23 2015
                              5 ;--------------------------------------------------------
                              6 	.module _modulong
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 ;--------------------------------------------------------
                             13 ; special function registers
                             14 ;--------------------------------------------------------
                             15 	.area RSEG    (ABS,DATA)
   0000                      16 	.org 0x0000
                             17 ;--------------------------------------------------------
                             18 ; special function bits
                             19 ;--------------------------------------------------------
                             20 	.area RSEG    (ABS,DATA)
   0000                      21 	.org 0x0000
                             22 ;--------------------------------------------------------
                             23 ; overlayable register banks
                             24 ;--------------------------------------------------------
                             25 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      26 	.ds 8
                             27 ;--------------------------------------------------------
                             28 ; internal ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (DATA)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in internal ram 
                             33 ;--------------------------------------------------------
                             34 	.area OSEG    (OVR,DATA)
                             35 ;--------------------------------------------------------
                             36 ; indirectly addressable internal ram data
                             37 ;--------------------------------------------------------
                             38 	.area ISEG    (DATA)
                             39 ;--------------------------------------------------------
                             40 ; absolute internal ram data
                             41 ;--------------------------------------------------------
                             42 	.area IABS    (ABS,DATA)
                             43 	.area IABS    (ABS,DATA)
                             44 ;--------------------------------------------------------
                             45 ; bit data
                             46 ;--------------------------------------------------------
                             47 	.area BSEG    (BIT)
                             48 ;--------------------------------------------------------
                             49 ; paged external ram data
                             50 ;--------------------------------------------------------
                             51 	.area PSEG    (PAG,XDATA)
                             52 ;--------------------------------------------------------
                             53 ; external ram data
                             54 ;--------------------------------------------------------
                             55 	.area XSEG    (XDATA)
                             56 ;--------------------------------------------------------
                             57 ; absolute external ram data
                             58 ;--------------------------------------------------------
                             59 	.area XABS    (ABS,XDATA)
                             60 ;--------------------------------------------------------
                             61 ; external initialized ram data
                             62 ;--------------------------------------------------------
                             63 	.area XISEG   (XDATA)
                             64 	.area HOME    (CODE)
                             65 	.area GSINIT0 (CODE)
                             66 	.area GSINIT1 (CODE)
                             67 	.area GSINIT2 (CODE)
                             68 	.area GSINIT3 (CODE)
                             69 	.area GSINIT4 (CODE)
                             70 	.area GSINIT5 (CODE)
                             71 	.area GSINIT  (CODE)
                             72 	.area GSFINAL (CODE)
                             73 	.area CSEG    (CODE)
                             74 ;--------------------------------------------------------
                             75 ; global & static initialisations
                             76 ;--------------------------------------------------------
                             77 	.area HOME    (CODE)
                             78 	.area GSINIT  (CODE)
                             79 	.area GSFINAL (CODE)
                             80 	.area GSINIT  (CODE)
                             81 ;--------------------------------------------------------
                             82 ; Home
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area HOME    (CODE)
                             86 ;--------------------------------------------------------
                             87 ; code
                             88 ;--------------------------------------------------------
                             89 	.area CSEG    (CODE)
                             90 ;------------------------------------------------------------
                             91 ;Allocation info for local variables in function '_modlong_dummy'
                             92 ;------------------------------------------------------------
                             93 ;------------------------------------------------------------
                             94 ;	_modulong.c:50: _modlong_dummy (void) __naked
                             95 ;	-----------------------------------------
                             96 ;	 function _modlong_dummy
                             97 ;	-----------------------------------------
   0000                      98 __modlong_dummy:
                             99 ;	naked function: no prologue.
                            100 ;	_modulong.c:177: mov	b0,a
                            101 	
                            102 	
                            103 	 .globl __modulong
                            104 	
                            105 	
                            106 	
                            107 	
                            108 	
                            109 	
                            110 	
   0000                     111 	__modulong:
                            112 ;	# 72 "_modulong.c"
                            113 	 .area OSEG (OVR,DATA)
                            114 	
                            115 	
                            116 	 .globl __modulong_PARM_2
                            117 	 .globl __modslong_PARM_2
                            118 	
   0000                     119 	__modulong_PARM_2:
   0000                     120 	__modslong_PARM_2:
   0000                     121 	 .ds 4
                            122 	
                            123 	 .area CSEG (CODE)
                            124 	
                            125 	
                            126 	
                            127 	
                            128 	
                            129 	
                            130     ; parameter a comes in a, b, dph, dpl
   0000 F9                  131 	 mov r1,a ; save parameter r1
                            132 	
   0001 E5*00               133 	 mov a,(__modulong_PARM_2) ; b == 0? avoid endless loop
   0003 45*01               134 	 orl a,(__modulong_PARM_2 + 1)
   0005 45*02               135 	 orl a,(__modulong_PARM_2 + 2)
   0007 45*03               136 	 orl a,(__modulong_PARM_2 + 3)
   0009 60 77               137 	 jz div_by_0
                            138 	
   000B 78 00               139 	 mov r0,#0
   000D C3                  140 	 clr c ; when loop1 jumps immediately to loop2
                            141 	
   000E                     142 	loop1:
   000E 08                  143 	inc r0
                            144 	
   000F E5*03               145 	 mov a,(__modulong_PARM_2 + 3) ; if (!MSB_SET(b))
   0011 20 E7 3B            146 	 jb acc.7,loop2
                            147 	
   0014 E5*00               148 	 mov a,(__modulong_PARM_2) ; b <<= 1
   0016 25 E0               149 	 add a,acc
   0018 F5*00               150 	 mov (__modulong_PARM_2),a
   001A E5*01               151 	 mov a,(__modulong_PARM_2 + 1)
   001C 33                  152 	 rlc a
   001D F5*01               153 	 mov (__modulong_PARM_2 + 1),a
   001F E5*02               154 	 mov a,(__modulong_PARM_2 + 2)
   0021 33                  155 	 rlc a
   0022 F5*02               156 	 mov (__modulong_PARM_2 + 2),a
   0024 E5*03               157 	 mov a,(__modulong_PARM_2 + 3)
   0026 33                  158 	 rlc a
   0027 F5*03               159 	 mov (__modulong_PARM_2 + 3),a
                            160 	
   0029 E5 82               161 	 mov a,dpl ; a - b
   002B 95*00               162 	 subb a,(__modulong_PARM_2) ; here carry is always clear
   002D E5 83               163 	 mov a,dph
   002F 95*01               164 	 subb a,(__modulong_PARM_2 + 1)
   0031 E5 F0               165 	 mov a,b
   0033 95*02               166 	 subb a,(__modulong_PARM_2 + 2)
   0035 E9                  167 	 mov a,r1
   0036 95*03               168 	 subb a,(__modulong_PARM_2 + 3)
                            169 	
   0038 50 D4               170 	 jnc loop1
                            171 	
                            172 	
   003A C3                  173 	 clr c
   003B E5*03               174 	 mov a,(__modulong_PARM_2 + 3) ; b >>= 1;
   003D 13                  175 	 rrc a
   003E F5*03               176 	 mov (__modulong_PARM_2 + 3),a
   0040 E5*02               177 	 mov a,(__modulong_PARM_2 + 2)
   0042 13                  178 	 rrc a
   0043 F5*02               179 	 mov (__modulong_PARM_2 + 2),a
   0045 E5*01               180 	 mov a,(__modulong_PARM_2 + 1)
   0047 13                  181 	 rrc a
   0048 F5*01               182 	 mov (__modulong_PARM_2 + 1),a
   004A E5*00               183 	 mov a,(__modulong_PARM_2)
   004C 13                  184 	 rrc a
   004D F5*00               185 	 mov (__modulong_PARM_2),a
                            186 	
   004F                     187 	loop2:
                            188 ; clr c never set
   004F E5 82               189 	 mov a,dpl ; a - b
   0051 95*00               190 	 subb a,(__modulong_PARM_2)
   0053 FC                  191 	 mov r4,a
   0054 E5 83               192 	 mov a,dph
   0056 95*01               193 	 subb a,(__modulong_PARM_2 + 1)
   0058 FD                  194 	 mov r5,a
   0059 E5 F0               195 	 mov a,b
   005B 95*02               196 	 subb a,(__modulong_PARM_2 + 2)
   005D FE                  197 	 mov r6,a
   005E E9                  198 	 mov a,r1
   005F 95*03               199 	 subb a,(__modulong_PARM_2 + 3)
                            200 	
   0061 40 07               201 	 jc smaller ; a >= b?
                            202 	
   0063 F9                  203 	 mov r1,a ; -> yes; a = a - b;
   0064 8E F0               204 	 mov b,r6
   0066 8D 83               205 	 mov dph,r5
   0068 8C 82               206 	 mov dpl,r4
   006A                     207 	smaller:
                            208 ; -> no
   006A C3                  209 	 clr c
   006B E5*03               210 	 mov a,(__modulong_PARM_2 + 3) ; b >>= 1;
   006D 13                  211 	 rrc a
   006E F5*03               212 	 mov (__modulong_PARM_2 + 3),a
   0070 E5*02               213 	 mov a,(__modulong_PARM_2 + 2)
   0072 13                  214 	 rrc a
   0073 F5*02               215 	 mov (__modulong_PARM_2 + 2),a
   0075 E5*01               216 	 mov a,(__modulong_PARM_2 + 1)
   0077 13                  217 	 rrc a
   0078 F5*01               218 	 mov (__modulong_PARM_2 + 1),a
   007A E5*00               219 	 mov a,(__modulong_PARM_2)
   007C 13                  220 	 rrc a
   007D F5*00               221 	 mov (__modulong_PARM_2),a
                            222 	
   007F D8 CE               223 	 djnz r0,loop2
                            224 	
   0081 E9                  225 	 mov a,r1 ; prepare the return value
   0082                     226 	div_by_0:
   0082 22                  227 	 ret
                            228 	
                            229 	 
                            230 ;	naked function: no epilogue.
                            231 	.area CSEG    (CODE)
                            232 	.area CONST   (CODE)
                            233 	.area XINIT   (CODE)
                            234 	.area CABS    (ABS,CODE)
