                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:23 2015
                              5 ;--------------------------------------------------------
                              6 	.module _ispunct
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _ispunct
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'ispunct'
                             93 ;------------------------------------------------------------
                             94 ;c                         Allocated to registers r2 
                             95 ;------------------------------------------------------------
                             96 ;	_ispunct.c:31: char ispunct (unsigned char c)
                             97 ;	-----------------------------------------
                             98 ;	 function ispunct
                             99 ;	-----------------------------------------
   0000                     100 _ispunct:
                    0002    101 	ar2 = 0x02
                    0003    102 	ar3 = 0x03
                    0004    103 	ar4 = 0x04
                    0005    104 	ar5 = 0x05
                    0006    105 	ar6 = 0x06
                    0007    106 	ar7 = 0x07
                    0000    107 	ar0 = 0x00
                    0001    108 	ar1 = 0x01
                            109 ;	_ispunct.c:33: if ( isprint (c) &&
   0000 AA 82               110 	mov  r2,dpl
   0002 C0 02               111 	push	ar2
   0004 12s00r00            112 	lcall	_isprint
   0007 E5 82               113 	mov	a,dpl
   0009 D0 02               114 	pop	ar2
   000B 60 34               115 	jz	00102$
                            116 ;	_ispunct.c:34: !islower(c) &&
   000D 8A 82               117 	mov	dpl,r2
   000F C0 02               118 	push	ar2
   0011 12s00r00            119 	lcall	_islower
   0014 E5 82               120 	mov	a,dpl
   0016 D0 02               121 	pop	ar2
   0018 70 27               122 	jnz	00102$
                            123 ;	_ispunct.c:35: !isupper(c) &&
   001A 8A 82               124 	mov	dpl,r2
   001C C0 02               125 	push	ar2
   001E 12s00r00            126 	lcall	_isupper
   0021 E5 82               127 	mov	a,dpl
   0023 D0 02               128 	pop	ar2
   0025 70 1A               129 	jnz	00102$
                            130 ;	_ispunct.c:36: !isspace(c) &&
   0027 8A 82               131 	mov	dpl,r2
   0029 C0 02               132 	push	ar2
   002B 12s00r00            133 	lcall	_isspace
   002E E5 82               134 	mov	a,dpl
   0030 D0 02               135 	pop	ar2
   0032 70 0D               136 	jnz	00102$
                            137 ;	_ispunct.c:37: !isdigit(c) )
   0034 8A 82               138 	mov	dpl,r2
   0036 12s00r00            139 	lcall	_isdigit
   0039 E5 82               140 	mov	a,dpl
   003B 70 04               141 	jnz	00102$
                            142 ;	_ispunct.c:38: return 1;
   003D 75 82 01            143 	mov	dpl,#0x01
                            144 ;	_ispunct.c:39: return 0;
   0040 22                  145 	ret
   0041                     146 00102$:
   0041 75 82 00            147 	mov	dpl,#0x00
   0044 22                  148 	ret
                            149 	.area CSEG    (CODE)
                            150 	.area CONST   (CODE)
                            151 	.area XINIT   (CODE)
                            152 	.area CABS    (ABS,CODE)
