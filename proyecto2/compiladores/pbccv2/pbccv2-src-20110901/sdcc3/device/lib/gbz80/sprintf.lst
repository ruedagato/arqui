                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:18:20 2015
                              5 ;--------------------------------------------------------
                              6 	.module sprintf
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _vsprintf
                             13 	.globl _sprintf
                             14 ;--------------------------------------------------------
                             15 ;  ram data
                             16 ;--------------------------------------------------------
                             17 	.area _DATA
                             18 ;--------------------------------------------------------
                             19 ; overlayable items in  ram 
                             20 ;--------------------------------------------------------
                             21 	.area _OVERLAY
                             22 ;--------------------------------------------------------
                             23 ; external initialized ram data
                             24 ;--------------------------------------------------------
                             25 ;--------------------------------------------------------
                             26 ; global & static initialisations
                             27 ;--------------------------------------------------------
                             28 	.area _HOME
                             29 	.area _GSINIT
                             30 	.area _GSFINAL
                             31 	.area _GSINIT
                             32 ;--------------------------------------------------------
                             33 ; Home
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _HOME
                             37 ;--------------------------------------------------------
                             38 ; code
                             39 ;--------------------------------------------------------
                             40 	.area _CODE
                             41 ;../sprintf.c:34: put_char_to_string (char c, void* p) _REENTRANT
                             42 ;	---------------------------------
                             43 ; Function put_char_to_string
                             44 ; ---------------------------------
   0000                      45 _put_char_to_string:
                             46 	
   0000 F5                   47 	push	af
                             48 ;../sprintf.c:36: char **buf = (char **)p;
                             49 ;../sprintf.c:37: *(*buf)++ = c;
   0001 F8 06                50 	ldhl	sp,#6
   0003 2B                   51 	dec	hl
   0004 5E                   52 	ld	e,(hl)
   0005 23                   53 	inc	hl
   0006 56                   54 	ld	d,(hl)
   0007 1A                   55 	ld	a,(de)
   0008 F8 00                56 	ldhl	sp,#0
   000A 77                   57 	ld	(hl),a
   000B 13                   58 	inc	de
   000C 1A                   59 	ld	a,(de)
   000D 23                   60 	inc	hl
   000E 77                   61 	ld	(hl),a
   000F 2B                   62 	dec	hl
   0010 4E                   63 	ld	c,(hl)
   0011 23                   64 	inc	hl
   0012 46                   65 	ld	b,(hl)
   0013 03                   66 	inc	bc
   0014 F8 06                67 	ldhl	sp,#6
   0016 2B                   68 	dec	hl
   0017 5E                   69 	ld	e,(hl)
   0018 23                   70 	inc	hl
   0019 56                   71 	ld	d,(hl)
   001A 79                   72 	ld	a,c
   001B 12                   73 	ld	(de),a
   001C 13                   74 	inc	de
   001D 78                   75 	ld	a,b
   001E 12                   76 	ld	(de),a
   001F F8 01                77 	ldhl	sp,#1
   0021 2B                   78 	dec	hl
   0022 5E                   79 	ld	e,(hl)
   0023 23                   80 	inc	hl
   0024 56                   81 	ld	d,(hl)
   0025 F8 04                82 	ldhl	sp,#4
   0027 7E                   83 	ld	a,(hl)
   0028 12                   84 	ld	(de),a
   0029                      85 00101$:
   0029 E8 02                86 	lda	sp,2(sp)
   002B C9                   87 	ret
                             88 ;../sprintf.c:41: vsprintf (char *buf, const char *format, va_list ap)
                             89 ;	---------------------------------
                             90 ; Function vsprintf
                             91 ; ---------------------------------
   002C                      92 _vsprintf_start::
   002C                      93 _vsprintf:
                             94 	
   002C F5                   95 	push	af
                             96 ;../sprintf.c:44: i = _print_format (put_char_to_string, &buf, format, ap);
   002D F8 04                97 	ldhl	sp,#4
   002F 4D                   98 	ld	c,l
   0030 44                   99 	ld	b,h
   0031 F8 08               100 	ldhl	sp,#8
   0033 7E                  101 	ld	a,(hl)
   0034 23                  102 	inc	hl
   0035 66                  103 	ld	h,(hl)
   0036 6F                  104 	ld	l,a
   0037 E5                  105 	push	hl
   0038 F8 08               106 	ldhl	sp,#8
   003A 7E                  107 	ld	a,(hl)
   003B 23                  108 	inc	hl
   003C 66                  109 	ld	h,(hl)
   003D 6F                  110 	ld	l,a
   003E E5                  111 	push	hl
   003F C5                  112 	push	bc
   0040 21r00s00            113 	ld	hl,#_put_char_to_string
   0043 E5                  114 	push	hl
   0044 CDr00s00            115 	call	__print_format
   0047 E8 08               116 	lda	sp,8(sp)
   0049 42                  117 	ld	b,d
   004A 4B                  118 	ld	c,e
   004B F8 00               119 	ldhl	sp,#0
   004D 71                  120 	ld	(hl),c
   004E 23                  121 	inc	hl
   004F 70                  122 	ld	(hl),b
                            123 ;../sprintf.c:45: *buf = 0;
   0050 F8 05               124 	ldhl	sp,#5
   0052 2B                  125 	dec	hl
   0053 4E                  126 	ld	c,(hl)
   0054 23                  127 	inc	hl
   0055 46                  128 	ld	b,(hl)
   0056 3E 00               129 	ld	a,#0x00
   0058 02                  130 	ld	(bc),a
                            131 ;../sprintf.c:46: return i;
   0059 F8 01               132 	ldhl	sp,#1
   005B 2B                  133 	dec	hl
   005C 5E                  134 	ld	e,(hl)
   005D 23                  135 	inc	hl
   005E 56                  136 	ld	d,(hl)
   005F                     137 00101$:
   005F E8 02               138 	lda	sp,2(sp)
   0061 C9                  139 	ret
   0062                     140 _vsprintf_end::
                            141 ;../sprintf.c:50: sprintf (char *buf, const char *format, ...)
                            142 ;	---------------------------------
                            143 ; Function sprintf
                            144 ; ---------------------------------
   0062                     145 _sprintf_start::
   0062                     146 _sprintf:
                            147 	
   0062 F5                  148 	push	af
   0063 F5                  149 	push	af
                            150 ;../sprintf.c:55: va_start (arg, format);
   0064 F8 08               151 	ldhl	sp,#8
   0066 4D                  152 	ld	c,l
   0067 44                  153 	ld	b,h
   0068 21 02 00            154 	ld	hl,#0x0002
   006B 09                  155 	add	hl,bc
   006C 7D                  156 	ld	a,l
   006D 54                  157 	ld	d,h
   006E F8 02               158 	ldhl	sp,#2
   0070 77                  159 	ld	(hl),a
   0071 23                  160 	inc	hl
   0072 72                  161 	ld	(hl),d
                            162 ;../sprintf.c:56: i = _print_format (put_char_to_string, &buf, format, arg);
   0073 F8 06               163 	ldhl	sp,#6
   0075 4D                  164 	ld	c,l
   0076 44                  165 	ld	b,h
   0077 F8 02               166 	ldhl	sp,#2
   0079 7E                  167 	ld	a,(hl)
   007A 23                  168 	inc	hl
   007B 66                  169 	ld	h,(hl)
   007C 6F                  170 	ld	l,a
   007D E5                  171 	push	hl
   007E F8 0A               172 	ldhl	sp,#10
   0080 7E                  173 	ld	a,(hl)
   0081 23                  174 	inc	hl
   0082 66                  175 	ld	h,(hl)
   0083 6F                  176 	ld	l,a
   0084 E5                  177 	push	hl
   0085 C5                  178 	push	bc
   0086 21r00s00            179 	ld	hl,#_put_char_to_string
   0089 E5                  180 	push	hl
   008A CDr00s00            181 	call	__print_format
   008D E8 08               182 	lda	sp,8(sp)
   008F 42                  183 	ld	b,d
   0090 4B                  184 	ld	c,e
   0091 F8 00               185 	ldhl	sp,#0
   0093 71                  186 	ld	(hl),c
   0094 23                  187 	inc	hl
   0095 70                  188 	ld	(hl),b
                            189 ;../sprintf.c:57: *buf = 0;
   0096 F8 07               190 	ldhl	sp,#7
   0098 2B                  191 	dec	hl
   0099 4E                  192 	ld	c,(hl)
   009A 23                  193 	inc	hl
   009B 46                  194 	ld	b,(hl)
   009C 3E 00               195 	ld	a,#0x00
   009E 02                  196 	ld	(bc),a
                            197 ;../sprintf.c:60: return i;
   009F F8 01               198 	ldhl	sp,#1
   00A1 2B                  199 	dec	hl
   00A2 5E                  200 	ld	e,(hl)
   00A3 23                  201 	inc	hl
   00A4 56                  202 	ld	d,(hl)
   00A5                     203 00101$:
   00A5 E8 04               204 	lda	sp,4(sp)
   00A7 C9                  205 	ret
   00A8                     206 _sprintf_end::
                            207 	.area _CODE
                            208 	.area _CABS
