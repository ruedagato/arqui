                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:18:20 2015
                              5 ;--------------------------------------------------------
                              6 	.module _strpbrk
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strpbrk
                             13 ;--------------------------------------------------------
                             14 ;  ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in  ram 
                             19 ;--------------------------------------------------------
                             20 	.area _OVERLAY
                             21 ;--------------------------------------------------------
                             22 ; external initialized ram data
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; global & static initialisations
                             26 ;--------------------------------------------------------
                             27 	.area _HOME
                             28 	.area _GSINIT
                             29 	.area _GSFINAL
                             30 	.area _GSINIT
                             31 ;--------------------------------------------------------
                             32 ; Home
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _HOME
                             36 ;--------------------------------------------------------
                             37 ; code
                             38 ;--------------------------------------------------------
                             39 	.area _CODE
                             40 ;../_strpbrk.c:31: char * strpbrk (
                             41 ;	---------------------------------
                             42 ; Function strpbrk
                             43 ; ---------------------------------
   0000                      44 _strpbrk_start::
   0000                      45 _strpbrk:
                             46 	
   0000 F5                   47 	push	af
   0001 F5                   48 	push	af
                             49 ;../_strpbrk.c:36: char *ret = NULL;
   0002 F8 02                50 	ldhl	sp,#2
   0004 36 00                51 	ld	(hl),#0x00
   0006 23                   52 	inc	hl
   0007 36 00                53 	ld	(hl),#0x00
                             54 ;../_strpbrk.c:39: while (ch = *control) {
   0009 F8 08                55 	ldhl	sp,#8
   000B 7E                   56 	ld	a,(hl)
   000C 23                   57 	inc	hl
   000D 5E                   58 	ld	e,(hl)
   000E F8 00                59 	ldhl	sp,#0
   0010 77                   60 	ld	(hl),a
   0011 23                   61 	inc	hl
   0012 73                   62 	ld	(hl),e
   0013                      63 00105$:
   0013 F8 01                64 	ldhl	sp,#1
   0015 2B                   65 	dec	hl
   0016 5E                   66 	ld	e,(hl)
   0017 23                   67 	inc	hl
   0018 56                   68 	ld	d,(hl)
   0019 1A                   69 	ld	a,(de)
   001A 4F                   70 	ld	c,a
   001B 41                   71 	ld	b,c
   001C AF                   72 	xor	a,a
   001D B1                   73 	or	a,c
   001E CAr6Es00             74 	jp	Z,00107$
                             75 ;../_strpbrk.c:40: char * p = strchr(string, ch);
   0021 C5                   76 	push	bc
   0022 33                   77 	inc	sp
   0023 F8 07                78 	ldhl	sp,#7
   0025 7E                   79 	ld	a,(hl)
   0026 23                   80 	inc	hl
   0027 66                   81 	ld	h,(hl)
   0028 6F                   82 	ld	l,a
   0029 E5                   83 	push	hl
   002A CDr00s00             84 	call	_strchr
   002D E8 03                85 	lda	sp,3(sp)
   002F 42                   86 	ld	b,d
   0030 4B                   87 	ld	c,e
                             88 ;../_strpbrk.c:41: if (p != NULL && (ret == NULL || p < ret)) {
   0031 79                   89 	ld	a,c
   0032 B0                   90 	or	a,b
   0033 CAr63s00             91 	jp	Z,00102$
   0036                      92 00115$:
   0036 F8 02                93 	ldhl	sp,#2
   0038 7E                   94 	ld	a,(hl)
   0039 23                   95 	inc	hl
   003A B6                   96 	or	a,(hl)
   003B CAr5Es00             97 	jp	Z,00101$
   003E                      98 00116$:
   003E 2B                   99 	dec	hl
   003F 79                  100 	ld	a, c
   0040 96                  101 	sub	a, (hl)
   0041 23                  102 	inc	hl
   0042 78                  103 	ld	a, b
   0043 9E                  104 	sbc	a, (hl)
   0044 3E 00               105 	ld	a, #0x00
   0046 57                  106 	ld	d, a
   0047 5E                  107 	ld	e, (hl)
   0048 CB 7B               108 	bit	7, e
   004A CAr55s00            109 	jp	Z, 00117$
   004D CB 7A               110 	bit	7, d
   004F C2r5Bs00            111 	jp	NZ, 00118$
   0052 BF                  112 	cp	a, a
   0053 18 06               113 	jr	00118$
   0055                     114 00117$:
   0055 CB 7A               115 	bit	7, d
   0057 CAr5Bs00            116 	jp	Z, 00118$
   005A 37                  117 	scf
   005B                     118 00118$:
   005B D2r63s00            119 	jp	NC,00102$
   005E                     120 00101$:
                            121 ;../_strpbrk.c:42: ret = p;
   005E F8 02               122 	ldhl	sp,#2
   0060 71                  123 	ld	(hl),c
   0061 23                  124 	inc	hl
   0062 70                  125 	ld	(hl),b
   0063                     126 00102$:
                            127 ;../_strpbrk.c:44: control++;
   0063 F8 00               128 	ldhl	sp,#0
   0065 34                  129 	inc	(hl)
   0066 C2r13s00            130 	jp	NZ,00105$
   0069 23                  131 	inc	hl
   006A 34                  132 	inc	(hl)
   006B                     133 00119$:
   006B C3r13s00            134 	jp	00105$
   006E                     135 00107$:
                            136 ;../_strpbrk.c:47: return (ret);
   006E F8 03               137 	ldhl	sp,#3
   0070 2B                  138 	dec	hl
   0071 5E                  139 	ld	e,(hl)
   0072 23                  140 	inc	hl
   0073 56                  141 	ld	d,(hl)
   0074                     142 00108$:
   0074 E8 04               143 	lda	sp,4(sp)
   0076 C9                  144 	ret
   0077                     145 _strpbrk_end::
                            146 	.area _CODE
                            147 	.area _CABS
