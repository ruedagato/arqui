                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:19 2015
                              5 ;--------------------------------------------------------
                              6 	.module asincosf
                              7 	.optsdcc -mds400 --model-flat24
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; CPU specific extensions
                             11 ;--------------------------------------------------------
                             12 .flat24 on		; 24 bit flat addressing
                    0084     13 dpl1	=	0x84
                    0085     14 dph1	=	0x85
                    0086     15 dps	=	0x86
                    0093     16 dpx	=	0x93
                    0095     17 dpx1	=	0x95
                    009B     18 esp	=	0x9B
                    009C     19 ap	=	0x9C
                    009C     20 _ap	=	0x9C
                    00D1     21 mcnt0	=	0xD1
                    00D2     22 mcnt1	=	0xD2
                    00D3     23 ma	=	0xD3
                    00D4     24 mb	=	0xD4
                    00D5     25 mc	=	0xD5
                    00D1     26 F1	=	0xD1	; user flag
                             27 ;--------------------------------------------------------
                             28 ; Public variables in this module
                             29 ;--------------------------------------------------------
                             30 	.globl _asincosf
                             31 	.globl _asincosf_PARM_2
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; special function bits
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 	.area REG_BANK_3	(REL,OVR,DATA)
   0000                      44 	.ds 8
                             45 ;--------------------------------------------------------
                             46 ; internal ram data
                             47 ;--------------------------------------------------------
                             48 	.area DSEG    (DATA)
                             49 ;--------------------------------------------------------
                             50 ; overlayable items in internal ram 
                             51 ;--------------------------------------------------------
                             52 	.area OSEG    (OVR,DATA)
                             53 ;--------------------------------------------------------
                             54 ; indirectly addressable internal ram data
                             55 ;--------------------------------------------------------
                             56 	.area ISEG    (DATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute internal ram data
                             59 ;--------------------------------------------------------
                             60 	.area IABS    (ABS,DATA)
                             61 	.area IABS    (ABS,DATA)
                             62 ;--------------------------------------------------------
                             63 ; bit data
                             64 ;--------------------------------------------------------
                             65 	.area BSEG    (BIT)
   0000                      66 _asincosf_PARM_2:
   0000                      67 	.ds 1
   0001                      68 _asincosf_quartPI_1_1:
   0001                      69 	.ds 1
                             70 ;--------------------------------------------------------
                             71 ; paged external ram data
                             72 ;--------------------------------------------------------
                             73 	.area PSEG    (PAG,XDATA)
                             74 ;--------------------------------------------------------
                             75 ; external ram data
                             76 ;--------------------------------------------------------
                             77 	.area XSEG    (XDATA)
   0000                      78 _asincosf_x_1_1:
   0000                      79 	.ds 4
   0004                      80 _asincosf_g_1_1:
   0004                      81 	.ds 4
   0008                      82 _asincosf_r_1_1:
   0008                      83 	.ds 4
   000C                      84 _asincosf_a_1_1:
   000C                      85 	.ds 8
   0014                      86 _asincosf_b_1_1:
   0014                      87 	.ds 8
   001C                      88 _asincosf_sloc0_1_0:
   001C                      89 	.ds 4
                             90 ;--------------------------------------------------------
                             91 ; absolute external ram data
                             92 ;--------------------------------------------------------
                             93 	.area XABS    (ABS,XDATA)
                             94 ;--------------------------------------------------------
                             95 ; external initialized ram data
                             96 ;--------------------------------------------------------
                             97 	.area XISEG   (XDATA)
                             98 ;--------------------------------------------------------
                             99 ; global & static initialisations
                            100 ;--------------------------------------------------------
                            101 	.area HOME    (CODE)
                            102 	.area GSINIT  (CODE)
                            103 	.area GSFINAL (CODE)
                            104 	.area GSINIT  (CODE)
                            105 ;------------------------------------------------------------
                            106 ;Allocation info for local variables in function 'asincosf'
                            107 ;------------------------------------------------------------
                            108 ;x                         Allocated with name '_asincosf_x_1_1'
                            109 ;y                         Allocated to registers r2 r3 r4 r5 
                            110 ;g                         Allocated with name '_asincosf_g_1_1'
                            111 ;r                         Allocated with name '_asincosf_r_1_1'
                            112 ;i                         Allocated to registers 
                            113 ;a                         Allocated with name '_asincosf_a_1_1'
                            114 ;b                         Allocated with name '_asincosf_b_1_1'
                            115 ;sloc0                     Allocated with name '_asincosf_sloc0_1_0'
                            116 ;------------------------------------------------------------
                            117 ;	asincosf.c:53: static const float a[2] = { 0.0, QUART_PI };
   0000 90s00r00r0C         118 	mov	dptr,#_asincosf_a_1_1
   0004 E4                  119 	clr  a
   0005 F0                  120 	movx @dptr,a
   0006 A3                  121 	inc  dptr
   0007 F0                  122 	movx @dptr,a
   0008 A3                  123 	inc	dptr
   0009 E4                  124 	clr  a
   000A F0                  125 	movx @dptr,a
   000B A3                  126 	inc  dptr
   000C F0                  127 	movx @dptr,a
   000D 90s00r00r10         128 	mov	dptr,#(_asincosf_a_1_1 + 0x000004)
   0011 74 DB               129 	mov	a,#0xDB
   0013 F0                  130 	movx	@dptr,a
   0014 A3                  131 	inc	dptr
   0015 74 0F               132 	mov	a,#0x0F
   0017 F0                  133 	movx	@dptr,a
   0018 A3                  134 	inc	dptr
   0019 74 49               135 	mov	a,#0x49
   001B F0                  136 	movx	@dptr,a
   001C A3                  137 	inc	dptr
   001D 74 3F               138 	mov	a,#0x3F
   001F F0                  139 	movx	@dptr,a
                            140 ;	asincosf.c:54: static const float b[2] = { HALF_PI, QUART_PI };
   0020 90s00r00r14         141 	mov	dptr,#_asincosf_b_1_1
   0024 74 DB               142 	mov	a,#0xDB
   0026 F0                  143 	movx	@dptr,a
   0027 A3                  144 	inc	dptr
   0028 74 0F               145 	mov	a,#0x0F
   002A F0                  146 	movx	@dptr,a
   002B A3                  147 	inc	dptr
   002C 74 C9               148 	mov	a,#0xC9
   002E F0                  149 	movx	@dptr,a
   002F A3                  150 	inc	dptr
   0030 74 3F               151 	mov	a,#0x3F
   0032 F0                  152 	movx	@dptr,a
   0033 90s00r00r18         153 	mov	dptr,#(_asincosf_b_1_1 + 0x000004)
   0037 74 DB               154 	mov	a,#0xDB
   0039 F0                  155 	movx	@dptr,a
   003A A3                  156 	inc	dptr
   003B 74 0F               157 	mov	a,#0x0F
   003D F0                  158 	movx	@dptr,a
   003E A3                  159 	inc	dptr
   003F 74 49               160 	mov	a,#0x49
   0041 F0                  161 	movx	@dptr,a
   0042 A3                  162 	inc	dptr
   0043 74 3F               163 	mov	a,#0x3F
   0045 F0                  164 	movx	@dptr,a
                            165 ;--------------------------------------------------------
                            166 ; Home
                            167 ;--------------------------------------------------------
                            168 	.area HOME    (CODE)
                            169 	.area HOME    (CODE)
                            170 ;--------------------------------------------------------
                            171 ; code
                            172 ;--------------------------------------------------------
                            173 	.area CSEG    (CODE)
                            174 ;------------------------------------------------------------
                            175 ;Allocation info for local variables in function 'asincosf'
                            176 ;------------------------------------------------------------
                            177 ;x                         Allocated with name '_asincosf_x_1_1'
                            178 ;y                         Allocated to registers r2 r3 r4 r5 
                            179 ;g                         Allocated with name '_asincosf_g_1_1'
                            180 ;r                         Allocated with name '_asincosf_r_1_1'
                            181 ;i                         Allocated to registers 
                            182 ;a                         Allocated with name '_asincosf_a_1_1'
                            183 ;b                         Allocated with name '_asincosf_b_1_1'
                            184 ;sloc0                     Allocated with name '_asincosf_sloc0_1_0'
                            185 ;------------------------------------------------------------
                            186 ;	asincosf.c:47: float asincosf(const float x, const BOOL isacos)
                            187 ;	-----------------------------------------
                            188 ;	 function asincosf
                            189 ;	-----------------------------------------
   0000                     190 _asincosf:
                    0002    191 	ar2 = 0x02
                    0003    192 	ar3 = 0x03
                    0004    193 	ar4 = 0x04
                    0005    194 	ar5 = 0x05
                    0006    195 	ar6 = 0x06
                    0007    196 	ar7 = 0x07
                    0000    197 	ar0 = 0x00
                    0001    198 	ar1 = 0x01
   0000 75 86 01            199 	mov     dps, #1
   0003 90s00r00r00         200 	mov     dptr, #_asincosf_x_1_1
   0007 E5 82               201 	mov	a,dpl
   0009 F0                  202 	movx	@dptr,a
   000A A3                  203 	inc	dptr
   000B E5 83               204 	mov	a,dph
   000D F0                  205 	movx	@dptr,a
   000E A3                  206 	inc	dptr
   000F E5 93               207 	mov	a,dpx
   0011 F0                  208 	movx	@dptr,a
   0012 A3                  209 	inc	dptr
   0013 E5 F0               210 	mov	a,b
   0015 F0                  211 	movx	@dptr,a
   0016 75 86 00            212 	mov	dps,#0
                            213 ;	asincosf.c:51: BOOL quartPI = isacos;
                            214 ;	genAssign: resultIsFar = FALSE
   0019 A2*00               215 	mov	c,_asincosf_PARM_2
   001B 92*01               216 	mov	_asincosf_quartPI_1_1,c
                            217 ;	asincosf.c:56: y = fabsf(x);
   001D 05 86               218 	inc	dps
   001F 90s00r00r00         219 	mov	dptr,#_asincosf_x_1_1
   0023 E0                  220 	movx	a,@dptr
   0024 F5 82               221 	mov	dpl,a
   0026 A3                  222 	inc	dptr
   0027 E0                  223 	movx	a,@dptr
   0028 F5 83               224 	mov	dph,a
   002A A3                  225 	inc	dptr
   002B E0                  226 	movx	a,@dptr
   002C F5 93               227 	mov	dpx,a
   002E A3                  228 	inc	dptr
   002F E0                  229 	movx	a,@dptr
   0030 F5 F0               230 	mov	b,a
   0032 75 86 00            231 	mov	dps,#0
   0035 12s00r00r00         232 	lcall	_fabsf
   0039 AE 82               233 	mov	r6,dpl
   003B AF 83               234 	mov	r7,dph
   003D A8 93               235 	mov	r0,dpx
   003F A9 F0               236 	mov	r1,b
                            237 ;	genAssign: resultIsFar = FALSE
   0041 8E 02               238 	mov	ar2,r6
   0043 8F 03               239 	mov	ar3,r7
   0045 88 04               240 	mov	ar4,r0
   0047 89 05               241 	mov	ar5,r1
                            242 ;	asincosf.c:57: if (y < EPS)
                            243 ;	genAssign: resultIsFar = TRUE
   0049 90s00r00r00         244 	mov	dptr,#___fslt_PARM_2
   004D E4                  245 	clr  a
   004E F0                  246 	movx @dptr,a
   004F A3                  247 	inc  dptr
   0050 F0                  248 	movx @dptr,a
   0051 A3                  249 	inc	dptr
   0052 74 80               250 	mov	a,#0x80
   0054 F0                  251 	movx	@dptr,a
   0055 A3                  252 	inc	dptr
   0056 74 39               253 	mov	a,#0x39
   0058 F0                  254 	movx	@dptr,a
   0059 C0 02               255 	push	ar2
   005B C0 03               256 	push	ar3
   005D C0 04               257 	push	ar4
   005F C0 05               258 	push	ar5
   0061 8A 82               259 	mov	dpl,r2
   0063 8B 83               260 	mov	dph,r3
   0065 8C 93               261 	mov	dpx,r4
   0067 8D F0               262 	mov	b,r5
   0069 12s00r00r00         263 	lcall	___fslt
   006D D0 05               264 	pop	ar5
   006F D0 04               265 	pop	ar4
   0071 D0 03               266 	pop	ar3
   0073 D0 02               267 	pop	ar2
   0075 E5 82               268 	mov	a,dpl
   0077 60 13               269 	jz  00107$
   0079                     270 00125$:
                            271 ;	asincosf.c:59: r = y;
                            272 ;	genAssign: resultIsFar = TRUE
   0079 90s00r00r08         273 	mov	dptr,#_asincosf_r_1_1
   007D EA                  274 	mov	a,r2
   007E F0                  275 	movx	@dptr,a
   007F A3                  276 	inc	dptr
   0080 EB                  277 	mov	a,r3
   0081 F0                  278 	movx	@dptr,a
   0082 A3                  279 	inc	dptr
   0083 EC                  280 	mov	a,r4
   0084 F0                  281 	movx	@dptr,a
   0085 A3                  282 	inc	dptr
   0086 ED                  283 	mov	a,r5
   0087 F0                  284 	movx	@dptr,a
   0088 02s00r04r40         285 	ljmp	00108$
   008C                     286 00107$:
                            287 ;	asincosf.c:63: if (y > 0.5)
                            288 ;	genAssign: resultIsFar = TRUE
   008C 90s00r00r00         289 	mov	dptr,#___fsgt_PARM_2
   0090 E4                  290 	clr  a
   0091 F0                  291 	movx @dptr,a
   0092 A3                  292 	inc  dptr
   0093 F0                  293 	movx @dptr,a
   0094 A3                  294 	inc	dptr
   0095 E4                  295 	clr  a
   0096 F0                  296 	movx	@dptr,a
   0097 A3                  297 	inc	dptr
   0098 74 3F               298 	mov	a,#0x3F
   009A F0                  299 	movx	@dptr,a
   009B C0 02               300 	push	ar2
   009D C0 03               301 	push	ar3
   009F C0 04               302 	push	ar4
   00A1 C0 05               303 	push	ar5
   00A3 8A 82               304 	mov	dpl,r2
   00A5 8B 83               305 	mov	dph,r3
   00A7 8C 93               306 	mov	dpx,r4
   00A9 8D F0               307 	mov	b,r5
   00AB 12s00r00r00         308 	lcall	___fsgt
   00AF D0 05               309 	pop	ar5
   00B1 D0 04               310 	pop	ar4
   00B3 D0 03               311 	pop	ar3
   00B5 D0 02               312 	pop	ar2
   00B7 E5 82               313 	mov	a,dpl
   00B9 70 04               314 	jnz	00126$
   00BB 02s00r01rD1         315 	ljmp	00104$
   00BF                     316 00126$:
                            317 ;	asincosf.c:65: quartPI = !isacos;
   00BF B2*01               318 	cpl	_asincosf_quartPI_1_1
                            319 ;	asincosf.c:66: if (y > 1.0)
                            320 ;	genAssign: resultIsFar = TRUE
   00C1 90s00r00r00         321 	mov	dptr,#___fsgt_PARM_2
   00C5 E4                  322 	clr  a
   00C6 F0                  323 	movx @dptr,a
   00C7 A3                  324 	inc  dptr
   00C8 F0                  325 	movx @dptr,a
   00C9 A3                  326 	inc	dptr
   00CA 74 80               327 	mov	a,#0x80
   00CC F0                  328 	movx	@dptr,a
   00CD A3                  329 	inc	dptr
   00CE 74 3F               330 	mov	a,#0x3F
   00D0 F0                  331 	movx	@dptr,a
   00D1 C0 02               332 	push	ar2
   00D3 C0 03               333 	push	ar3
   00D5 C0 04               334 	push	ar4
   00D7 C0 05               335 	push	ar5
   00D9 8A 82               336 	mov	dpl,r2
   00DB 8B 83               337 	mov	dph,r3
   00DD 8C 93               338 	mov	dpx,r4
   00DF 8D F0               339 	mov	b,r5
   00E1 12s00r00r00         340 	lcall	___fsgt
   00E5 D0 05               341 	pop	ar5
   00E7 D0 04               342 	pop	ar4
   00E9 D0 03               343 	pop	ar3
   00EB D0 02               344 	pop	ar2
   00ED E5 82               345 	mov	a,dpl
   00EF 60 15               346 	jz  00102$
   00F1                     347 00127$:
                            348 ;	asincosf.c:68: errno = EDOM;
                            349 ;	genAssign: resultIsFar = TRUE
   00F1 90s00r00r00         350 	mov	dptr,#_errno
   00F5 74 21               351 	mov	a,#0x21
   00F7 F0                  352 	movx	@dptr,a
   00F8 E4                  353 	clr	a
   00F9 A3                  354 	inc	dptr
   00FA F0                  355 	movx	@dptr,a
                            356 ;	asincosf.c:69: return 0.0;
   00FB 90 00 00 00         357 	mov  dptr,#0x0000
   00FF 75 F0 00            358 	mov	b,#0x00
   0102 02s00r06rAE         359 	ljmp	00117$
   0106                     360 00102$:
                            361 ;	asincosf.c:71: g = (0.5 - y) + 0.5;
                            362 ;	genAssign: resultIsFar = TRUE
   0106 90s00r00r00         363 	mov	dptr,#___fssub_PARM_2
   010A EA                  364 	mov	a,r2
   010B F0                  365 	movx	@dptr,a
   010C A3                  366 	inc	dptr
   010D EB                  367 	mov	a,r3
   010E F0                  368 	movx	@dptr,a
   010F A3                  369 	inc	dptr
   0110 EC                  370 	mov	a,r4
   0111 F0                  371 	movx	@dptr,a
   0112 A3                  372 	inc	dptr
   0113 ED                  373 	mov	a,r5
   0114 F0                  374 	movx	@dptr,a
   0115 90 00 00 00         375 	mov  dptr,#0x0000
   0119 75 93 80            376 	mov	dpx,#0x80
   011C 75 F0 3F            377 	mov	b,#0x3F
   011F 12s00r00r00         378 	lcall	___fssub
   0123 AA 82               379 	mov	r2,dpl
   0125 AB 83               380 	mov	r3,dph
   0127 AC 93               381 	mov	r4,dpx
   0129 AD F0               382 	mov	r5,b
                            383 ;	genAssign: resultIsFar = TRUE
   012B 90s00r00r04         384 	mov	dptr,#_asincosf_g_1_1
   012F EA                  385 	mov	a,r2
   0130 F0                  386 	movx	@dptr,a
   0131 A3                  387 	inc	dptr
   0132 EB                  388 	mov	a,r3
   0133 F0                  389 	movx	@dptr,a
   0134 A3                  390 	inc	dptr
   0135 EC                  391 	mov	a,r4
   0136 F0                  392 	movx	@dptr,a
   0137 A3                  393 	inc	dptr
   0138 ED                  394 	mov	a,r5
   0139 F0                  395 	movx	@dptr,a
                            396 ;	asincosf.c:72: g = ldexpf(g, -1);
                            397 ;	genAssign: resultIsFar = TRUE
   013A 90s00r00r00         398 	mov	dptr,#_ldexpf_PARM_2
   013E 74 FF               399 	mov  a,#0xFF
   0140 F0                  400 	movx @dptr,a
   0141 A3                  401 	inc  dptr
   0142 F0                  402 	movx @dptr,a
   0143 05 86               403 	inc	dps
   0145 90s00r00r04         404 	mov	dptr,#_asincosf_g_1_1
   0149 E0                  405 	movx	a,@dptr
   014A F5 82               406 	mov	dpl,a
   014C A3                  407 	inc	dptr
   014D E0                  408 	movx	a,@dptr
   014E F5 83               409 	mov	dph,a
   0150 A3                  410 	inc	dptr
   0151 E0                  411 	movx	a,@dptr
   0152 F5 93               412 	mov	dpx,a
   0154 A3                  413 	inc	dptr
   0155 E0                  414 	movx	a,@dptr
   0156 F5 F0               415 	mov	b,a
   0158 75 86 00            416 	mov	dps,#0
   015B 12s00r00r00         417 	lcall	_ldexpf
   015F AA 82               418 	mov	r2,dpl
   0161 AB 83               419 	mov	r3,dph
   0163 AC 93               420 	mov	r4,dpx
   0165 AD F0               421 	mov	r5,b
                            422 ;	genAssign: resultIsFar = TRUE
   0167 90s00r00r04         423 	mov	dptr,#_asincosf_g_1_1
   016B EA                  424 	mov	a,r2
   016C F0                  425 	movx	@dptr,a
   016D A3                  426 	inc	dptr
   016E EB                  427 	mov	a,r3
   016F F0                  428 	movx	@dptr,a
   0170 A3                  429 	inc	dptr
   0171 EC                  430 	mov	a,r4
   0172 F0                  431 	movx	@dptr,a
   0173 A3                  432 	inc	dptr
   0174 ED                  433 	mov	a,r5
   0175 F0                  434 	movx	@dptr,a
                            435 ;	asincosf.c:73: y = sqrtf(g);
   0176 05 86               436 	inc	dps
   0178 90s00r00r04         437 	mov	dptr,#_asincosf_g_1_1
   017C E0                  438 	movx	a,@dptr
   017D F5 82               439 	mov	dpl,a
   017F A3                  440 	inc	dptr
   0180 E0                  441 	movx	a,@dptr
   0181 F5 83               442 	mov	dph,a
   0183 A3                  443 	inc	dptr
   0184 E0                  444 	movx	a,@dptr
   0185 F5 93               445 	mov	dpx,a
   0187 A3                  446 	inc	dptr
   0188 E0                  447 	movx	a,@dptr
   0189 F5 F0               448 	mov	b,a
   018B 75 86 00            449 	mov	dps,#0
   018E 12s00r00r00         450 	lcall	_sqrtf
   0192 AE 82               451 	mov	r6,dpl
   0194 AF 83               452 	mov	r7,dph
   0196 A8 93               453 	mov	r0,dpx
   0198 A9 F0               454 	mov	r1,b
                            455 ;	genAssign: resultIsFar = FALSE
   019A 8E 02               456 	mov	ar2,r6
   019C 8F 03               457 	mov	ar3,r7
   019E 88 04               458 	mov	ar4,r0
   01A0 89 05               459 	mov	ar5,r1
                            460 ;	asincosf.c:74: y = -(y + y);
                            461 ;	genAssign: resultIsFar = TRUE
   01A2 90s00r00r00         462 	mov	dptr,#___fsadd_PARM_2
   01A6 EA                  463 	mov	a,r2
   01A7 F0                  464 	movx	@dptr,a
   01A8 A3                  465 	inc	dptr
   01A9 EB                  466 	mov	a,r3
   01AA F0                  467 	movx	@dptr,a
   01AB A3                  468 	inc	dptr
   01AC EC                  469 	mov	a,r4
   01AD F0                  470 	movx	@dptr,a
   01AE A3                  471 	inc	dptr
   01AF ED                  472 	mov	a,r5
   01B0 F0                  473 	movx	@dptr,a
   01B1 8A 82               474 	mov	dpl,r2
   01B3 8B 83               475 	mov	dph,r3
   01B5 8C 93               476 	mov	dpx,r4
   01B7 8D F0               477 	mov	b,r5
   01B9 12s00r00r00         478 	lcall	___fsadd
   01BD AE 82               479 	mov	r6,dpl
   01BF AF 83               480 	mov	r7,dph
   01C1 A8 93               481 	mov	r0,dpx
   01C3 A9 F0               482 	mov	r1,b
   01C5 8E 02               483 	mov	ar2,r6
   01C7 8F 03               484 	mov	ar3,r7
   01C9 88 04               485 	mov	ar4,r0
   01CB E9                  486 	mov	a,r1
   01CC B2 E7               487 	cpl	acc.7
   01CE FD                  488 	mov	r5,a
   01CF 80 42               489 	sjmp 00105$
   01D1                     490 00104$:
                            491 ;	asincosf.c:78: g = y * y;
                            492 ;	genAssign: resultIsFar = TRUE
   01D1 90s00r00r00         493 	mov	dptr,#___fsmul_PARM_2
   01D5 EA                  494 	mov	a,r2
   01D6 F0                  495 	movx	@dptr,a
   01D7 A3                  496 	inc	dptr
   01D8 EB                  497 	mov	a,r3
   01D9 F0                  498 	movx	@dptr,a
   01DA A3                  499 	inc	dptr
   01DB EC                  500 	mov	a,r4
   01DC F0                  501 	movx	@dptr,a
   01DD A3                  502 	inc	dptr
   01DE ED                  503 	mov	a,r5
   01DF F0                  504 	movx	@dptr,a
   01E0 C0 02               505 	push	ar2
   01E2 C0 03               506 	push	ar3
   01E4 C0 04               507 	push	ar4
   01E6 C0 05               508 	push	ar5
   01E8 8A 82               509 	mov	dpl,r2
   01EA 8B 83               510 	mov	dph,r3
   01EC 8C 93               511 	mov	dpx,r4
   01EE 8D F0               512 	mov	b,r5
   01F0 12s00r00r00         513 	lcall	___fsmul
   01F4 AE 82               514 	mov	r6,dpl
   01F6 AF 83               515 	mov	r7,dph
   01F8 A8 93               516 	mov	r0,dpx
   01FA A9 F0               517 	mov	r1,b
   01FC D0 05               518 	pop	ar5
   01FE D0 04               519 	pop	ar4
   0200 D0 03               520 	pop	ar3
   0202 D0 02               521 	pop	ar2
                            522 ;	genAssign: resultIsFar = TRUE
   0204 90s00r00r04         523 	mov	dptr,#_asincosf_g_1_1
   0208 EE                  524 	mov	a,r6
   0209 F0                  525 	movx	@dptr,a
   020A A3                  526 	inc	dptr
   020B EF                  527 	mov	a,r7
   020C F0                  528 	movx	@dptr,a
   020D A3                  529 	inc	dptr
   020E E8                  530 	mov	a,r0
   020F F0                  531 	movx	@dptr,a
   0210 A3                  532 	inc	dptr
   0211 E9                  533 	mov	a,r1
   0212 F0                  534 	movx	@dptr,a
   0213                     535 00105$:
                            536 ;	asincosf.c:80: r = y + y * ((P(g) * g) / Q(g));
   0213 90s00r00r04         537 	mov	dptr,#_asincosf_g_1_1
                            538 ;	genAssign: resultIsFar = TRUE
   0217 75 86 21            539 	mov	dps,#0x21
   021A 90s00r00r00         540 	mov	dptr,#___fsmul_PARM_2
   021E E0                  541 	movx	a,@dptr
   021F F0                  542 	movx	@dptr,a
   0220 A3                  543 	inc	dptr
   0221 A3                  544 	inc	dptr
   0222 E0                  545 	movx	a,@dptr
   0223 F0                  546 	movx	@dptr,a
   0224 A3                  547 	inc	dptr
   0225 A3                  548 	inc	dptr
   0226 E0                  549 	movx	a,@dptr
   0227 F0                  550 	movx	@dptr,a
   0228 A3                  551 	inc	dptr
   0229 A3                  552 	inc	dptr
   022A E0                  553 	movx	a,@dptr
   022B F0                  554 	movx	@dptr,a
   022C 75 86 00            555 	mov	dps,#0
   022F C0 02               556 	push	ar2
   0231 C0 03               557 	push	ar3
   0233 C0 04               558 	push	ar4
   0235 C0 05               559 	push	ar5
   0237 90 01 20 65         560 	mov	dptr,#0x012065
   023B 75 F0 BF            561 	mov	b,#0xBF
   023E 12s00r00r00         562 	lcall	___fsmul
   0242 AE 82               563 	mov	r6,dpl
   0244 AF 83               564 	mov	r7,dph
   0246 A8 93               565 	mov	r0,dpx
   0248 A9 F0               566 	mov	r1,b
   024A D0 05               567 	pop	ar5
   024C D0 04               568 	pop	ar4
   024E D0 03               569 	pop	ar3
   0250 D0 02               570 	pop	ar2
                            571 ;	genAssign: resultIsFar = TRUE
   0252 90s00r00r00         572 	mov	dptr,#___fsadd_PARM_2
   0256 74 6B               573 	mov	a,#0x6B
   0258 F0                  574 	movx	@dptr,a
   0259 A3                  575 	inc	dptr
   025A 74 16               576 	mov	a,#0x16
   025C F0                  577 	movx	@dptr,a
   025D A3                  578 	inc	dptr
   025E 74 6F               579 	mov	a,#0x6F
   0260 F0                  580 	movx	@dptr,a
   0261 A3                  581 	inc	dptr
   0262 74 3F               582 	mov	a,#0x3F
   0264 F0                  583 	movx	@dptr,a
   0265 C0 02               584 	push	ar2
   0267 C0 03               585 	push	ar3
   0269 C0 04               586 	push	ar4
   026B C0 05               587 	push	ar5
   026D 8E 82               588 	mov	dpl,r6
   026F 8F 83               589 	mov	dph,r7
   0271 88 93               590 	mov	dpx,r0
   0273 89 F0               591 	mov	b,r1
   0275 12s00r00r00         592 	lcall	___fsadd
   0279 AE 82               593 	mov	r6,dpl
   027B AF 83               594 	mov	r7,dph
   027D A8 93               595 	mov	r0,dpx
   027F A9 F0               596 	mov	r1,b
   0281 D0 05               597 	pop	ar5
   0283 D0 04               598 	pop	ar4
   0285 D0 03               599 	pop	ar3
   0287 D0 02               600 	pop	ar2
   0289 90s00r00r04         601 	mov	dptr,#_asincosf_g_1_1
                            602 ;	genAssign: resultIsFar = TRUE
   028D 75 86 21            603 	mov	dps,#0x21
   0290 90s00r00r00         604 	mov	dptr,#___fsmul_PARM_2
   0294 E0                  605 	movx	a,@dptr
   0295 F0                  606 	movx	@dptr,a
   0296 A3                  607 	inc	dptr
   0297 A3                  608 	inc	dptr
   0298 E0                  609 	movx	a,@dptr
   0299 F0                  610 	movx	@dptr,a
   029A A3                  611 	inc	dptr
   029B A3                  612 	inc	dptr
   029C E0                  613 	movx	a,@dptr
   029D F0                  614 	movx	@dptr,a
   029E A3                  615 	inc	dptr
   029F A3                  616 	inc	dptr
   02A0 E0                  617 	movx	a,@dptr
   02A1 F0                  618 	movx	@dptr,a
   02A2 75 86 00            619 	mov	dps,#0
   02A5 C0 02               620 	push	ar2
   02A7 C0 03               621 	push	ar3
   02A9 C0 04               622 	push	ar4
   02AB C0 05               623 	push	ar5
   02AD 8E 82               624 	mov	dpl,r6
   02AF 8F 83               625 	mov	dph,r7
   02B1 88 93               626 	mov	dpx,r0
   02B3 89 F0               627 	mov	b,r1
   02B5 12s00r00r00         628 	lcall	___fsmul
   02B9 75 86 01            629 	mov     dps, #1
   02BC 90s00r00r1C         630 	mov     dptr, #_asincosf_sloc0_1_0
   02C0 E5 82               631 	mov	a,dpl
   02C2 F0                  632 	movx	@dptr,a
   02C3 A3                  633 	inc	dptr
   02C4 E5 83               634 	mov	a,dph
   02C6 F0                  635 	movx	@dptr,a
   02C7 A3                  636 	inc	dptr
   02C8 E5 93               637 	mov	a,dpx
   02CA F0                  638 	movx	@dptr,a
   02CB A3                  639 	inc	dptr
   02CC E5 F0               640 	mov	a,b
   02CE F0                  641 	movx	@dptr,a
   02CF 75 86 00            642 	mov	dps,#0
   02D2 D0 05               643 	pop	ar5
   02D4 D0 04               644 	pop	ar4
   02D6 D0 03               645 	pop	ar3
   02D8 D0 02               646 	pop	ar2
                            647 ;	genAssign: resultIsFar = TRUE
   02DA 90s00r00r00         648 	mov	dptr,#___fsadd_PARM_2
   02DE 74 0B               649 	mov	a,#0x0B
   02E0 F0                  650 	movx	@dptr,a
   02E1 A3                  651 	inc	dptr
   02E2 74 8D               652 	mov	a,#0x8D
   02E4 F0                  653 	movx	@dptr,a
   02E5 A3                  654 	inc	dptr
   02E6 74 B1               655 	mov	a,#0xB1
   02E8 F0                  656 	movx	@dptr,a
   02E9 A3                  657 	inc	dptr
   02EA 74 C0               658 	mov	a,#0xC0
   02EC F0                  659 	movx	@dptr,a
   02ED C0 02               660 	push	ar2
   02EF C0 03               661 	push	ar3
   02F1 C0 04               662 	push	ar4
   02F3 C0 05               663 	push	ar5
   02F5 05 86               664 	inc	dps
   02F7 90s00r00r04         665 	mov	dptr,#_asincosf_g_1_1
   02FB E0                  666 	movx	a,@dptr
   02FC F5 82               667 	mov	dpl,a
   02FE A3                  668 	inc	dptr
   02FF E0                  669 	movx	a,@dptr
   0300 F5 83               670 	mov	dph,a
   0302 A3                  671 	inc	dptr
   0303 E0                  672 	movx	a,@dptr
   0304 F5 93               673 	mov	dpx,a
   0306 A3                  674 	inc	dptr
   0307 E0                  675 	movx	a,@dptr
   0308 F5 F0               676 	mov	b,a
   030A 75 86 00            677 	mov	dps,#0
   030D 12s00r00r00         678 	lcall	___fsadd
   0311 AE 82               679 	mov	r6,dpl
   0313 AF 83               680 	mov	r7,dph
   0315 A8 93               681 	mov	r0,dpx
   0317 A9 F0               682 	mov	r1,b
   0319 D0 05               683 	pop	ar5
   031B D0 04               684 	pop	ar4
   031D D0 03               685 	pop	ar3
   031F D0 02               686 	pop	ar2
   0321 90s00r00r04         687 	mov	dptr,#_asincosf_g_1_1
                            688 ;	genAssign: resultIsFar = TRUE
   0325 75 86 21            689 	mov	dps,#0x21
   0328 90s00r00r00         690 	mov	dptr,#___fsmul_PARM_2
   032C E0                  691 	movx	a,@dptr
   032D F0                  692 	movx	@dptr,a
   032E A3                  693 	inc	dptr
   032F A3                  694 	inc	dptr
   0330 E0                  695 	movx	a,@dptr
   0331 F0                  696 	movx	@dptr,a
   0332 A3                  697 	inc	dptr
   0333 A3                  698 	inc	dptr
   0334 E0                  699 	movx	a,@dptr
   0335 F0                  700 	movx	@dptr,a
   0336 A3                  701 	inc	dptr
   0337 A3                  702 	inc	dptr
   0338 E0                  703 	movx	a,@dptr
   0339 F0                  704 	movx	@dptr,a
   033A 75 86 00            705 	mov	dps,#0
   033D C0 02               706 	push	ar2
   033F C0 03               707 	push	ar3
   0341 C0 04               708 	push	ar4
   0343 C0 05               709 	push	ar5
   0345 8E 82               710 	mov	dpl,r6
   0347 8F 83               711 	mov	dph,r7
   0349 88 93               712 	mov	dpx,r0
   034B 89 F0               713 	mov	b,r1
   034D 12s00r00r00         714 	lcall	___fsmul
   0351 AE 82               715 	mov	r6,dpl
   0353 AF 83               716 	mov	r7,dph
   0355 A8 93               717 	mov	r0,dpx
   0357 A9 F0               718 	mov	r1,b
   0359 D0 05               719 	pop	ar5
   035B D0 04               720 	pop	ar4
   035D D0 03               721 	pop	ar3
   035F D0 02               722 	pop	ar2
                            723 ;	genAssign: resultIsFar = TRUE
   0361 90s00r00r00         724 	mov	dptr,#___fsadd_PARM_2
   0365 74 F0               725 	mov	a,#0xF0
   0367 F0                  726 	movx	@dptr,a
   0368 A3                  727 	inc	dptr
   0369 74 50               728 	mov	a,#0x50
   036B F0                  729 	movx	@dptr,a
   036C A3                  730 	inc	dptr
   036D 74 B3               731 	mov	a,#0xB3
   036F F0                  732 	movx	@dptr,a
   0370 A3                  733 	inc	dptr
   0371 74 40               734 	mov	a,#0x40
   0373 F0                  735 	movx	@dptr,a
   0374 C0 02               736 	push	ar2
   0376 C0 03               737 	push	ar3
   0378 C0 04               738 	push	ar4
   037A C0 05               739 	push	ar5
   037C 8E 82               740 	mov	dpl,r6
   037E 8F 83               741 	mov	dph,r7
   0380 88 93               742 	mov	dpx,r0
   0382 89 F0               743 	mov	b,r1
   0384 12s00r00r00         744 	lcall	___fsadd
   0388 AE 82               745 	mov	r6,dpl
   038A AF 83               746 	mov	r7,dph
   038C A8 93               747 	mov	r0,dpx
   038E A9 F0               748 	mov	r1,b
   0390 D0 05               749 	pop	ar5
   0392 D0 04               750 	pop	ar4
   0394 D0 03               751 	pop	ar3
   0396 D0 02               752 	pop	ar2
                            753 ;	genAssign: resultIsFar = TRUE
   0398 90s00r00r00         754 	mov	dptr,#___fsdiv_PARM_2
   039C EE                  755 	mov	a,r6
   039D F0                  756 	movx	@dptr,a
   039E A3                  757 	inc	dptr
   039F EF                  758 	mov	a,r7
   03A0 F0                  759 	movx	@dptr,a
   03A1 A3                  760 	inc	dptr
   03A2 E8                  761 	mov	a,r0
   03A3 F0                  762 	movx	@dptr,a
   03A4 A3                  763 	inc	dptr
   03A5 E9                  764 	mov	a,r1
   03A6 F0                  765 	movx	@dptr,a
   03A7 C0 02               766 	push	ar2
   03A9 C0 03               767 	push	ar3
   03AB C0 04               768 	push	ar4
   03AD C0 05               769 	push	ar5
   03AF 05 86               770 	inc	dps
   03B1 90s00r00r1C         771 	mov	dptr,#_asincosf_sloc0_1_0
   03B5 E0                  772 	movx	a,@dptr
   03B6 F5 82               773 	mov	dpl,a
   03B8 A3                  774 	inc	dptr
   03B9 E0                  775 	movx	a,@dptr
   03BA F5 83               776 	mov	dph,a
   03BC A3                  777 	inc	dptr
   03BD E0                  778 	movx	a,@dptr
   03BE F5 93               779 	mov	dpx,a
   03C0 A3                  780 	inc	dptr
   03C1 E0                  781 	movx	a,@dptr
   03C2 F5 F0               782 	mov	b,a
   03C4 75 86 00            783 	mov	dps,#0
   03C7 12s00r00r00         784 	lcall	___fsdiv
   03CB AE 82               785 	mov	r6,dpl
   03CD AF 83               786 	mov	r7,dph
   03CF A8 93               787 	mov	r0,dpx
   03D1 A9 F0               788 	mov	r1,b
   03D3 D0 05               789 	pop	ar5
   03D5 D0 04               790 	pop	ar4
   03D7 D0 03               791 	pop	ar3
   03D9 D0 02               792 	pop	ar2
                            793 ;	genAssign: resultIsFar = TRUE
   03DB 90s00r00r00         794 	mov	dptr,#___fsmul_PARM_2
   03DF EE                  795 	mov	a,r6
   03E0 F0                  796 	movx	@dptr,a
   03E1 A3                  797 	inc	dptr
   03E2 EF                  798 	mov	a,r7
   03E3 F0                  799 	movx	@dptr,a
   03E4 A3                  800 	inc	dptr
   03E5 E8                  801 	mov	a,r0
   03E6 F0                  802 	movx	@dptr,a
   03E7 A3                  803 	inc	dptr
   03E8 E9                  804 	mov	a,r1
   03E9 F0                  805 	movx	@dptr,a
   03EA C0 02               806 	push	ar2
   03EC C0 03               807 	push	ar3
   03EE C0 04               808 	push	ar4
   03F0 C0 05               809 	push	ar5
   03F2 8A 82               810 	mov	dpl,r2
   03F4 8B 83               811 	mov	dph,r3
   03F6 8C 93               812 	mov	dpx,r4
   03F8 8D F0               813 	mov	b,r5
   03FA 12s00r00r00         814 	lcall	___fsmul
   03FE AE 82               815 	mov	r6,dpl
   0400 AF 83               816 	mov	r7,dph
   0402 A8 93               817 	mov	r0,dpx
   0404 A9 F0               818 	mov	r1,b
   0406 D0 05               819 	pop	ar5
   0408 D0 04               820 	pop	ar4
   040A D0 03               821 	pop	ar3
   040C D0 02               822 	pop	ar2
                            823 ;	genAssign: resultIsFar = TRUE
   040E 90s00r00r00         824 	mov	dptr,#___fsadd_PARM_2
   0412 EE                  825 	mov	a,r6
   0413 F0                  826 	movx	@dptr,a
   0414 A3                  827 	inc	dptr
   0415 EF                  828 	mov	a,r7
   0416 F0                  829 	movx	@dptr,a
   0417 A3                  830 	inc	dptr
   0418 E8                  831 	mov	a,r0
   0419 F0                  832 	movx	@dptr,a
   041A A3                  833 	inc	dptr
   041B E9                  834 	mov	a,r1
   041C F0                  835 	movx	@dptr,a
   041D 8A 82               836 	mov	dpl,r2
   041F 8B 83               837 	mov	dph,r3
   0421 8C 93               838 	mov	dpx,r4
   0423 8D F0               839 	mov	b,r5
   0425 12s00r00r00         840 	lcall	___fsadd
   0429 AE 82               841 	mov	r6,dpl
   042B AF 83               842 	mov	r7,dph
   042D A8 93               843 	mov	r0,dpx
   042F A9 F0               844 	mov	r1,b
                            845 ;	genAssign: resultIsFar = TRUE
   0431 90s00r00r08         846 	mov	dptr,#_asincosf_r_1_1
   0435 EE                  847 	mov	a,r6
   0436 F0                  848 	movx	@dptr,a
   0437 A3                  849 	inc	dptr
   0438 EF                  850 	mov	a,r7
   0439 F0                  851 	movx	@dptr,a
   043A A3                  852 	inc	dptr
   043B E8                  853 	mov	a,r0
   043C F0                  854 	movx	@dptr,a
   043D A3                  855 	inc	dptr
   043E E9                  856 	mov	a,r1
   043F F0                  857 	movx	@dptr,a
   0440                     858 00108$:
                            859 ;	asincosf.c:82: i = quartPI;
                            860 ;	genAssign: resultIsFar = FALSE
   0440 A2*01               861 	mov	c,_asincosf_quartPI_1_1
   0442 E4                  862 	clr	a
   0443 33                  863 	rlc	a
   0444 FE                  864 	mov	r6,a
                            865 ;	asincosf.c:83: if (isacos)
   0445 20*00 04            866 	jb	_asincosf_PARM_2,00128$
   0448 02s00r05rAA         867 	ljmp	00115$
   044C                     868 00128$:
                            869 ;	asincosf.c:85: if (x < 0.0)
                            870 ;	genAssign: resultIsFar = TRUE
   044C 90s00r00r00         871 	mov	dptr,#___fslt_PARM_2
   0450 E4                  872 	clr	a
   0451 F0                  873 	movx	@dptr,a
   0452 A3                  874 	inc	dptr
   0453 F0                  875 	movx	@dptr,a
   0454 A3                  876 	inc	dptr
   0455 F0                  877 	movx	@dptr,a
   0456 A3                  878 	inc	dptr
   0457 F0                  879 	movx	@dptr,a
   0458 C0 06               880 	push	ar6
   045A 05 86               881 	inc	dps
   045C 90s00r00r00         882 	mov	dptr,#_asincosf_x_1_1
   0460 E0                  883 	movx	a,@dptr
   0461 F5 82               884 	mov	dpl,a
   0463 A3                  885 	inc	dptr
   0464 E0                  886 	movx	a,@dptr
   0465 F5 83               887 	mov	dph,a
   0467 A3                  888 	inc	dptr
   0468 E0                  889 	movx	a,@dptr
   0469 F5 93               890 	mov	dpx,a
   046B A3                  891 	inc	dptr
   046C E0                  892 	movx	a,@dptr
   046D F5 F0               893 	mov	b,a
   046F 75 86 00            894 	mov	dps,#0
   0472 12s00r00r00         895 	lcall	___fslt
   0476 D0 06               896 	pop	ar6
   0478 E5 82               897 	mov	a,dpl
   047A 70 04               898 	jnz	00129$
   047C 02s00r05r15         899 	ljmp	00110$
   0480                     900 00129$:
                            901 ;	asincosf.c:86: r = (b[i] + r) + b[i];
   0480 EE                  902 	mov	a,r6
   0481 25 E0               903 	add	a,acc
   0483 25 E0               904 	add	a,acc
   0485 FF                  905 	mov  r7,a
   0486 24r14               906 	add	a,#_asincosf_b_1_1
   0488 F5 82               907 	mov	dpl,a
   048A E4                  908 	clr	a
   048B 34s00               909 	addc	a,#(_asincosf_b_1_1 >> 8)
   048D F5 83               910 	mov	dph,a
   048F E4                  911 	clr	a
   0490 34s00               912 	addc	a,#(_asincosf_b_1_1 >> 16)
   0492 F5 93               913 	mov	dpx,a
   0494 E0                  914 	movx	a,@dptr
   0495 A3                  915 	inc	dptr
   0496 FE                  916 	mov	r6,a
   0497 E0                  917 	movx	a,@dptr
   0498 A3                  918 	inc	dptr
   0499 FF                  919 	mov	r7,a
   049A E0                  920 	movx	a,@dptr
   049B A3                  921 	inc	dptr
   049C F8                  922 	mov	r0,a
   049D E0                  923 	movx	a,@dptr
   049E F9                  924 	mov	r1,a
   049F 90s00r00r08         925 	mov	dptr,#_asincosf_r_1_1
                            926 ;	genAssign: resultIsFar = TRUE
   04A3 75 86 21            927 	mov	dps,#0x21
   04A6 90s00r00r00         928 	mov	dptr,#___fsadd_PARM_2
   04AA E0                  929 	movx	a,@dptr
   04AB F0                  930 	movx	@dptr,a
   04AC A3                  931 	inc	dptr
   04AD A3                  932 	inc	dptr
   04AE E0                  933 	movx	a,@dptr
   04AF F0                  934 	movx	@dptr,a
   04B0 A3                  935 	inc	dptr
   04B1 A3                  936 	inc	dptr
   04B2 E0                  937 	movx	a,@dptr
   04B3 F0                  938 	movx	@dptr,a
   04B4 A3                  939 	inc	dptr
   04B5 A3                  940 	inc	dptr
   04B6 E0                  941 	movx	a,@dptr
   04B7 F0                  942 	movx	@dptr,a
   04B8 75 86 00            943 	mov	dps,#0
   04BB C0 06               944 	push	ar6
   04BD C0 07               945 	push	ar7
   04BF C0 00               946 	push	ar0
   04C1 C0 01               947 	push	ar1
   04C3 8E 82               948 	mov	dpl,r6
   04C5 8F 83               949 	mov	dph,r7
   04C7 88 93               950 	mov	dpx,r0
   04C9 89 F0               951 	mov	b,r1
   04CB 12s00r00r00         952 	lcall	___fsadd
   04CF AB 82               953 	mov	r3,dpl
   04D1 AC 83               954 	mov	r4,dph
   04D3 AD 93               955 	mov	r5,dpx
   04D5 AA F0               956 	mov	r2,b
   04D7 D0 01               957 	pop	ar1
   04D9 D0 00               958 	pop	ar0
   04DB D0 07               959 	pop	ar7
   04DD D0 06               960 	pop	ar6
                            961 ;	genAssign: resultIsFar = TRUE
   04DF 90s00r00r00         962 	mov	dptr,#___fsadd_PARM_2
   04E3 EE                  963 	mov	a,r6
   04E4 F0                  964 	movx	@dptr,a
   04E5 A3                  965 	inc	dptr
   04E6 EF                  966 	mov	a,r7
   04E7 F0                  967 	movx	@dptr,a
   04E8 A3                  968 	inc	dptr
   04E9 E8                  969 	mov	a,r0
   04EA F0                  970 	movx	@dptr,a
   04EB A3                  971 	inc	dptr
   04EC E9                  972 	mov	a,r1
   04ED F0                  973 	movx	@dptr,a
   04EE 8B 82               974 	mov	dpl,r3
   04F0 8C 83               975 	mov	dph,r4
   04F2 8D 93               976 	mov	dpx,r5
   04F4 8A F0               977 	mov	b,r2
   04F6 12s00r00r00         978 	lcall	___fsadd
   04FA AA 82               979 	mov	r2,dpl
   04FC AB 83               980 	mov	r3,dph
   04FE AC 93               981 	mov	r4,dpx
   0500 AD F0               982 	mov	r5,b
                            983 ;	genAssign: resultIsFar = TRUE
   0502 90s00r00r08         984 	mov	dptr,#_asincosf_r_1_1
   0506 EA                  985 	mov	a,r2
   0507 F0                  986 	movx	@dptr,a
   0508 A3                  987 	inc	dptr
   0509 EB                  988 	mov	a,r3
   050A F0                  989 	movx	@dptr,a
   050B A3                  990 	inc	dptr
   050C EC                  991 	mov	a,r4
   050D F0                  992 	movx	@dptr,a
   050E A3                  993 	inc	dptr
   050F ED                  994 	mov	a,r5
   0510 F0                  995 	movx	@dptr,a
   0511 02s00r06r95         996 	ljmp	00116$
   0515                     997 00110$:
                            998 ;	asincosf.c:88: r = (a[i] - r) + a[i];
   0515 EE                  999 	mov	a,r6
   0516 25 E0              1000 	add	a,acc
   0518 25 E0              1001 	add	a,acc
   051A FA                 1002 	mov  r2,a
   051B 24r0C              1003 	add	a,#_asincosf_a_1_1
   051D F5 82              1004 	mov	dpl,a
   051F E4                 1005 	clr	a
   0520 34s00              1006 	addc	a,#(_asincosf_a_1_1 >> 8)
   0522 F5 83              1007 	mov	dph,a
   0524 E4                 1008 	clr	a
   0525 34s00              1009 	addc	a,#(_asincosf_a_1_1 >> 16)
   0527 F5 93              1010 	mov	dpx,a
   0529 E0                 1011 	movx	a,@dptr
   052A A3                 1012 	inc	dptr
   052B FB                 1013 	mov	r3,a
   052C E0                 1014 	movx	a,@dptr
   052D A3                 1015 	inc	dptr
   052E FC                 1016 	mov	r4,a
   052F E0                 1017 	movx	a,@dptr
   0530 A3                 1018 	inc	dptr
   0531 FD                 1019 	mov	r5,a
   0532 E0                 1020 	movx	a,@dptr
   0533 FE                 1021 	mov	r6,a
   0534 90s00r00r08        1022 	mov	dptr,#_asincosf_r_1_1
                           1023 ;	genAssign: resultIsFar = TRUE
   0538 75 86 21           1024 	mov	dps,#0x21
   053B 90s00r00r00        1025 	mov	dptr,#___fssub_PARM_2
   053F E0                 1026 	movx	a,@dptr
   0540 F0                 1027 	movx	@dptr,a
   0541 A3                 1028 	inc	dptr
   0542 A3                 1029 	inc	dptr
   0543 E0                 1030 	movx	a,@dptr
   0544 F0                 1031 	movx	@dptr,a
   0545 A3                 1032 	inc	dptr
   0546 A3                 1033 	inc	dptr
   0547 E0                 1034 	movx	a,@dptr
   0548 F0                 1035 	movx	@dptr,a
   0549 A3                 1036 	inc	dptr
   054A A3                 1037 	inc	dptr
   054B E0                 1038 	movx	a,@dptr
   054C F0                 1039 	movx	@dptr,a
   054D 75 86 00           1040 	mov	dps,#0
   0550 C0 03              1041 	push	ar3
   0552 C0 04              1042 	push	ar4
   0554 C0 05              1043 	push	ar5
   0556 C0 06              1044 	push	ar6
   0558 8B 82              1045 	mov	dpl,r3
   055A 8C 83              1046 	mov	dph,r4
   055C 8D 93              1047 	mov	dpx,r5
   055E 8E F0              1048 	mov	b,r6
   0560 12s00r00r00        1049 	lcall	___fssub
   0564 AF 82              1050 	mov	r7,dpl
   0566 A8 83              1051 	mov	r0,dph
   0568 A9 93              1052 	mov	r1,dpx
   056A AA F0              1053 	mov	r2,b
   056C D0 06              1054 	pop	ar6
   056E D0 05              1055 	pop	ar5
   0570 D0 04              1056 	pop	ar4
   0572 D0 03              1057 	pop	ar3
                           1058 ;	genAssign: resultIsFar = TRUE
   0574 90s00r00r00        1059 	mov	dptr,#___fsadd_PARM_2
   0578 EB                 1060 	mov	a,r3
   0579 F0                 1061 	movx	@dptr,a
   057A A3                 1062 	inc	dptr
   057B EC                 1063 	mov	a,r4
   057C F0                 1064 	movx	@dptr,a
   057D A3                 1065 	inc	dptr
   057E ED                 1066 	mov	a,r5
   057F F0                 1067 	movx	@dptr,a
   0580 A3                 1068 	inc	dptr
   0581 EE                 1069 	mov	a,r6
   0582 F0                 1070 	movx	@dptr,a
   0583 8F 82              1071 	mov	dpl,r7
   0585 88 83              1072 	mov	dph,r0
   0587 89 93              1073 	mov	dpx,r1
   0589 8A F0              1074 	mov	b,r2
   058B 12s00r00r00        1075 	lcall	___fsadd
   058F AA 82              1076 	mov	r2,dpl
   0591 AB 83              1077 	mov	r3,dph
   0593 AC 93              1078 	mov	r4,dpx
   0595 AD F0              1079 	mov	r5,b
                           1080 ;	genAssign: resultIsFar = TRUE
   0597 90s00r00r08        1081 	mov	dptr,#_asincosf_r_1_1
   059B EA                 1082 	mov	a,r2
   059C F0                 1083 	movx	@dptr,a
   059D A3                 1084 	inc	dptr
   059E EB                 1085 	mov	a,r3
   059F F0                 1086 	movx	@dptr,a
   05A0 A3                 1087 	inc	dptr
   05A1 EC                 1088 	mov	a,r4
   05A2 F0                 1089 	movx	@dptr,a
   05A3 A3                 1090 	inc	dptr
   05A4 ED                 1091 	mov	a,r5
   05A5 F0                 1092 	movx	@dptr,a
   05A6 02s00r06r95        1093 	ljmp	00116$
   05AA                    1094 00115$:
                           1095 ;	asincosf.c:92: r = (a[i] + r) + a[i];
   05AA EE                 1096 	mov	a,r6
   05AB 25 E0              1097 	add	a,acc
   05AD 25 E0              1098 	add	a,acc
   05AF FE                 1099 	mov  r6,a
   05B0 24r0C              1100 	add	a,#_asincosf_a_1_1
   05B2 F5 82              1101 	mov	dpl,a
   05B4 E4                 1102 	clr	a
   05B5 34s00              1103 	addc	a,#(_asincosf_a_1_1 >> 8)
   05B7 F5 83              1104 	mov	dph,a
   05B9 E4                 1105 	clr	a
   05BA 34s00              1106 	addc	a,#(_asincosf_a_1_1 >> 16)
   05BC F5 93              1107 	mov	dpx,a
   05BE E0                 1108 	movx	a,@dptr
   05BF A3                 1109 	inc	dptr
   05C0 FA                 1110 	mov	r2,a
   05C1 E0                 1111 	movx	a,@dptr
   05C2 A3                 1112 	inc	dptr
   05C3 FB                 1113 	mov	r3,a
   05C4 E0                 1114 	movx	a,@dptr
   05C5 A3                 1115 	inc	dptr
   05C6 FC                 1116 	mov	r4,a
   05C7 E0                 1117 	movx	a,@dptr
   05C8 FD                 1118 	mov	r5,a
   05C9 90s00r00r08        1119 	mov	dptr,#_asincosf_r_1_1
                           1120 ;	genAssign: resultIsFar = TRUE
   05CD 75 86 21           1121 	mov	dps,#0x21
   05D0 90s00r00r00        1122 	mov	dptr,#___fsadd_PARM_2
   05D4 E0                 1123 	movx	a,@dptr
   05D5 F0                 1124 	movx	@dptr,a
   05D6 A3                 1125 	inc	dptr
   05D7 A3                 1126 	inc	dptr
   05D8 E0                 1127 	movx	a,@dptr
   05D9 F0                 1128 	movx	@dptr,a
   05DA A3                 1129 	inc	dptr
   05DB A3                 1130 	inc	dptr
   05DC E0                 1131 	movx	a,@dptr
   05DD F0                 1132 	movx	@dptr,a
   05DE A3                 1133 	inc	dptr
   05DF A3                 1134 	inc	dptr
   05E0 E0                 1135 	movx	a,@dptr
   05E1 F0                 1136 	movx	@dptr,a
   05E2 75 86 00           1137 	mov	dps,#0
   05E5 C0 02              1138 	push	ar2
   05E7 C0 03              1139 	push	ar3
   05E9 C0 04              1140 	push	ar4
   05EB C0 05              1141 	push	ar5
   05ED 8A 82              1142 	mov	dpl,r2
   05EF 8B 83              1143 	mov	dph,r3
   05F1 8C 93              1144 	mov	dpx,r4
   05F3 8D F0              1145 	mov	b,r5
   05F5 12s00r00r00        1146 	lcall	___fsadd
   05F9 AE 82              1147 	mov	r6,dpl
   05FB AF 83              1148 	mov	r7,dph
   05FD A8 93              1149 	mov	r0,dpx
   05FF A9 F0              1150 	mov	r1,b
   0601 D0 05              1151 	pop	ar5
   0603 D0 04              1152 	pop	ar4
   0605 D0 03              1153 	pop	ar3
   0607 D0 02              1154 	pop	ar2
                           1155 ;	genAssign: resultIsFar = TRUE
   0609 90s00r00r00        1156 	mov	dptr,#___fsadd_PARM_2
   060D EA                 1157 	mov	a,r2
   060E F0                 1158 	movx	@dptr,a
   060F A3                 1159 	inc	dptr
   0610 EB                 1160 	mov	a,r3
   0611 F0                 1161 	movx	@dptr,a
   0612 A3                 1162 	inc	dptr
   0613 EC                 1163 	mov	a,r4
   0614 F0                 1164 	movx	@dptr,a
   0615 A3                 1165 	inc	dptr
   0616 ED                 1166 	mov	a,r5
   0617 F0                 1167 	movx	@dptr,a
   0618 8E 82              1168 	mov	dpl,r6
   061A 8F 83              1169 	mov	dph,r7
   061C 88 93              1170 	mov	dpx,r0
   061E 89 F0              1171 	mov	b,r1
   0620 12s00r00r00        1172 	lcall	___fsadd
   0624 AA 82              1173 	mov	r2,dpl
   0626 AB 83              1174 	mov	r3,dph
   0628 AC 93              1175 	mov	r4,dpx
   062A AD F0              1176 	mov	r5,b
                           1177 ;	genAssign: resultIsFar = TRUE
   062C 90s00r00r08        1178 	mov	dptr,#_asincosf_r_1_1
   0630 EA                 1179 	mov	a,r2
   0631 F0                 1180 	movx	@dptr,a
   0632 A3                 1181 	inc	dptr
   0633 EB                 1182 	mov	a,r3
   0634 F0                 1183 	movx	@dptr,a
   0635 A3                 1184 	inc	dptr
   0636 EC                 1185 	mov	a,r4
   0637 F0                 1186 	movx	@dptr,a
   0638 A3                 1187 	inc	dptr
   0639 ED                 1188 	mov	a,r5
   063A F0                 1189 	movx	@dptr,a
                           1190 ;	asincosf.c:93: if (x < 0.0)
                           1191 ;	genAssign: resultIsFar = TRUE
   063B 90s00r00r00        1192 	mov	dptr,#___fslt_PARM_2
   063F E4                 1193 	clr	a
   0640 F0                 1194 	movx	@dptr,a
   0641 A3                 1195 	inc	dptr
   0642 F0                 1196 	movx	@dptr,a
   0643 A3                 1197 	inc	dptr
   0644 F0                 1198 	movx	@dptr,a
   0645 A3                 1199 	inc	dptr
   0646 F0                 1200 	movx	@dptr,a
   0647 05 86              1201 	inc	dps
   0649 90s00r00r00        1202 	mov	dptr,#_asincosf_x_1_1
   064D E0                 1203 	movx	a,@dptr
   064E F5 82              1204 	mov	dpl,a
   0650 A3                 1205 	inc	dptr
   0651 E0                 1206 	movx	a,@dptr
   0652 F5 83              1207 	mov	dph,a
   0654 A3                 1208 	inc	dptr
   0655 E0                 1209 	movx	a,@dptr
   0656 F5 93              1210 	mov	dpx,a
   0658 A3                 1211 	inc	dptr
   0659 E0                 1212 	movx	a,@dptr
   065A F5 F0              1213 	mov	b,a
   065C 75 86 00           1214 	mov	dps,#0
   065F 12s00r00r00        1215 	lcall	___fslt
   0663 E5 82              1216 	mov	a,dpl
   0665 60 2E              1217 	jz  00116$
   0667                    1218 00130$:
                           1219 ;	asincosf.c:94: r = -r;
   0667 90s00r00r08        1220 	mov	dptr,#_asincosf_r_1_1
   066B 75 86 01           1221 	mov	dps, #1
   066E 90s00r00r08        1222 	mov	dptr, #_asincosf_r_1_1
   0672 15 86              1223 	dec	dps
   0674 E0                 1224 	movx	a,@dptr
   0675 05 86              1225 	inc	dps
   0677 F0                 1226 	movx	@dptr,a
   0678 15 86              1227 	dec	dps
   067A A3                 1228 	inc	dptr
   067B E0                 1229 	movx	a,@dptr
   067C 05 86              1230 	inc	dps
   067E A3                 1231 	inc	dptr
   067F F0                 1232 	movx	@dptr,a
   0680 15 86              1233 	dec	dps
   0682 A3                 1234 	inc	dptr
   0683 E0                 1235 	movx	a,@dptr
   0684 05 86              1236 	inc	dps
   0686 A3                 1237 	inc	dptr
   0687 F0                 1238 	movx	@dptr,a
   0688 15 86              1239 	dec	dps
   068A A3                 1240 	inc	dptr
   068B E0                 1241 	movx	a,@dptr
   068C B2 E7              1242 	cpl	acc.7
   068E 05 86              1243 	inc	dps
   0690 A3                 1244 	inc	dptr
   0691 F0                 1245 	movx	@dptr,a
   0692 75 86 00           1246 	mov	dps,#0
   0695                    1247 00116$:
                           1248 ;	asincosf.c:96: return r;
   0695 75 86 01           1249 	mov     dps, #1
   0698 90s00r00r08        1250 	mov     dptr, #_asincosf_r_1_1
   069C E0                 1251 	movx	a,@dptr
   069D F5 82              1252 	mov	dpl,a
   069F A3                 1253 	inc	dptr
   06A0 E0                 1254 	movx	a,@dptr
   06A1 F5 83              1255 	mov	dph,a
   06A3 A3                 1256 	inc	dptr
   06A4 E0                 1257 	movx	a,@dptr
   06A5 F5 93              1258 	mov	dpx,a
   06A7 A3                 1259 	inc	dptr
   06A8 E0                 1260 	movx	a,@dptr
   06A9 F5 F0              1261 	mov	b,a
   06AB 75 86 00           1262 	mov	dps,#0
   06AE                    1263 00117$:
   06AE 22                 1264 	ret
                           1265 	.area CSEG    (CODE)
                           1266 	.area CONST   (CODE)
                           1267 	.area XINIT   (CODE)
                           1268 	.area CABS    (ABS,CODE)
