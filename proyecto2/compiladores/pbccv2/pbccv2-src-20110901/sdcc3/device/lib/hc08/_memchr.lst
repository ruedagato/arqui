                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6227 (Oct  2 2015) (Linux)
                              4 ; This file was generated Fri Oct  2 17:15:21 2015
                              5 ;--------------------------------------------------------
                              6 	.module _memchr
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG (CODE)
                             14 	.area XINIT
                             15 	.area CONST   (CODE)
                             16 	.area DSEG
                             17 	.area OSEG    (OVR)
                             18 	.area BSEG
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl _memchr_PARM_3
                             25 	.globl _memchr_PARM_2
                             26 	.globl _memchr
                             27 ;--------------------------------------------------------
                             28 ;  ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in  ram 
                             33 ;--------------------------------------------------------
                             34 	.area	OSEG    (OVR)
   0000                      35 _memchr_sloc0_1_0::
   0000                      36 	.ds 2
   0002                      37 _memchr_sloc1_1_0::
   0002                      38 	.ds 2
                             39 ;--------------------------------------------------------
                             40 ; absolute external ram data
                             41 ;--------------------------------------------------------
                             42 	.area XABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; external initialized ram data
                             45 ;--------------------------------------------------------
                             46 	.area XISEG
                             47 ;--------------------------------------------------------
                             48 ; extended address mode data
                             49 ;--------------------------------------------------------
                             50 	.area XSEG
   0000                      51 _memchr_PARM_2:
   0000                      52 	.ds 2
   0002                      53 _memchr_PARM_3:
   0002                      54 	.ds 2
   0004                      55 _memchr_s_1_1:
   0004                      56 	.ds 2
   0006                      57 _memchr_p_1_1:
   0006                      58 	.ds 2
   0008                      59 _memchr_end_1_1:
   0008                      60 	.ds 2
                             61 ;--------------------------------------------------------
                             62 ; global & static initialisations
                             63 ;--------------------------------------------------------
                             64 	.area HOME (CODE)
                             65 	.area GSINIT (CODE)
                             66 	.area GSFINAL (CODE)
                             67 	.area GSINIT (CODE)
                             68 ;--------------------------------------------------------
                             69 ; Home
                             70 ;--------------------------------------------------------
                             71 	.area HOME (CODE)
                             72 	.area HOME (CODE)
                             73 ;--------------------------------------------------------
                             74 ; code
                             75 ;--------------------------------------------------------
                             76 	.area CSEG (CODE)
                             77 ;------------------------------------------------------------
                             78 ;Allocation info for local variables in function 'memchr'
                             79 ;------------------------------------------------------------
                             80 ;c                         Allocated with name '_memchr_PARM_2'
                             81 ;n                         Allocated with name '_memchr_PARM_3'
                             82 ;s                         Allocated with name '_memchr_s_1_1'
                             83 ;p                         Allocated with name '_memchr_p_1_1'
                             84 ;end                       Allocated with name '_memchr_end_1_1'
                             85 ;sloc0                     Allocated with name '_memchr_sloc0_1_0'
                             86 ;sloc1                     Allocated with name '_memchr_sloc1_1_0'
                             87 ;------------------------------------------------------------
                             88 ;../_memchr.c:31: void *memchr(const void *s, int c, size_t n)
                             89 ;	-----------------------------------------
                             90 ;	 function memchr
                             91 ;	-----------------------------------------
   0000                      92 _memchr:
   0000 C7s00r05             93 	sta	(_memchr_s_1_1 + 1)
   0003 CFs00r04             94 	stx	_memchr_s_1_1
                             95 ;../_memchr.c:33: unsigned char *p = (unsigned char *)s;
   0006 C6s00r04             96 	lda	_memchr_s_1_1
   0009 C7s00r06             97 	sta	_memchr_p_1_1
   000C C6s00r05             98 	lda	(_memchr_s_1_1 + 1)
   000F C7s00r07             99 	sta	(_memchr_p_1_1 + 1)
                            100 ;../_memchr.c:34: unsigned char *end = p + n;
   0012 C6s00r05            101 	lda	(_memchr_s_1_1 + 1)
   0015 CBs00r03            102 	add	(_memchr_PARM_3 + 1)
   0018 C7s00r09            103 	sta	(_memchr_end_1_1 + 1)
   001B C6s00r04            104 	lda	_memchr_s_1_1
   001E C9s00r02            105 	adc	_memchr_PARM_3
   0021 C7s00r08            106 	sta	_memchr_end_1_1
                            107 ;../_memchr.c:38: return(0);
   0024 C6s00r04            108 	lda	_memchr_s_1_1
   0027 B7*00               109 	sta	*_memchr_sloc0_1_0
   0029 C6s00r05            110 	lda	(_memchr_s_1_1 + 1)
   002C B7*01               111 	sta	*(_memchr_sloc0_1_0 + 1)
   002E                     112 00103$:
                            113 ;../_memchr.c:35: for(; p != end; p++)
   002E B6*01               114 	lda	*(_memchr_sloc0_1_0 + 1)
   0030 C1s00r09            115 	cmp	(_memchr_end_1_1 + 1)
   0033 26 07               116 	bne	00112$
   0035 B6*00               117 	lda	*_memchr_sloc0_1_0
   0037 C1s00r08            118 	cmp	_memchr_end_1_1
   003A 27 30               119 	beq	00106$
   003C                     120 00112$:
                            121 ;../_memchr.c:36: if(*p == c)
   003C 55*00               122 	ldhx	*_memchr_sloc0_1_0
   003E F6                  123 	lda	,x
   003F B7*03               124 	sta	*(_memchr_sloc1_1_0 + 1)
   0041 3F*02               125 	clr	*_memchr_sloc1_1_0
   0043 B6*03               126 	lda	*(_memchr_sloc1_1_0 + 1)
   0045 C1s00r01            127 	cmp	(_memchr_PARM_2 + 1)
   0048 26 07               128 	bne	00113$
   004A B6*02               129 	lda	*_memchr_sloc1_1_0
   004C C1s00r00            130 	cmp	_memchr_PARM_2
   004F 27 02               131 	beq	00114$
   0051                     132 00113$:
   0051 20 07               133 	bra	00105$
   0053                     134 00114$:
                            135 ;../_memchr.c:37: return((void *)p);
   0053 CEs00r06            136 	ldx	_memchr_p_1_1
   0056 C6s00r07            137 	lda	(_memchr_p_1_1 + 1)
   0059 81                  138 	rts
   005A                     139 00105$:
                            140 ;../_memchr.c:35: for(; p != end; p++)
   005A 55*00               141 	ldhx	*_memchr_sloc0_1_0
   005C AF 01               142 	aix	#1
   005E 35*00               143 	sthx	*_memchr_sloc0_1_0
   0060 B6*00               144 	lda	*_memchr_sloc0_1_0
   0062 C7s00r06            145 	sta	_memchr_p_1_1
   0065 B6*01               146 	lda	*(_memchr_sloc0_1_0 + 1)
   0067 C7s00r07            147 	sta	(_memchr_p_1_1 + 1)
   006A 20 C2               148 	bra	00103$
   006C                     149 00106$:
                            150 ;../_memchr.c:38: return(0);
   006C 5F                  151 	clrx
   006D 4F                  152 	clra
   006E                     153 00107$:
   006E 81                  154 	rts
                            155 	.area CSEG (CODE)
                            156 	.area CONST   (CODE)
                            157 	.area XINIT
                            158 	.area CABS    (ABS,CODE)
